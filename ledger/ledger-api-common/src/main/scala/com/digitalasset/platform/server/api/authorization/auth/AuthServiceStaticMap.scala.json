[
  {
    "id" : "453d0c70-3f4a-4556-9d23-caf9fb5ed547",
    "prId" : 3125,
    "comments" : [
      {
        "id" : "53f9b7e4-1979-4382-8f7d-1620e2e984b0",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Consider turning this into a `PartialFunction[String, Claims]` to that something like this can be passed in without hard-coding anything specific to the ledger setup:\r\n\r\n```\r\nnew AuthServiceStaticMap({\r\n  case \"root\" => Claims.wildcard\r\n  case \"admin\" => Claims(Seq(ClaimAdmin))\r\n  case party => Claims(Seq(ClaimActAsParty(party)))\r\n})\r\n```\r\n\r\nOr maybe you can make it a method on the companion object, whichever way you prefer. It should be quite easy to add a method that takes a map and uses it in a partial function to match this constructor.",
        "createdAt" : "2019-10-08T09:49:35Z",
        "updatedAt" : "2019-10-08T10:05:09Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f0e6a8bc-d054-4cc1-aeed-0f1d1f155c5a",
        "parentId" : "53f9b7e4-1979-4382-8f7d-1620e2e984b0",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "(also if you adopt this suggestion probably you can rename this to `AuthServiceStatic`)",
        "createdAt" : "2019-10-08T09:53:26Z",
        "updatedAt" : "2019-10-08T10:05:09Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc7abc30b3594ebe3fe5f6b633fdee468db8f212",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,30 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.platform.server.api.authorization.auth\n+\n+import java.util.concurrent.{CompletableFuture, CompletionStage}\n+\n+import com.daml.ledger.participant.state.v1.{AuthService, Claims}\n+import io.grpc.Metadata\n+\n+/** An AuthService that matches the value of the `Authorization` HTTP header against\n+  * a static map of header values to [[Claims]].\n+  *\n+  * Note: This AuthService is meant to be used for testing purposes only.\n+  */\n+class AuthServiceStaticMap(claims: Map[String, Claims]) extends AuthService {"
  }
]