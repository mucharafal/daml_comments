[
  {
    "id" : "74d303d6-58e0-4d80-a5c9-5dfdc9fd128c",
    "prId" : 6497,
    "comments" : [
      {
        "id" : "a4e973f5-c71a-4ce8-aa5b-a0769c33091a",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n      headAtInitialization: Index,\r\n```",
        "createdAt" : "2020-06-29T12:30:59Z",
        "updatedAt" : "2020-06-29T12:37:10Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e04ba8b02c573c9662e687359ab1660af5532190",
    "line" : null,
    "diffHunk" : "@@ -43,6 +44,15 @@ object Dispatcher {\n   def apply[Index: Ordering](\n       name: String,\n       zeroIndex: Index,\n-      headAtInitialization: Index): Dispatcher[Index] =\n+      headAtInitialization: Index"
  },
  {
    "id" : "92a08aa1-9a25-44b4-8eef-f627e7edb634",
    "prId" : 4953,
    "comments" : [
      {
        "id" : "048cd92d-9250-4888-9fbe-d6d53cba48ce",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Downstream participant implementors use this; it's probably worth adding it to the changelog.",
        "createdAt" : "2020-03-16T15:19:29Z",
        "updatedAt" : "2020-03-17T19:46:55Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1b74ea5f-15cd-4d6e-addb-d1dee731d45d",
        "parentId" : "048cd92d-9250-4888-9fbe-d6d53cba48ce",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Good point. Thanks.",
        "createdAt" : "2020-03-17T13:53:26Z",
        "updatedAt" : "2020-03-17T19:46:55Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8c9c3ccf491dcebc26c083911d9714d2fa5d032f",
    "line" : 8,
    "diffHunk" : "@@ -25,9 +25,9 @@ trait Dispatcher[Index] extends AutoCloseable {\n \n   /** Returns a stream of elements with the next index from start (inclusive) to end (exclusive) */\n   def startingAt[T](\n-      startInclusive: Index,\n+      startExclusive: Index,\n       subSource: SubSource[Index, T],\n-      endExclusive: Option[Index] = None): Source[(Index, T), NotUsed]\n+      endInclusive: Option[Index] = None): Source[(Index, T), NotUsed]"
  }
]