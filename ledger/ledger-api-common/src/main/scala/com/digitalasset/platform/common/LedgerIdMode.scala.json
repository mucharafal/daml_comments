[
  {
    "id" : "18769490-6909-4bd6-99f5-0a71f13ff1fa",
    "prId" : 4607,
    "comments" : [
      {
        "id" : "2eb26573-75c1-427c-a630-b8af4d69cfb4",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "This is effectively a noop when called over `Static`. :thinking: \r\n\r\nStupid question: do we really need this type? Or can we do with just `Option[LedgerId]`?\r\n\r\nNot necessarily an issue for this PR, so don't feel compelled to address this here.",
        "createdAt" : "2020-02-19T16:15:00Z",
        "updatedAt" : "2020-02-19T20:48:13Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "48d13775-f6a8-43fc-aaef-1cb46fd48fc6",
        "parentId" : "2eb26573-75c1-427c-a630-b8af4d69cfb4",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I got the feeling it's for nicer Java compatibility, but I have no real evidence.",
        "createdAt" : "2020-02-19T16:58:24Z",
        "updatedAt" : "2020-02-19T20:48:13Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2631a6f3d08f69f84454f5b30c7ebcb7581b0e28",
    "line" : 9,
    "diffHunk" : "@@ -3,19 +3,36 @@\n \n package com.digitalasset.platform.common\n \n+import com.digitalasset.daml.lf.data.Ref\n import com.digitalasset.ledger.api.domain.LedgerId\n \n-sealed abstract class LedgerIdMode extends Product with Serializable\n+sealed abstract class LedgerIdMode extends Product with Serializable {\n+  def or(other: => LedgerId): LedgerId"
  }
]