[
  {
    "id" : "14955ada-7c97-473f-8eac-c9b0e20d76eb",
    "prId" : 3051,
    "comments" : [
      {
        "id" : "bac768b0-f51d-4809-a0d6-d50e2d702b42",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I'd prefer to keep class hierarchies closed, unless we have a valid use case for inheritance.\r\n```suggestion\r\nfinal class AuthorizationInterceptor(authService: AuthService, ec: ExecutionContext)\r\n```",
        "createdAt" : "2019-10-04T11:31:53Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7b086d71418f8dd31bcf1d51c0ae1f9e2877d27c",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +26,30 @@  * Use [[ApiServiceAuthorization]] to read the claims from the context.\n  * */\nclass AuthorizationInterceptor(protected val authService: AuthService, ec: ExecutionContext)\n    extends ServerInterceptor {\n"
  },
  {
    "id" : "86ebd696-5256-4290-9e45-64a0459cb153",
    "prId" : 3051,
    "comments" : [
      {
        "id" : "899510bd-0b06-47cc-9665-eb6215b30d00",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n  private[this] val logger: Logger = LoggerFactory.getLogger(AuthorizationInterceptor.getClass)\r\n```",
        "createdAt" : "2019-10-04T11:32:40Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7b086d71418f8dd31bcf1d51c0ae1f9e2877d27c",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@    extends ServerInterceptor {\n\n  protected val logger: Logger = LoggerFactory.getLogger(AuthorizationInterceptor.getClass)\n\n  override def interceptCall[ReqT, RespT]("
  }
]