[
  {
    "id" : "5520a886-3463-4f61-82dd-7429f946f102",
    "prId" : 3051,
    "comments" : [
      {
        "id" : "d4980cc5-409f-432d-b79b-6f2068f6590e",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n  protected val logger: Logger = LoggerFactory.getLogger(AuthorizationInterceptor.getClass)\r\n```",
        "createdAt" : "2019-09-27T07:37:58Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7b086d71418f8dd31bcf1d51c0ae1f9e2877d27c",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,66 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.platform.server.api.authorization\n+\n+import java.util.concurrent.{CompletableFuture, CompletionStage}\n+\n+import com.daml.ledger.participant.state.v1.{AuthService, Claims}\n+import com.digitalasset.ledger.api.v1.package_service.PackageServiceGrpc.PackageService\n+import io.grpc.{Context, Contexts, Metadata, ServerCall, ServerCallHandler, ServerInterceptor, Status}\n+import org.slf4j.{Logger, LoggerFactory}\n+\n+import scala.compat.java8.FutureConverters\n+import scala.concurrent.ExecutionContext\n+import scala.util.{Failure, Success}\n+\n+/**\n+  * This interceptor uses the given [[AuthService]] to get [[Claims]] for the current request,\n+  * and then stores them in the current [[Context]].\n+  *\n+  * Use [[ApiServiceAuthorization]] to read the claims from the context.\n+  * */\n+class AuthorizationInterceptor(\n+  protected val authService: AuthService,\n+  ec: ExecutionContext)\n+    extends ServerInterceptor {\n+\n+  protected val logger: Logger = LoggerFactory.getLogger(PackageService.getClass)"
  },
  {
    "id" : "63855d35-e06c-47f3-a41f-6b2cdcc3c831",
    "prId" : 3051,
    "comments" : [
      {
        "id" : "5863a62b-1733-4f6f-92ea-2c45b84e3198",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I'd prefer to keep class hierarchies closed, unless we have a valid use case for inheritance.\r\n```suggestion\r\nfinal class AuthorizationInterceptor(authService: AuthService, ec: ExecutionContext)\r\n```",
        "createdAt" : "2019-10-04T11:31:53Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7b086d71418f8dd31bcf1d51c0ae1f9e2877d27c",
    "line" : 28,
    "diffHunk" : "@@ -0,0 +1,74 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.platform.server.api.authorization\n+\n+import com.daml.ledger.participant.state.v1.{AuthService, Claims}\n+import io.grpc.{\n+  Context,\n+  Contexts,\n+  Metadata,\n+  ServerCall,\n+  ServerCallHandler,\n+  ServerInterceptor,\n+  Status\n+}\n+import org.slf4j.{Logger, LoggerFactory}\n+\n+import scala.compat.java8.FutureConverters\n+import scala.concurrent.ExecutionContext\n+import scala.util.{Failure, Success}\n+\n+/**\n+  * This interceptor uses the given [[AuthService]] to get [[Claims]] for the current request,\n+  * and then stores them in the current [[Context]].\n+  *\n+  * Use [[ApiServiceAuthorization]] to read the claims from the context.\n+  * */\n+class AuthorizationInterceptor(protected val authService: AuthService, ec: ExecutionContext)"
  },
  {
    "id" : "dbc268c5-1d0c-44cc-b00e-ed71f3b14e04",
    "prId" : 3051,
    "comments" : [
      {
        "id" : "3be4d715-1e07-4b41-b3a8-4448a3005ae0",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n  private[this] val logger: Logger = LoggerFactory.getLogger(AuthorizationInterceptor.getClass)\r\n```",
        "createdAt" : "2019-10-04T11:32:40Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7b086d71418f8dd31bcf1d51c0ae1f9e2877d27c",
    "line" : 31,
    "diffHunk" : "@@ -0,0 +1,74 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.platform.server.api.authorization\n+\n+import com.daml.ledger.participant.state.v1.{AuthService, Claims}\n+import io.grpc.{\n+  Context,\n+  Contexts,\n+  Metadata,\n+  ServerCall,\n+  ServerCallHandler,\n+  ServerInterceptor,\n+  Status\n+}\n+import org.slf4j.{Logger, LoggerFactory}\n+\n+import scala.compat.java8.FutureConverters\n+import scala.concurrent.ExecutionContext\n+import scala.util.{Failure, Success}\n+\n+/**\n+  * This interceptor uses the given [[AuthService]] to get [[Claims]] for the current request,\n+  * and then stores them in the current [[Context]].\n+  *\n+  * Use [[ApiServiceAuthorization]] to read the claims from the context.\n+  * */\n+class AuthorizationInterceptor(protected val authService: AuthService, ec: ExecutionContext)\n+    extends ServerInterceptor {\n+\n+  protected val logger: Logger = LoggerFactory.getLogger(AuthorizationInterceptor.getClass)"
  }
]