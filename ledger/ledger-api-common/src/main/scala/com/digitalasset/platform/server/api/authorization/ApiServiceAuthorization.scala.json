[
  {
    "id" : "efc009bf-d457-4eac-9723-281583b1366d",
    "prId" : 3051,
    "comments" : [
      {
        "id" : "e53876bd-4201-4af8-9137-9111c847f7ae",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```\r\nscala> None.forall { _ => false }\r\nres1: Boolean = true\r\n```\r\nThis would mean that a command submission without a party would go through authorization and be caught by validation instead. It doesn't seem unreasonable so that the concerns are clearly divided, but I thought it would make sense to raise this point for discussion.",
        "createdAt" : "2019-10-04T11:28:17Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1eaa980e-8aa6-4acb-91c4-49025d72d671",
        "parentId" : "e53876bd-4201-4af8-9137-9111c847f7ae",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Good point. I think producing a validation error and not an authorization error for empty party lists is the right thing, so I have left the implementation as is and added a comment.\r\n\r\nLet me know if you feel the implementation should change.",
        "createdAt" : "2019-10-07T10:57:30Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5bc8e644-8a21-4cbf-925a-6ad3cb75f06a",
        "parentId" : "e53876bd-4201-4af8-9137-9111c847f7ae",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Cool, thanks for the clarification. Marking as resolved.",
        "createdAt" : "2019-10-07T13:26:32Z",
        "updatedAt" : "2019-10-07T13:26:32Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7b086d71418f8dd31bcf1d51c0ae1f9e2877d27c",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +90,94 @@    * Note: An missing party does NOT result in an authorization error.\n    */\n  def requireClaimsForParty(party: Option[String]): Either[StatusRuntimeException, Unit] = {\n    requireClaims(\n      claims => if (party.forall(p => claims.canActAs(p))) Authorized else NotAuthorized())"
  },
  {
    "id" : "4cd060be-33f5-4682-9f3e-65f7557aa311",
    "prId" : 3051,
    "comments" : [
      {
        "id" : "648ad4e2-e7f6-4e29-bc2b-30dd323dba5f",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```\r\nscala> Set.empty.forall { _ => false }\r\nres1: Boolean = true\r\n```\r\nThis would mean that a transactions request without a party would go through authorization and be caught by validation instead. It doesn't seem unreasonable so that the concerns are clearly divided, but I thought it would make sense to raise this point for discussion.",
        "createdAt" : "2019-10-04T11:29:29Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7b086d71418f8dd31bcf1d51c0ae1f9e2877d27c",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +82,86 @@    * Note: An empty set does NOT result in an authorization error.\n    */\n  def requireClaimsForAllParties(parties: Set[String]): Either[StatusRuntimeException, Unit] = {\n    requireClaims(\n      claims => if (parties.forall(p => claims.canActAs(p))) Authorized else NotAuthorized())"
  },
  {
    "id" : "18ae2fb4-1422-4f86-a89f-3b934a417dd1",
    "prId" : 3051,
    "comments" : [
      {
        "id" : "699a0f3d-02b4-4d57-81a3-ea5555377eea",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I don't see usages of this method in this PR, am I missing something?",
        "createdAt" : "2019-10-04T11:41:11Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ed361125-6eb9-41ba-b55d-a1292bec8a7b",
        "parentId" : "699a0f3d-02b4-4d57-81a3-ea5555377eea",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "No usages, but a useful method when dealing with gRPC contexts. We might need it later for implementing canceling requests after claims expiration, so I did not want to delete it.",
        "createdAt" : "2019-10-07T10:52:27Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7b086d71418f8dd31bcf1d51c0ae1f9e2877d27c",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +65,69 @@    * ```\n    */\n  def withContext[T](context: Context)(block: => T): T = {\n    val previous = context.attach()\n    try block"
  },
  {
    "id" : "1745bd8a-d3a6-4902-ab1c-0806d7753da2",
    "prId" : 3051,
    "comments" : [
      {
        "id" : "6bad6207-9638-4a8c-b50a-a0a4a2d04460",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Looks like this can be made into a private helper.",
        "createdAt" : "2019-10-04T11:46:17Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7b086d71418f8dd31bcf1d51c0ae1f9e2877d27c",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +30,34 @@    *           or Unit if the request is authorized.\n    */\n  def requireClaims(check: Claims => Authorization): Either[StatusRuntimeException, Unit] = {\n    val claims = AuthorizationInterceptor.contextKeyClaim.get()\n    if (claims == null) {"
  }
]