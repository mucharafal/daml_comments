[
  {
    "id" : "4302222b-6b1b-43bb-a713-44c820ec106d",
    "prId" : 761,
    "comments" : [
      {
        "id" : "b7e43e52-46fb-44f3-92de-ab1535bd8d0a",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n        case Right((`pkgId`, Ast.Package(_))) =>\r\n```",
        "createdAt" : "2019-05-06T16:40:23Z",
        "updatedAt" : "2019-05-06T17:01:29Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "eae57f80-3c6b-4e3b-9347-80e3f75c8f1b",
        "parentId" : "b7e43e52-46fb-44f3-92de-ab1535bd8d0a",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "done",
        "createdAt" : "2019-05-06T16:54:27Z",
        "updatedAt" : "2019-05-06T17:01:29Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "47aa8737384d1d20c8aabc0ccd0be804a42e3003",
    "line" : null,
    "diffHunk" : "@@ -17,14 +17,14 @@ class PackageParserTest extends WordSpec with Matchers {\n \n   \"PackageParserTest\" should {\n     \"successfully parse DAR file\" in {\n-      val Some(simpleString) =\n-        Ref.SimpleString\n+      val Some(pkgId) =\n+        Ref.PackageId\n           .fromString(\"497b17f4f5148e0a7102a5a402c3e35e67aa67a663520089922c677819ee4875\")\n           .right\n           .toOption\n       val result = PackageParser.parseDarOrDalf(() => getDarStream)\n       result should matchPattern {\n-        case Right((`simpleString`, Ast.Package(_))) =>\n+        case Right((pkgId, Ast.Package(_))) =>"
  }
]