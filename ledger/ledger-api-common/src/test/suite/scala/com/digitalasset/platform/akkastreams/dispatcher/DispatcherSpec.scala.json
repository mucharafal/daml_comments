[
  {
    "id" : "f48fe2b1-be34-4344-9ad7-3d7e6c628487",
    "prId" : 4953,
    "comments" : [
      {
        "id" : "a7fc22c2-e674-4135-afe4-74865823c19c",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Wouldn't `.drop(1)` do the trick? (And the same below.)",
        "createdAt" : "2020-03-16T15:01:54Z",
        "updatedAt" : "2020-03-17T19:46:55Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e2679a78-0f2d-40a5-a108-a495daf4451c",
        "parentId" : "a7fc22c2-e674-4135-afe4-74865823c19c",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Only of `startExclusive` is actually the first element. Maybe `dropWhile(_._1 <= startExclusive)` to be sure.",
        "createdAt" : "2020-03-16T15:33:25Z",
        "updatedAt" : "2020-03-17T19:46:55Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "8c9c3ccf491dcebc26c083911d9714d2fa5d032f",
    "line" : null,
    "diffHunk" : "@@ -146,12 +145,13 @@ class DispatcherSpec\n       })\n \n   private val rangeQuerySteppingMode = RangeSource[Index, Value](\n-    (startInclusive, endExclusive) => Source(store.get().range(startInclusive, endExclusive))\n+    (startExclusive, endInclusive) =>\n+      Source(store.get().from(startExclusive).to(endInclusive).filter(_._1 != startExclusive))"
  }
]