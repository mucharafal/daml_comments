[
  {
    "id" : "48ba8702-2b58-40c5-997a-f7c9e22567cb",
    "prId" : 2282,
    "comments" : [
      {
        "id" : "52e6b548-8d70-4ecf-a6cf-85170248f2ad",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I am convinced that I gave the `--include` flag unexpected semantics. The way it works now it should be called `--test-only` or something to that effect, because `--include` has an \"additive\" rather than an \"exclusive\" connotation.\r\n\r\nBut let's not change the semantics in the transition to the new tool, but rather at some point later.",
        "createdAt" : "2019-08-06T12:37:14Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "48053653-cb05-4285-9a1a-ce5ab3d80914",
        "parentId" : "52e6b548-8d70-4ecf-a6cf-85170248f2ad",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I absolutely agree with all the points you made. :wink: ",
        "createdAt" : "2019-08-06T15:18:39Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c0ec2e9d435c3c835828ec8bb046a8d6fe9c4a32",
    "line" : null,
    "diffHunk" : "@@ -17,25 +17,49 @@ object LedgerApiTestTool {\n \n   private[this] val logger = LoggerFactory.getLogger(getClass.getName.stripSuffix(\"$\"))\n \n+  private[this] val uncaughtExceptionErrorMessage =\n+    \"UNEXPECTED UNCAUGHT EXCEPTION ON MAIN THREAD, GATHER THE STACKTRACE AND OPEN A _DETAILED_ TICKET DESCRIBING THE ISSUE HERE: https://github.com/digital-asset/daml/issues/new\"\n+\n   private def exitCode(summaries: Vector[LedgerTestSummary], expectFailure: Boolean): Int =\n     if (summaries.exists(_.result.failure) == expectFailure) 0 else 1\n \n+  private def printAvailableTests(): Unit = {\n+    println(\"Tests marked with * are run by default.\\n\")\n+    tests.default.keySet.toSeq.sorted.map(_ + \" *\").foreach(println(_))\n+    tests.optional.keySet.toSeq.sorted.foreach(println(_))\n+  }\n+\n   def main(args: Array[String]): Unit = {\n \n     val config = Cli.parse(args).getOrElse(sys.exit(1))\n \n+    if (config.listTests) {\n+      printAvailableTests()\n+      sys.exit(0)\n+    }\n+\n+    val included ="
  }
]