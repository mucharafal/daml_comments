[
  {
    "id" : "c0d47d2a-05b9-4342-8c94-1b8e6724c7a6",
    "prId" : 6387,
    "comments" : [
      {
        "id" : "4209238b-59b4-4579-8a01-67fb967115d0",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "This seems unnecessary.",
        "createdAt" : "2020-06-18T07:39:02Z",
        "updatedAt" : "2020-06-18T07:51:56Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "828a3316-1421-43ee-bb05-589d04542456",
        "parentId" : "4209238b-59b4-4579-8a01-67fb967115d0",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I believe it's used by `createDummyContract` at the end of the class (since the suite no longer has its own `ExecutionContext`).",
        "createdAt" : "2020-06-18T08:37:46Z",
        "updatedAt" : "2020-06-18T08:37:46Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e52486b1-2bf4-42c5-988e-fb4df3815fcb",
        "parentId" : "4209238b-59b4-4579-8a01-67fb967115d0",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "If that wasn't the case, our tooling would detect it. :slightly_smiling_face: ",
        "createdAt" : "2020-06-18T08:38:25Z",
        "updatedAt" : "2020-06-18T08:38:25Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7b8c4e7a153f924899621aefabbd8c0f95a9c98c",
    "line" : 4,
    "diffHunk" : "@@ -24,12 +24,14 @@ import com.daml.ledger.test_stable.Test.{\n import io.grpc.Status\n import scalaz.syntax.tag._\n \n+import scala.concurrent.ExecutionContext"
  },
  {
    "id" : "d0beba4d-85d9-48da-9559-d852319678af",
    "prId" : 3126,
    "comments" : [
      {
        "id" : "71867ab8-0d84-44b8-be59-70b390a257f1",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "How would have this test failed before this PR?",
        "createdAt" : "2019-10-08T15:10:17Z",
        "updatedAt" : "2019-10-16T16:16:12Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b0a1b24a-64cc-457d-99ed-f6eb544955e4",
        "parentId" : "71867ab8-0d84-44b8-be59-70b390a257f1",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Good question. It would not have failed in the sandbox, but only when running the test with the reference-server v2 (using inmemory kvutils participant), where contract ids actual aren't the same as event ids.\r\nI've ran this test without the change and it failed as expected.",
        "createdAt" : "2019-10-09T07:26:50Z",
        "updatedAt" : "2019-10-16T16:16:12Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "33007a9857aac9e59d5820e6be039783e24a2610",
    "line" : 5,
    "diffHunk" : "@@ -300,6 +300,24 @@ class ActiveContractsService(session: LedgerSession) extends LedgerTestSuite(ses\n       }\n     }\n \n+  private val eventId =\n+    LedgerTest(\"ACSeventId\", \"The ActiveContractService should properly fill the eventId field\") {"
  },
  {
    "id" : "8805b109-8bfc-41ec-b891-550a7fc9248f",
    "prId" : 2580,
    "comments" : [
      {
        "id" : "cea0a006-dcdd-4a69-ab69-6a55617d14af",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Maybe not worth doing, but you can add some extra strictness to this test checking that the reported invalid ledger identifier matches the one provided.",
        "createdAt" : "2019-08-22T08:19:31Z",
        "updatedAt" : "2019-08-22T08:58:24Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b181c94af530655fbe510732ed5f6ab6a447fc08",
    "line" : 34,
    "diffHunk" : "@@ -0,0 +1,307 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.testtool.tests\n+\n+import com.daml.ledger.api.testtool.infrastructure.{\n+  LedgerSession,\n+  LedgerTest,\n+  LedgerTestContext,\n+  LedgerTestSuite\n+}\n+import com.digitalasset.ledger.api.v1.event.Event.Event.Created\n+import com.digitalasset.ledger.api.v1.event.{CreatedEvent, Event}\n+import com.digitalasset.ledger.client.binding.Primitive.{Party, TemplateId}\n+import com.digitalasset.ledger.test.Test.Dummy._\n+import com.digitalasset.ledger.test.Test.{Dummy, DummyFactory, DummyWithParam}\n+import io.grpc.Status\n+import scalaz.syntax.tag._\n+\n+class ActiveContractsService(session: LedgerSession) extends LedgerTestSuite(session) {\n+  private val invalidLedgerId =\n+    LedgerTest(\n+      \"ACSinvalidLedgerId\",\n+      \"The ActiveContractService should fail for requests with an invalid ledger identifier\") {\n+      ledger =>\n+        val invalidLedgerId = \"ACSinvalidLedgerId\"\n+        for {\n+          party <- ledger.allocateParty()\n+          invalidRequest = ledger\n+            .activeContractsRequest(Seq(party))\n+            .update(_.ledgerId := invalidLedgerId)\n+          failure <- ledger.activeContracts(invalidRequest).failed\n+        } yield {\n+          assertGrpcError(failure, Status.Code.NOT_FOUND, \"not found. Actual Ledger ID\")"
  }
]