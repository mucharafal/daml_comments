[
  {
    "id" : "a6ac8b82-ff10-4461-a095-7a4339280bfd",
    "prId" : 2282,
    "comments" : [
      {
        "id" : "c89beee5-9994-4fed-9258-2f9b1842af1e",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Is this test missing a `skipIf` clause for when the time service is not available?",
        "createdAt" : "2019-08-06T13:33:06Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2fc01fd6-f070-439f-bbac-1a4bef3b4e65",
        "parentId" : "c89beee5-9994-4fed-9258-2f9b1842af1e",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Kinda. The problem is that I haven't found a way to express it reliably. Basically right now any option I could introduce would more ore less be equivalent to explicitly `--include=Time` from the CLI.",
        "createdAt" : "2019-08-06T13:42:01Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "725c0d0d-6180-4a65-aa80-590f0e0344d4",
        "parentId" : "c89beee5-9994-4fed-9258-2f9b1842af1e",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Superseded by https://github.com/digital-asset/daml/pull/2282#discussion_r311404661",
        "createdAt" : "2019-08-07T12:15:05Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c0ec2e9d435c3c835828ec8bb046a8d6fe9c4a32",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,33 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.rewrite.testtool.tests\n+\n+import java.time.Duration\n+\n+import com.daml.ledger.api.rewrite.testtool.infrastructure.{\n+  LedgerSession,\n+  LedgerTest,\n+  LedgerTestSuite\n+}\n+\n+import scala.concurrent.duration.DurationInt\n+\n+final class Time(session: LedgerSession) extends LedgerTestSuite(session) {\n+\n+  val pass =\n+    LedgerTest(\"Advancing time should return the new time\") { implicit context =>"
  }
]