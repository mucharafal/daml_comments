[
  {
    "id" : "6d390e5b-9b62-4b78-b108-046677505db8",
    "prId" : 3349,
    "comments" : [
      {
        "id" : "12511d30-e7a2-420f-b244-a0c0cd6d8e2f",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "In the spirit of _composition-over-inheritance_ I guess this can be made into an object as well. :slightly_smiling_face: ",
        "createdAt" : "2019-11-06T10:28:47Z",
        "updatedAt" : "2019-11-06T10:31:21Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e759062a-15c3-49fa-b35e-dcc4d6154bc3",
        "parentId" : "12511d30-e7a2-420f-b244-a0c0cd6d8e2f",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Unfortunately, because `ai.x.diff` has a base implicit conversion for any `T` that simply throws an error, it gives us runtime exceptions instead of compilation errors. (I cannot figure out why.)\r\n\r\nIn case you're wondering, it looks like this:\r\n\r\n```scala\r\n  implicit def otherDiffShow[T: scala.reflect.ClassTag]: DiffShow[T] = new DiffShow[T] {\r\n    private val T = scala.reflect.classTag[T].toString\r\n    // throw new Exception( s\"Cannot find DiffShow[$T]\" )\r\n    def show( v: T ) = red( new Exception( s\"ERROR: Cannot find DiffShow[$T] to show value \" + v ).showStackTrace )\r\n    def diff( l: T, r: T ) = Error( new Exception( s\"ERROR: Cannot find DiffShow[$T] to show values ($l, $r)\" ).showStackTrace )\r\n  }\r\n```\r\n\r\nThis means that if we turn this into an object and import it where required, forgetting the import doesn't lead to a compilation error but an error in your tests, which means that you may not notice for a while. This is less than fun. For this reason, I suggest we keep it like this unless it starts to blow up.",
        "createdAt" : "2019-11-06T10:56:49Z",
        "updatedAt" : "2019-11-06T10:56:50Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "79c651ec26ee36d6408955f9f74fa931a53f17af",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +7,11 @@import scalaz.{@@, Tag}\n\ntrait DiffExtensions {\n  implicit def diffShowTag[A, T](implicit diffShowA: DiffShow[A]): DiffShow[A @@ T] =\n    new DiffShow[A @@ T] {"
  }
]