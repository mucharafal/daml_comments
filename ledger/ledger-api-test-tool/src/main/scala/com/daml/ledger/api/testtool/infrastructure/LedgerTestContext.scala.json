[
  {
    "id" : "04c97b05-6cb8-45ae-b51b-c7d7888aeec4",
    "prId" : 7328,
    "comments" : [
      {
        "id" : "30f86d25-eaed-4cbf-b333-d14609744655",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "What is the purpose of this? This is mainly making the performance characteristics unclear.",
        "createdAt" : "2020-09-07T10:09:19Z",
        "updatedAt" : "2020-09-07T12:51:18Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3c00b427-ded1-4fd1-810d-635ac821c3c2",
        "parentId" : "30f86d25-eaed-4cbf-b333-d14609744655",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "This is generally tiny, on the order of 1â€“2 elements in the list. At this size, the performance characteristics are \"meh, who cares\"?",
        "createdAt" : "2020-09-07T12:28:08Z",
        "updatedAt" : "2020-09-07T12:51:18Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "cf7583b91c2f670c439f510026de0dfba0bb94f0",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +15,19 @@\nprivate[testtool] final class LedgerTestContext private[infrastructure] (\n    participants: immutable.Seq[ParticipantTestContext],\n)(implicit ec: ExecutionContext) {\n"
  },
  {
    "id" : "a6397f3e-666b-4575-a6c1-0a935ace2d49",
    "prId" : 2713,
    "comments" : [
      {
        "id" : "00179dcc-f28a-4854-8301-599f74eb82ca",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Why not use `Update[T]` here and remove the explicit cast below?\r\n```suggestion\r\n      exercise: Party => Primitive.Update[T]\r\n```",
        "createdAt" : "2019-08-30T14:52:24Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3cf755de-95d1-44d2-a1c7-d80771b3b4ca",
        "parentId" : "00179dcc-f28a-4854-8301-599f74eb82ca",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "It is not necessarily the case that the contract on which an update operates is the same as the one created by exercising the choice. ",
        "createdAt" : "2019-09-02T09:18:01Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c0402174-ae6f-4cc7-9761-c186d24ed7fb",
        "parentId" : "00179dcc-f28a-4854-8301-599f74eb82ca",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Could you elaborate please? I don't understand what you mean.",
        "createdAt" : "2019-09-02T09:39:50Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "45ea3a0f-5f14-4277-9144-d92d45c98a8e",
        "parentId" : "00179dcc-f28a-4854-8301-599f74eb82ca",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "As explained offline (reported here for clarity): the type variable is used to cast [here](https://github.com/digital-asset/daml/pull/2713#discussion_r319549199). When exercising a choice on a contract based on template `T` there is no (easy?) way to get the type of the contracts that are created as part of the transaction kicked of by the exercise.",
        "createdAt" : "2019-09-02T09:55:02Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3636c37a-fe53-4935-be71-99c791764bdb",
        "parentId" : "00179dcc-f28a-4854-8301-599f74eb82ca",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Alright, so the `T` type parameter expresses an expectation of the method's caller that it expects the first contract to be of type `T`. I'd prefer a mechanism as described in my comment on the type cast a few lines below.",
        "createdAt" : "2019-09-02T09:56:30Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3153aa5aee7120933b68f4773dedc170bfa2b123",
    "line" : 208,
    "diffHunk" : "@@ -1,1 +317,321 @@  def exerciseAndGetContract[T](\n      party: Party,\n      exercise: Party => Primitive.Update[_]\n  ): Future[Primitive.ContractId[T]] =\n    submitAndWaitRequest(party, exercise(party).command)"
  },
  {
    "id" : "81905679-d65c-454f-8997-00303ee04d80",
    "prId" : 2713,
    "comments" : [
      {
        "id" : "a5ebb87b-b695-4ad2-9900-e6b818b2250a",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "```suggestion\r\n```",
        "createdAt" : "2019-08-30T14:53:48Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1e167df8-b4c9-415d-a4bd-d27958d128dc",
        "parentId" : "a5ebb87b-b695-4ad2-9900-e6b818b2250a",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Without this we would get all contracts created in the transaction instead of a single one and we would not be able to dictate what kind of contract it is. But I do agree that the casting is quite a wart. Not sure of how I could feed the type information correctly without that.",
        "createdAt" : "2019-09-02T09:21:15Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e76bd2d1-975d-4a77-bb4a-bee1f7ba9246",
        "parentId" : "a5ebb87b-b695-4ad2-9900-e6b818b2250a",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Can we even make the assumption that the first contract is of type `T`? How about we pass the template companion object (`TemplateCompanion[T]`) or template identifier as parameter to the method, which which we can actually check the created events for matching template ids.",
        "createdAt" : "2019-09-02T09:44:27Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "65947b85-1965-4dcc-94c3-4f4bc2016b87",
        "parentId" : "a5ebb87b-b695-4ad2-9900-e6b818b2250a",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "See [this other comment](https://github.com/digital-asset/daml/pull/2713#discussion_r319888452) for more details.",
        "createdAt" : "2019-09-02T09:55:21Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3153aa5aee7120933b68f4773dedc170bfa2b123",
    "line" : 213,
    "diffHunk" : "@@ -1,1 +322,326 @@      .flatMap(submitAndWaitForTransaction)\n      .map(extractContracts)\n      .map(_.head.asInstanceOf[Primitive.ContractId[T]])\n\n  def exerciseAndGetContracts[T]("
  },
  {
    "id" : "a84d26d1-ed2f-470e-9e3e-81a9392d68f5",
    "prId" : 2713,
    "comments" : [
      {
        "id" : "7477e6e5-e23c-4846-b44a-1a1e485f3bb2",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "```suggestion\r\n  ): Future[Seq[Primitive.ContractId[T]]] =\r\n```",
        "createdAt" : "2019-08-30T14:53:57Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6dfef8e3-4bec-4750-8019-7fae21eb6b8b",
        "parentId" : "7477e6e5-e23c-4846-b44a-1a1e485f3bb2",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Here the meaning of the type variable is different, the idea is that all updates operate on contracts of type `T` but we don't know what is the type of the contracts that is going to be created as part of the transaction.",
        "createdAt" : "2019-09-02T09:24:37Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "657b493a-903d-410b-a7af-6ab5d8ef32e5",
        "parentId" : "7477e6e5-e23c-4846-b44a-1a1e485f3bb2",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Alright, so an exercise in DAML can any number contracts of any kind of template, and this is what this method returns? If so, then ignore my suggestions please.",
        "createdAt" : "2019-09-02T09:41:18Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b497aafa-a0ee-4549-bc1e-a072c9443368",
        "parentId" : "7477e6e5-e23c-4846-b44a-1a1e485f3bb2",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Exactly.",
        "createdAt" : "2019-09-02T09:55:34Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3153aa5aee7120933b68f4773dedc170bfa2b123",
    "line" : 218,
    "diffHunk" : "@@ -1,1 +327,331 @@      party: Party,\n      exercise: Party => Primitive.Update[T]\n  ): Future[Seq[Primitive.ContractId[_]]] =\n    submitAndWaitRequest(party, exercise(party).command)\n      .flatMap(submitAndWaitForTransaction)"
  }
]