[
  {
    "id" : "89648cd9-437d-4715-8576-455984f650e9",
    "prId" : 2282,
    "comments" : [
      {
        "id" : "5c612051-1485-4d03-9538-fbc294d04670",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Why is it an abstract case class?",
        "createdAt" : "2019-08-06T13:27:01Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "292b28c4-aeb4-4060-9533-1dbb012e403a",
        "parentId" : "5c612051-1485-4d03-9538-fbc294d04670",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Controlling the constructor while letting the compiler synthesize the extractors ([reference](https://gist.github.com/tpolecat/a5cb0dc9adeacc93f846835ed21c92d2)).",
        "createdAt" : "2019-08-06T13:44:36Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ce821156-a951-49ca-820a-770a91d77130",
        "parentId" : "5c612051-1485-4d03-9538-fbc294d04670",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Thanks for the reference 👍 ",
        "createdAt" : "2019-08-06T15:06:49Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c0ec2e9d435c3c835828ec8bb046a8d6fe9c4a32",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,40 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.rewrite.testtool.templates\n+\n+import com.daml.ledger.api.rewrite.testtool.infrastructure.LedgerTestContext\n+import com.digitalasset.ledger.api.v1.value.Value.Sum.{ContractId, Party}\n+\n+import scala.concurrent.Future\n+\n+object Divulgence2 {\n+  def apply(party: String, div2Signatory: String, div2Fetcher: String)(\n+      implicit context: LedgerTestContext): Future[Divulgence2] =\n+    context\n+      .create(\n+        party,\n+        ids.divulgence2,\n+        Map(\"div2Signatory\" -> new Party(div2Signatory), \"div2Fetcher\" -> new Party(div2Fetcher))\n+      )\n+      .map(new Divulgence2(_, party, div2Signatory, div2Fetcher) {})\n+\n+}\n+\n+sealed abstract case class Divulgence2("
  },
  {
    "id" : "48dab980-a9f1-4cb5-90ca-664e74ac4878",
    "prId" : 2282,
    "comments" : [
      {
        "id" : "5d7fc88c-45da-49a4-908e-c65ba1cc97df",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "This field doesn't seem to be used anywhere.",
        "createdAt" : "2019-08-06T13:27:29Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2402cd24-8c05-45b3-895e-c903d6ec8aa3",
        "parentId" : "5d7fc88c-45da-49a4-908e-c65ba1cc97df",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Yeah, not sure whether this is used in some other test, I can remove it without consequences for now I guess. Ideally I'd like to supplant this with code generation.",
        "createdAt" : "2019-08-06T13:42:45Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "527bc6f1-dd96-4a10-820e-775cb95caaa3",
        "parentId" : "5d7fc88c-45da-49a4-908e-c65ba1cc97df",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I guess we'll wait with that until the Divulgence test is complete.",
        "createdAt" : "2019-08-06T15:07:31Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "064e1db4-d4b2-4744-9cc1-4be2c6d92589",
        "parentId" : "5d7fc88c-45da-49a4-908e-c65ba1cc97df",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Yes, I've just swapped in the new tool, I'll finish `DivulgenceIT` and `ContractKeysIT` (since it's used for conformance tests of the reference DAML-on-X implementation) and then I'd say we can merge, module further review comments, mostly because this PR is getting huge with the swap and subsequent deduplication. Open points can be addressed one by one in upcoming PRs.",
        "createdAt" : "2019-08-06T15:13:03Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "bbdb98ec-c9d4-4373-ba62-17bf1e10361f",
        "parentId" : "5d7fc88c-45da-49a4-908e-c65ba1cc97df",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/2282/commits/c7e6538d4efaacb3ed283c726acc0a12dfaaa80f",
        "createdAt" : "2019-08-07T12:14:46Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c0ec2e9d435c3c835828ec8bb046a8d6fe9c4a32",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,40 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.rewrite.testtool.templates\n+\n+import com.daml.ledger.api.rewrite.testtool.infrastructure.LedgerTestContext\n+import com.digitalasset.ledger.api.v1.value.Value.Sum.{ContractId, Party}\n+\n+import scala.concurrent.Future\n+\n+object Divulgence2 {\n+  def apply(party: String, div2Signatory: String, div2Fetcher: String)(\n+      implicit context: LedgerTestContext): Future[Divulgence2] =\n+    context\n+      .create(\n+        party,\n+        ids.divulgence2,\n+        Map(\"div2Signatory\" -> new Party(div2Signatory), \"div2Fetcher\" -> new Party(div2Fetcher))\n+      )\n+      .map(new Divulgence2(_, party, div2Signatory, div2Fetcher) {})\n+\n+}\n+\n+sealed abstract case class Divulgence2(\n+    contractId: String,\n+    party: String,\n+    div2Signatory: String,\n+    div2Fetcher: String) {"
  }
]