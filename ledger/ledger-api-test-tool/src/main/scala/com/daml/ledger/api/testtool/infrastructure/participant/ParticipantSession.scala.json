[
  {
    "id" : "6a07bb8e-415c-4315-98f8-24906a675207",
    "prId" : 7328,
    "comments" : [
      {
        "id" : "02e87ae5-3b8d-4074-afae-131928c037ce",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Should the constructor be private?",
        "createdAt" : "2020-09-07T10:24:06Z",
        "updatedAt" : "2020-09-07T12:51:18Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4fa67c7e-1bf0-4832-bb3f-781b695bea42",
        "parentId" : "02e87ae5-3b8d-4074-afae-131928c037ce",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Yes.",
        "createdAt" : "2020-09-07T12:52:15Z",
        "updatedAt" : "2020-09-07T12:52:15Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "cf7583b91c2f670c439f510026de0dfba0bb94f0",
    "line" : 21,
    "diffHunk" : "@@ -8,32 +8,20 @@ import com.daml.ledger.api.v1.ledger_identity_service.GetLedgerIdentityRequest\n import com.daml.ledger.api.v1.transaction_service.GetLedgerEndRequest\n import com.daml.timer.RetryStrategy\n import io.grpc.ManagedChannel\n-import io.netty.channel.nio.NioEventLoopGroup\n import org.slf4j.LoggerFactory\n \n-import scala.concurrent.duration.{DurationInt, SECONDS}\n+import scala.concurrent.duration.DurationInt\n import scala.concurrent.{ExecutionContext, Future}\n \n-private[participant] final class ParticipantSession(\n-    val config: ParticipantSessionConfiguration,\n-    channel: ManagedChannel,\n-    eventLoopGroup: NioEventLoopGroup,\n+private[infrastructure] final class ParticipantSession(\n+    config: ParticipantSessionConfiguration,\n+    services: LedgerServices,\n+    // The ledger ID is retrieved only once when the participant session is created.\n+    // Changing the ledger ID during a session can result in unexpected consequences.\n+    // The test tool is designed to run tests in an isolated environment but changing the\n+    // global state of the ledger breaks this assumption, no matter what."
  },
  {
    "id" : "c29a73f6-ce63-4c46-8080-4f77e27157da",
    "prId" : 3052,
    "comments" : [
      {
        "id" : "cb0a40f8-6698-40e3-a768-9eb6e5e4d252",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "`1E9` <- what a rare sight to behold :)",
        "createdAt" : "2019-09-26T16:01:32Z",
        "updatedAt" : "2019-09-27T09:13:36Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6eb1f2fa-f4f1-4cef-9ffa-bb543a325475",
        "parentId" : "cb0a40f8-6698-40e3-a768-9eb6e5e4d252",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Alternatively:\r\n```\r\nimport scala.concurrent.duration._\r\n\r\nval min = (configuration.getMinTtl.seconds.seconds + configuration.getMinTtl.nanos.nanos\r\n// ...\r\n// multiplying by factor and the min max functions would work just the same\r\n```",
        "createdAt" : "2019-09-26T16:05:25Z",
        "updatedAt" : "2019-09-27T09:13:36Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5da510f5-966d-4a3f-933f-57cfeeb0deec",
        "parentId" : "cb0a40f8-6698-40e3-a768-9eb6e5e4d252",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/3052/commits/f28736e5df07b0d30fd1b1d174e63fa974c75fde",
        "createdAt" : "2019-09-27T09:17:43Z",
        "updatedAt" : "2019-09-27T09:17:44Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "8efcdd4cb8c2327da1e5fa8b20b81aaec11bf80c",
    "line" : null,
    "diffHunk" : "@@ -22,29 +27,61 @@ private[participant] final class ParticipantSession(\n \n   private[this] val logger = LoggerFactory.getLogger(classOf[ParticipantSession])\n \n+  private[this] val eventually = RetryStrategy.exponentialBackoff(10, 10.millis)\n+\n   private[this] val services: LedgerServices = new LedgerServices(channel)\n \n-  private[this] val eventually = RetryStrategy.exponentialBackoff(10, 10.millis)\n+  // The ledger identifier is retrieved only once when the participant session is created\n+  // Changing the ledger identifier during the execution of a session can result in unexpected consequences\n+  // The test tool is designed to run tests in an isolated environment but changing the\n+  // global state of the ledger breaks this assumption, no matter what\n+  private[this] val ledgerIdF =\n+    eventually { attempt =>\n+      logger.debug(s\"Retrieving ledger identifier to create ledger context (attempt #$attempt)...\")\n+      services.identity.getLedgerIdentity(new GetLedgerIdentityRequest).map(_.ledgerId)\n+    }\n+\n+  // The time-to-live for commands defaults to the maximum value as defined by the ledger\n+  // configuration and can be adjusted down. Regardless the output of the adjustment, the\n+  // value is always going to be clipped by the minimum and maximum configured values.\n+  // Note that this value is going to never change after it's read the first time, so changing\n+  // ledger configuration across tests may have wildly unexpected consequences. In general the\n+  // test tool is designed to have tests work in isolation and tests addressing changes to the\n+  // global state of the ledger should be isolated in their own test runs.\n+  private[this] val ttlNanosF: Future[Long] =\n+    ledgerIdF\n+      .flatMap { id =>\n+        SingleItemObserver\n+          .first[GetLedgerConfigurationResponse](services.configuration\n+            .getLedgerConfiguration(new GetLedgerConfigurationRequest(id), _))\n+          .map(_.get.getLedgerConfiguration)\n+      }\n+      .map { configuration =>\n+        val factor = config.commandTtlFactor\n+        val min = (configuration.getMinTtl.seconds * 1E9) + configuration.getMinTtl.nanos.toDouble"
  },
  {
    "id" : "ed671c0b-9592-4155-9209-19006443ee9a",
    "prId" : 3052,
    "comments" : [
      {
        "id" : "e613393f-a719-48b1-9b71-cb4504406f3f",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Would it make sense to make this a `scala.concurrent.duration.Duration`? Using duration is much safer than passing around a long that hopefully never changes its meaning.",
        "createdAt" : "2019-09-26T16:02:14Z",
        "updatedAt" : "2019-09-27T09:13:36Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f6e8cab0-3828-419c-8459-e5c88ba035b9",
        "parentId" : "e613393f-a719-48b1-9b71-cb4504406f3f",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Makes a lot of sense, thanks, will do.",
        "createdAt" : "2019-09-26T16:54:32Z",
        "updatedAt" : "2019-09-27T09:13:36Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f3596f91-d18a-4d90-9205-efc4b2f33d4a",
        "parentId" : "e613393f-a719-48b1-9b71-cb4504406f3f",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/3052/commits/f28736e5df07b0d30fd1b1d174e63fa974c75fde",
        "createdAt" : "2019-09-27T09:17:24Z",
        "updatedAt" : "2019-09-27T09:17:24Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "8efcdd4cb8c2327da1e5fa8b20b81aaec11bf80c",
    "line" : null,
    "diffHunk" : "@@ -22,29 +27,61 @@ private[participant] final class ParticipantSession(\n \n   private[this] val logger = LoggerFactory.getLogger(classOf[ParticipantSession])\n \n+  private[this] val eventually = RetryStrategy.exponentialBackoff(10, 10.millis)\n+\n   private[this] val services: LedgerServices = new LedgerServices(channel)\n \n-  private[this] val eventually = RetryStrategy.exponentialBackoff(10, 10.millis)\n+  // The ledger identifier is retrieved only once when the participant session is created\n+  // Changing the ledger identifier during the execution of a session can result in unexpected consequences\n+  // The test tool is designed to run tests in an isolated environment but changing the\n+  // global state of the ledger breaks this assumption, no matter what\n+  private[this] val ledgerIdF =\n+    eventually { attempt =>\n+      logger.debug(s\"Retrieving ledger identifier to create ledger context (attempt #$attempt)...\")\n+      services.identity.getLedgerIdentity(new GetLedgerIdentityRequest).map(_.ledgerId)\n+    }\n+\n+  // The time-to-live for commands defaults to the maximum value as defined by the ledger\n+  // configuration and can be adjusted down. Regardless the output of the adjustment, the\n+  // value is always going to be clipped by the minimum and maximum configured values.\n+  // Note that this value is going to never change after it's read the first time, so changing\n+  // ledger configuration across tests may have wildly unexpected consequences. In general the\n+  // test tool is designed to have tests work in isolation and tests addressing changes to the\n+  // global state of the ledger should be isolated in their own test runs.\n+  private[this] val ttlNanosF: Future[Long] ="
  }
]