[
  {
    "id" : "f49703f1-2d3f-447c-a3b2-c5ece89cfe34",
    "prId" : 7756,
    "comments" : [
      {
        "id" : "f02de831-c954-4f16-86e0-bec5268fbe7a",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "If the documentation does not mention this, it's a good chance to add it, possibly adding a few example and explaining when and how this is useful.\r\n\r\nI don't see a problem in adding the new behavior, but I would recommend you also not break current users. This would mean interpreting an absence of unit as `ms`.",
        "createdAt" : "2020-10-21T08:36:32Z",
        "updatedAt" : "2020-10-21T10:33:42Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e4c3928d-9d3b-49e4-9c3a-7ad4abd6cb2e",
        "parentId" : "f02de831-c954-4f16-86e0-bec5268fbe7a",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Good plan. I'll see if I can keep the old behavior as well, but keep it hidden so new users don't find it.",
        "createdAt" : "2020-10-21T08:54:38Z",
        "updatedAt" : "2020-10-21T10:33:42Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5476326a-823d-4812-8ec6-d8e63a18346e",
        "parentId" : "f02de831-c954-4f16-86e0-bec5268fbe7a",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Done. Let me know if you're happy with the implementation.",
        "createdAt" : "2020-10-21T10:03:39Z",
        "updatedAt" : "2020-10-21T10:33:42Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f2b7fa68-d964-4762-9172-173a04796c07",
        "parentId" : "f02de831-c954-4f16-86e0-bec5268fbe7a",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "LGTM, thanks.",
        "createdAt" : "2020-10-21T11:01:07Z",
        "updatedAt" : "2020-10-21T11:01:07Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "97386d4f048437a7bca48f9f19aa77e1748e7b95",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +206,210 @@      .optional()\n      .action((x, c) => c.copy(ledgerClockGranularity = x))\n      .text(\"Specify the largest interval that you will see between clock ticks on the ledger under test. The default is \\\"1s\\\" (1 second).\")\n\n    opt[Unit](\"skip-dar-upload\")"
  },
  {
    "id" : "45e30c5e-8e97-4c55-af41-b8c098493b6f",
    "prId" : 6651,
    "comments" : [
      {
        "id" : "82ce76d5-eae0-47b8-9918-745500b37651",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I still think it's worth logging a warning if you use a deprecated option.\r\n\r\n```suggestion\r\n      .text(\"DEPRECATED: All tests are always run by default.\")\r\n      .action(_ => logger.warn(\"The `--all-tests` option is deprecated. All tests are always run by default.\"))\r\n```\r\n\r\nAnd so on for the other deprecated options.",
        "createdAt" : "2020-07-09T09:51:11Z",
        "updatedAt" : "2020-07-09T13:44:00Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "069cd503-a8fa-41ae-a826-04f76a97a12f",
        "parentId" : "82ce76d5-eae0-47b8-9918-745500b37651",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/6651/commits/69178c4e63fc29dec22b9cf744ce846a4c036a5c",
        "createdAt" : "2020-07-09T10:15:39Z",
        "updatedAt" : "2020-07-09T13:44:00Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "92276dec4a74821dcec140cb26ac3bd9e14c5c04",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +158,162 @@\n    opt[Unit](\"all-tests\")\n      .text(\"DEPRECATED: All tests are always run by default.\")\n      .action(reportUsageOfDeprecatedOption(\"--all-tests\"))\n      .hidden()"
  },
  {
    "id" : "6786ffff-eea9-4b75-a7f6-24e1509705cf",
    "prId" : 6458,
    "comments" : [
      {
        "id" : "e6b81e86-59f4-4260-a49c-04f4a409dfa5",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Happy to leave this up to you but an alternative UX would be `list --all`. Not sure what I prefer.",
        "createdAt" : "2020-06-23T07:07:43Z",
        "updatedAt" : "2020-06-23T11:39:22Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b45e0f99-c0cd-4bd3-931f-a0c4eb97fb0c",
        "parentId" : "e6b81e86-59f4-4260-a49c-04f4a409dfa5",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I agree the `--list`/`--list-all` thing is a bit awkward, but I believe fixing this should be done as part of a broader redesign of the CLI; for example the situation with perf tests vs. normal tests could also use a more explicit structure. I don't want to extend the scope of this PR though.",
        "createdAt" : "2020-06-23T10:17:24Z",
        "updatedAt" : "2020-06-23T11:39:22Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "369498b2337dab0f8d310a86dce521d86703c678",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +174,178 @@        \"\"\"Lists all available test suites that can be used in the include and exclude options. Test names always start with their suite name, so using the suite name as a prefix matches all tests in a given suite.\"\"\")\n\n    opt[Unit](\"list-all\")\n      .action((_, c) => c.copy(listTests = true))\n      .text(\"\"\"Lists all available tests that can be used in the include and exclude options.\"\"\")"
  },
  {
    "id" : "9c515c25-81a6-4afd-8a1a-0941c0577fb0",
    "prId" : 6458,
    "comments" : [
      {
        "id" : "c96660b4-d902-4a6d-9be0-8d11b07793f9",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "What happens if you use both `--list` and `--list-all`?",
        "createdAt" : "2020-06-23T10:33:40Z",
        "updatedAt" : "2020-06-23T11:39:22Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a9346382-d418-4eed-b86a-97b72f32b5a0",
        "parentId" : "c96660b4-d902-4a6d-9be0-8d11b07793f9",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "At the moment `--list` wins over everything. So if you say `--include=... --perf-tests=... --list` you still get the list of test suites. That's very much related to @cocreature's comment: we have a bunch of \"flat\" flags (i.e. no hierarchy) as far as the external interface is concerned, but internally we treat them as special things where some affect others. I think the tool has become rich enough that it's now worth having explicit subcommands, each which its own set of allowed flags.",
        "createdAt" : "2020-06-23T10:49:38Z",
        "updatedAt" : "2020-06-23T11:39:22Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "369498b2337dab0f8d310a86dce521d86703c678",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +174,178 @@        \"\"\"Lists all available test suites that can be used in the include and exclude options. Test names always start with their suite name, so using the suite name as a prefix matches all tests in a given suite.\"\"\")\n\n    opt[Unit](\"list-all\")\n      .action((_, c) => c.copy(listTests = true))\n      .text(\"\"\"Lists all available tests that can be used in the include and exclude options.\"\"\")"
  },
  {
    "id" : "eee6e67d-2cc6-4e43-a1ec-288da5aa9b09",
    "prId" : 5377,
    "comments" : [
      {
        "id" : "959f9698-d771-4450-bf3f-c08bc3f766a0",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Good call. We should do this everywhere.",
        "createdAt" : "2020-04-06T12:32:55Z",
        "updatedAt" : "2020-04-06T12:50:22Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "70cc33cce879b665e8969f8d4f92cb39b9b489d5",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +52,56 @@  )\n\n  private[this] implicit val pathRead: Read[Path] = Read.reads(Paths.get(_))\n\n  private val argParser = new scopt.OptionParser[Config](\"ledger-api-test-tool\") {"
  },
  {
    "id" : "79ff2c9a-6232-4660-9503-f3654491dffe",
    "prId" : 4450,
    "comments" : [
      {
        "id" : "f2434507-3c77-4bcc-afa2-aab4a26c8545",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "`do-not-wait-for-parties` or `no-waiting-for-parties` may be a better name for this parameter.",
        "createdAt" : "2020-02-10T09:55:42Z",
        "updatedAt" : "2020-02-10T12:43:36Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ef90992e-a60d-45d1-b123-1dbb5ee2ff2a",
        "parentId" : "f2434507-3c77-4bcc-afa2-aab4a26c8545",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "It's not particularly important, this is just temporary before we reach a shared understanding of whether we want tests to wait for parties in the first place. If anything, I'd recommend hiding this option for now with `.hidden()`.",
        "createdAt" : "2020-02-10T11:44:14Z",
        "updatedAt" : "2020-02-10T12:43:36Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e1b84e80-eb4d-4f35-bdd2-833eeff425c4",
        "parentId" : "f2434507-3c77-4bcc-afa2-aab4a26c8545",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "+1 for making the new option hidden. Otherwise, I'm sure you have seen a lot of 'temporary' solutions lying around for years ; )",
        "createdAt" : "2020-02-10T11:59:11Z",
        "updatedAt" : "2020-02-10T12:43:36Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f0112a54-c594-4253-996d-46e58ad1e00b",
        "parentId" : "f2434507-3c77-4bcc-afa2-aab4a26c8545",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "+1 for hidden. Adding it.",
        "createdAt" : "2020-02-10T12:21:31Z",
        "updatedAt" : "2020-02-10T12:43:36Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9b50aea234086b5d2936b09b0d3a1451d42d8d09",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +148,152 @@      .text(\"\"\"Run all default and optional tests. Respects the --exclude flag.\"\"\")\n\n    opt[Unit](\"no-wait-for-parties\")\n      .action((_, c) => c.copy(waitForParties = false))\n      .text(\"\"\"Do not wait for parties to be allocated on all participants.\"\"\")"
  }
]