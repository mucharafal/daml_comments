[
  {
    "id" : "eb8c3748-ec58-4e39-acc8-e53bdef80462",
    "prId" : 2282,
    "comments" : [
      {
        "id" : "0a90c51c-c300-4634-afa3-aec726501c06",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "How does this test work for wall-clock time? Or is it missing a `skipIf`?",
        "createdAt" : "2019-08-07T07:28:17Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e4ea6ca1-2b87-44eb-aeb1-1bd6b0f6dbc8",
        "parentId" : "0a90c51c-c300-4634-afa3-aec726501c06",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "It would throw. The problem is it's quite difficult to reliably detect if the time service is there. In the case of the DAML-on-X reference implementation, for example, the `TimeService` exists also on wall-clock time but it's not capable of doing time travel (which makes sense). So using `skipIf` would not work very reliably unless we signal the compliance with the `TimeService` via configuration/CLI, which could be effectively equivalent to simply specifying to include or exclude the `TimeIT` test. Would that be a feasible approach to the problem?",
        "createdAt" : "2019-08-07T08:41:05Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0f8b5391-d8ee-4aa6-befd-5f416d679d0a",
        "parentId" : "0a90c51c-c300-4634-afa3-aec726501c06",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "You can see an example of at the commit where I introduced running the conformance tests on the in-memory (https://github.com/digital-asset/daml/pull/2282/commits/9cec58d6d8ab8f83593307f394d3a5d813f8e4a7) and persistent sandbox (https://github.com/digital-asset/daml/pull/2282/commits/549e26411bd5e7dee2af74a7052c327666de2832).",
        "createdAt" : "2019-08-07T12:13:39Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d87ba78a-3e6d-4973-ab84-1da5adb1a7cb",
        "parentId" : "0a90c51c-c300-4634-afa3-aec726501c06",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Okay, then let's keep this test as optional and running that test should be a conscious opt-in.",
        "createdAt" : "2019-08-09T13:33:56Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c0ec2e9d435c3c835828ec8bb046a8d6fe9c4a32",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +16,20 @@      for {\n        t1 <- time()\n        _ <- passTime(1.second)\n        t2 <- time()\n        travel = Duration.between(t1, t2)"
  }
]