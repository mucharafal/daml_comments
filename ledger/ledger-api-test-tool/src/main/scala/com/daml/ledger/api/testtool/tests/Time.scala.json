[
  {
    "id" : "cc631865-392d-41a5-a898-101fb073884d",
    "prId" : 4561,
    "comments" : [
      {
        "id" : "a597a68c-cf1a-4c95-844c-0a82782a2b6e",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Wanna remove the `passTime` method too?",
        "createdAt" : "2020-02-18T12:19:16Z",
        "updatedAt" : "2020-02-18T13:03:13Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "31edc8ec-ac8a-4482-868e-4a74ad923b0e",
        "parentId" : "a597a68c-cf1a-4c95-844c-0a82782a2b6e",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Good catch, thanks.\r\n\r\nAddressed by https://github.com/digital-asset/daml/commit/2912a2948770af23b22545944698d951e2e044be",
        "createdAt" : "2020-02-18T12:27:20Z",
        "updatedAt" : "2020-02-18T13:03:13Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "41721436b2a82ead8ff286e7f3e072ac59f13f61",
    "line" : 16,
    "diffHunk" : "@@ -1,25 +0,0 @@\n-// Copyright (c) 2020 The DAML Authors. All rights reserved.\n-// SPDX-License-Identifier: Apache-2.0\n-\n-package com.daml.ledger.api.testtool.tests\n-\n-import java.time.Duration\n-\n-import com.daml.ledger.api.testtool.infrastructure.Allocation._\n-import com.daml.ledger.api.testtool.infrastructure.{LedgerSession, LedgerTestSuite}\n-\n-final class Time(session: LedgerSession) extends LedgerTestSuite(session) {\n-  test(\"PassTime\", \"Advancing time should return the new time\", allocate(NoParties)) {\n-    case Participants(Participant(ledger)) =>\n-      for {\n-        t1 <- ledger.time()\n-        _ <- ledger.passTime(Duration.ofSeconds(1))"
  },
  {
    "id" : "e0fadfe6-a2b7-4c9b-88cd-65c5de9da3e5",
    "prId" : 2282,
    "comments" : [
      {
        "id" : "703c4c02-de06-4df6-894b-34ea6f88d6c4",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "How does this test work for wall-clock time? Or is it missing a `skipIf`?",
        "createdAt" : "2019-08-07T07:28:17Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "873eabaf-eaed-40ca-978a-6e8046e775b3",
        "parentId" : "703c4c02-de06-4df6-894b-34ea6f88d6c4",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "It would throw. The problem is it's quite difficult to reliably detect if the time service is there. In the case of the DAML-on-X reference implementation, for example, the `TimeService` exists also on wall-clock time but it's not capable of doing time travel (which makes sense). So using `skipIf` would not work very reliably unless we signal the compliance with the `TimeService` via configuration/CLI, which could be effectively equivalent to simply specifying to include or exclude the `TimeIT` test. Would that be a feasible approach to the problem?",
        "createdAt" : "2019-08-07T08:41:05Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "57bf43bf-e718-48c1-b7e9-d7c1cc43215d",
        "parentId" : "703c4c02-de06-4df6-894b-34ea6f88d6c4",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "You can see an example of at the commit where I introduced running the conformance tests on the in-memory (https://github.com/digital-asset/daml/pull/2282/commits/9cec58d6d8ab8f83593307f394d3a5d813f8e4a7) and persistent sandbox (https://github.com/digital-asset/daml/pull/2282/commits/549e26411bd5e7dee2af74a7052c327666de2832).",
        "createdAt" : "2019-08-07T12:13:39Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "19d6a47e-10c0-4ad9-82ed-bea3fe6a432e",
        "parentId" : "703c4c02-de06-4df6-894b-34ea6f88d6c4",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Okay, then let's keep this test as optional and running that test should be a conscious opt-in.",
        "createdAt" : "2019-08-09T13:33:56Z",
        "updatedAt" : "2019-08-09T14:28:54Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c0ec2e9d435c3c835828ec8bb046a8d6fe9c4a32",
    "line" : 18,
    "diffHunk" : "@@ -0,0 +1,29 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.testtool.tests\n+\n+import java.time.Duration\n+\n+import com.daml.ledger.api.testtool.infrastructure.{LedgerSession, LedgerTest, LedgerTestSuite}\n+\n+import scala.concurrent.duration.DurationInt\n+\n+final class Time(session: LedgerSession) extends LedgerTestSuite(session) {\n+\n+  val pass =\n+    LedgerTest(\"Advancing time should return the new time\") { implicit context =>\n+      for {\n+        t1 <- time()\n+        _ <- passTime(1.second)"
  }
]