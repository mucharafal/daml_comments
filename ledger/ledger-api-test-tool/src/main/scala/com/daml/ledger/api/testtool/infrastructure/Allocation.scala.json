[
  {
    "id" : "20a33de1-1a7a-461b-97d9-abd04f287689",
    "prId" : 3401,
    "comments" : [
      {
        "id" : "2e418a7c-02c8-4e01-a82c-9f3253a1f631",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "If you make this constructor private and you make your own that takes a participant and then a vararg of participants you disallow empty `Participants` (which we probably want).",
        "createdAt" : "2019-11-08T12:32:00Z",
        "updatedAt" : "2019-11-08T13:04:38Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3e69b39a-9dda-4fb4-89bf-44bafea97527",
        "parentId" : "2e418a7c-02c8-4e01-a82c-9f3253a1f631",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "I made it private to the `infrastructure` package and changed `allocate` to take at least one element, which should provide the safety we're looking for.",
        "createdAt" : "2019-11-08T12:54:19Z",
        "updatedAt" : "2019-11-08T13:04:38Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "37ce8d9e6fc8e72458f839c417eaf6fa28b98de7",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,36 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.testtool.infrastructure\n+\n+import com.daml.ledger.api.testtool.infrastructure.participant.ParticipantTestContext\n+import com.digitalasset.ledger.client.binding.Primitive.Party\n+\n+private[testtool] object Allocation {\n+  def allocate(partyCounts: PartyCount*): ParticipantAllocation =\n+    ParticipantAllocation(partyCounts)\n+\n+  final case class ParticipantAllocation(partyCounts: Seq[PartyCount])\n+\n+  sealed trait PartyCount {\n+    val count: Int\n+  }\n+\n+  case object NoParties extends PartyCount {\n+    override val count = 0\n+  }\n+\n+  case object SingleParty extends PartyCount {\n+    override val count = 1\n+  }\n+\n+  case object TwoParties extends PartyCount {\n+    override val count = 2\n+  }\n+\n+  final case class Parties(override val count: Int) extends PartyCount\n+\n+  final case class Participants(participants: Participant*)"
  }
]