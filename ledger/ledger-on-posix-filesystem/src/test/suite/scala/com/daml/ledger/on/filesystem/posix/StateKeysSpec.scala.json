[
  {
    "id" : "f6c848ff-8010-4a86-a59a-97e46f3c4a5f",
    "prId" : 3933,
    "comments" : [
      {
        "id" : "1340592b-7910-40a8-ae62-defe4865fc30",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Nice Dickens reference ;)",
        "createdAt" : "2020-01-08T10:05:03Z",
        "updatedAt" : "2020-01-15T13:38:34Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a2e881199f655c2e74b34179de146b04e16081e2",
    "line" : 40,
    "diffHunk" : "@@ -0,0 +1,62 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.on.filesystem.posix\n+\n+import java.nio.file.Paths\n+\n+import com.daml.ledger.on.filesystem.posix.StateKeysSpec._\n+import com.daml.ledger.participant.state.kvutils.DamlKvutils.{\n+  DamlContractId,\n+  DamlLogEntryId,\n+  DamlStateKey\n+}\n+import com.google.protobuf.ByteString\n+import org.scalatest.{Matchers, WordSpec}\n+\n+class StateKeysSpec extends WordSpec with Matchers {\n+  private val root = Paths.get(\"this\", \"is\", \"the\", \"root\")\n+\n+  \"resolving a state key\" should {\n+    \"resolve a short key\" in {\n+      val resolved = StateKeys.resolveStateKey(root, stateKey(contractEntryId = \"Hello\"))\n+\n+      resolved should be(Paths.get(\"this\", \"is\", \"the\", \"root\", \"12090a070a0548656c6c6f\"))\n+    }\n+\n+    \"resolve a long key in multiple chunks\" in {\n+      val resolved = StateKeys.resolveStateKey(\n+        root,\n+        stateKey(contractEntryId =\n+          \"It was the best of times, it was the worst of times, it was the age of wisdom, it was the age of foolishness\"))"
  }
]