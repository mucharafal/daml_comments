[
  {
    "id" : "e0abb743-34cb-4455-a2ae-d44974b84ba7",
    "prId" : 7460,
    "comments" : [
      {
        "id" : "3b6c7dac-2cbc-4df2-8f69-fa01375e82b0",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "This requires a changelog entry.",
        "createdAt" : "2020-09-23T12:18:55Z",
        "updatedAt" : "2020-10-08T09:30:43Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2a2e8b5e-7c1c-43e3-9822-cce9e449d00b",
        "parentId" : "3b6c7dac-2cbc-4df2-8f69-fa01375e82b0",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "done.",
        "createdAt" : "2020-09-29T13:50:36Z",
        "updatedAt" : "2020-10-08T09:30:43Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0a4599bcbf38cacac4088b9b73021b01c997c440",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +118,122 @@          private val Prefix: MetricName = committer.Prefix :+ \"package_upload\"\n\n          val validateTimer: Timer = registry.timer(Prefix :+ \"validate_timer\")\n          val preloadTimer: Timer = registry.timer(Prefix :+ \"preload_timer\")\n          val decodeTimer: Timer = registry.timer(Prefix :+ \"decode_timer\")"
  },
  {
    "id" : "2166e29f-21c5-4056-bcd3-9131bb84bd0b",
    "prId" : 5927,
    "comments" : [
      {
        "id" : "b50cf56e-3b45-4910-93b2-57dc065e964c",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "The issue is great; I see no need for the comment.",
        "createdAt" : "2020-05-11T11:03:57Z",
        "updatedAt" : "2020-05-11T11:06:38Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8f61e6ea-232b-4456-aaed-bc6da7e959f8",
        "parentId" : "b50cf56e-3b45-4910-93b2-57dc065e964c",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "To make sure that people addressing the `FIXME` in this file are aware that there already is a ticket.",
        "createdAt" : "2020-05-11T11:08:57Z",
        "updatedAt" : "2020-05-11T11:08:57Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e23a0f7488d9ec6a8a0771473cb62cecccc568fd",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +245,249 @@      val publishConfiguration: Timer = registry.timer(prefix :+ \"publish_configuration\")\n\n      // FIXME Name mushing and inconsistencies here, tracked by https://github.com/digital-asset/daml/issues/5926\n      object db {\n"
  },
  {
    "id" : "bc088582-7366-4581-acad-db7184563bb1",
    "prId" : 5927,
    "comments" : [
      {
        "id" : "0a44b327-bf49-4dae-9604-bf6ef588ddb1",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "It'd be great if we could come up with an API that allows for overall tracking of deserialization too. For example, passing the deserializer to the `DbDispatcher` as an optional second parameter.",
        "createdAt" : "2020-05-11T11:05:54Z",
        "updatedAt" : "2020-05-11T11:06:38Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "27d96e06-875b-4745-9226-c8f7c789772a",
        "parentId" : "0a44b327-bf49-4dae-9604-bf6ef588ddb1",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I understand the point and I see the advantage, but this would require the `DbDispatcher` to be aware of the output and use deserialization in some non-dumb way. I'm afraid this would make `DbDispatcher` cover too many concerns. It sounds like probably we could do a better job at pulling apart `executeSql` in two parts (one that handles wait and the other that handles execution) and than we have a single place where we compose the two, possibly with the addition of deserization. I'll take this as an improvement for the future, thanks for raising this. :slightly_smiling_face: ",
        "createdAt" : "2020-05-11T11:12:28Z",
        "updatedAt" : "2020-05-11T11:12:28Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e23a0f7488d9ec6a8a0771473cb62cecccc568fd",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +278,282 @@          DatabaseMetrics(registry, prefix)(_)\n\n        private val overall = createDatabaseMetrics(\"all\")\n        val waitAll: Timer = overall.waitTimer\n        val execAll: Timer = overall.executionTimer"
  },
  {
    "id" : "dd652399-5095-43fc-b6fd-d20b5ab59717",
    "prId" : 5790,
    "comments" : [
      {
        "id" : "8bb1bafa-7558-496a-a81b-58eb016a8b45",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Please add an `apply` method to create a new instance for a `MetricRegistry`.",
        "createdAt" : "2020-05-05T08:28:18Z",
        "updatedAt" : "2020-05-06T10:18:00Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7234f1f69f87d95d1420a0faa8a6f2a70e0433f0",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +7,11 @@import com.codahale.metrics._\n\nclass Metrics(val registry: MetricRegistry) {\n\n  private def gauge[T](name: MetricName, metricSupplier: MetricSupplier[Gauge[_]]): Gauge[T] = {"
  },
  {
    "id" : "9c8372dd-c6e4-4054-8b30-72f2fb372d6d",
    "prId" : 5790,
    "comments" : [
      {
        "id" : "f96ddb14-a6e3-466f-b6fd-983cf6e8b3c1",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Wouldn't it make sense to use `MetricNaming` directly here to generate a method name? I.e., you wouldn't use this without a standardized metric name, right?",
        "createdAt" : "2020-05-05T08:35:10Z",
        "updatedAt" : "2020-05-06T10:18:01Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7234f1f69f87d95d1420a0faa8a6f2a70e0433f0",
    "line" : 177,
    "diffHunk" : "@@ -1,1 +175,179 @@      val prefix: MetricName = daml.prefix :+ \"lapi\"\n\n      def forMethod(name: String): Timer = registry.timer(prefix :+ name)\n\n    }"
  },
  {
    "id" : "6bd9bbbb-297d-4fda-be4a-ac47b8faa616",
    "prId" : 5790,
    "comments" : [
      {
        "id" : "016f9d54-a2e8-4767-a17f-4f2296d6cb34",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "```suggestion\r\n      }\r\n\r\n```",
        "createdAt" : "2020-05-05T09:52:39Z",
        "updatedAt" : "2020-05-05T10:04:58Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7234f1f69f87d95d1420a0faa8a6f2a70e0433f0",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +123,127 @@        val openEnvelope: Timer = registry.timer(prefix :+ \"open_envelope\")\n        val parseUpdates: Timer = registry.timer(prefix :+ \"parse_updates\")\n      }\n      object submission {\n        val prefix: MetricName = kvutils.prefix :+ \"submission\""
  },
  {
    "id" : "03c4abac-0353-4df1-b6d1-fbbc6008a350",
    "prId" : 5790,
    "comments" : [
      {
        "id" : "a938b292-6681-4163-8e37-183eabd27f96",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "These variables are constants hence should be named as `Prefix` according to the Scala style guide:\r\nhttps://docs.scala-lang.org/style/naming-conventions.html#constants-values-variable-and-methods",
        "createdAt" : "2020-05-05T15:27:24Z",
        "updatedAt" : "2020-05-06T10:18:01Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7234f1f69f87d95d1420a0faa8a6f2a70e0433f0",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@\n  object daml {\n    val prefix: MetricName = MetricName.DAML\n\n    object commands {"
  },
  {
    "id" : "f7603938-19ca-4be3-99e5-5ce7f1ee3997",
    "prId" : 5790,
    "comments" : [
      {
        "id" : "d5ad9639-a0af-4f14-8477-9130789565e6",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "The first time this object gets loaded all the metrics will be registered. Is this overhead acceptable?",
        "createdAt" : "2020-05-05T15:28:11Z",
        "updatedAt" : "2020-05-06T10:18:01Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7234f1f69f87d95d1420a0faa8a6f2a70e0433f0",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n"
  },
  {
    "id" : "fa534161-bef6-49c4-86fe-b1f90385170a",
    "prId" : 5790,
    "comments" : [
      {
        "id" : "19ede66d-e31e-47e4-9f06-d6ab0e710ff4",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Please use consistent formatting for these hierarchical companion objects (i.e., not leave a new line at the end of the object definition).",
        "createdAt" : "2020-05-05T15:28:48Z",
        "updatedAt" : "2020-05-06T10:18:01Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7234f1f69f87d95d1420a0faa8a6f2a70e0433f0",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@      val retry: Meter = registry.meter(prefix :+ \"retry\")\n      val total: Timer = registry.timer(prefix :+ \"total\")\n\n    }\n"
  }
]