[
  {
    "id" : "4b31b17e-60a3-4410-8162-d1f921c97c51",
    "prId" : 5027,
    "comments" : [
      {
        "id" : "21ccc67a-56de-4188-b97c-ec60703e310a",
        "parentId" : null,
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "we are already using `scalaz.tag` in scala bindings, so I think `OneAnd` is appropriate here. There is no reason to call this method with an empty set. If you want all known parties, use `listKnownParties`.",
        "createdAt" : "2020-03-16T15:56:26Z",
        "updatedAt" : "2020-03-16T19:32:04Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d3fc12fb-828c-4192-b553-8cf02ce339af",
        "parentId" : "21ccc67a-56de-4188-b97c-ec60703e310a",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "However there are a bunch of other cases in scala bindings where `OneAnd[Set, X]` could have been used or just `Set`... so if you want to keep scala bindings consistent, let me know and I will remove `OneAnd` from the interface.",
        "createdAt" : "2020-03-16T16:00:23Z",
        "updatedAt" : "2020-03-16T19:32:04Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a37898d131259eede23b4eb7294eb643e0806282",
    "line" : 30,
    "diffHunk" : "@@ -46,6 +50,14 @@ final class PartyManagementClient(service: PartyManagementServiceStub)(\n       .listKnownParties(PartyManagementClient.listKnownPartiesRequest)\n       .map(_.partyDetails.map(PartyManagementClient.details)(collection.breakOut))\n \n+  def getParties(\n+      parties: OneAnd[Set, Ref.Party],"
  },
  {
    "id" : "f86935f7-3b08-4503-b8fe-71121fb5c623",
    "prId" : 5027,
    "comments" : [
      {
        "id" : "ff847e56-3c1d-4189-81a5-7cc9332dcea1",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n  private def getPartiesRequest(parties: OneAnd[Set, Ref.Party]) = {\r\n    import scalaz.std.iterable._ // I was serious when I said *only locally*\r\n    GetPartiesRequest(parties.toList)\r\n  }\r\n```",
        "createdAt" : "2020-03-16T17:08:09Z",
        "updatedAt" : "2020-03-16T19:32:04Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a37898d131259eede23b4eb7294eb643e0806282",
    "line" : null,
    "diffHunk" : "@@ -29,6 +31,8 @@ object PartyManagementClient {\n \n   private val listKnownPartiesRequest = ListKnownPartiesRequest()\n \n+  private def getPartiesRequest(parties: OneAnd[Set, Ref.Party]) =\n+    GetPartiesRequest(parties.head :: parties.tail.toList)"
  },
  {
    "id" : "47ab7c08-7b96-4e66-a0e9-d31bd307cdf4",
    "prId" : 1452,
    "comments" : [
      {
        "id" : "09881c86-a263-4e50-8d5d-19c45f40d85b",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "We currently use `String` for all party fields (e.g. [`CommandClient`](https://github.com/digital-asset/daml/blob/ff088efd94cffc523e56219bf7978251b0c617c5/ledger/ledger-api-client/src/main/scala/com/digitalasset/ledger/client/services/commands/CommandClient.scala#L102)), and I think we should stick with it.",
        "createdAt" : "2019-06-07T10:46:46Z",
        "updatedAt" : "2019-06-07T21:22:35Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ea1c0de7-d520-4580-90b8-eee73c3fd661",
        "parentId" : "09881c86-a263-4e50-8d5d-19c45f40d85b",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Other clients like `TransactionClient` and `CommandClient` are defined in terms of the scalapb generated case classes.",
        "createdAt" : "2019-06-07T10:51:15Z",
        "updatedAt" : "2019-06-07T21:22:35Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a8c0cb27-c25b-43b4-a0c2-17e6b25b839c",
        "parentId" : "09881c86-a263-4e50-8d5d-19c45f40d85b",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "I see. I defined the `PartyManagementClient` in terms of `com.digitalasset.ledger.api.domain` types, I will change it to use the generated scalapb types.\r\n\r\nBy the way, if we don't want to use domain types, should we not change all usages `com.digitalasset.ledger.api.domain.LedgerId` to `String`?",
        "createdAt" : "2019-06-07T12:36:31Z",
        "updatedAt" : "2019-06-07T21:22:35Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2d463eb0-9f5a-4935-b782-2a270261a649",
        "parentId" : "09881c86-a263-4e50-8d5d-19c45f40d85b",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Yes, that's a fair point. Also, this should really be @leo-da's and @S11001001's call.",
        "createdAt" : "2019-06-07T13:11:14Z",
        "updatedAt" : "2019-06-07T21:22:35Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ac231da7-7942-4110-9881-2df6b1e463c7",
        "parentId" : "09881c86-a263-4e50-8d5d-19c45f40d85b",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "`Ref.Party` is extremely convenient to use; if it is the intended meaning you should use it, because it is just a `String` where we've checked that only legal Party characters have been used.\r\n\r\nI don't consider our use of `String` for Party in any Scala code to be principled, just that the good work that @remyhaemmerle-da has done tightening up the String subtypes in Engine and elsewhere hasn't propagated here yet. Therefore you should not feel obliged to be consistent with such prior uses of `String`; in fact I would prefer that you not.\r\n\r\nAs for domain types in general, @leo-da and I intend to push the Scala ecosystem _away_ from expressing _anything_ in terms of scalapb types, just as the Engine deals with values and transactions in terms of the `daml-lf/transaction` hand-written ADTs instead of the protoc output. In particular, we very much intend to universally remove the scalapb `Identifier`, and the transitive closure of all scalapb types that use it. So take that prejudice as you will.\r\n\r\nIn this case it seems preferable to use the domain types instead of scalapb as @rautenrieth-da has done. But _notwithstanding the above_ you may consider whether to use `Ref.Party` and whether to also use other domain types separately.",
        "createdAt" : "2019-06-07T19:05:06Z",
        "updatedAt" : "2019-06-07T21:22:35Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e2386a75-bdc2-4ab1-bb6c-0625015eb8db",
        "parentId" : "09881c86-a263-4e50-8d5d-19c45f40d85b",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Thanks for the explanation and outlook, @S11001001 👍 ",
        "createdAt" : "2019-06-08T08:59:59Z",
        "updatedAt" : "2019-06-08T08:59:59Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "21be6910a5debd0672b0db0815d8993c33b21e53",
    "line" : 6,
    "diffHunk" : "@@ -0,0 +1,43 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.ledger.client.services.admin\n+\n+import com.digitalasset.daml.lf.data.Ref.Party"
  }
]