[
  {
    "id" : "7659ac26-9c9b-493b-b88f-b5fbec51df58",
    "prId" : 5100,
    "comments" : [
      {
        "id" : "e2c831c5-0eb5-4c41-881a-ec2053634e79",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Why does this have to be a `java.time.Duration` instead of e.g. `scala.concurrent.duration.Duration`?",
        "createdAt" : "2020-03-25T11:08:10Z",
        "updatedAt" : "2020-03-25T11:28:28Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "99f9843c-63d4-40a8-9343-3e5810dfd395",
        "parentId" : "e2c831c5-0eb5-4c41-881a-ec2053634e79",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "We generally use `java.time.Instant` in our codebase. `java.time.Duration` works better with it.",
        "createdAt" : "2020-03-25T12:45:14Z",
        "updatedAt" : "2020-03-25T12:45:14Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d421ae1a437d89063df1c3e40078f52885762eaf",
    "line" : 14,
    "diffHunk" : "@@ -38,12 +40,14 @@ object CommandTrackerFlow {\n         SubmissionMat],\n       createCommandCompletionSource: LedgerOffset => Source[CompletionStreamElement, NotUsed],\n       startingOffset: LedgerOffset,\n-      backOffDuration: FiniteDuration = 1.second): Flow[\n+      maxDeduplicationTime: () => JDuration,"
  }
]