[
  {
    "id" : "1e349ef5-99df-47ef-8823-b6e2a814489b",
    "prId" : 3403,
    "comments" : [
      {
        "id" : "ae8a32b0-f2cf-48cf-8716-55744f3f13d3",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Do you think the \"global token\" in the config is sufficiently \"broken\" to better not have it at all?",
        "createdAt" : "2019-11-11T10:01:30Z",
        "updatedAt" : "2019-11-11T13:22:51Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "be9e4f6f-ec5a-4714-a2a4-72cfad4dafb8",
        "parentId" : "ae8a32b0-f2cf-48cf-8716-55744f3f13d3",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "It's not necessary to have it, you can simply build a `Channel`, add credentials to it and pass it in. That's how I made `AuthorizationIT` work without appending credentials to each call. :slightly_smiling_face: The next contribution in this Yak shaving sequence will make the approach a bit more idiomatic using the client (by allowing to pass in a pre-configured builder).",
        "createdAt" : "2019-11-11T10:14:29Z",
        "updatedAt" : "2019-11-11T13:22:51Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1f0a7a11-9060-4799-bb36-fe76ee9cad25",
        "parentId" : "ae8a32b0-f2cf-48cf-8716-55744f3f13d3",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "But there the `CallCredentials` are also not attached to the channel, but to the stub, recreating the `LedgerContext` that now contains stubs initialized with those call credentials.",
        "createdAt" : "2019-11-11T10:29:59Z",
        "updatedAt" : "2019-11-11T13:22:51Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6ac14f56ff46eebe77ac114486a8fbe5e7116fc0",
    "line" : 161,
    "diffHunk" : "@@ -1,1 +130,134 @@      esf: ExecutionSequencerFactory): Future[LedgerClient] =\n    apply(\n      LedgerIdentityServiceGrpc.stub(channel),\n      TransactionServiceGrpc.stub(channel),\n      ActiveContractsServiceGrpc.stub(channel),"
  },
  {
    "id" : "227533f2-f631-492c-b651-d7425a8b57ed",
    "prId" : 3138,
    "comments" : [
      {
        "id" : "2f805ed0-8943-4568-810c-0d4a9c2aaf7b",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "I assume `.withCallCredentials(null)` is a no-op?",
        "createdAt" : "2019-10-09T10:01:59Z",
        "updatedAt" : "2019-10-18T13:12:04Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b90eaee9-bf76-485e-9362-dd6fbae10105",
        "parentId" : "2f805ed0-8943-4568-810c-0d4a9c2aaf7b",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "It explicitly sets the `CallCredentials` to be `null`, so that they are not used.",
        "createdAt" : "2019-10-09T11:17:03Z",
        "updatedAt" : "2019-10-18T13:12:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "bb3817c9a66c72de085b1959aae0ac7ddc5f7a3d",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +128,132 @@    val creds = configuration.accessToken.map(callCredentials).orNull\n    apply(\n      LedgerIdentityServiceGrpc.stub(channel).withCallCredentials(creds),\n      TransactionServiceGrpc.stub(channel).withCallCredentials(creds),\n      ActiveContractsServiceGrpc.stub(channel).withCallCredentials(creds),"
  },
  {
    "id" : "03b820af-ff27-40d0-8412-1a10d2cd7879",
    "prId" : 3138,
    "comments" : [
      {
        "id" : "bebdd72d-5964-488e-9bd4-4b7f11566cf8",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Maybe add a comment that this uses the `Authentication: Bearer` schema.\r\n\r\nOr (which I would prefer), allow the caller to specify the schema. We known that the \"sandbox JWT\" authentication will use `Bearer`, but other `AuthService` implementations might use [other schemes](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication#Authentication_schemes).",
        "createdAt" : "2019-10-18T08:48:29Z",
        "updatedAt" : "2019-10-18T13:12:04Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3a4326b3-0610-44e6-af90-12ade5365e2c",
        "parentId" : "bebdd72d-5964-488e-9bd4-4b7f11566cf8",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I'll make the `Bearer` part optional.",
        "createdAt" : "2019-10-18T09:42:12Z",
        "updatedAt" : "2019-10-18T13:12:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8368061a-cb29-4db0-9f22-94b337da3e76",
        "parentId" : "bebdd72d-5964-488e-9bd4-4b7f11566cf8",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/3138/commits/827472c54d38756f8d14b02b0b7640fd5ad6b3cd",
        "createdAt" : "2019-10-18T11:33:24Z",
        "updatedAt" : "2019-10-18T13:12:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "bb3817c9a66c72de085b1959aae0ac7ddc5f7a3d",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +108,112 @@  private[this] val auth = Metadata.Key.of(\"Authorization\", Metadata.ASCII_STRING_MARSHALLER)\n\n  def callCredentials(token: String): CallCredentials =\n    new CallCredentials {\n      override def applyRequestMetadata("
  }
]