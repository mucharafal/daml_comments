[
  {
    "id" : "64207aed-ef89-4f9a-8d2d-0d2601cbbf0a",
    "prId" : 7678,
    "comments" : [
      {
        "id" : "117d611e-ed2f-48d7-9db2-9a3287037718",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Should we have our own `AsyncWordSpec` that uses the `ResourceContext`? Having two implicit contexts in the mix seems like a recipe for trouble.",
        "createdAt" : "2020-10-14T12:19:07Z",
        "updatedAt" : "2020-10-19T09:32:37Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "acf85c93-b05f-4bf9-991d-8010b0ce8d69",
        "parentId" : "117d611e-ed2f-48d7-9db2-9a3287037718",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I could add a helper trait: `with SpecResourceContext` or something.",
        "createdAt" : "2020-10-14T12:38:32Z",
        "updatedAt" : "2020-10-19T09:32:37Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "674bae11cc5a88ac1ab207b4a337c1c39eb07a5a",
    "line" : null,
    "diffHunk" : "@@ -11,16 +11,18 @@ import com.daml.ledger.client.configuration.{\n   LedgerClientConfiguration,\n   LedgerIdRequirement\n }\n+import com.daml.ledger.resources.{ResourceContext, ResourceOwner}\n import com.daml.metrics.Metrics\n import com.daml.platform.apiserver.GrpcServerSpec._\n import com.daml.platform.hello.{HelloRequest, HelloServiceGrpc}\n import com.daml.ports.Port\n-import com.daml.resources.ResourceOwner\n import com.google.protobuf.ByteString\n import io.grpc.ManagedChannel\n import org.scalatest.{AsyncWordSpec, Matchers}\n \n final class GrpcServerSpec extends AsyncWordSpec with Matchers {\n+  private implicit val resourceContext: ResourceContext = ResourceContext(executionContext)"
  }
]