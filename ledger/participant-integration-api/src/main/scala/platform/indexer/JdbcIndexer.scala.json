[
  {
    "id" : "d9532907-6455-4324-a60d-d2d48ab99e95",
    "prId" : 7678,
    "comments" : [
      {
        "id" : "b0d9f59e-2654-4729-98f9-605b305db0a2",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "There's inconsistency in how you name your implicit resource contexts. I would recommend sticking to the naming you used here (`resourceContext`), since we also have other contexts we pass around.",
        "createdAt" : "2020-10-14T12:13:16Z",
        "updatedAt" : "2020-10-19T09:32:37Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "728b2deb-2e6c-44e3-a46e-8530be2d95e8",
        "parentId" : "b0d9f59e-2654-4729-98f9-605b305db0a2",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I tried to keep it as `resourceContext` except when it's the implicit parameter of a `ResourceOwner#acquire`, in which case it's `context`. Is this too confusing?",
        "createdAt" : "2020-10-14T12:36:11Z",
        "updatedAt" : "2020-10-19T09:32:37Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "674bae11cc5a88ac1ab207b4a337c1c39eb07a5a",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +119,123 @@    private def initOrCheckParticipantId(\n        dao: LedgerDao,\n    )(implicit resourceContext: ResourceContext): Future[Unit] = {\n      val id = ParticipantId(Ref.ParticipantId.assertFromString(config.participantId))\n      dao"
  }
]