[
  {
    "id" : "47d01338-5061-486d-a62b-871538f8d8d8",
    "prId" : 6807,
    "comments" : [
      {
        "id" : "0f4d9db4-4df9-4672-831e-a20fea9f4dfa",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n    if (s != null && s.length > maximumDescriptionLength)\r\n      s.substring(0, maximumDescriptionLength - 3) + \"...\"\r\n    else\r\n      s\r\n```\r\nSeems simpler, feel free to drop if we have some linting check that prevents us from doing it.",
        "createdAt" : "2020-07-21T12:16:48Z",
        "updatedAt" : "2020-07-21T14:03:15Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "88c44b408b84304c6c351cb63fbcd5c5a400375d",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,34 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.platform.apiserver\n+\n+import io.grpc.ForwardingServerCall.SimpleForwardingServerCall\n+import io.grpc.{Metadata, ServerCall, ServerCallHandler, ServerInterceptor, Status}\n+\n+class TruncatedStatusInterceptor(maximumDescriptionLength: Int) extends ServerInterceptor {\n+  override def interceptCall[ReqT, RespT](\n+      call: ServerCall[ReqT, RespT],\n+      headers: Metadata,\n+      next: ServerCallHandler[ReqT, RespT],\n+  ): ServerCall.Listener[ReqT] =\n+    next.startCall(\n+      new SimpleForwardingServerCall[ReqT, RespT](call) {\n+        override def close(status: Status, trailers: Metadata): Unit = {\n+          val truncatedStatus = status.withDescription(truncate(status.getDescription))\n+          super.close(truncatedStatus, trailers)\n+        }\n+      },\n+      headers,\n+    )\n+\n+  private def truncate(description: String): String =\n+    Option(description)\n+      .map(\n+        s =>\n+          if (s.length > maximumDescriptionLength)\n+            s.substring(0, maximumDescriptionLength - 3) + \"...\"\n+          else\n+          s)\n+      .orNull"
  }
]