[
  {
    "id" : "2987a97f-cde6-4ffa-84dc-025301f1c087",
    "prId" : 6924,
    "comments" : [
      {
        "id" : "51f13703-796d-49cd-9352-a528a2c52c87",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Use `newLoggingContext` and add a ticket to evaluate adding correlation identifiers for this kind of calls. This applies to this endpoint (ledger identity) and the configuration one (so far).",
        "createdAt" : "2020-07-31T09:50:51Z",
        "updatedAt" : "2020-07-31T11:58:54Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "caaef889-fd48-48ae-97bd-d2e8cd1e1d33",
        "parentId" : "51f13703-796d-49cd-9352-a528a2c52c87",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/6924/commits/4e0ae1eb9813c4715907b6d6d0ed1e6c0e99abad",
        "createdAt" : "2020-07-31T12:04:28Z",
        "updatedAt" : "2020-07-31T12:04:28Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "865574590cb0a7ba8a61b4b5c4f66bdee74d6153",
    "line" : null,
    "diffHunk" : "@@ -31,17 +32,19 @@ private[apiserver] final class ApiLedgerIdentityService private (\n   private val logger = ContextualizedLogger.get(this.getClass)\n \n   override def getLedgerIdentity(\n-      request: GetLedgerIdentityRequest): Future[GetLedgerIdentityResponse] =\n+      request: GetLedgerIdentityRequest,\n+  ): Future[GetLedgerIdentityResponse] =\n     if (closed)\n       Future.failed(\n         new ApiException(\n           Status.UNAVAILABLE\n             .withDescription(\"Ledger Identity Service closed.\")))\n-    else {\n-      getLedgerId()\n-        .map(ledgerId => GetLedgerIdentityResponse(ledgerId.unwrap))(DirectExecutionContext)\n-        .andThen(logger.logErrorsOnCall[GetLedgerIdentityResponse])(DirectExecutionContext)\n-    }\n+    else\n+      withEnrichedLoggingContext(Map.empty[String, String]) { implicit loggingContext =>"
  }
]