[
  {
    "id" : "2fd013fd-2cea-466a-a49a-2be1faa6f967",
    "prId" : 1735,
    "comments" : [
      {
        "id" : "41a28db4-0aed-450b-9e3f-4edd1a29837a",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "The leading `-` needs to be removed now from all command IDs.",
        "createdAt" : "2019-06-24T09:33:57Z",
        "updatedAt" : "2019-06-28T09:53:27Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "23b99405-d535-4f48-ae3c-ce7f6322a4da",
        "parentId" : "41a28db4-0aed-450b-9e3f-4edd1a29837a",
        "author" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "body" : "Done",
        "createdAt" : "2019-06-27T08:59:38Z",
        "updatedAt" : "2019-06-28T09:53:27Z",
        "lastEditedBy" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "39a700899f82152050b7fa0321dcab5d2ee35bf6",
    "line" : null,
    "diffHunk" : "@@ -324,7 +319,7 @@ class TransactionServiceIT\n       \"expose transactions to non-submitting stakeholders without the commandId\" in allFixtures {\n         c =>\n           c.submitCreateAndReturnTransaction(\n-              s\"Checking_commandId_visibility_for_non-submitter_party-${runSuffix}\",\n+              s\"Checking_commandId_visibility_for_non-submitter_party-${runCommandSuffix}\","
  },
  {
    "id" : "d03b37fd-9c95-4df2-b8d9-e9f627457290",
    "prId" : 1586,
    "comments" : [
      {
        "id" : "b148592d-6093-49f6-b8d3-5a85af84a150",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n      \"not expose the contract key in CreatedEvents for templates that do not have them\" in allFixtures {\r\n```",
        "createdAt" : "2019-06-12T18:58:50Z",
        "updatedAt" : "2019-06-14T16:11:37Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "20b0f1885b012a4746444d093ee4c22d94978e27",
    "line" : null,
    "diffHunk" : "@@ -695,6 +687,45 @@ class TransactionServiceIT\n           resultF.map(_.agreementText shouldBe Some(\"\"))\n       }\n \n+      \"do not expose the contract key in CreatedEvents for templates that do not have them\" in allFixtures {"
  },
  {
    "id" : "f7b9ba50-c152-4e00-9bad-a38f9c2654ec",
    "prId" : 1586,
    "comments" : [
      {
        "id" : "1c4ba450-c1ae-4361-90d1-61de6a0072b0",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n          val List(operator, receiver @ _, giver) = List(party1, party2, party3)\r\n```",
        "createdAt" : "2019-06-12T19:14:51Z",
        "updatedAt" : "2019-06-14T16:11:37Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "99481802-af0b-415f-a4ee-1451e7e7b89a",
        "parentId" : "1c4ba450-c1ae-4361-90d1-61de6a0072b0",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I'll gladly fix this but can you explain why?",
        "createdAt" : "2019-06-13T08:05:28Z",
        "updatedAt" : "2019-06-14T16:11:37Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "20b0f1885b012a4746444d093ee4c22d94978e27",
    "line" : null,
    "diffHunk" : "@@ -725,7 +756,7 @@ class TransactionServiceIT\n \n       \"accept exercising a well-authorized multi-actor choice with coinciding controllers\" in allFixtures {\n         c =>\n-          val List(operator, receiver, giver) = List(party1, party2, party3)\n+          val List(operator, _, giver) = List(party1, party2, party3)"
  },
  {
    "id" : "64e53516-7047-4077-9c98-4cf635f1d54b",
    "prId" : 1586,
    "comments" : [
      {
        "id" : "1c4772a4-6fe5-4f2c-a02a-de65cd1f9281",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Please add the `runSuffix` to the commandId, so this test can run multiple times on the same running ledger. Example: https://github.com/digital-asset/daml/blob/33bb02ec24e7c76cbf49a747562e6628a9137a99/ledger/ledger-api-integration-tests/src/test/itsuite/scala/com/digitalasset/platform/tests/integration/ledger/api/TransactionServiceIT.scala#L328",
        "createdAt" : "2019-06-13T07:11:51Z",
        "updatedAt" : "2019-06-14T16:11:37Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b905cb26-a98a-499f-82de-11f28a426e01",
        "parentId" : "1c4772a4-6fe5-4f2c-a02a-de65cd1f9281",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/1586/commits/f8650fb934fa36936a8a97940befe95ecd600839",
        "createdAt" : "2019-06-13T08:36:50Z",
        "updatedAt" : "2019-06-14T16:11:37Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "20b0f1885b012a4746444d093ee4c22d94978e27",
    "line" : null,
    "diffHunk" : "@@ -695,6 +687,45 @@ class TransactionServiceIT\n           resultF.map(_.agreementText shouldBe Some(\"\"))\n       }\n \n+      \"do not expose the contract key in CreatedEvents for templates that do not have them\" in allFixtures {\n+        c =>\n+          val resultF = c.submitCreate(\n+            \"Creating_CallablePayout_contract_for_contract_key_test\","
  },
  {
    "id" : "59396912-7376-4254-b83a-07c41ace256b",
    "prId" : 1586,
    "comments" : [
      {
        "id" : "2f2c4354-9184-4b87-bb88-16a866839fbf",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Please add the `runSuffix` to the commandId, so this test can run multiple times on the same running ledger. Example: https://github.com/digital-asset/daml/blob/33bb02ec24e7c76cbf49a747562e6628a9137a99/ledger/ledger-api-integration-tests/src/test/itsuite/scala/com/digitalasset/platform/tests/integration/ledger/api/TransactionServiceIT.scala#L328",
        "createdAt" : "2019-06-13T07:12:05Z",
        "updatedAt" : "2019-06-14T16:11:37Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7a591e1a-03dc-4a2d-8ea1-ae58ca2d3208",
        "parentId" : "2f2c4354-9184-4b87-bb88-16a866839fbf",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/1586/commits/f8650fb934fa36936a8a97940befe95ecd600839",
        "createdAt" : "2019-06-13T08:36:56Z",
        "updatedAt" : "2019-06-14T16:11:37Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "20b0f1885b012a4746444d093ee4c22d94978e27",
    "line" : null,
    "diffHunk" : "@@ -695,6 +687,45 @@ class TransactionServiceIT\n           resultF.map(_.agreementText shouldBe Some(\"\"))\n       }\n \n+      \"do not expose the contract key in CreatedEvents for templates that do not have them\" in allFixtures {\n+        c =>\n+          val resultF = c.submitCreate(\n+            \"Creating_CallablePayout_contract_for_contract_key_test\",\n+            templateIds.callablePayout,\n+            List(\n+              RecordField(\"giver\", party1.asParty),\n+              RecordField(\"receiver\", party2.asParty)\n+            ),\n+            party1\n+          )\n+\n+          resultF.map(_.contractKey shouldBe None)\n+      }\n+\n+      \"expose the contract key in CreatedEvents for templates that have them\" in allFixtures { c =>\n+        val resultF = c.submitCreate(\n+          \"Creating_TextKey_contract_for_contract_key_test\","
  },
  {
    "id" : "80b56879-f22a-488c-ad49-f0b443ba94f1",
    "prId" : 1434,
    "comments" : [
      {
        "id" : "8becbbb5-e186-46c3-a555-2af8594cdfb7",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "these utilities code go into a test helper library as we will need them in other places too I suppose.",
        "createdAt" : "2019-05-29T07:29:45Z",
        "updatedAt" : "2019-06-06T11:04:18Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "cca8d0b7a85789e1d998980512199715f3dba9e7",
    "line" : 57,
    "diffHunk" : "@@ -65,19 +68,29 @@ class TransactionServiceIT\n     with Inside\n     with AsyncTimeLimitedTests\n     with TestExecutionSequencerFactory\n-    with TransactionServiceHelpers\n     with ParameterShowcaseTesting\n     with OptionValues\n-    with Matchers\n-    with TestTemplateIds {\n+    with Matchers {\n \n-  override protected val config: Config =\n+  override protected def config: Config =\n     Config.default.withTimeProvider(TimeProviderType.WallClock)\n \n+  protected val helpers = new TransactionServiceHelpers(config)\n+  protected val testTemplateIds = new TestTemplateIds(config)\n+  protected val templateIds = testTemplateIds.templateIds\n+\n+  val runSuffix = \"-\" + Random.alphanumeric.take(10).mkString"
  },
  {
    "id" : "e4ef8e14-974f-4d22-977e-0a378a3f82a0",
    "prId" : 1257,
    "comments" : [
      {
        "id" : "501a406b-93a6-4d01-ae10-2d30b2fa0e37",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "👍 ",
        "createdAt" : "2019-05-20T15:50:28Z",
        "updatedAt" : "2019-05-21T10:43:55Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "447c93febd5aa6b85f2786b242a69b3b30cc6e68",
    "line" : 9,
    "diffHunk" : "@@ -145,11 +145,15 @@ class TransactionServiceIT\n           }\n       }\n \n-      \"respond with empty stream if TransactionFilter is empty\" in allFixtures { context =>\n-        context.transactionClient\n-          .getTransactions(ledgerBegin, None, TransactionFilter())\n-          .runWith(Sink.seq)\n-          .map(_ shouldBe empty)\n+      \"return INVALID_ARGUMENT if TransactionFilter is empty\" in allFixtures { context =>"
  },
  {
    "id" : "a4210496-ca06-472b-a66c-b35d0e1185d8",
    "prId" : 1151,
    "comments" : [
      {
        "id" : "28b6e4fb-1a60-487e-9b78-787b9490d060",
        "parentId" : null,
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "```suggestion\r\n      \"expose the default agreement text in CreatedEvents for templates with no explicit agreement text\" in allFixtures {\r\n```",
        "createdAt" : "2019-05-16T07:36:05Z",
        "updatedAt" : "2019-05-17T06:35:00Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "cf949635-afcc-4873-9e6a-cce8eca6b000",
        "parentId" : "28b6e4fb-1a60-487e-9b78-787b9490d060",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Yikes, thank you.",
        "createdAt" : "2019-05-16T07:39:53Z",
        "updatedAt" : "2019-05-17T06:35:00Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "fa40588773325065a44dc4d703aec04bc19f0c20",
    "line" : null,
    "diffHunk" : "@@ -656,6 +656,28 @@ class TransactionServiceIT\n           .map(_.getCreateArguments.fields shouldEqual expectedArgs)\n       }\n \n+      \"expose the agreement text in CreatedEvents for templates with an explicit agreement text\" in allFixtures {\n+        c =>\n+          for {\n+            agreement <- createAgreement(c, \"AgreementTextTest\", party1, party2)\n+          } yield {\n+            agreement.agreementText should matchPattern {\n+              case Some(text: String) if text.nonEmpty =>\n+            }\n+          }\n+      }\n+\n+      \"expose the defualt agreement text in CreatedEvents for templates with no explicit agreement text\" in allFixtures {"
  },
  {
    "id" : "af8fade6-92b3-4d87-bb48-4399becedcf3",
    "prId" : 1151,
    "comments" : [
      {
        "id" : "4f9de15f-b46b-4178-af3f-5c676180dfef",
        "parentId" : null,
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "please match on the text as discussed",
        "createdAt" : "2019-05-16T07:43:47Z",
        "updatedAt" : "2019-05-17T06:35:00Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2169ba7a-2cb6-424d-854e-ea493e03b2a8",
        "parentId" : "4f9de15f-b46b-4178-af3f-5c676180dfef",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Done.",
        "createdAt" : "2019-05-16T08:24:00Z",
        "updatedAt" : "2019-05-17T06:35:00Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "fa40588773325065a44dc4d703aec04bc19f0c20",
    "line" : null,
    "diffHunk" : "@@ -656,6 +656,28 @@ class TransactionServiceIT\n           .map(_.getCreateArguments.fields shouldEqual expectedArgs)\n       }\n \n+      \"expose the agreement text in CreatedEvents for templates with an explicit agreement text\" in allFixtures {\n+        c =>\n+          for {\n+            agreement <- createAgreement(c, \"AgreementTextTest\", party1, party2)\n+          } yield {\n+            agreement.agreementText should matchPattern {\n+              case Some(text: String) if text.nonEmpty =>"
  }
]