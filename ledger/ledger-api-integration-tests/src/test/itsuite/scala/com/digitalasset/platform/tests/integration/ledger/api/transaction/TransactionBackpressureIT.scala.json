[
  {
    "id" : "540682b9-eed1-4c8c-8adc-6f59ea49fea9",
    "prId" : 392,
    "comments" : [
      {
        "id" : "78aba039-336c-4e7b-83f7-c9c91b054cc8",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Why does not now need a throttle?",
        "createdAt" : "2019-04-12T10:18:21Z",
        "updatedAt" : "2019-04-12T10:18:21Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f37a3936-726d-43b4-81bc-9812a0ccd699",
        "parentId" : "78aba039-336c-4e7b-83f7-c9c91b054cc8",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "we need it because otherwise back-pressure kicks in when submitting (SQL is slower than in-memory). I either do exponential backoff of throttle the stream to not overload. Latter was easier here as it's a test.",
        "createdAt" : "2019-04-12T10:24:47Z",
        "updatedAt" : "2019-04-12T10:24:47Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5afb4c5bcf2610fa9fe9160754f5eaebbed40d2b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +57,61 @@      def sendCommands() =\n        Source(1 to noOfCommands)\n          .throttle(10, 1.second)\n          .mapAsync(10)(i =>\n            commandClient.submitSingleCommand(oneKbCommandRequest(ctx.ledgerId, s\"command-$i\")))"
  }
]