[
  {
    "id" : "7f7a7dfc-a0b2-4979-b58b-72cdc5cbdefb",
    "prId" : 1967,
    "comments" : [
      {
        "id" : "9e23464f-c880-43ac-8ccf-6045f6cf57c3",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "`LanguageVersion.Major` is a synonym for `LanguageMajorVersion`, and similar for Minor, which you may or may not wish to use as an alternative shortcut. (I'm not particularly attached to any style besides \"don't be shy about renaming imports just because they're not in Java\")",
        "createdAt" : "2019-07-02T13:16:28Z",
        "updatedAt" : "2019-07-05T08:39:36Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5ab26f081f43a184ed21982c7e26995630d1f49e",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +48,52 @@  LanguageVersion,\n  LanguageMajorVersion => LMajV,\n  LanguageMinorVersion => LMinV\n}\nimport com.digitalasset.daml.lf.transaction.VersionTimeline"
  },
  {
    "id" : "43a846dd-79c2-4610-a646-8705c0288113",
    "prId" : 405,
    "comments" : [
      {
        "id" : "b4731451-46ae-47a9-96a5-40490f69cdad",
        "parentId" : null,
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "`cid` is a bad name... Can be Contract ID or Command ID, but I guess it is Command ID in this case:\r\n```\r\nprivate def cid(commandId: String) = s\"$commandId\"\r\n```\r\n",
        "createdAt" : "2019-04-19T14:49:55Z",
        "updatedAt" : "2019-04-19T14:49:55Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1a29f3a0-154c-43c9-8603-4a0b56be0053",
        "parentId" : "b4731451-46ae-47a9-96a5-40490f69cdad",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "This function precedes this PR; do you want me to rename it?",
        "createdAt" : "2019-04-19T15:37:03Z",
        "updatedAt" : "2019-04-19T15:37:03Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "38ab46d8b26e1e46a78717ee7131e4cc857bc971",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +434,438 @@        val delegatedCreate = simpleCreate(\n          ctx,\n          cid(\"SDVl3\"),\n          owner,\n          templateIds.delegated,"
  },
  {
    "id" : "ebb5eb73-0682-44f5-a4ae-dde82a8e9ce8",
    "prId" : 405,
    "comments" : [
      {
        "id" : "d0f31abf-f47e-48f0-857e-4a797f7e91a8",
        "parentId" : null,
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "The test case is `permit fetching a divulged contract` why are we testing for failures here (`// Exercise a choice that is supposed to fail.`)? Is that because the `owner` delegated it to the `delegate`? Should not we test that the `delegate` can anctually exercise `ShowIt`?\r\n",
        "createdAt" : "2019-04-19T15:02:32Z",
        "updatedAt" : "2019-04-19T15:06:06Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0a7d32c7-72e4-48c3-aa17-d3aa21a981f2",
        "parentId" : "d0f31abf-f47e-48f0-857e-4a797f7e91a8",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "We're testing that the result is `Code.OK`; see a few lines below.",
        "createdAt" : "2019-04-19T15:10:20Z",
        "updatedAt" : "2019-04-19T15:10:20Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f04ec3de-4bf2-4f64-bbd3-90864cbd2612",
        "parentId" : "d0f31abf-f47e-48f0-857e-4a797f7e91a8",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "I mean it is hard to understand what is being tested here. `failingExercise` with `Code.OK`... does it meant that the exercise actually was successful?\r\n\r\nI mean this is the original owner says `ShowIt` and it is successfull, right? Because it is `Code.OK`\r\n```\r\n          showResult <- failingExercise(\r\n            ctx,\r\n            cid(\"SDVl6\"),\r\n            submitter = owner,\r\n            template = templateIds.showDelegated,\r\n            contractId = showIdEv.contractId,\r\n            choice = \"ShowIt\",\r\n            arg = Value(Value.Sum.Record(fetchArg)),\r\n            Code.OK,\r\n            pattern = \"\"\r\n          )\r\n```\r\nand this is delegate fetches it:\r\n```\r\n          fetchResult <- failingExercise(\r\n            ctx,\r\n            cid(\"SDVl7\"),\r\n            submitter = delegate,\r\n            template = templateIds.delegation,\r\n            contractId = delegationEv.contractId,\r\n            choice = \"FetchDelegated\",\r\n            arg = Value(Value.Sum.Record(fetchArg)),\r\n            Code.OK,\r\n            pattern = \"\"\r\n          )\r\n```\r\nand it is again successful because of the `Code.OK`. And it does not matter that the function actually called `failingExercise` that is what confused me... It should be called `exerciseAssertReturnCode`... but I guess those functions were here before this change. `assertCommandFailsWithCode` is also poorly named, it should have been named `assertCommandCompletesWithCode`, we are using it to assert successful completions.",
        "createdAt" : "2019-04-19T16:49:41Z",
        "updatedAt" : "2019-04-19T16:57:59Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3642bfae-80e4-434f-b877-720d5a7354b1",
        "parentId" : "d0f31abf-f47e-48f0-857e-4a797f7e91a8",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Your understanding of what's going on is perfectly cromulent.",
        "createdAt" : "2019-04-19T16:56:41Z",
        "updatedAt" : "2019-04-19T16:56:41Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "38ab46d8b26e1e46a78717ee7131e4cc857bc971",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +457,461 @@            None,\n            Seq(RecordField(\"\", Some(Value(Value.Sum.ContractId(delegatedEv.contractId))))))\n          showResult <- failingExercise(\n            ctx,\n            cid(\"SDVl6\"),"
  },
  {
    "id" : "d7b5d1ef-b44f-4df0-83f3-f50fd7852d93",
    "prId" : 405,
    "comments" : [
      {
        "id" : "3c63e1b7-c310-464b-bc05-e783f57b6c00",
        "parentId" : null,
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "Maybe a comment here saying the `delegate` cannot fetch Delegation contracts, because it is not an owner.\r\nBut yeah, I don't see that we are testing anything that `delegate` can do in this test.",
        "createdAt" : "2019-04-19T15:08:38Z",
        "updatedAt" : "2019-04-19T15:08:38Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e4d03444-f18c-4544-bfbd-b372c0557608",
        "parentId" : "3c63e1b7-c310-464b-bc05-e783f57b6c00",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "`delegate` _can_ fetch because it has been divulged to it in the `ShowIt` exercise that owner did in the previous transaction.",
        "createdAt" : "2019-04-19T15:10:57Z",
        "updatedAt" : "2019-04-19T15:10:57Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "38ab46d8b26e1e46a78717ee7131e4cc857bc971",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +468,472 @@            pattern = \"\"\n          )\n          fetchResult <- failingExercise(\n            ctx,\n            cid(\"SDVl7\"),"
  },
  {
    "id" : "a3a09196-713c-439c-bfb9-91372a71a69e",
    "prId" : 339,
    "comments" : [
      {
        "id" : "1fba63f5-e993-4471-b0be-875a67ed9327",
        "parentId" : null,
        "author" : {
          "login" : "francesco-da",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25149700?u=1141981d6c61003d54f8e8cd8a3cbd67cbbc1e77&v=4"
        },
        "body" : "@gaboraranyossy-da do you have an idea on why this might happen?",
        "createdAt" : "2019-04-09T17:01:08Z",
        "updatedAt" : "2019-04-11T07:49:30Z",
        "lastEditedBy" : {
          "login" : "francesco-da",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25149700?u=1141981d6c61003d54f8e8cd8a3cbd67cbbc1e77&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3125195d-4270-44e1-b954-ddaa07745536",
        "parentId" : "1fba63f5-e993-4471-b0be-875a67ed9327",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "debugging it locally it seems that this call doesn't return: https://github.com/digital-asset/daml/blob/05e691f55852fbb207f0e43cf23bb95b95866ba3/ledger/sandbox/src/main/scala/com/digitalasset/platform/sandbox/stores/ledger/CommandExecutorImpl.scala#L31 It probably dies on the ExecutionContext. ",
        "createdAt" : "2019-04-10T07:59:23Z",
        "updatedAt" : "2019-04-11T07:49:30Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4d6842fac53183965c2a96a4cf26d31218482340",
    "line" : 352,
    "diffHunk" : "@@ -1,1 +225,229 @@\n      /*\n       * TODO(FM) for absolutely mysterious reasons this times out, but the equivalent one in TransactionServiceIT\n       * does not. find out why. this seems to be quadratic\n       */"
  },
  {
    "id" : "66dbe920-0981-43f5-8b83-a8423e032de9",
    "prId" : 339,
    "comments" : [
      {
        "id" : "cf777a76-6c92-4cef-b2d4-69e741d7993e",
        "parentId" : null,
        "author" : {
          "login" : "francesco-da",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25149700?u=1141981d6c61003d54f8e8cd8a3cbd67cbbc1e77&v=4"
        },
        "body" : "@gaboraranyossy-da do you have an idea on why this might happe?",
        "createdAt" : "2019-04-09T17:01:23Z",
        "updatedAt" : "2019-04-11T07:49:30Z",
        "lastEditedBy" : {
          "login" : "francesco-da",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25149700?u=1141981d6c61003d54f8e8cd8a3cbd67cbbc1e77&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "61339afe-f4a9-442b-830b-e6d1a937f69f",
        "parentId" : "cf777a76-6c92-4cef-b2d4-69e741d7993e",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "I need more context on this, let's chat when you have time.",
        "createdAt" : "2019-04-10T08:01:58Z",
        "updatedAt" : "2019-04-11T07:49:30Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4d6842fac53183965c2a96a4cf26d31218482340",
    "line" : 1732,
    "diffHunk" : "@@ -1,1 +1177,1181 @@      ledgerEnd <- ctx.transactionClient.getLedgerEnd\n      completion <- submitCommand(ctx, submitRequest)\n      // TODO(FM) in the contract keys test this hangs forever after expecting a failedExercise.\n      // Could it be that the ACS behaves like that sometimes? In that case that'd be a bug. We must investigate\n      /*"
  },
  {
    "id" : "647945a3-8869-4c02-93c2-6859f5daf87c",
    "prId" : 339,
    "comments" : [
      {
        "id" : "24def89f-f751-403b-8d89-d8135f55b460",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "that's really sad ",
        "createdAt" : "2019-04-11T06:50:59Z",
        "updatedAt" : "2019-04-11T07:49:30Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "34d3f413-f4b8-45b7-a099-746c8a505595",
        "parentId" : "24def89f-f751-403b-8d89-d8135f55b460",
        "author" : {
          "login" : "francesco-da",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25149700?u=1141981d6c61003d54f8e8cd8a3cbd67cbbc1e77&v=4"
        },
        "body" : ":man_shrugging: ",
        "createdAt" : "2019-04-11T07:47:32Z",
        "updatedAt" : "2019-04-11T07:49:30Z",
        "lastEditedBy" : {
          "login" : "francesco-da",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25149700?u=1141981d6c61003d54f8e8cd8a3cbd67cbbc1e77&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4d6842fac53183965c2a96a4cf26d31218482340",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +43,47 @@import scala.concurrent.duration._\n\n// scalafmt cannot deal with this file\n// format: off\n@SuppressWarnings(Array(\"org.wartremover.warts.Any\"))"
  },
  {
    "id" : "c40bf72a-b013-4fb7-a622-8ee0dae7684b",
    "prId" : 339,
    "comments" : [
      {
        "id" : "0559016f-0daa-4cca-a048-469fa73a42c5",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "is this still an issue?",
        "createdAt" : "2019-04-11T06:54:16Z",
        "updatedAt" : "2019-04-11T07:49:30Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6d0ab2bf-7f62-4852-9ac7-46476a1c6389",
        "parentId" : "0559016f-0daa-4cca-a048-469fa73a42c5",
        "author" : {
          "login" : "francesco-da",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25149700?u=1141981d6c61003d54f8e8cd8a3cbd67cbbc1e77&v=4"
        },
        "body" : "yes, i'd merge for now though.",
        "createdAt" : "2019-04-11T07:47:26Z",
        "updatedAt" : "2019-04-11T07:49:30Z",
        "lastEditedBy" : {
          "login" : "francesco-da",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25149700?u=1141981d6c61003d54f8e8cd8a3cbd67cbbc1e77&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4d6842fac53183965c2a96a4cf26d31218482340",
    "line" : 1734,
    "diffHunk" : "@@ -1,1 +1179,1183 @@      // TODO(FM) in the contract keys test this hangs forever after expecting a failedExercise.\n      // Could it be that the ACS behaves like that sometimes? In that case that'd be a bug. We must investigate\n      /*\n      txs <- ctx.testingHelpers.listenForResultOfCommand(\n        ctx.testingHelpers.getAllContracts(List(submitRequest.getCommands.party)),"
  }
]