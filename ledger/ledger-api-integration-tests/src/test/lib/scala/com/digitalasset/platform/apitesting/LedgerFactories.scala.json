[
  {
    "id" : "884212d6-6bd0-4d1e-9f2c-9e79e7ae7117",
    "prId" : 1171,
    "comments" : [
      {
        "id" : "866e02e7-4c75-4bd5-a541-f628ed35a199",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "👍 ",
        "createdAt" : "2019-05-16T08:12:24Z",
        "updatedAt" : "2019-05-28T09:31:39Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0375ea95bfb713575e4b4fa54cb2011cbc90f244",
    "line" : 6,
    "diffHunk" : "@@ -56,7 +56,23 @@ object LedgerFactories {\n \n   }\n \n-  def createSandboxResource(config: PlatformApplications.Config, store: SandboxStore = InMemory)(\n+  def createRemoteApiProxyResource(\n+      config: PlatformApplications.Config)(\n+      implicit esf: ExecutionSequencerFactory): Resource[LedgerContext.SingleChannelContext] = {\n+    require(config.remoteApiEndpoint.isDefined, \"config.remoteApiEndpoint has to be set\")"
  },
  {
    "id" : "b9679cc5-461f-4e24-98e1-a6c52bf6bebd",
    "prId" : 1171,
    "comments" : [
      {
        "id" : "0ac2dafc-f05c-4be0-bac1-7dc97e8b82af",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "you could assert on the `host` and `port` too",
        "createdAt" : "2019-05-20T15:27:09Z",
        "updatedAt" : "2019-05-28T09:31:39Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1f4398e8-c39b-4279-8114-dcddab671953",
        "parentId" : "0ac2dafc-f05c-4be0-bac1-7dc97e8b82af",
        "author" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "body" : "Why? They are not `Option[*]`, hence should have meaningful values. In worst case we'd have 0 as port and empty string as host, which will just make it fail at runtime.",
        "createdAt" : "2019-05-22T08:48:27Z",
        "updatedAt" : "2019-05-28T09:31:39Z",
        "lastEditedBy" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "431b5755-ca5a-4a97-95ef-a48c3fb4602d",
        "parentId" : "0ac2dafc-f05c-4be0-bac1-7dc97e8b82af",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "`host` can be empty and `port` can be negative. It's nit-picking, I just thought I mention it.",
        "createdAt" : "2019-05-27T14:38:38Z",
        "updatedAt" : "2019-05-28T09:31:39Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0375ea95bfb713575e4b4fa54cb2011cbc90f244",
    "line" : 6,
    "diffHunk" : "@@ -56,6 +56,19 @@ object LedgerFactories {\n \n   }\n \n+  def createRemoteApiProxyResource(config: PlatformApplications.Config)(\n+      implicit esf: ExecutionSequencerFactory): Resource[LedgerContext.SingleChannelContext] = {\n+    require(config.remoteApiEndpoint.isDefined, \"config.remoteApiEndpoint has to be set\")"
  },
  {
    "id" : "c57d0a33-de90-41ba-b945-fb9850804ebd",
    "prId" : 1129,
    "comments" : [
      {
        "id" : "59df1810-981d-491b-8935-fdb9e3f5b833",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "I would just use `config.ledgerId` here",
        "createdAt" : "2019-05-14T15:09:34Z",
        "updatedAt" : "2019-05-15T13:08:27Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c62dda16-5ce3-42b6-bc3d-df6af6902dbf",
        "parentId" : "59df1810-981d-491b-8935-fdb9e3f5b833",
        "author" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "body" : "ack",
        "createdAt" : "2019-05-15T08:54:02Z",
        "updatedAt" : "2019-05-15T13:08:27Z",
        "lastEditedBy" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4b2e05cd67f97b2a660e81250f3a72628876b89b",
    "line" : null,
    "diffHunk" : "@@ -63,7 +63,7 @@ object LedgerFactories {\n     def createResource(server: SandboxServer) =\n       SandboxServerResource(server).map {\n         case PlatformChannels(channel) =>\n-          LedgerContext.SingleChannelContext(channel, config.ledgerId, packageIds)\n+          LedgerContext.SingleChannelContext(channel, config.getConfiguredLedgerId, packageIds)"
  }
]