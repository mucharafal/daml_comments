[
  {
    "id" : "fd8a2bc9-4c6d-432f-bd10-fff528c198b3",
    "prId" : 1171,
    "comments" : [
      {
        "id" : "a43e3902-2fda-4789-92d0-c2d36c485e76",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "looks good, but we should really couple the configs together with their relevant fixtures at some point, to avoid this common denominator style of über-configs",
        "createdAt" : "2019-05-16T08:11:53Z",
        "updatedAt" : "2019-05-28T09:31:39Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "bd720291-6381-4b41-aab9-cb0954d741b2",
        "parentId" : "a43e3902-2fda-4789-92d0-c2d36c485e76",
        "author" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "body" : "Coming in future PRs!",
        "createdAt" : "2019-05-20T14:51:11Z",
        "updatedAt" : "2019-05-28T09:31:39Z",
        "lastEditedBy" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0375ea95bfb713575e4b4fa54cb2011cbc90f244",
    "line" : null,
    "diffHunk" : "@@ -73,6 +71,19 @@ object PlatformApplications {\n     def withMaxNumberOfAcsContracts(cap: Int) = copy(maxNumberOfAcsContracts = Some(cap))\n \n     def withCommandConfiguration(cc: CommandConfiguration) = copy(commandConfiguration = cc)\n+\n+    def withRemoteApiEndpoint(endpoint: RemoteApiEndpoint) = copy(remoteApiEndpoint = Some(endpoint))"
  },
  {
    "id" : "1192b229-4a53-4dde-9558-81bdfd921d0d",
    "prId" : 1171,
    "comments" : [
      {
        "id" : "a75c20e1-9830-4b71-b1a6-b4c384d86a28",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "why do we need this? shouldn't this be `withNoTlsConfig` instead? My point is that having both in this form seems redundant as we could keep only the optional.",
        "createdAt" : "2019-05-20T15:25:20Z",
        "updatedAt" : "2019-05-28T09:31:39Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f7612412-8f73-42f1-9784-e5b02715c253",
        "parentId" : "a75c20e1-9830-4b71-b1a6-b4c384d86a28",
        "author" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "body" : "Dropped non-`Option` version as discussed",
        "createdAt" : "2019-05-22T08:47:35Z",
        "updatedAt" : "2019-05-28T09:31:39Z",
        "lastEditedBy" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0375ea95bfb713575e4b4fa54cb2011cbc90f244",
    "line" : null,
    "diffHunk" : "@@ -72,6 +74,23 @@ object PlatformApplications {\n     def withMaxNumberOfAcsContracts(cap: Int) = copy(maxNumberOfAcsContracts = Some(cap))\n \n     def withCommandConfiguration(cc: CommandConfiguration) = copy(commandConfiguration = cc)\n+\n+    def withRemoteApiEndpoint(endpoint: RemoteApiEndpoint) =\n+      copy(remoteApiEndpoint = Some(endpoint))\n+  }\n+\n+  final case class RemoteApiEndpoint(\n+      host: String,\n+      port: Integer,\n+      tlsConfig: Option[TlsConfiguration]) {\n+    def withHost(host: String) = copy(host = host)\n+    def withPort(port: Int) = copy(port = port)\n+    def withTlsConfig(tlsConfig: TlsConfiguration) = copy(tlsConfig = Some(tlsConfig))\n+    def withTlsConfigOption(tlsConfig: Option[TlsConfiguration]) = copy(tlsConfig = tlsConfig)"
  },
  {
    "id" : "31554097-8429-467c-b919-3b8ccfa7dcb4",
    "prId" : 1129,
    "comments" : [
      {
        "id" : "e0091d59-ace4-4fd5-9eae-6a4d70ac6741",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "this seems to add little value on top of `ledgerId`, so i'd rather not introduce it.",
        "createdAt" : "2019-05-14T15:10:20Z",
        "updatedAt" : "2019-05-15T13:08:27Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "dfbd916d-430f-4baa-a758-cfacd57c7fb6",
        "parentId" : "e0091d59-ace4-4fd5-9eae-6a4d70ac6741",
        "author" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "body" : "I am converting the only usage of this function to take `RequestedLedgerAPIMode` instead of a somehow-blind `Option[String]`",
        "createdAt" : "2019-05-15T08:53:55Z",
        "updatedAt" : "2019-05-15T13:08:27Z",
        "lastEditedBy" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4b2e05cd67f97b2a660e81250f3a72628876b89b",
    "line" : null,
    "diffHunk" : "@@ -46,17 +46,30 @@ object PlatformApplications {\n       \"Max TTL's granularity is subsecond. Ledger Server does not support subsecond granularity for this configuration - please use whole seconds.\"\n     )\n \n-    def getLedgerId: String =\n-      ledgerId.getOrElse(\n-        throw new IllegalStateException(\"Attempted to access ledger ID, but none is configured.\"))\n+    @SuppressWarnings(Array(\"org.wartremover.warts.StringPlusAny\"))\n+    def assertStaticLedgerId: String =\n+      ledgerId match {\n+        case RequestedLedgerAPIMode.Static(ledgerId) => ledgerId\n+        case _ =>\n+          throw new IllegalArgumentException(\"Unsupported ledger id config: \" + ledgerId)\n+      }\n+\n+    def getConfiguredLedgerId: Option[String] = {"
  },
  {
    "id" : "a19b72f5-be56-4d3d-90a5-607cc6b10be5",
    "prId" : 1129,
    "comments" : [
      {
        "id" : "24ef062f-7ca4-4cbc-aca2-271beda87056",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "Assertions can be implicit, I don't think we need to express them in the method name. How about using `staticLedgerId` instead?",
        "createdAt" : "2019-05-14T15:12:00Z",
        "updatedAt" : "2019-05-15T13:08:27Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4b8be56f-4d25-4a03-bb74-e56fd7f43fb9",
        "parentId" : "24ef062f-7ca4-4cbc-aca2-271beda87056",
        "author" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "body" : "IMO it is better to have it explicit, since if someone calls into this function when `ledgerId` is not static, it is a bug in the code. It is the same style as prefixing partial or dangerous functions with `unsafe`.",
        "createdAt" : "2019-05-15T08:50:04Z",
        "updatedAt" : "2019-05-15T13:08:27Z",
        "lastEditedBy" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0e9060ea-ef24-4176-bf4d-fcee4170a64b",
        "parentId" : "24ef062f-7ca4-4cbc-aca2-271beda87056",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "Ok, let’s leave it. My take is that as long as we have good tests and documented behaviour this should not matter and it just makes the code less fluent/readable. ",
        "createdAt" : "2019-05-15T09:40:44Z",
        "updatedAt" : "2019-05-15T13:08:27Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4b2e05cd67f97b2a660e81250f3a72628876b89b",
    "line" : 30,
    "diffHunk" : "@@ -46,17 +46,30 @@ object PlatformApplications {\n       \"Max TTL's granularity is subsecond. Ledger Server does not support subsecond granularity for this configuration - please use whole seconds.\"\n     )\n \n-    def getLedgerId: String =\n-      ledgerId.getOrElse(\n-        throw new IllegalStateException(\"Attempted to access ledger ID, but none is configured.\"))\n+    @SuppressWarnings(Array(\"org.wartremover.warts.StringPlusAny\"))\n+    def assertStaticLedgerId: String ="
  },
  {
    "id" : "50541985-914a-45c0-a0e8-509a062d602f",
    "prId" : 1129,
    "comments" : [
      {
        "id" : "182b83ec-f054-46c0-a72c-f5274391fdac",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "please remove this and use https://github.com/digital-asset/daml/blob/cc32ee5025125c5fc97b829796424fd21aab7e16/ledger/sandbox/src/main/scala/com/digitalasset/platform/sandbox/config/LedgerIdMode.scala#L8 instead",
        "createdAt" : "2019-05-14T15:13:14Z",
        "updatedAt" : "2019-05-15T13:08:27Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6e1f3583-4e2d-43c1-b528-876f3f84ab96",
        "parentId" : "182b83ec-f054-46c0-a72c-f5274391fdac",
        "author" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "body" : "Semantics do not match. `LedgerIdMode.Random` is different from `RequestedLedgerAPIMode.Dynamic` for two reasons:\r\n- `Dynamic` does not predefine if the ledger ID is random string or not, instead it just says that it is not part of the config;\r\n- `Random` injects ledger ID configuration *into* the server under the fixture, which is impossible for `RemoteAPIProxy` fixture type I am about to implement.",
        "createdAt" : "2019-05-15T08:49:36Z",
        "updatedAt" : "2019-05-15T13:08:27Z",
        "lastEditedBy" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "73b88fae-6f9a-4150-952e-d33b799df39c",
        "parentId" : "182b83ec-f054-46c0-a72c-f5274391fdac",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "I see, would you consider merging the two ADTs in that case?",
        "createdAt" : "2019-05-15T09:42:57Z",
        "updatedAt" : "2019-05-15T13:08:27Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "525a68c0-6d1d-42b3-b918-1bf72e358f05",
        "parentId" : "182b83ec-f054-46c0-a72c-f5274391fdac",
        "author" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "body" : "I am trying it now. It will move generation of random ledger ids into Sandbox itself, instead from the configuration level. I'll report back if it works.",
        "createdAt" : "2019-05-15T09:47:12Z",
        "updatedAt" : "2019-05-15T13:08:27Z",
        "lastEditedBy" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "092b765d-af3a-4fb9-a762-5dbb86c2de49",
        "parentId" : "182b83ec-f054-46c0-a72c-f5274391fdac",
        "author" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "body" : "Done",
        "createdAt" : "2019-05-15T11:45:42Z",
        "updatedAt" : "2019-05-15T13:08:27Z",
        "lastEditedBy" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4b2e05cd67f97b2a660e81250f3a72628876b89b",
    "line" : null,
    "diffHunk" : "@@ -110,10 +116,27 @@ object PlatformApplications {\n         commandConfig = config.commandConfiguration,\n         scenario = None,\n         tlsConfig = None,\n-        ledgerIdMode =\n-          config.ledgerId.fold[LedgerIdMode](LedgerIdMode.Random)(LedgerIdMode.Predefined),\n+        ledgerIdMode = config.ledgerId match {\n+          case RequestedLedgerAPIMode.Static(id) =>\n+            LedgerIdMode.Predefined(id)\n+          case RequestedLedgerAPIMode.Dynamic() =>\n+            LedgerIdMode.Random\n+        },\n         jdbcUrl = jdbcUrl\n       )\n     )\n   }\n }\n+\n+sealed abstract class RequestedLedgerAPIMode extends Product with Serializable"
  }
]