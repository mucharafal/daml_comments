[
  {
    "id" : "83b86d00-0281-485e-8837-19ddacc7cc59",
    "prId" : 1400,
    "comments" : [
      {
        "id" : "598d8ca3-986c-43fa-a344-90f3c0b827c5",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "minor: use the Lens api instead of `copy`",
        "createdAt" : "2019-05-27T16:02:35Z",
        "updatedAt" : "2019-06-03T08:59:27Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "455e80a9ff9a1491c4764e344c9b5378f22b3abb",
    "line" : 13,
    "diffHunk" : "@@ -549,7 +550,7 @@ class LedgerTestingHelpers(\n \n   def submitRequestWithId(commandId: String): SubmitRequest =\n     M.submitRequest.update(\n-      _.commands.modify(_.copy(commandId = commandId, ledgerId = context.ledgerId)))\n+      _.commands.modify(_.copy(commandId = commandId, ledgerId = context.ledgerId.unwrap)))"
  },
  {
    "id" : "2a1d4b96-6ea8-49b3-9b03-6b2e62737e6b",
    "prId" : 949,
    "comments" : [
      {
        "id" : "7ba5e818-5cf2-4396-8ee8-5fa1b598d825",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Would be useful to see what the transactions look like.",
        "createdAt" : "2019-05-07T09:09:14Z",
        "updatedAt" : "2019-05-07T12:57:59Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "845a86e8-12bc-4dfe-ab1f-da96e51bd525",
        "parentId" : "7ba5e818-5cf2-4396-8ee8-5fa1b598d825",
        "author" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "body" : "Done",
        "createdAt" : "2019-05-07T12:58:12Z",
        "updatedAt" : "2019-05-07T12:58:12Z",
        "lastEditedBy" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a3742f33057e33f7ed548ee6b23fbf4641eef1d2",
    "line" : null,
    "diffHunk" : "@@ -159,8 +161,12 @@ class LedgerTestingHelpers(\n       verbose: Boolean = false): Future[TransactionTree] = {\n     submitAndListenForAllResultsOfCommand(command, transactionFilter, filterCid, verbose).map {\n       transactions =>\n-        transactions._2 should have length 1\n-        transactions._2.headOption.value\n+        {\n+          withClue(\"Received transaction tree should have length of 1\") {"
  }
]