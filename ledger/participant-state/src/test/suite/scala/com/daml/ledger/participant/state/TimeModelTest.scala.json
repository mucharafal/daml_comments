[
  {
    "id" : "f0d5774e-42a8-4845-b522-a952d6731765",
    "prId" : 6813,
    "comments" : [
      {
        "id" : "baac54ea-5d49-4f6b-9951-d71807895c61",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Butâ€¦ it's not. The ledger time is outside the range. The record time is within it.",
        "createdAt" : "2020-07-24T13:51:27Z",
        "updatedAt" : "2020-07-24T19:49:58Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b715feb96337b49d77a09c5a58ab31acd0942bc5",
    "line" : null,
    "diffHunk" : "@@ -89,6 +89,24 @@ class TimeModelTest extends WordSpec with Matchers {\n           .checkTime(referenceTime.minus(instance.minSkew).minus(epsilon), referenceTime)\n           .isLeft shouldEqual true\n       }\n+\n+      \"produce a valid error message\" in {\n+        val timeModel =\n+          TimeModel(\n+            avgTransactionLatency = Duration.ZERO,\n+            minSkew = Duration.ofSeconds(10L),\n+            maxSkew = Duration.ofSeconds(20L),\n+          ).get\n+        val ledgerTime = \"2000-01-01T12:00:00Z\"\n+        val recordTime = \"2000-01-01T12:30:00Z\"\n+        val lowerBound = \"2000-01-01T12:29:50Z\"\n+        val upperBound = \"2000-01-01T12:30:20Z\"\n+        val expectedMessage = s\"Record time $recordTime outside of range [$lowerBound, $upperBound]\""
  },
  {
    "id" : "a79bba71-7daf-404a-be9d-6c5fd562b148",
    "prId" : 4558,
    "comments" : [
      {
        "id" : "d96c4220-6677-47f4-a3ca-80898ec61fbe",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Don't think you need the `L` suffix; it should work fine without it.",
        "createdAt" : "2020-02-18T11:58:18Z",
        "updatedAt" : "2020-02-18T21:10:03Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a5164cd1-dcf2-4824-b803-8190f51e8f9d",
        "parentId" : "d96c4220-6677-47f4-a3ca-80898ec61fbe",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "It looks like it's not necessary indeed. Why does it not trigger an implicit numeric widening error without the suffix?",
        "createdAt" : "2020-02-18T21:22:17Z",
        "updatedAt" : "2020-02-18T21:22:17Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b29ed790-a8e9-4504-a958-54281ef5fcd8",
        "parentId" : "d96c4220-6677-47f4-a3ca-80898ec61fbe",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I _think_ (but I'm not sure) that it's because `30` is not an `Int`, is a numeric literal that can be converted to a concrete numeric type such as `Int` or `Long`. (I believe it can also be converted to `Float` or `Double` but Wart Remover complains about those.)",
        "createdAt" : "2020-02-19T08:49:36Z",
        "updatedAt" : "2020-02-19T08:49:36Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c24fe9b1f64bcbfa0b0d58eeec235081a161b919",
    "line" : 11,
    "diffHunk" : "@@ -12,7 +12,14 @@ class TimeModelTest extends WordSpec with Matchers {\n   private val referenceTime = Instant.EPOCH\n   private val epsilon = Duration.ofMillis(10L)\n   private val timeModel =\n-    TimeModel(Duration.ofSeconds(1L), Duration.ofSeconds(1L), Duration.ofSeconds(30L)).get\n+    TimeModel(\n+      minTransactionLatency = Duration.ofSeconds(1L),\n+      maxClockSkew = Duration.ofSeconds(1L),\n+      maxTtl = Duration.ofSeconds(30L),\n+      avgTransactionLatency = Duration.ofSeconds(0L),\n+      minSkew = Duration.ofSeconds(30L),\n+      maxSkew = Duration.ofSeconds(30L),"
  }
]