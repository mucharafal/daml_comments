[
  {
    "id" : "6a708270-aafc-4927-975a-28230e417458",
    "prId" : 3806,
    "comments" : [
      {
        "id" : "1346ffe4-235c-4fc5-b187-d573bdd82405",
        "parentId" : null,
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "It is not clear to me, why participantId is being removed. Isn't that something you will need to decide whether request originated from this participant? If it is not from \"this\" you can skip the operation status db entry and only care about the package payload.",
        "createdAt" : "2019-12-11T06:57:37Z",
        "updatedAt" : "2019-12-12T15:08:00Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "002aa2d7-a6b9-4207-9558-83faadd6d1b2",
        "parentId" : "1346ffe4-235c-4fc5-b187-d573bdd82405",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Exactly, we don't want to emit these updates if they're for another participant. No need to have it in the Update event if it's never sent. It IMO isn't the indexer's job to filter.",
        "createdAt" : "2019-12-11T10:11:48Z",
        "updatedAt" : "2019-12-12T15:08:00Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "251fd5fc053893266c997d1d7451a1f25479df7b",
    "line" : 29,
    "diffHunk" : "@@ -118,14 +118,44 @@ object Update {\n       s\"Request to add party to participant with submissionId '$submissionId' failed\"\n   }\n \n-  final case class PublicPackageUploaded(\n-      archive: DamlLf.Archive,\n+  /** Signal that a set of new packages has been uploaded.\n+    *\n+    * @param archives:\n+    *   The new packages that have been accepted.\n+    * @param sourceDescription:\n+    *   Description of the upload, if provided by the submitter.\n+    * @param recordTime:\n+    *   The ledger-provided timestamp at which the package upload was committed.\n+    * @param submissionId:\n+    *   The submission id of the upload. Unset if this participant was not the submitter.\n+    */\n+  final case class PublicPackageUpload(\n+      archives: List[DamlLf.Archive],\n       sourceDescription: Option[String],\n-      participantId: ParticipantId,"
  },
  {
    "id" : "0db41556-5e6d-4c31-ad81-f9d6c38023c7",
    "prId" : 3806,
    "comments" : [
      {
        "id" : "113f0ced-7ebf-4185-88b8-b7ceeef70f7c",
        "parentId" : null,
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "It would seem participantId is needed for symmetry",
        "createdAt" : "2019-12-11T06:58:16Z",
        "updatedAt" : "2019-12-12T15:08:00Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "babf11db-62cd-4f97-a9a3-9f9fbf27a8e2",
        "parentId" : "113f0ced-7ebf-4185-88b8-b7ceeef70f7c",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "See above. I don't agree we need participantIds here.",
        "createdAt" : "2019-12-11T10:12:03Z",
        "updatedAt" : "2019-12-12T15:08:00Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "251fd5fc053893266c997d1d7451a1f25479df7b",
    "line" : 50,
    "diffHunk" : "@@ -118,14 +118,44 @@ object Update {\n       s\"Request to add party to participant with submissionId '$submissionId' failed\"\n   }\n \n-  final case class PublicPackageUploaded(\n-      archive: DamlLf.Archive,\n+  /** Signal that a set of new packages has been uploaded.\n+    *\n+    * @param archives:\n+    *   The new packages that have been accepted.\n+    * @param sourceDescription:\n+    *   Description of the upload, if provided by the submitter.\n+    * @param recordTime:\n+    *   The ledger-provided timestamp at which the package upload was committed.\n+    * @param submissionId:\n+    *   The submission id of the upload. Unset if this participant was not the submitter.\n+    */\n+  final case class PublicPackageUpload(\n+      archives: List[DamlLf.Archive],\n       sourceDescription: Option[String],\n-      participantId: ParticipantId,\n-      recordTime: Timestamp)\n+      recordTime: Timestamp,\n+      submissionId: Option[SubmissionId])\n+      extends Update {\n+    override def description: String =\n+      s\"Public package upload: ${archives.map(_.getHash).mkString(\", \")}\"\n+  }\n+\n+  /** Signal that a package upload has been rejected.\n+    *\n+    * @param submissionId:\n+    *   The submission id of the upload.\n+    * @param recordTime:\n+    *   The ledger-provided timestamp at which the package upload was committed.\n+    * @param rejectionReason:\n+    *   Reason why the upload was rejected.\n+    */\n+\n+  final case class PublicPackageUploadRejected(\n+      submissionId: SubmissionId,\n+      recordTime: Timestamp,\n+      rejectionReason: String)"
  },
  {
    "id" : "fd91f1cc-533b-43a8-99d4-9bf2c971ee22",
    "prId" : 3806,
    "comments" : [
      {
        "id" : "654879c9-cd7d-481c-825b-0178a21770f5",
        "parentId" : null,
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "Please rephrase to:\r\ns\"Public package upload rejected, correlationId=$submissionId reason='$rejectionReason'\"",
        "createdAt" : "2019-12-11T07:01:08Z",
        "updatedAt" : "2019-12-12T15:08:00Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "251fd5fc053893266c997d1d7451a1f25479df7b",
    "line" : null,
    "diffHunk" : "@@ -118,14 +118,44 @@ object Update {\n       s\"Request to add party to participant with submissionId '$submissionId' failed\"\n   }\n \n-  final case class PublicPackageUploaded(\n-      archive: DamlLf.Archive,\n+  /** Signal that a set of new packages has been uploaded.\n+    *\n+    * @param archives:\n+    *   The new packages that have been accepted.\n+    * @param sourceDescription:\n+    *   Description of the upload, if provided by the submitter.\n+    * @param recordTime:\n+    *   The ledger-provided timestamp at which the package upload was committed.\n+    * @param submissionId:\n+    *   The submission id of the upload. Unset if this participant was not the submitter.\n+    */\n+  final case class PublicPackageUpload(\n+      archives: List[DamlLf.Archive],\n       sourceDescription: Option[String],\n-      participantId: ParticipantId,\n-      recordTime: Timestamp)\n+      recordTime: Timestamp,\n+      submissionId: Option[SubmissionId])\n+      extends Update {\n+    override def description: String =\n+      s\"Public package upload: ${archives.map(_.getHash).mkString(\", \")}\"\n+  }\n+\n+  /** Signal that a package upload has been rejected.\n+    *\n+    * @param submissionId:\n+    *   The submission id of the upload.\n+    * @param recordTime:\n+    *   The ledger-provided timestamp at which the package upload was committed.\n+    * @param rejectionReason:\n+    *   Reason why the upload was rejected.\n+    */\n+\n+  final case class PublicPackageUploadRejected(\n+      submissionId: SubmissionId,\n+      recordTime: Timestamp,\n+      rejectionReason: String)\n       extends Update {\n     override def description: String =\n-      s\"\"\"Public package uploaded: ${archive.getHash}\"\"\"\n+      s\"Public package upload '$submissionId' rejected: $rejectionReason\""
  },
  {
    "id" : "6236e3b7-3009-4aa8-ae46-f5ceea0149b7",
    "prId" : 3744,
    "comments" : [
      {
        "id" : "ff402ffb-8649-42ff-933a-26391b41478f",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Oh, wow, thanks for fixing this amazing copy-pasta al dente. :spaghetti: ",
        "createdAt" : "2019-12-05T10:50:54Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d8204b7c377ce994002fb11ce1227c245747b3d0",
    "line" : 38,
    "diffHunk" : "@@ -71,43 +71,53 @@ object Update {\n     * @param recordTime\n     *   The ledger-provided timestamp at which the party was allocated.\n     *\n+    * @param submissionId\n+    *   The submissionId of the command which requested party to be added.\n+    *\n     */\n   final case class PartyAddedToParticipant(\n       party: Party,\n       displayName: String,\n       participantId: ParticipantId,\n-      recordTime: Timestamp)\n+      recordTime: Timestamp,\n+      submissionId: Option[SubmissionId])\n       extends Update {\n     override def description: String =\n       s\"Add party '$party' to participant\"\n   }\n \n-  /** Signal the uploading of a package that is publicly visible."
  },
  {
    "id" : "c7bd81f5-a3d1-4466-a53a-500fa2bf180c",
    "prId" : 3744,
    "comments" : [
      {
        "id" : "e5ebc12d-9d4b-42f2-9d45-26e7eb77ea2e",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n      s\"Request to add party to participant with submissionId '$submissionId' failed\"\r\n```",
        "createdAt" : "2019-12-05T10:51:25Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7a6995fc-d7cf-4009-a123-974728c0137d",
        "parentId" : "e5ebc12d-9d4b-42f2-9d45-26e7eb77ea2e",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Addressed in ba16667d1.",
        "createdAt" : "2019-12-05T12:19:16Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d8204b7c377ce994002fb11ce1227c245747b3d0",
    "line" : null,
    "diffHunk" : "@@ -71,43 +71,53 @@ object Update {\n     * @param recordTime\n     *   The ledger-provided timestamp at which the party was allocated.\n     *\n+    * @param submissionId\n+    *   The submissionId of the command which requested party to be added.\n+    *\n     */\n   final case class PartyAddedToParticipant(\n       party: Party,\n       displayName: String,\n       participantId: ParticipantId,\n-      recordTime: Timestamp)\n+      recordTime: Timestamp,\n+      submissionId: Option[SubmissionId])\n       extends Update {\n     override def description: String =\n       s\"Add party '$party' to participant\"\n   }\n \n-  /** Signal the uploading of a package that is publicly visible.\n+  /** Signal that the party allocation request has been Rejected.\n     *\n-    * We expect that ledger or participant-node administrators issue such\n-    * public uploads. The 'public' qualifier refers to the fact that all\n-    * parties hosted by a participant (or even all parties connected to a\n-    * ledger) will see the uploaded package. It is in contrast to a future\n-    * extension where we plan to support per-party package visibility\n+    * Initially this will be visible to all participants in the current open world,\n+    * with a possible need to revisit as part of the per-party package visibility work\n     * https://github.com/digital-asset/daml/issues/311.\n     *\n-    *\n-    * @param archive\n-    *   The DAML-LF package that was uploaded.\n-    *\n-    * @param sourceDescription\n-    *   A description of the package, provided by the administrator as part of\n-    *   the upload.\n+    * @param submissionId\n+    *   submissionId of the party allocation command.\n     *\n     * @param participantId\n-    *   The participant through which the package was uploaded. This field\n-    *   is informative, and can be used by applications to display information\n-    *   about the origin of the package.\n+    *   The participant to which the party was requested to be added. This field\n+    *   is informative,\n     *\n     * @param recordTime\n     *   The ledger-provided timestamp at which the package was uploaded.\n     *\n+    * @param rejectionReason\n+    *   reason for rejection of the party allocation entry\n+    *\n+    * Consider whether an enumerated set of reject reasons a la [[RejectionReason]] would be helpful, and whether the same breadth of reject\n+    * types needs to be handled for party allocation entry rejects\n     */\n+  final case class PartyAllocationRejected(\n+      submissionId: SubmissionId,\n+      participantId: ParticipantId,\n+      recordTime: Timestamp,\n+      rejectionReason: String)\n+      extends Update {\n+    override def description: String =\n+      s\"Request to add party to participant with submissionId'$submissionId' failed\""
  },
  {
    "id" : "81f0d7dc-c568-4a89-b451-3867ee99ee4d",
    "prId" : 3744,
    "comments" : [
      {
        "id" : "5eacf3aa-ffea-4e43-b880-b0c844345b98",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n    override val description: String =\r\n```\r\nThis may be an overkill, but it's still possible.",
        "createdAt" : "2019-12-05T10:52:11Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ac960e13-3fd7-40b2-b763-9696fa01856d",
        "parentId" : "5eacf3aa-ffea-4e43-b880-b0c844345b98",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Addressed in ba16667d1.",
        "createdAt" : "2019-12-05T12:19:22Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d8204b7c377ce994002fb11ce1227c245747b3d0",
    "line" : null,
    "diffHunk" : "@@ -71,43 +71,53 @@ object Update {\n     * @param recordTime\n     *   The ledger-provided timestamp at which the party was allocated.\n     *\n+    * @param submissionId\n+    *   The submissionId of the command which requested party to be added.\n+    *\n     */\n   final case class PartyAddedToParticipant(\n       party: Party,\n       displayName: String,\n       participantId: ParticipantId,\n-      recordTime: Timestamp)\n+      recordTime: Timestamp,\n+      submissionId: Option[SubmissionId])\n       extends Update {\n     override def description: String =\n       s\"Add party '$party' to participant\"\n   }\n \n-  /** Signal the uploading of a package that is publicly visible.\n+  /** Signal that the party allocation request has been Rejected.\n     *\n-    * We expect that ledger or participant-node administrators issue such\n-    * public uploads. The 'public' qualifier refers to the fact that all\n-    * parties hosted by a participant (or even all parties connected to a\n-    * ledger) will see the uploaded package. It is in contrast to a future\n-    * extension where we plan to support per-party package visibility\n+    * Initially this will be visible to all participants in the current open world,\n+    * with a possible need to revisit as part of the per-party package visibility work\n     * https://github.com/digital-asset/daml/issues/311.\n     *\n-    *\n-    * @param archive\n-    *   The DAML-LF package that was uploaded.\n-    *\n-    * @param sourceDescription\n-    *   A description of the package, provided by the administrator as part of\n-    *   the upload.\n+    * @param submissionId\n+    *   submissionId of the party allocation command.\n     *\n     * @param participantId\n-    *   The participant through which the package was uploaded. This field\n-    *   is informative, and can be used by applications to display information\n-    *   about the origin of the package.\n+    *   The participant to which the party was requested to be added. This field\n+    *   is informative,\n     *\n     * @param recordTime\n     *   The ledger-provided timestamp at which the package was uploaded.\n     *\n+    * @param rejectionReason\n+    *   reason for rejection of the party allocation entry\n+    *\n+    * Consider whether an enumerated set of reject reasons a la [[RejectionReason]] would be helpful, and whether the same breadth of reject\n+    * types needs to be handled for party allocation entry rejects\n     */\n+  final case class PartyAllocationRejected(\n+      submissionId: SubmissionId,\n+      participantId: ParticipantId,\n+      recordTime: Timestamp,\n+      rejectionReason: String)\n+      extends Update {\n+    override def description: String ="
  },
  {
    "id" : "cd2fa717-4b56-4ac4-8b20-6f7e871059f4",
    "prId" : 2031,
    "comments" : [
      {
        "id" : "53b9b090-cb4c-43c7-a958-793d1547c504",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Please fix the docstring above to adjust plurals to singulars.",
        "createdAt" : "2019-07-08T08:39:25Z",
        "updatedAt" : "2019-07-08T09:59:14Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ed134e48-c19a-4dea-8626-572c31cdd39c",
        "parentId" : "53b9b090-cb4c-43c7-a958-793d1547c504",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "Done",
        "createdAt" : "2019-07-08T10:00:59Z",
        "updatedAt" : "2019-07-08T10:00:59Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "907e868fd50d46831470c159b0eda4e8e24c2377",
    "line" : 28,
    "diffHunk" : "@@ -87,14 +87,14 @@ object Update {\n     *   The ledger-provided timestamp at which the packages were uploaded.\n     *\n     */\n-  final case class PublicPackagesUploaded(\n-      archives: List[DamlLf.Archive],\n+  final case class PublicPackageUploaded("
  },
  {
    "id" : "d7402dc6-666d-40c3-aaf3-885f6d049378",
    "prId" : 2031,
    "comments" : [
      {
        "id" : "2137b8ce-8bf1-4fa5-bf38-92b7fc0ce3dd",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n      s\"\"\"Public package uploaded: ${archive.getHash}\"\"\"\r\n```",
        "createdAt" : "2019-07-08T08:39:54Z",
        "updatedAt" : "2019-07-08T09:59:14Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "fef906ef-766e-4aaa-8bcb-85b4f72b65d9",
        "parentId" : "2137b8ce-8bf1-4fa5-bf38-92b7fc0ce3dd",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "Done",
        "createdAt" : "2019-07-08T10:01:18Z",
        "updatedAt" : "2019-07-08T10:01:18Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "907e868fd50d46831470c159b0eda4e8e24c2377",
    "line" : null,
    "diffHunk" : "@@ -87,14 +87,14 @@ object Update {\n     *   The ledger-provided timestamp at which the packages were uploaded.\n     *\n     */\n-  final case class PublicPackagesUploaded(\n-      archives: List[DamlLf.Archive],\n+  final case class PublicPackageUploaded(\n+      archive: DamlLf.Archive,\n       sourceDescription: Option[String],\n       participantId: ParticipantId,\n       recordTime: Timestamp)\n       extends Update {\n     override def description: String =\n-      s\"\"\"Public packages uploaded: ${archives.map(_.getHash).mkString(\",\")}\"\"\"\n+      s\"\"\"Public packages uploaded: ${archive.getHash}\"\"\""
  }
]