[
  {
    "id" : "55dba3ef-9330-4730-ad18-efffe929ba49",
    "prId" : 4722,
    "comments" : [
      {
        "id" : "520125c6-b902-4a81-bc50-db89f69ea6cb",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "We now have two terms for the TTL:\r\n1. `deduplicateUntil`: absolute time\r\n1. `maxCommandTtl`: duration\r\n\r\nI suggest that we unify those so that it's less confusing when talking about it. Maybe we switch to absolute time on the ledger api as well, using `deduplicate_until`?",
        "createdAt" : "2020-03-02T11:19:26Z",
        "updatedAt" : "2020-03-09T16:23:44Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ecd5f47ac6267722864002b678eeaa67142ff5cd",
    "line" : 28,
    "diffHunk" : "@@ -25,10 +27,20 @@ import com.digitalasset.daml.lf.data.Time.Timestamp\n   *   by DAML applications to deduce from the record time reported by the\n   *   ledger whether a change that they submitted has been lost in transit.\n   *\n+  * @param deduplicateUntil: the time until which the command should be\n+  *   deduplicated. Command deduplication is already performed by the\n+  *   participant. The ledger may choose to perform additional\n+  *   (cross-participant) command deduplication.\n+  *   If it chooses to do so, it must follow the\n+  *   same rules as the participant:\n+  *   - Deduplication is based on the (submitter, commandId) tuple.\n+  *   - Commands must not be deduplicated after the TTL has passed.\n+  *   - Commands should not be deduplicated after the command was rejected.\n   */\n final case class SubmitterInfo(\n     submitter: Party,\n     applicationId: ApplicationId,\n     commandId: CommandId,\n-    maxRecordTime: Timestamp //TODO: this should be a regular Instant\n+    maxRecordTime: Timestamp, //TODO: this should be a regular Instant\n+    deduplicateUntil: Instant,"
  },
  {
    "id" : "e90cf81e-bc51-439c-9f2b-f59da0f59a11",
    "prId" : 4722,
    "comments" : [
      {
        "id" : "d3bf3b2b-d973-4503-9147-573934fedbe2",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Do you want to create a ticket to track that?",
        "createdAt" : "2020-03-06T17:03:33Z",
        "updatedAt" : "2020-03-09T16:23:44Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ecd5f47ac6267722864002b678eeaa67142ff5cd",
    "line" : 27,
    "diffHunk" : "@@ -25,10 +27,19 @@ import com.digitalasset.daml.lf.data.Time.Timestamp\n   *   by DAML applications to deduce from the record time reported by the\n   *   ledger whether a change that they submitted has been lost in transit.\n   *\n+  * @param deduplicateUntil: the time until which the command should be deduplicated.\n+  *   Command deduplication is already performed by the participant.\n+  *   The ledger may choose to perform additional (cross-participant)\n+  *   command deduplication. If it chooses to do so, it must follow the\n+  *   same rules as the participant:\n+  *   - Deduplication is based on the (submitter, commandId) tuple.\n+  *   - Commands must not be deduplicated after the `deduplicateUntil` time has passed.\n+  *   - Commands should not be deduplicated after the command was rejected.\n   */\n final case class SubmitterInfo(\n     submitter: Party,\n     applicationId: ApplicationId,\n     commandId: CommandId,\n-    maxRecordTime: Timestamp //TODO: this should be a regular Instant\n+    maxRecordTime: Timestamp, //TODO: this should be a regular Instant"
  },
  {
    "id" : "825242e4-b790-4a78-907d-c1e6e96766a1",
    "prId" : 1524,
    "comments" : [
      {
        "id" : "5cdcc921-1547-474e-8916-7a1fe7c26972",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "```suggestion\r\n    maxRecordTime: Timestamp //TODO: this should be a regular Instant\r\n```",
        "createdAt" : "2019-06-05T09:37:10Z",
        "updatedAt" : "2019-06-05T09:45:55Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "09f2df0d8f6b3153eae65a73c61d0a16ceb4fb77",
    "line" : null,
    "diffHunk" : "@@ -30,5 +30,5 @@ final case class SubmitterInfo(\n     submitter: Party,\n     applicationId: ApplicationId,\n     commandId: CommandId,\n-    maxRecordTime: Timestamp,\n+    maxRecordTime: Timestamp, //TODO: this should be a regular Instant"
  }
]