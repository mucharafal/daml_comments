[
  {
    "id" : "bd61e69d-147d-4265-b685-18bcb6d8ce48",
    "prId" : 4669,
    "comments" : [
      {
        "id" : "3755bb2a-c900-4ccc-b0ef-385582f44cd3",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "If we change the ledgers to accept `TimeProvider`s, not `TimeServiceBackend`s, we can drop this in favor of `TimeProvider.UTC`.",
        "createdAt" : "2020-02-25T12:28:10Z",
        "updatedAt" : "2020-02-26T07:26:00Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d8cda7a8-deec-4c0e-bbde-2941d1285152",
        "parentId" : "3755bb2a-c900-4ccc-b0ef-385582f44cd3",
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "`StandaloneApiServer` requires an optional `TimeServiceBackend` though, so I don't think I can get rid of it easily. What I could do is to provide a read-only wrapper for `TimeProvider`, or to leave it as it is and have both defaults (aligned) in the sandbox ledgers.",
        "createdAt" : "2020-02-25T13:00:11Z",
        "updatedAt" : "2020-02-26T07:26:00Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "84aedc78-66f0-4a87-be33-7167ce066815",
        "parentId" : "3755bb2a-c900-4ccc-b0ef-385582f44cd3",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "In the case of wall clock time, we just give it `None`. This is important because if it's a `Some(service)`, the API server will spin up time manipulation endpoints (`TimeService.GetTime` and `TimeService.SetTime`).",
        "createdAt" : "2020-02-25T13:01:38Z",
        "updatedAt" : "2020-02-26T07:26:00Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "618e80c1-4367-4e33-9997-dd5625ec0a39",
        "parentId" : "3755bb2a-c900-4ccc-b0ef-385582f44cd3",
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "Is there test coverage about that (i.e. that sandbox should not spin up manipulation endpoints with either backend)?",
        "createdAt" : "2020-02-25T13:38:56Z",
        "updatedAt" : "2020-02-26T07:26:00Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "73d2d4c2-7199-4606-b096-3cc25eca7e9b",
        "parentId" : "3755bb2a-c900-4ccc-b0ef-385582f44cd3",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Unfortunately not, but that's a good point; we could add some. Don't worry about it in this PR though.",
        "createdAt" : "2020-02-25T13:46:50Z",
        "updatedAt" : "2020-02-26T07:26:00Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ae0a86ecb50b24000dc0788888770635bf7f5fd9",
    "line" : null,
    "diffHunk" : "@@ -21,6 +21,9 @@ object TimeServiceBackend {\n   def simple(startTime: Instant): TimeServiceBackend =\n     new SimpleTimeServiceBackend(startTime)\n \n+  def wallClock(clock: Clock): TimeServiceBackend ="
  },
  {
    "id" : "7357c1be-5df4-4081-8e17-a2bf8bd28b6e",
    "prId" : 4669,
    "comments" : [
      {
        "id" : "70462c75-d5bc-461d-a2f1-2af783c7e376",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "```suggestion\r\n      Future.failed(new UnsupportedOperationException(\"WallClockTimeServiceBackend is read-only\"))\r\n```",
        "createdAt" : "2020-02-25T13:18:48Z",
        "updatedAt" : "2020-02-26T07:26:00Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6e01a103-1810-4318-a4cc-aebb8f00b142",
        "parentId" : "70462c75-d5bc-461d-a2f1-2af783c7e376",
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "That code is not needed anymore but thanks!",
        "createdAt" : "2020-02-25T13:37:27Z",
        "updatedAt" : "2020-02-26T07:26:00Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ae0a86ecb50b24000dc0788888770635bf7f5fd9",
    "line" : null,
    "diffHunk" : "@@ -53,4 +56,11 @@ object TimeServiceBackend {\n           else Future.successful(false)\n         }(DirectExecutionContext)\n   }\n+\n+  private class WallClockTimeServiceBackend(clock: Clock) extends TimeServiceBackend {\n+    override def getCurrentTime: Instant = clock.instant()\n+\n+    override def setCurrentTime(currentTime: Instant, newTime: Instant): Future[Boolean] =\n+      Future.failed(new IllegalArgumentException(\"WallClockTimeServiceBackend is read-only\"))"
  },
  {
    "id" : "f809ba97-090a-4468-a517-fd25ecefab6b",
    "prId" : 4669,
    "comments" : [
      {
        "id" : "1b1874ae-0ac9-4acc-804f-2c30e9900de6",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Don't forget to move this back.",
        "createdAt" : "2020-02-25T13:20:58Z",
        "updatedAt" : "2020-02-26T07:26:00Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "05d14c54-678c-40a8-a5bb-c959d7853c62",
        "parentId" : "1b1874ae-0ac9-4acc-804f-2c30e9900de6",
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "Nice pre-catch!",
        "createdAt" : "2020-02-25T13:37:39Z",
        "updatedAt" : "2020-02-26T07:26:00Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "aade579a-06b4-4b92-8c85-dabfc2522b2f",
        "parentId" : "1b1874ae-0ac9-4acc-804f-2c30e9900de6",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Did it. ðŸ™‚ ",
        "createdAt" : "2020-02-25T14:25:06Z",
        "updatedAt" : "2020-02-26T07:26:00Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ae0a86ecb50b24000dc0788888770635bf7f5fd9",
    "line" : null,
    "diffHunk" : "@@ -1,7 +1,7 @@\n // Copyright (c) 2020 The DAML Authors. All rights reserved.\n // SPDX-License-Identifier: Apache-2.0\n \n-package com.digitalasset.platform.apiserver\n+package com.daml.ledger.participant.state.v1"
  }
]