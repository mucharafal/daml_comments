[
  {
    "id" : "991d98b4-7ea1-449f-b1a2-ab39860c9395",
    "prId" : 1800,
    "comments" : [
      {
        "id" : "e4a822b2-baa0-4ce2-8903-ce3030f4334a",
        "parentId" : null,
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "I do not agree with this API. It forces deeper dependency of the implementers of the WriteService on the DAR file format. In v1 we use uploadPackages in this place.",
        "createdAt" : "2019-06-25T08:58:58Z",
        "updatedAt" : "2019-06-27T08:00:27Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "29dfd8b6-e71f-4b73-9781-5092ab07675a",
        "parentId" : "e4a822b2-baa0-4ce2-8903-ce3030f4334a",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "@francesco-da any issues with changing this to `def uploadPackages(archives: List[Archive], sourceDescription: String)`? You can still easily get the archive payload byte size from an `Archive` and don't need to re-encode the package content.",
        "createdAt" : "2019-06-25T12:38:06Z",
        "updatedAt" : "2019-06-27T08:00:27Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5358d530-f980-471f-9804-597007c11b57",
        "parentId" : "e4a822b2-baa0-4ce2-8903-ce3030f4334a",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "@bitonic ",
        "createdAt" : "2019-06-25T12:38:20Z",
        "updatedAt" : "2019-06-27T08:00:27Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "720e4237da08f6f60dc2001e8f439cb9614a907e",
    "line" : 42,
    "diffHunk" : "@@ -21,18 +22,22 @@ trait WritePackagesService {\n     * message. See the comments on [[ReadService.stateUpdates]] and [[Update]] for\n     * further details.\n     *\n+    * Note: we accept DARs rather than a list of archives because we want\n+    * to be able to get the byte size of each individual ArchivePayload, which\n+    * is information that the read / index service need to provide. Moreover\n+    * this information should be consistent with the payload that the\n+    * [[com.digitalasset.ledger.api.v1.package_service.GetPackageResponse]]\n+    * contains. If we were to consume archives we'd have to re-encode them to\n+    * provide the size, and the size might potentially be different from the\n+    * original size, which would be quite confusing.\n+    *\n     * @param payload           : DAML-LF packages to be uploaded to the ledger.\n-    * @param sourceDescription : the description of the packages provided by the\n+    * @param sourceDescription : The description of the packages provided by the\n     *                            participant implementation.\n-    *\n-    * @return an async result of a SubmissionResult\n+    * @return an async result of a UploadDarResult\n     */\n-  // NOTE(FM): we accept dars rather than a list of archives because we want\n-  // to be able to get the byte size of each individual ArchivePayload, which is\n-  // information that the read / index service need to provide. Moreover this\n-  // information should be consistent with the payload that the\n-  // `GetPackageResponse` contains. If we were to consume archives we'd have\n-  // to re-encode them to provide the size, and the size might potentially be\n-  // different from the original size, which would be quite confusing.\n-  def uploadDar(sourceDescription: String, payload: Array[Byte]): CompletionStage[UploadDarResult]"
  },
  {
    "id" : "fce10436-d91d-42f7-a54d-4d86e71e31f9",
    "prId" : 1800,
    "comments" : [
      {
        "id" : "26d708e0-b650-4bb7-8ec6-df6c57a6ab0f",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Since a package is something specific inside an `ArchivePayload`, should we phrase it as \r\n```\r\nDAML-LF archives to be uploaded to the ledger\r\n```\r\n?\r\n",
        "createdAt" : "2019-06-26T13:26:18Z",
        "updatedAt" : "2019-06-27T08:00:27Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "720e4237da08f6f60dc2001e8f439cb9614a907e",
    "line" : null,
    "diffHunk" : "@@ -21,18 +24,24 @@ trait WritePackagesService {\n     * message. See the comments on [[ReadService.stateUpdates]] and [[Update]] for\n     * further details.\n     *\n-    * @param payload           : DAML-LF packages to be uploaded to the ledger.\n-    * @param sourceDescription : the description of the packages provided by the\n+    * Note: we accept [[Archive]]s rather than parsed packages, because we want\n+    * to be able to get the byte size of each individual ArchivePayload, which\n+    * is information that the read / index service need to provide. Moreover\n+    * this information should be consistent with the payload that the\n+    * [[com.digitalasset.ledger.api.v1.package_service.GetPackageResponse]]\n+    * contains. If we were to consume packages we'd have to re-encode them to\n+    * provide the size, and the size might potentially be different from the\n+    * original size, which would be quite confusing.\n+    *\n+    * @param sourceDescription : The description of the packages provided by the\n     *                            participant implementation.\n     *\n-    * @return an async result of a SubmissionResult\n+    * @param payload           : DAML-LF packages to be uploaded to the ledger."
  },
  {
    "id" : "322a956b-73b8-447a-a0b4-81322b6c11c6",
    "prId" : 1610,
    "comments" : [
      {
        "id" : "83dbd807-61eb-4b65-a642-b0072a03c3bf",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Should be `payload`",
        "createdAt" : "2019-06-18T13:03:45Z",
        "updatedAt" : "2019-06-19T11:34:16Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5e866b02c0df2f20dcee08439e1105fe577f0609",
    "line" : 24,
    "diffHunk" : "@@ -0,0 +1,38 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.participant.state.v2\n+\n+import java.util.concurrent.CompletionStage\n+\n+trait WritePackagesService {\n+\n+  /** Upload a collection of DAML-LF packages to the ledger.\n+    *\n+    * This method must be thread-safe, not throw, and not block on IO. It is\n+    * though allowed to perform significant computation.\n+    *\n+    * The result of the archives upload is communicated synchronously.\n+    * TODO: consider also providing an asynchronous response in a similar\n+    * manner as it is done for transaction submission. It is possible that\n+    * in some implementations, upload will fail due to authorization etc.\n+    *\n+    * Successful archives upload will result in a [[Update.PublicPackagesUploaded]]\n+    * message. See the comments on [[ReadService.stateUpdates]] and [[Update]] for\n+    * further details.\n+    *\n+    * @param archives        : DAML-LF packages to be uploaded to the ledger."
  }
]