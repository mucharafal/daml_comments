[
  {
    "id" : "d33d54e6-0920-469e-bdd5-865eb68d122d",
    "prId" : 6322,
    "comments" : [
      {
        "id" : "6cb7a9fc-a33b-4d55-a2f2-13e97431e1bf",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Shouldn't this rather be `transaction-tests-lib` or similar? I.e., it seems to contain classes to support testing in general.",
        "createdAt" : "2020-06-15T08:34:24Z",
        "updatedAt" : "2020-06-15T11:22:20Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9296dc05-a9e9-436e-8981-1dfb1777f3bd",
        "parentId" : "6cb7a9fc-a33b-4d55-a2f2-13e97431e1bf",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "you are right, it is now more general than scalacheck. However I am not sure it is worthwhile to rename the libraries the directory, and the maven coordinate.\r\n\r\ni am not sure it is worthwhile to create a news library neither.\r\n\r\nwhat do you think?\r\n\r\ncc @S11001001 ",
        "createdAt" : "2020-06-15T09:53:18Z",
        "updatedAt" : "2020-06-15T11:22:20Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "12614c1c-1072-4a3b-bac6-a38dc81d0eee",
        "parentId" : "6cb7a9fc-a33b-4d55-a2f2-13e97431e1bf",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "I think it's worth renaming the above as it will ensure less confusion. However, it'd probably make sense to do these renames in a separate PR. Creating a new library just for `TransactionBuilder` would be obviously an overkill.",
        "createdAt" : "2020-06-15T09:58:46Z",
        "updatedAt" : "2020-06-15T11:22:20Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "011ff0ff-4bc8-4962-bf80-102afbc36134",
        "parentId" : "6cb7a9fc-a33b-4d55-a2f2-13e97431e1bf",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "I don't think it's worth renaming, but sure, go for it ü§∑‚Äç‚ôÇÔ∏è ",
        "createdAt" : "2020-06-15T17:14:42Z",
        "updatedAt" : "2020-06-15T17:14:43Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9c5d5acc05152ab62cfe3dd1aa1f4fdf34ea9467",
    "line" : 4,
    "diffHunk" : "@@ -68,6 +68,7 @@ da_scala_library(\n         \"//daml-lf/archive:daml_lf_dev_archive_java_proto\",\n         \"//daml-lf/data\",\n         \"//daml-lf/transaction\",\n+        \"//daml-lf/transaction-scalacheck\","
  },
  {
    "id" : "0ecf2de3-791a-4f86-b884-ec1c37ddac38",
    "prId" : 5242,
    "comments" : [
      {
        "id" : "d4bb0de4-0cf7-47d2-bc37-aa7c11c7e95e",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Shouldn't need this any more, because these tests are already excluded by default. We can just delete the line.",
        "createdAt" : "2020-03-27T10:45:31Z",
        "updatedAt" : "2020-04-02T17:56:41Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "64c508cfb374ce5826a0006b0a54b5ecfea275ab",
    "line" : null,
    "diffHunk" : "@@ -157,7 +157,7 @@ client_server_build(\n     testonly = True,  # only test targets can depend on this.\n     client = \"//ledger/ledger-api-test-tool\",\n     client_args = [\n-        \"--exclude=LotsOfPartiesIT,TransactionScaleIT,CommandDeduplicationIT\",\n+        \"--exclude=LotsOfPartiesIT,TransactionScaleIT\","
  },
  {
    "id" : "32d66ddb-484a-445f-a0f4-23bb0dd04f08",
    "prId" : 4674,
    "comments" : [
      {
        "id" : "6724a4da-d2f2-4c67-9847-25a641f8dc21",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "```suggestion\r\n# Test for checking the integrity of the ledger dump produced above.\r\n```",
        "createdAt" : "2020-02-25T13:08:37Z",
        "updatedAt" : "2020-02-26T13:34:02Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "357d1c3ef2feb3fb5236e1f22c00afbf960d0ce6",
    "line" : null,
    "diffHunk" : "@@ -137,3 +146,33 @@ da_java_proto_library(\n     visibility = [\"//ledger/participant-state/kvutils:__subpackages__\"],\n     deps = [\":daml_kvutils_proto\"],\n )\n+\n+# Builds a ledger dump from running the test tool against a kvutils-based\n+# in-memory ledger.\n+client_server_build(\n+    name = \"reference-ledger-dump\",\n+    testonly = True,  # only test targets can depend on this.\n+    client = \"//ledger/ledger-api-test-tool\",\n+    client_args = [\n+        \"--include=SemanticTests,ContractKeysIT,TransactionServiceIT\",\n+        \"--timeout-scale-factor=20\",\n+        \"localhost:6865\",\n+    ],\n+    data = [\n+        \"//ledger/test-common:dar-files\",\n+    ],\n+    output_env = \"KVUTILS_LEDGER_DUMP\",\n+    server = \"//ledger/ledger-on-memory:app\",\n+    server_args = [\n+        \"--participant participant-id=ledger-dump,port=6865\",\n+    ],\n+    server_files = [\n+        \"//ledger/test-common:dar-files\",\n+    ],\n+) if not is_windows else None\n+\n+# Test for checking the integrity of the ledger dump produces above."
  },
  {
    "id" : "342d78ba-b221-4b0f-88e7-e35e8962dfa9",
    "prId" : 3923,
    "comments" : [
      {
        "id" : "84b024f6-dda4-4568-b816-dedd8769ab46",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Paging in @aherrmann-da for a clarification: with the new mechanism to detect unused dependencies we should inline dependencies in the build rule instead of declaring them outside of it, right?",
        "createdAt" : "2020-01-06T10:56:35Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7cb29fda-ee25-4330-ae50-3f7de90274ff",
        "parentId" : "84b024f6-dda4-4568-b816-dedd8769ab46",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "The mechanism you're referring to doesn't care if you inline dependencies or not -- it'll be looking at the full set of resolved dependencies your target declares. Regardless, I have switched back to inlining dependencies to be consistent with the rest of the code base.",
        "createdAt" : "2020-01-06T17:10:31Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6e93d861-3022-4e4d-b221-5eaa2d616d47",
        "parentId" : "84b024f6-dda4-4568-b816-dedd8769ab46",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I see, thanks.",
        "createdAt" : "2020-01-06T17:15:42Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "56297c00-d905-4ed5-a997-b6234d288686",
        "parentId" : "84b024f6-dda4-4568-b816-dedd8769ab46",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "The build will work either way. The motivation for inlining the dependencies is that it makes it easier to fix unused dependencies and is more explicit.\r\n\r\nAlso, if you're using [`buildozer`](https://github.com/bazelbuild/buildtools/tree/master/buildozer), then the fix commands that the unused dependency checker generates only work if dependencies are inlined.\r\n",
        "createdAt" : "2020-01-06T17:49:38Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c820159bc8cad55858939f177705f0a8bab0fd13",
    "line" : null,
    "diffHunk" : "@@ -8,6 +8,32 @@ load(\n )\n load(\"//bazel_tools:java.bzl\", \"da_java_proto_library\")\n \n+compile_deps = ["
  },
  {
    "id" : "84431dd0-4540-4940-b438-34d03861b1f9",
    "prId" : 3923,
    "comments" : [
      {
        "id" : "b86a693f-74c6-4d63-8d0b-5b685b606dda",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "with the new unused-dependency checker enabled, it is preferable to inline the dependencies. Is that correct, @aherrmann-da?",
        "createdAt" : "2020-01-06T12:48:49Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a4b04214-d22f-4d4f-a25a-318f3c0cb009",
        "parentId" : "b86a693f-74c6-4d63-8d0b-5b685b606dda",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Yes, that's correct. https://github.com/digital-asset/daml/pull/3938 will also enable the unused dependency checker for `da_scala_library`. ",
        "createdAt" : "2020-01-06T13:31:14Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "fd6f7382-d24f-4440-b5f8-ef63ff271bbe",
        "parentId" : "b86a693f-74c6-4d63-8d0b-5b685b606dda",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Changed back to inlining dependencies.",
        "createdAt" : "2020-01-06T17:02:34Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c820159bc8cad55858939f177705f0a8bab0fd13",
    "line" : null,
    "diffHunk" : "@@ -16,31 +42,26 @@ da_scala_library(\n         \"//visibility:public\",\n     ],\n     exports = [\":daml_kvutils_java_proto\"],\n-    runtime_deps = [],\n-    deps = [\n-        \":daml_kvutils_java_proto\",\n-        \"//daml-lf/archive:daml_lf_archive_reader\",\n-        \"//daml-lf/archive:daml_lf_dev_archive_java_proto\",\n-        \"//daml-lf/data\",\n-        \"//daml-lf/engine\",\n-        \"//daml-lf/interpreter\",\n-        \"//daml-lf/language\",\n-        \"//daml-lf/transaction\",\n-        \"//daml-lf/transaction:transaction_java_proto\",\n-        \"//daml-lf/transaction:value_java_proto\",\n-        \"//ledger/ledger-api-common\",\n-        \"//ledger/ledger-api-domain\",\n-        \"//ledger/ledger-api-health\",\n-        \"//ledger/participant-state\",\n-        \"//ledger/participant-state/protobuf:ledger_configuration_java_proto\",\n-        \"@maven//:com_google_guava_guava\",\n-        \"@maven//:com_google_protobuf_protobuf_java\",\n-        \"@maven//:com_typesafe_akka_akka_actor_2_12\",\n-        \"@maven//:com_typesafe_akka_akka_stream_2_12\",\n-        \"@maven//:io_dropwizard_metrics_metrics_core\",\n-        \"@maven//:org_scalaz_scalaz_core_2_12\",\n-        \"@maven//:org_slf4j_slf4j_api\",\n+    deps = compile_deps,\n+)\n+\n+test_lib_deps = [\n+    \":kvutils\",\n+    \"//bazel_tools/runfiles:scala_runfiles\",\n+    \"//ledger-api/rs-grpc-bridge\",\n+    \"//ledger-api/testing-utils\",\n+    \"@maven//:org_mockito_mockito_core\",\n+    \"@maven//:org_scalactic_scalactic_2_12\",\n+    \"@maven//:org_scalatest_scalatest_2_12\",\n+]\n+\n+da_scala_library(\n+    name = \"kvutils-tests-lib\",\n+    srcs = glob([\"src/test/lib/scala/**/*.scala\"]),\n+    visibility = [\n+        \"//visibility:public\",\n     ],\n+    deps = compile_deps + test_lib_deps,"
  }
]