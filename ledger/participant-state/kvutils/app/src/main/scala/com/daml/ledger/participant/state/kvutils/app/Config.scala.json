[
  {
    "id" : "88c3a08c-b57c-4f98-ba06-29e871be1fb5",
    "prId" : 7660,
    "comments" : [
      {
        "id" : "c001ff30-5baf-4340-9329-b827bcb9739d",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "`getEnvironmentVariable`",
        "createdAt" : "2020-10-14T08:22:44Z",
        "updatedAt" : "2020-10-14T08:25:27Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8f558a5537a7733d84118cdf9dedbb7389f44618",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +76,80 @@      defaultExtra: Extra,\n      args: Seq[String],\n      getEnvVar: String => Option[String] = sys.env.get(_),\n  ): Option[Config[Extra]] =\n    parser(name, extraOptions, getEnvVar).parse(args, createDefault(defaultExtra)).flatMap {"
  },
  {
    "id" : "1907e527-3d5e-49a8-a89f-4c8dc92a4faa",
    "prId" : 6721,
    "comments" : [
      {
        "id" : "81e48c31-7af3-4d8e-b23b-7a03712dcd5f",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Does this change the behavior when using `daml sandbox`? If so, this is probably worth mentioning in a change log entry.",
        "createdAt" : "2020-07-15T09:58:36Z",
        "updatedAt" : "2020-07-16T15:42:46Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "83f9d158-57e5-40c7-b432-c80c599973d8",
        "parentId" : "81e48c31-7af3-4d8e-b23b-7a03712dcd5f",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "No, options are optional by default, but since other parameters had `optional()` explicit, I added it here as well.",
        "createdAt" : "2020-07-15T10:20:12Z",
        "updatedAt" : "2020-07-16T15:42:46Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9317365d3249dfafc8dea2cd1562eb4cf29b0de3",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +125,129 @@        })\n      opt[String](\"ledger-id\")\n        .optional()\n        .text(\"The ID of the ledger. This must be the same each time the ledger is started. Defaults to a random UUID.\")\n        .action((ledgerId, config) => config.copy(ledgerId = ledgerId))"
  },
  {
    "id" : "a7241a0c-8aef-4b9b-b6fc-dbdd20930a24",
    "prId" : 6052,
    "comments" : [
      {
        "id" : "c9205b2f-6faa-4766-a111-8e1f91f18c06",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I understand that it's not that easy to get the actual size occupied by individual entries, but I'm not a big fan of having different units for cache configuration.",
        "createdAt" : "2020-05-20T14:44:20Z",
        "updatedAt" : "2020-05-26T07:28:28Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "50276aab-c136-4308-826c-e3df64752c36",
        "parentId" : "c9205b2f-6faa-4766-a111-8e1f91f18c06",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Can we leave it out as an improvement? I'd like to get a sense of the overhead of doing it. Considering it's an opt-in feature and the size should be around the thousand of entries tops, I think it's not necessarily that bad.",
        "createdAt" : "2020-05-20T15:04:11Z",
        "updatedAt" : "2020-05-26T07:28:28Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ef940dfe-9e53-4d65-8776-1fb4047c3b6c",
        "parentId" : "c9205b2f-6faa-4766-a111-8e1f91f18c06",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "I agree with @gerolf-da that having a consistent cache weighting approach helps, however, as the first iteration it's fine to use element counts (note that doing it properly requires extending the current caffeine cache wrapper).",
        "createdAt" : "2020-05-25T13:53:09Z",
        "updatedAt" : "2020-05-26T07:28:28Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9945ea44fabe5fe18e6608839b2ce57f04cbb4ee",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +162,166 @@        .optional()\n        .text(\n          s\"The maximum size of the cache used to deserialize DAML-LF values, in number of allowed entries. By default, nothing is cached.\")\n        .action((maximumLfValueTranslationCacheEntries, config) =>\n          config.copy(lfValueTranslationCache = config.lfValueTranslationCache.copy("
  },
  {
    "id" : "8b0a4b3f-dc13-421d-977c-4a4f168d2a47",
    "prId" : 4155,
    "comments" : [
      {
        "id" : "12c165fb-89aa-424c-8e7d-90fb5073f085",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "This now requires a SQL backend as the kvutil ledger. Could the Runner then still be used with another implementation? Maybe `Runner` is not supposed to be used that way, then it's fine.",
        "createdAt" : "2020-01-22T12:44:07Z",
        "updatedAt" : "2020-01-22T15:12:07Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f605f027-92e2-48e0-8b33-97fe6ea54915",
        "parentId" : "12c165fb-89aa-424c-8e7d-90fb5073f085",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "It defaults to H2 in memory, just as it did before; this is how _ledger-on-memory_ works.",
        "createdAt" : "2020-01-22T12:50:03Z",
        "updatedAt" : "2020-01-22T15:12:07Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7a5d350f-9621-437d-954d-7ceab07b8ebf",
        "parentId" : "12c165fb-89aa-424c-8e7d-90fb5073f085",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Right. I think it's not clear to me what the target of the `kvutils/app` folder is. On the surface it seems very general and not tied to a specific `ledger-on-...` implementation.",
        "createdAt" : "2020-01-22T13:48:49Z",
        "updatedAt" : "2020-01-22T15:12:07Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cde8c755-bf39-4f77-b098-b0fa8c5540b4",
        "parentId" : "12c165fb-89aa-424c-8e7d-90fb5073f085",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "It is, absolutely. But it is tied to _kvutils_, the Ledger API Server, and the Indexer; for the API Server/Indexer, it'll use H2 by default.",
        "createdAt" : "2020-01-22T14:09:49Z",
        "updatedAt" : "2020-01-22T15:12:07Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6d414ebd72f813c239463a48e245fc2e9fd9c0c8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +15,19 @@    port: Int,\n    portFile: Option[Path],\n    serverJdbcUrl: String,\n    ledgerId: Option[String],\n    archiveFiles: Seq[Path],"
  }
]