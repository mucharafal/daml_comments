[
  {
    "id" : "19980208-3ece-4a3d-9ff3-6529ff5d5a3f",
    "prId" : 7660,
    "comments" : [
      {
        "id" : "c302cd12-a196-4bbb-8cf1-3ff39d3d7d83",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "These magic strings must be referenced from `Config`.",
        "createdAt" : "2020-10-14T08:08:56Z",
        "updatedAt" : "2020-10-14T08:25:27Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8f558a5537a7733d84118cdf9dedbb7389f44618",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +14,18 @@  private val participantId: ParticipantId = ParticipantId.assertFromString(\"dummy-participant\")\n  private val fixedParticipantSubOptions = s\"participant-id=$participantId,port=123\"\n  private val jdbcUrlSubOption = \"server-jdbc-url\"\n  private val jdbcUrlEnvSubOption = \"server-jdbc-url-env\"\n  private def configParser("
  },
  {
    "id" : "c598084b-6d05-4add-b949-830559c092d1",
    "prId" : 7660,
    "comments" : [
      {
        "id" : "451911c0-b9e1-436b-bb52-43a0fc4c2c33",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "I'd suggest naming this as `mandatoryParticipantOptions` or `mandatoryParticipantConfig` or similar to hint that these must be provided.",
        "createdAt" : "2020-10-14T08:19:49Z",
        "updatedAt" : "2020-10-14T08:25:27Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8f558a5537a7733d84118cdf9dedbb7389f44618",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +13,17 @@  private val participantOption = \"--participant\"\n  private val participantId: ParticipantId = ParticipantId.assertFromString(\"dummy-participant\")\n  private val fixedParticipantSubOptions = s\"participant-id=$participantId,port=123\"\n  private val jdbcUrlSubOption = \"server-jdbc-url\"\n  private val jdbcUrlEnvSubOption = \"server-jdbc-url-env\""
  },
  {
    "id" : "db9c6e88-685e-4a76-b9dc-448631b8f109",
    "prId" : 7660,
    "comments" : [
      {
        "id" : "d2cb0960-614f-4221-998e-0c09d4f72556",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Constants should be `UpperCamelCased` -- please don't change this.",
        "createdAt" : "2020-10-14T08:21:14Z",
        "updatedAt" : "2020-10-14T08:25:27Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8f558a5537a7733d84118cdf9dedbb7389f44618",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +10,14 @@final class ConfigSpec extends FlatSpec with Matchers with OptionValues {\n\n  private val dumpIndexMetadataCommand = \"dump-index-metadata\"\n  private val participantOption = \"--participant\"\n  private val participantId: ParticipantId = ParticipantId.assertFromString(\"dummy-participant\")"
  },
  {
    "id" : "613c79e6-3bd1-46ad-9fd1-9b257eca41f0",
    "prId" : 7660,
    "comments" : [
      {
        "id" : "e2b2c5b0-fd5d-4ff7-b078-8374142b5700",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "To improve test readability, I'd suggest putting the relevant config key first (i.e., from this test case's perspective).",
        "createdAt" : "2020-10-14T08:25:15Z",
        "updatedAt" : "2020-10-14T08:25:27Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8f558a5537a7733d84118cdf9dedbb7389f44618",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +42,46 @@    val jdbcFromCli = \"command-line-jdbc\"\n    val config = configParser(\n      Seq(participantOption, s\"$fixedParticipantSubOptions,$jdbcUrlSubOption=$jdbcFromCli\"))\n      .getOrElse(fail())\n    config.participants.head.serverJdbcUrl should be(jdbcFromCli)"
  },
  {
    "id" : "8e3dae7b-70b9-4183-83a3-5b843170b123",
    "prId" : 7213,
    "comments" : [
      {
        "id" : "14b001ff-6f3f-449a-a903-0f45a306d4c3",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Shouldn't this be `ConfigParser`?",
        "createdAt" : "2020-08-31T17:04:58Z",
        "updatedAt" : "2020-08-31T17:04:58Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b157bb878277d49a3f0921b6958f5867d9395897",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@    Config.parse(\"Test\", (_: OptionParser[Config[Unit]]) => (), (), _)\n\n  behavior of \"Runner\"\n\n  it should \"fail if a participant is not provided in run mode\" in {"
  }
]