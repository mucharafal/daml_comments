[
  {
    "id" : "d856370c-71ac-43a8-9c37-01503cdd80f1",
    "prId" : 6428,
    "comments" : [
      {
        "id" : "7204f37d-e324-4488-b499-eeaca56006ba",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "If the dev version may produce different transactions from the stable one the integrity checker must use the latest stable version otherwise we'd get mismatches when checking against the backed up ledger entries.",
        "createdAt" : "2020-06-19T14:17:04Z",
        "updatedAt" : "2020-06-26T06:54:36Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3624b753-6c51-4a57-a3b3-d45c96dee0b4",
        "parentId" : "7204f37d-e324-4488-b499-eeaca56006ba",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I will take care of that in an upcoming PR. For now and until #5164 is completed the versioning of LF/transaction/version is frozen (i.e. we will not introduce any new version until #5164 is done), so no risk of issue there. \r\n\r\n\r\n ",
        "createdAt" : "2020-06-19T15:02:16Z",
        "updatedAt" : "2020-06-26T06:54:36Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d2832ff8457fca90adb26dc3d71314a458f268fd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +45,49 @@    new DataInputStream(new FileInputStream(filename))\n\n  // FIXME: https://github.com/digital-asset/daml/issues/5164\n  // This Should be made configurable.\n  private val engineConfig = Engine.DevConfig"
  },
  {
    "id" : "152826b7-4b08-49f2-b1ef-31983cbf1581",
    "prId" : 3758,
    "comments" : [
      {
        "id" : "60992179-822d-4591-8779-5921267ab4cc",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Perhaps we could name the ignored cases explicitly? That'd stop people from missing it next time.\r\n\r\nWhy don't we handle `PACKAGE_UPLOAD_REJECTION_ENTRY`, anyway?",
        "createdAt" : "2019-12-05T19:02:28Z",
        "updatedAt" : "2019-12-05T19:02:31Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "72ca4950-4d4c-4e4b-9671-675ce17f86ec",
        "parentId" : "60992179-822d-4591-8779-5921267ab4cc",
        "author" : {
          "login" : "dasormeter",
          "name" : "Brian Healey",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25179017?u=80e3160e2447461bd5847fe928a3e6fa9f6793fc&v=4"
        },
        "body" : "`PACKAGE_UPLOAD_REJECTION_ENTRY` we will handle shortly with @gerolf-da's new and improved take on https://github.com/digital-asset/daml/pull/3391 but atm on master those log entries do not fire Update events so there is nothing yet to assert on",
        "createdAt" : "2019-12-05T20:14:23Z",
        "updatedAt" : "2019-12-05T20:14:24Z",
        "lastEditedBy" : {
          "login" : "dasormeter",
          "name" : "Brian Healey",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25179017?u=80e3160e2447461bd5847fe928a3e6fa9f6793fc&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "26d131e8-4ce1-407c-9056-629ebea7d5da",
        "parentId" : "60992179-822d-4591-8779-5921267ab4cc",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Got it, makes sense. It'd still be nice to explicitly state that in the code. The catch-all `case _` seems quite error-prone.",
        "createdAt" : "2019-12-05T21:00:38Z",
        "updatedAt" : "2019-12-05T21:00:39Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b0018c69-54c7-4e5d-9024-f13ff5502bc9",
        "parentId" : "60992179-822d-4591-8779-5921267ab4cc",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "```suggestion\r\n       case Proto.DamlLogEntry.PayloadCase.PACKAGE_UPLOAD_REJECTION_ENTRY =>\r\n         // not handled yet\r\n         ()\r\n       case Proto.DamlLogEntry.PayloadCase.PAYLOAD_NOT_SET =>\r\n```",
        "createdAt" : "2019-12-05T21:01:54Z",
        "updatedAt" : "2019-12-05T21:02:11Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6ea63ed142ed3c6bdf77a86361332ea76463e3fc",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +123,127 @@      case Proto.DamlLogEntry.PayloadCase.PARTY_ALLOCATION_REJECTION_ENTRY =>\n        assert(updates.head.isInstanceOf[Update.PartyAllocationRejected])\n      case _ =>\n        ()\n    }"
  },
  {
    "id" : "1e283368-cf13-4ab1-8b12-ab947c28c9b6",
    "prId" : 3167,
    "comments" : [
      {
        "id" : "ed688c82-ccdf-43a1-9ffb-d186ff81767c",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Minor, but a by-name parameter is probably good enough here.\r\n```suggestion\r\n  def time[T](act: => T): (Long, T) = {\r\n```",
        "createdAt" : "2019-10-15T09:22:53Z",
        "updatedAt" : "2019-10-30T16:33:02Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1597e617b4e7bf7640c310c9962936dd07a5bf87",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +18,22 @@\nobject Helpers {\n  def time[T](act: () => T): (Long, T) = {\n    val t0 = System.nanoTime()\n    val result = act()"
  }
]