[
  {
    "id" : "c99e8de8-1d95-4fbb-b143-75950844c9d0",
    "prId" : 6758,
    "comments" : [
      {
        "id" : "2f34539c-cd02-4aac-98ab-381eeb24f2ae",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "```suggestion\r\n  \"adaptation\". The adaptation process attempts to map the identifiers\r\n```",
        "createdAt" : "2020-07-16T14:20:29Z",
        "updatedAt" : "2020-07-16T14:21:37Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "3e0b17f5c33cc3f6c5b78ae34ff03af860fb2bdb",
    "line" : null,
    "diffHunk" : "@@ -38,33 +38,33 @@ Build the tool with Bazel:\n Run the tool using Bazel and pass the benchmark parameters using `-p`\n jmh command line functionality:\n \n-    bazel run //ledger/participant-state/kvutils/tools:replay -- \\\n-      -p ledgerFile=<ledger export files>                        \\\n-      -p darFile=<dar files>                                     \\\n-      -p choiceName=<exercise choice names>                      \\\n-      [-p adapt=true]                                            \\\n+    bazel run //ledger/participant-state/kvutils/tools:benchmark-replay -- \\\n+      -p ledgerFile=<ledger export files>                                  \\\n+      -p darFile=<dar files>                                               \\\n+      -p choiceName=<exercise choice names>                                \\\n+      [-p adapt=true]\n \n+where:\n \n+* `<ledger export files>`: is the full path of the ledger export\n+  files to be used separated by commas (`,`)\n \n-* `<ledger export files>` : is the full path of the ledger export\n-  files to be tested separated by commas (`,`)\n-\n-* `<dar files>` : is the full path of the dar files to be tested\n-  separate by commas (`,`)\n+* `<dar files>` : is the full path of the dar files to be used\n+  separated by commas (`,`)\n \n * `<exercise choice names`>: is the full qualified choice name of the\n   exercises to be benchmarked separated by commas (`,`).  A full\n   qualified choice name should be of the form\n-  `ModuleName:TemplateName:ChoiceName`,  Note the package ID is\n+  `ModuleName:TemplateName:ChoiceName`.  Note the package ID is\n   omitted.\n \n * the optional parameter `adapt=true` can be set to enable dar-export\n-  adaptation. The adaptation process attempt to map the identifiers\n-  from the export file with the one of dar file when those latter\n+  \"adaptation\". The adaptation process attempt to map the identifiers"
  },
  {
    "id" : "1e021e84-692f-439d-a936-ef192daf621d",
    "prId" : 5685,
    "comments" : [
      {
        "id" : "d057c217-6303-4e8e-bbd7-ce3a41ba7630",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "```suggestion\r\nverify that a dump made with an old version of the software can still be successfully processed.\r\n```",
        "createdAt" : "2020-04-23T08:41:48Z",
        "updatedAt" : "2020-04-27T18:39:08Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "856c65a2919602bcd3313dbda4d732a5351bbd9f",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,22 @@\n+# `integrity-check`\n+\n+A tool that checks the integrity of a ledger dump stored in a file. It can be used to\n+verify that a dump made with an old version of the software, can still be successfully processed."
  },
  {
    "id" : "647394d5-56ba-4b39-abf9-35a34d391822",
    "prId" : 5685,
    "comments" : [
      {
        "id" : "8d46068b-7e40-4316-8c18-86c7f004e998",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "```suggestion\r\nBuild the tool with Bazel:\r\n```",
        "createdAt" : "2020-04-23T08:41:58Z",
        "updatedAt" : "2020-04-27T18:39:08Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "856c65a2919602bcd3313dbda4d732a5351bbd9f",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,22 @@\n+# `integrity-check`\n+\n+A tool that checks the integrity of a ledger dump stored in a file. It can be used to\n+verify that a dump made with an old version of the software, can still be successfully processed.\n+It can also be used to profile DAML interpretation code in a more isolated fashion.\n+\n+## Build\n+\n+Build the tool from bazel"
  },
  {
    "id" : "99a0e232-a530-4a22-ba4c-eb4940f0fdc6",
    "prId" : 5685,
    "comments" : [
      {
        "id" : "33d07ef2-7461-4940-9f4c-2c3eeaac85da",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I'm not sure why you would ever want to build the tool without running it. I think you can probably just delete this section.",
        "createdAt" : "2020-04-23T08:42:23Z",
        "updatedAt" : "2020-04-27T18:39:08Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "856c65a2919602bcd3313dbda4d732a5351bbd9f",
    "line" : 7,
    "diffHunk" : "@@ -0,0 +1,22 @@\n+# `integrity-check`\n+\n+A tool that checks the integrity of a ledger dump stored in a file. It can be used to\n+verify that a dump made with an old version of the software, can still be successfully processed.\n+It can also be used to profile DAML interpretation code in a more isolated fashion.\n+\n+## Build"
  },
  {
    "id" : "317f217e-c098-4880-9b6f-188e48f24664",
    "prId" : 5685,
    "comments" : [
      {
        "id" : "e3036215-70a8-485f-9d4a-b4399c47480f",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "```suggestion\r\nRun the tool using Bazel:\r\n```",
        "createdAt" : "2020-04-23T08:42:31Z",
        "updatedAt" : "2020-04-27T18:39:08Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "856c65a2919602bcd3313dbda4d732a5351bbd9f",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,22 @@\n+# `integrity-check`\n+\n+A tool that checks the integrity of a ledger dump stored in a file. It can be used to\n+verify that a dump made with an old version of the software, can still be successfully processed.\n+It can also be used to profile DAML interpretation code in a more isolated fashion.\n+\n+## Build\n+\n+Build the tool from bazel\n+\n+    bazel build //ledger/participant-state/kvutils/tools:integrity-check\n+\n+## Preparing a dump\n+\n+You can produce a ledger dump using the in memory kv ledger implementation contained in the\n+`ledger-on-memory` project. For details please consult its README file.\n+\n+## Running the tool\n+\n+Run the tool using a bazel command"
  }
]