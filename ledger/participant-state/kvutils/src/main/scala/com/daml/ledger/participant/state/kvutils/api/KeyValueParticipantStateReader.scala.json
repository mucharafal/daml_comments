[
  {
    "id" : "37d04f69-5353-428a-8d46-39acb8a541eb",
    "prId" : 3923,
    "comments" : [
      {
        "id" : "de53882c-4f49-41bc-8236-302d14358d56",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Why is `KeyValueParticipantStateWriter` closeable but this isn't?",
        "createdAt" : "2019-12-23T11:01:23Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d93e90b4-f349-4622-b9a7-f8b5e992b1cd",
        "parentId" : "de53882c-4f49-41bc-8236-302d14358d56",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Fixed that -- now all of `LedgerReader`, `LedgerWriter` and their wrapping classes are closeable.",
        "createdAt" : "2020-01-06T17:22:17Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c820159bc8cad55858939f177705f0a8bab0fd13",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@import com.digitalasset.ledger.api.health.HealthStatus\n\nclass KeyValueParticipantStateReader(reader: LedgerReader)(implicit materializer: Materializer)\n    extends ReadService\n    with AutoCloseable {"
  },
  {
    "id" : "7d2c104c-9e16-4d87-9fcb-a51ec96d0878",
    "prId" : 3923,
    "comments" : [
      {
        "id" : "896672c5-a0ee-4afd-bb7c-a2b6d8f95e9e",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Why do we need to filter again? Shouldn't this be already handled by line 21?",
        "createdAt" : "2020-01-06T13:08:44Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5210de22-6cdc-4c2d-8810-d2589aadccbd",
        "parentId" : "896672c5-a0ee-4afd-bb7c-a2b6d8f95e9e",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "This needs to be done as the `LedgerReader` implementation may not support filtering.",
        "createdAt" : "2020-01-06T15:32:05Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c820159bc8cad55858939f177705f0a8bab0fd13",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@      }\n      .filter {\n        case (offset, _) => beginAfter.forall(offset > _)\n      }\n"
  },
  {
    "id" : "079e209c-1782-4af5-8288-63e3c3f2283d",
    "prId" : 3923,
    "comments" : [
      {
        "id" : "fa16f19b-eeb2-47ec-822b-873f82b6c07c",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "You can use `mapConcat` to not have to use `Source.fromIterator`.",
        "createdAt" : "2020-01-06T13:11:03Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d9c823ce-da99-4c86-88db-80d69f776ce2",
        "parentId" : "fa16f19b-eeb2-47ec-822b-873f82b6c07c",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "We may generate 1 or more records from a single event hence `flatMapConcat`.",
        "createdAt" : "2020-01-06T15:32:45Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c820159bc8cad55858939f177705f0a8bab0fd13",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +21,25 @@    reader\n      .events(toReaderOffset(beginAfter))\n      .flatMapConcat { record =>\n        val updates = Envelope\n          .open(record.envelope)"
  },
  {
    "id" : "dd1ab578-d8f0-4d40-8ecf-f2a6dd943fec",
    "prId" : 3923,
    "comments" : [
      {
        "id" : "b8c3fbd5-abeb-450c-ba75-25c3eb72fb5d",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Aren't you filtering out events before `beginAfter` above? Is this code not necessary or am I missing something?",
        "createdAt" : "2020-01-06T16:16:43Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e80d470e-c10e-4fc7-b5a3-1a45a30ebb35",
        "parentId" : "b8c3fbd5-abeb-450c-ba75-25c3eb72fb5d",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "The underlying reader implementation (`LedgerReader.events`) may not do filtering hence we ensure that here.",
        "createdAt" : "2020-01-06T17:18:57Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c820159bc8cad55858939f177705f0a8bab0fd13",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@      }\n      .filter {\n        case (offset, _) => beginAfter.forall(offset > _)\n      }\n"
  }
]