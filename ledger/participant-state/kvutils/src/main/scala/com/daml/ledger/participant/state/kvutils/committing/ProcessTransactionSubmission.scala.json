[
  {
    "id" : "c48f3e7b-3762-409b-aa19-e5e41e8e7f58",
    "prId" : 5815,
    "comments" : [
      {
        "id" : "83ef3372-b9ca-4f86-9c75-35ec49ddbab1",
        "parentId" : null,
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "It would be lovely to know which party is unknown. It would help troubleshooting tremendously.",
        "createdAt" : "2020-05-04T06:05:14Z",
        "updatedAt" : "2020-05-04T10:58:15Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5a2e8509-6be2-4330-b1ba-e009954fc822",
        "parentId" : "83ef3372-b9ca-4f86-9c75-35ec49ddbab1",
        "author" : {
          "login" : "simonmaxen-da",
          "name" : "Simon Maxen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/56595114?u=cfde0812fcba2729e1d8f0b715136950eee6f84f&v=4"
        },
        "body" : "Yes that would be nice.  The idea behind this change is that all ledger providers can provide better feedback.  In this case I'd rather leave it to the kvutils maintainers to decide the best message.",
        "createdAt" : "2020-05-04T09:21:28Z",
        "updatedAt" : "2020-05-04T10:58:15Z",
        "lastEditedBy" : {
          "login" : "simonmaxen-da",
          "name" : "Simon Maxen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/56595114?u=cfde0812fcba2729e1d8f0b715136950eee6f84f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "95935e85-7ca4-410a-bfd7-6895103e40b5",
        "parentId" : "83ef3372-b9ca-4f86-9c75-35ec49ddbab1",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "I'm fine with that, we may want to address this in a separate PR.",
        "createdAt" : "2020-05-04T09:40:16Z",
        "updatedAt" : "2020-05-04T10:58:15Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4f79124066af85f3ee832b964b57bafe3f460ad2",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +352,356 @@          buildRejectionLogEntry(\n            transactionEntry,\n            RejectionReason.PartyNotKnownOnLedger(\"Not all parties known\"))\n        )\n    } yield result"
  },
  {
    "id" : "2a9ff879-276f-47bb-a475-a401b7b935d5",
    "prId" : 5608,
    "comments" : [
      {
        "id" : "39d926c9-9fa1-41f7-87de-e704868511dc",
        "parentId" : null,
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "Could you shortly elaborate (in the comment perhaps) on the causal monotonicity definition? I read \"all keys of contracts that are inputs of a transaction must NOT be active after the ledger effective time of that transaction\". Is that correct and why is that (e.g. I'm thinking of non-consuming)?",
        "createdAt" : "2020-04-20T12:24:09Z",
        "updatedAt" : "2020-04-22T08:28:36Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a5f272a8-78f3-4ace-b10a-f0fb62b90652",
        "parentId" : "39d926c9-9fa1-41f7-87de-e704868511dc",
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "Also, I agree about correctness-first but I think it's also important to design with performance in mind. What's your take on that, i.e. how would you model the additional load required by the check and how did you plan for performance to be improved later (if at all needed / possible)?",
        "createdAt" : "2020-04-20T12:30:12Z",
        "updatedAt" : "2020-04-22T08:28:36Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "88bd4338-313e-46b0-8058-ccaab5fa0152",
        "parentId" : "39d926c9-9fa1-41f7-87de-e704868511dc",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "The `active_at` field depicts the `ledger_effective_time` of the transaction that created the contract with that particular key. The causal monotonicity requirement defines that all contracts that are an input to a transaction must be active at a ledger effective time <= the ledger effective time as the transaction under validation.",
        "createdAt" : "2020-04-20T12:48:37Z",
        "updatedAt" : "2020-04-22T08:28:36Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1132d051-03a1-4d83-ac69-09d0548ab9d4",
        "parentId" : "39d926c9-9fa1-41f7-87de-e704868511dc",
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "> The `active_at` field depicts the `ledger_effective_time` of the transaction that created the contract with that particular key. The causal monotonicity requirement defines that all contracts that are an input to a transaction must be active at a ledger effective time <= the ledger effective time as the transaction under validation.\r\n\r\nOK, why not calling it `ledger_effective_time`?",
        "createdAt" : "2020-04-20T12:51:36Z",
        "updatedAt" : "2020-04-22T08:28:36Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b7917393-dd9b-48a5-976b-e31b78f3b41c",
        "parentId" : "39d926c9-9fa1-41f7-87de-e704868511dc",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "This is in line with https://github.com/digital-asset/daml/blob/8e94c7af251eee175363b8b7f45e481a0aca90f7/ledger/participant-state/kvutils/src/main/protobuf/daml_kvutils.proto#L388-L390",
        "createdAt" : "2020-04-20T13:49:09Z",
        "updatedAt" : "2020-04-22T08:28:36Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "88f8cae2-e29b-404a-a218-4ecdb6c0d3dd",
        "parentId" : "39d926c9-9fa1-41f7-87de-e704868511dc",
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "For clarity I'd still note that it's the `ledger_effective_time` of the transaction that created the contract, at least in the comment of both protos (but agreed, maybe not in this PR).",
        "createdAt" : "2020-04-20T13:59:30Z",
        "updatedAt" : "2020-04-22T08:28:36Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4b62eb6b-fcfa-4d04-92e8-5e7774a65262",
        "parentId" : "39d926c9-9fa1-41f7-87de-e704868511dc",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I added comments to both fields in 14a595f.",
        "createdAt" : "2020-04-22T08:29:48Z",
        "updatedAt" : "2020-04-22T08:29:48Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "14a595f3821f329c479056c81f9a9413d0109715",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +282,286 @@\n        case (accum, _) => accum\n      }\n      ._1\n"
  },
  {
    "id" : "af7feaa8-67c4-42ad-8435-626cb85c3bbd",
    "prId" : 5608,
    "comments" : [
      {
        "id" : "9b09be2a-e518-4e4d-8cc2-128891ef79e9",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Please move the explanation to above the `contractState` definition -- the `if` clause should be right after the variable definition (otherwise the connection is not immediately clear between the filter clause and what it filters).",
        "createdAt" : "2020-04-20T16:36:46Z",
        "updatedAt" : "2020-04-22T08:28:36Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4377faf6-7470-4428-b6d2-f615552473f8",
        "parentId" : "9b09be2a-e518-4e4d-8cc2-128891ef79e9",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Fixed in 14a595f.",
        "createdAt" : "2020-04-22T08:28:58Z",
        "updatedAt" : "2020-04-22T08:28:59Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "14a595f3821f329c479056c81f9a9413d0109715",
    "line" : 201,
    "diffHunk" : "@@ -1,1 +486,490 @@      // Additionally, all contract keys are checked to uphold causal monotonicity.\n      contractState <- inputState.get(stateKey).flatMap(_.map(_.getContractState))\n      if contractIsActiveAndVisibleToSubmitter(transactionEntry, contractState)\n      contract = Conversions.decodeContractInstance(contractState.getContractInstance)\n    } yield contract"
  },
  {
    "id" : "a824b97d-ced9-45e8-afb8-a468d2f01475",
    "prId" : 4741,
    "comments" : [
      {
        "id" : "6b7c5572-5748-4db4-81d7-77d704ced912",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "we can drop the `forceNoContractIds` as the GlobalKey constructor hashes it, which will throw if there's contract ids.",
        "createdAt" : "2020-02-27T13:48:42Z",
        "updatedAt" : "2020-03-02T09:32:20Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d12a9546-094c-456b-afc6-adb1e93c937c",
        "parentId" : "6b7c5572-5748-4db4-81d7-77d704ced912",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2020-02-27T18:34:27Z",
        "updatedAt" : "2020-03-02T09:32:20Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6fdd134e28edcb94e9bf2aff60e5605405bf6128",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +191,195 @@              if exe.key.isDefined && exe.consuming =>\n            val stateKey = Conversions.globalKeyToStateKey(\n              Node.GlobalKey(exe.templateId, Conversions.forceNoContractIds(exe.key.get.key.value)))\n            (allUnique, existingKeys - stateKey)\n"
  },
  {
    "id" : "d3c63118-6375-4f48-b115-55dbb12e803f",
    "prId" : 3811,
    "comments" : [
      {
        "id" : "50a63dbe-782e-4aef-8293-2382c56b307e",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "To improve readability you might want to create a helper function for this:\r\n```scala\r\nimport com.daml.ledger.participant.state.kvutils.CorrelationIdHelper.fromTransactionEntry\r\n...\r\nlogger.trace(s\"Transaction accepted, correlationId=${fromTransactionEntry(txEntry)}\")\r\n...\r\n```",
        "createdAt" : "2019-12-11T10:09:26Z",
        "updatedAt" : "2019-12-11T10:10:38Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2f3eff5d-88c8-4277-a056-d816b63e5cd4",
        "parentId" : "50a63dbe-782e-4aef-8293-2382c56b307e",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "I'd rather have a logger that implicitly inserts the correlationId's into the log messages so we cannot forget them.\r\nSince we have this requirement for all committers it might be worth making it part of that interface. We'll just need a way for the `Committer` to extract the correlationId (and other information that goes into every log message) from the actual implementation.\r\n\r\n@miklos-da since you'll likely look into porting ProcessTransactionSubmission to the new abstraction, could you rethink how we do logging in a clean way?",
        "createdAt" : "2019-12-11T10:23:38Z",
        "updatedAt" : "2019-12-11T10:23:45Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "70fef055-78cd-4cc1-9ab9-761a9ff877b2",
        "parentId" : "50a63dbe-782e-4aef-8293-2382c56b307e",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Agreed on transparently adding context information to logs -- will come up with a proposal.",
        "createdAt" : "2019-12-11T11:18:21Z",
        "updatedAt" : "2019-12-11T11:28:15Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "561993529dbc4e148f7a091eb4cfd2d40ef559d8",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +276,280 @@        Metrics.accepts.inc()\n        logger.trace(\n          s\"Transaction accepted, correlationId=${txEntry.getSubmitterInfo.getCommandId}\")\n        done(\n          DamlLogEntry.newBuilder"
  }
]