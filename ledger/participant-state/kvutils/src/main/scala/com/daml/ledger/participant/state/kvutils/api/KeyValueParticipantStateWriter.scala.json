[
  {
    "id" : "dfe0f26b-5f58-4945-8611-b4e1f04e3824",
    "prId" : 7584,
    "comments" : [
      {
        "id" : "a3fbb080-68d1-444b-98c9-9979bfd36e21",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "This is the only use of `SimpleCommitMetadata` outside tests. I think we can just delete it and cause a compile failure if someone is using it, rather than making it crash at runtime.",
        "createdAt" : "2020-10-06T15:04:10Z",
        "updatedAt" : "2020-10-13T08:04:09Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9f6bf2c9-86ce-4293-b0e7-6a4df6de6998",
        "parentId" : "a3fbb080-68d1-444b-98c9-9979bfd36e21",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Removed `SimpleCommitMetadata` and replaced it with mocks wherever needed in tests.",
        "createdAt" : "2020-10-06T16:01:51Z",
        "updatedAt" : "2020-10-13T08:04:09Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "786f945fdc62b10bee6b10a2fcf88af69442f323",
    "line" : 4,
    "diffHunk" : "@@ -32,9 +32,11 @@ class KeyValueParticipantStateWriter(writer: LedgerWriter, metrics: Metrics) ext\n         transactionMeta,\n         transaction,\n       )\n-    val metadata = SimpleCommitMetadata("
  },
  {
    "id" : "31f004b1-5bfb-40f9-aedb-42a7aa8add7f",
    "prId" : 6515,
    "comments" : [
      {
        "id" : "aebdc0d0-9679-4cc5-aa5a-dfa503e7a585",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "```suggestion\r\n      metadata: CommitMetadata = CommitMetadata.Empty,\r\n    ): CompletionStage[SubmissionResult] =\r\n```",
        "createdAt" : "2020-06-29T07:39:38Z",
        "updatedAt" : "2020-06-30T08:52:03Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5b5d17d48af638f059d785c2d530c2f7d89eec0e",
    "line" : null,
    "diffHunk" : "@@ -78,6 +80,7 @@ class KeyValueParticipantStateWriter(writer: LedgerWriter, metrics: Metrics) ext\n \n   private def commit(\n       correlationId: String,\n-      submission: DamlSubmission): CompletionStage[SubmissionResult] =\n-    FutureConverters.toJava(writer.commit(correlationId, Envelope.enclose(submission)))\n+      submission: DamlSubmission,\n+      metadata: CommitMetadata = CommitMetadata.Empty): CompletionStage[SubmissionResult] ="
  },
  {
    "id" : "215f68f1-c5f2-4483-b6d4-25457822488f",
    "prId" : 6051,
    "comments" : [
      {
        "id" : "d1671d15-0c4c-483a-9bed-01976567b390",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I think you can delete `nextSubmissionId` now.",
        "createdAt" : "2020-05-20T14:42:27Z",
        "updatedAt" : "2020-05-20T14:52:08Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a83b22ff-51ed-4532-83be-240e5cf19977",
        "parentId" : "d1671d15-0c4c-483a-9bed-01976567b390",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Removed in the meanwhile.",
        "createdAt" : "2020-05-20T14:48:03Z",
        "updatedAt" : "2020-05-20T14:52:08Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "dce258360c0f09acf5623c434aae751f73d14238",
    "line" : 4,
    "diffHunk" : "@@ -31,7 +31,7 @@ class KeyValueParticipantStateWriter(writer: LedgerWriter, metrics: Metrics) ext\n         transactionMeta,\n         transaction.assertNoRelCid(cid => s\"Unexpected relative contract id: $cid\"),\n       )\n-    val correlationId = nextSubmissionId()"
  },
  {
    "id" : "e472b6dc-57b2-452c-9bc4-0cc8a8ee60d6",
    "prId" : 6051,
    "comments" : [
      {
        "id" : "353a6aad-9920-4a50-be4d-c48839613ffa",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Perhaps inline `correlationId` and just name the parameter?",
        "createdAt" : "2020-05-20T14:43:07Z",
        "updatedAt" : "2020-05-20T14:52:08Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "af3bcbd4-d6ed-40f4-9899-e4d2469d0c7c",
        "parentId" : "353a6aad-9920-4a50-be4d-c48839613ffa",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "True, that's even simpler -- changed.",
        "createdAt" : "2020-05-20T14:49:21Z",
        "updatedAt" : "2020-05-20T14:52:08Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dce258360c0f09acf5623c434aae751f73d14238",
    "line" : null,
    "diffHunk" : "@@ -31,7 +31,7 @@ class KeyValueParticipantStateWriter(writer: LedgerWriter, metrics: Metrics) ext\n         transactionMeta,\n         transaction.assertNoRelCid(cid => s\"Unexpected relative contract id: $cid\"),\n       )\n-    val correlationId = nextSubmissionId()\n+    val correlationId = submitterInfo.commandId"
  },
  {
    "id" : "2d4565c2-2e4f-400e-9dcf-6caa68a27f18",
    "prId" : 4741,
    "comments" : [
      {
        "id" : "172d8b68-15c5-4100-80ed-cb77ff2d5282",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "I would rather catch the relative contract ids in the transaction encoding. Pretty expensive traversing it just for this.",
        "createdAt" : "2020-02-27T13:47:56Z",
        "updatedAt" : "2020-03-02T09:32:20Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a65f3bbc-1f72-4666-a038-fe71fc38112a",
        "parentId" : "172d8b68-15c5-4100-80ed-cb77ff2d5282",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "The objective is to completly get ride of the relative contract id. I would prefer kvutils type does not reference at all relative contract ids and drop support of old contract ids scheme in the sandbox as soon as possible (that is 2/3 releases). \r\nSo we could simply merge `SubmittedTransaction` and `ComittedTransaction` (using only absolute contract id) and get rid of the `assertNoRelCid`\r\n\r\nIf it is very urgent we can find a work arround to drop completly relative contract ids and still have the sandbox support old scheme (that is `#txId:nodeId`)\r\n  \r\n",
        "createdAt" : "2020-02-27T18:05:49Z",
        "updatedAt" : "2020-03-02T09:32:20Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bbae1b36-98ca-467e-86cc-ad41edd37e85",
        "parentId" : "172d8b68-15c5-4100-80ed-cb77ff2d5282",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "sounds good to me. lets keep it and later clean up.",
        "createdAt" : "2020-02-28T12:53:32Z",
        "updatedAt" : "2020-03-02T09:32:20Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6fdd134e28edcb94e9bf2aff60e5605405bf6128",
    "line" : 12,
    "diffHunk" : "@@ -23,9 +23,14 @@ class KeyValueParticipantStateWriter(writer: LedgerWriter)(\n   override def submitTransaction(\n       submitterInfo: SubmitterInfo,\n       transactionMeta: TransactionMeta,\n-      transaction: SubmittedTransaction): CompletionStage[SubmissionResult] = {\n+      transaction: SubmittedTransaction,\n+  ): CompletionStage[SubmissionResult] = {\n     val submission =\n-      KeyValueSubmission.transactionToSubmission(submitterInfo, transactionMeta, transaction)\n+      KeyValueSubmission.transactionToSubmission(\n+        submitterInfo,\n+        transactionMeta,\n+        transaction.assertNoRelCid(cid => s\"Unexpected relative contract id: $cid\"),"
  },
  {
    "id" : "88d9f6a4-9c38-47ce-b77b-893d68c6fcde",
    "prId" : 3923,
    "comments" : [
      {
        "id" : "d1a4c014-f1d5-4031-8024-1115786deea7",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Mixing in `AutoClosable` is not necessary it seems.",
        "createdAt" : "2020-01-06T13:13:06Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b2411727-fbe3-4037-bb63-93a462f6dbb9",
        "parentId" : "d1a4c014-f1d5-4031-8024-1115786deea7",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Made LedgerReader/LedgerWriter and upstream classes auto-closeable.",
        "createdAt" : "2020-01-06T16:51:30Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c820159bc8cad55858939f177705f0a8bab0fd13",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,84 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.participant.state.kvutils.api\n+\n+import java.util.UUID\n+import java.util.concurrent.CompletionStage\n+\n+import com.daml.ledger.participant.state.kvutils.DamlKvutils.DamlSubmission\n+import com.daml.ledger.participant.state.kvutils.{Envelope, KeyValueSubmission}\n+import com.daml.ledger.participant.state.v1._\n+import com.digitalasset.daml.lf.data.{Ref, Time}\n+import com.digitalasset.daml_lf_dev.DamlLf\n+import com.digitalasset.ledger.api.health.HealthStatus\n+\n+import scala.compat.java8.FutureConverters\n+import scala.concurrent.ExecutionContext\n+\n+class KeyValueParticipantStateWriter(writer: LedgerWriter)(\n+    implicit executionContext: ExecutionContext)\n+    extends WriteService\n+    with AutoCloseable {\n+\n+  override def submitTransaction(\n+      submitterInfo: SubmitterInfo,\n+      transactionMeta: TransactionMeta,\n+      transaction: SubmittedTransaction): CompletionStage[SubmissionResult] = {\n+    val submission =\n+      KeyValueSubmission.transactionToSubmission(submitterInfo, transactionMeta, transaction)\n+    val correlationId = nextSubmissionId()\n+    commit(correlationId, submission)\n+  }\n+\n+  override def uploadPackages(\n+      submissionId: SubmissionId,\n+      archives: List[DamlLf.Archive],\n+      sourceDescription: Option[String]): CompletionStage[SubmissionResult] = {\n+    val submission = KeyValueSubmission\n+      .archivesToSubmission(\n+        submissionId,\n+        archives,\n+        sourceDescription.getOrElse(\"\"),\n+        writer.participantId)\n+    commit(submissionId, submission)\n+  }\n+\n+  override def submitConfiguration(\n+      maxRecordTime: Time.Timestamp,\n+      submissionId: SubmissionId,\n+      config: Configuration): CompletionStage[SubmissionResult] = {\n+    val submission =\n+      KeyValueSubmission\n+        .configurationToSubmission(maxRecordTime, submissionId, writer.participantId, config)\n+    commit(submissionId, submission)\n+  }\n+\n+  override def allocateParty(\n+      hint: Option[Party],\n+      displayName: Option[String],\n+      submissionId: SubmissionId): CompletionStage[SubmissionResult] = {\n+    val party = hint.getOrElse(generateRandomParty())\n+    val submission =\n+      KeyValueSubmission.partyToSubmission(\n+        submissionId,\n+        Some(party),\n+        displayName,\n+        writer.participantId)\n+    commit(submissionId, submission)\n+  }\n+\n+  override def currentHealth(): HealthStatus = writer.checkHealth()\n+\n+  override def close(): Unit = ()"
  }
]