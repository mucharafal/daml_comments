[
  {
    "id" : "e8a627a0-0d65-48b4-8f6e-a88cb82fa24f",
    "prId" : 3923,
    "comments" : [
      {
        "id" : "3c72236f-99dd-4b5c-bb63-4e393a32efdb",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Perhaps a custom Exception type here?",
        "createdAt" : "2019-12-23T11:22:55Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f73c6513-3ceb-4983-b042-f0d3264e2d0d",
        "parentId" : "3c72236f-99dd-4b5c-bb63-4e393a32efdb",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Or perhaps use `assert` as that's what this is.\r\nEDIT: We should move the assertion into processSubmission?",
        "createdAt" : "2020-01-06T09:26:43Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "32fe95e3-ea89-4a14-80cb-b2add2cf8c13",
        "parentId" : "3c72236f-99dd-4b5c-bb63-4e393a32efdb",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Yes, moving this into `KeyValueComitting.processSubmission` would be a great idea.",
        "createdAt" : "2020-01-06T10:05:33Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c820159bc8cad55858939f177705f0a8bab0fd13",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +94,98 @@    if (!(actualStateUpdates.keySet subsetOf expectedStateUpdates)) {\n      val unaccountedKeys = actualStateUpdates.keySet diff expectedStateUpdates\n      sys.error(\n        s\"State updates not a subset of expected updates! Keys [$unaccountedKeys] are unaccounted for!\")\n    }"
  },
  {
    "id" : "2219be47-dc4f-4e3f-857b-8afec9a14333",
    "prId" : 3923,
    "comments" : [
      {
        "id" : "9db0217a-a346-4d08-948e-4368adeb741d",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "We should probably undo this mistake of mine and use a better entry id allocation schema for the in-memory ledgers. e.g. use monotonically increasing integer. Medium term we'll do away with the entry id though (removal of relative ids), so this isn't a big deal right now.",
        "createdAt" : "2020-01-08T17:07:11Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "265ff207-7868-4e3f-9654-5e278d11074e",
        "parentId" : "9db0217a-a346-4d08-948e-4368adeb741d",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Good point -- will address that in a separate PR.",
        "createdAt" : "2020-01-08T17:29:14Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c820159bc8cad55858939f177705f0a8bab0fd13",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +126,130 @@\n  private def allocateEntryId(): DamlLogEntryId = {\n    val nonce: Array[Byte] = Array.ofDim(8)\n    randomNumberGenerator.nextBytes(nonce)\n    DamlLogEntryId.newBuilder"
  }
]