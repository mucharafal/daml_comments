[
  {
    "id" : "84dc2460-7eb8-4c77-b326-b9fd4cafde74",
    "prId" : 3065,
    "comments" : [
      {
        "id" : "f5a79bc9-9c60-423a-945c-09cf516260a8",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Would it make sense to prefix this with something like the participant id?",
        "createdAt" : "2019-10-03T08:34:37Z",
        "updatedAt" : "2019-10-03T08:35:12Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b45cb4b3-25f6-4c55-927f-69f62e22d745",
        "parentId" : "f5a79bc9-9c60-423a-945c-09cf516260a8",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Not possible with current design where we process requests from many different participants and committers.",
        "createdAt" : "2019-10-03T09:38:37Z",
        "updatedAt" : "2019-10-03T09:38:38Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d0cdeb04-8859-4ed9-b524-61a3140d7d7d",
        "parentId" : "f5a79bc9-9c60-423a-945c-09cf516260a8",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Could you elaborate? How can the same kvutils instance (as in the jvm object) be used in multiple participants? We can call it something else, if the name `participantId` is the issue. Anyway, not blocking or major on my side. Just trying to understand :)",
        "createdAt" : "2019-10-03T09:47:58Z",
        "updatedAt" : "2019-10-03T09:47:58Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "54f32cb8-b047-4406-b9c4-4d29ea05879d",
        "parentId" : "f5a79bc9-9c60-423a-945c-09cf516260a8",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "This code is not used by participants. It is used by the committer to process a submission from a participant. We also use the same validator instance for multiple committers in development. But yes, it might make sense to include an identifier in the registry name for aggregation (though I guess that can also be solved at the point in which the metrics are collected).",
        "createdAt" : "2019-10-03T12:34:04Z",
        "updatedAt" : "2019-10-03T12:34:04Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2f01ac85d811524ea061ca8561b9e2eebfaca389",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +151,155 @@\n  private[committing] object Metrics {\n    private val registry = metrics.SharedMetricRegistries.getOrCreate(\"kvutils\")\n    private val prefix = \"kvutils.committing.package\"\n    val runTimer: Timer = registry.timer(s\"$prefix.run-timer\")"
  },
  {
    "id" : "897c5f84-5f7e-4e97-b60a-5d77664ec716",
    "prId" : 2924,
    "comments" : [
      {
        "id" : "3148a020-e082-4ecb-a1dd-4cdbb6479c79",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "This executor and its thread will keep on living until the JVM shuts down. This is probably not a problem, but if you only need to run one task on a separate thread you may want to consider either shutting down the executor once its done, using a simple `Thread` and create a `Future` using a `Promise` based on that thread or alternatively run a simple execution context that uses a single thread and deploys the runnable onto that, without pooling.",
        "createdAt" : "2019-09-17T08:55:33Z",
        "updatedAt" : "2019-09-17T10:53:39Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "72a86d02-a0c6-4e9f-bd3f-2a9b23b477e7",
        "parentId" : "3148a020-e082-4ecb-a1dd-4cdbb6479c79",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "What I need is all pre-loads to happen on the same single thread. Pre-loads can happen any time and they come in clusters. Doing them serially conserves resources and allows proper recognition of duplicates.",
        "createdAt" : "2019-09-17T10:49:10Z",
        "updatedAt" : "2019-09-17T10:53:39Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "697b15e41cd60705b8f46b66250e58e380642387",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +142,146 @@\nobject ProcessPackageUpload {\n  val serialContext = ExecutionContext.fromExecutor(Executors.newSingleThreadExecutor())\n}"
  }
]