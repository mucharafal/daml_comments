[
  {
    "id" : "43e981bc-9ae4-4614-b141-0393536cc25a",
    "prId" : 7265,
    "comments" : [
      {
        "id" : "cfe99921-ae69-495a-9f73-3fe18d8f60cc",
        "parentId" : null,
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "Why do you need to sort?",
        "createdAt" : "2020-08-31T15:08:52Z",
        "updatedAt" : "2020-09-01T09:44:56Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "30886e7f-dcbf-4c23-bd43-ec9b2d606427",
        "parentId" : "cfe99921-ae69-495a-9f73-3fe18d8f60cc",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "This is done in [`820b782` (#7265)](https://github.com/digital-asset/daml/pull/7265/commits/820b7821282c949e2bc4e303d0bb9c73a771d770), which moves this logic to aggregation instead of doing it at the end.\r\n\r\nI'm not sure why we sort the write set on export, but we always have.",
        "createdAt" : "2020-08-31T15:24:21Z",
        "updatedAt" : "2020-09-01T09:44:56Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "93c747ad-1a45-4104-a7ea-07ca926b016b",
        "parentId" : "cfe99921-ae69-495a-9f73-3fe18d8f60cc",
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "Hmm, I see. I guess this might or not be a problem in replay tests for non-determinism, depending on how they work. @miklos-da What do you think?",
        "createdAt" : "2020-08-31T15:37:36Z",
        "updatedAt" : "2020-09-01T09:44:56Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "71ef11e6-283d-4b21-83e7-8ea7f897d69a",
        "parentId" : "cfe99921-ae69-495a-9f73-3fe18d8f60cc",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I agree with this logic and would rather not sort them. If I can get the go-ahead to remove this logic, I'm happy to. I'd rather do it in this PR so we can get it released. However, I'm not comfortable making this decision solo; I'd like to get a thumbs-up from both you and @miklos-da.",
        "createdAt" : "2020-09-01T09:39:09Z",
        "updatedAt" : "2020-09-01T09:44:56Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e31f5d80-f9df-4991-9e35-3f0fce8c4c9c",
        "parentId" : "cfe99921-ae69-495a-9f73-3fe18d8f60cc",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "FYI, I tried removing sorting on both the write side and the integrity checker, and I get a bunch of ordering errors. So it's (unfortunately) necessary, at least for now.\r\n\r\nI think removing it is out of scope for this PR.",
        "createdAt" : "2020-09-01T14:16:11Z",
        "updatedAt" : "2020-09-01T14:16:12Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f42f6692-d9cd-4590-b8bb-ca345fb5a4bf",
        "parentId" : "cfe99921-ae69-495a-9f73-3fe18d8f60cc",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "OK, let's revisit this later. We generally sort write-sets before passing them e.g. to the storage layer to get deterministic results.",
        "createdAt" : "2020-09-02T09:54:19Z",
        "updatedAt" : "2020-09-02T10:22:17Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ac8921a780ac376a2ef73b6b5139530185f6bf5a",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +26,30 @@\n  final class InMemoryWriteSetBuilder private[InMemorySubmissionAggregator] (\n      aggregate: mutable.SortedMap[Key, Value],\n  ) extends WriteSetBuilder {\n    override def +=(data: WriteItem): Unit = aggregate.synchronized {"
  },
  {
    "id" : "43cd1610-8e25-47c4-9577-4ce3dbbbb02b",
    "prId" : 7215,
    "comments" : [
      {
        "id" : "a7db48ad-9652-4011-8920-b4ed5ee5c3c5",
        "parentId" : null,
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "```suggestion\r\n```",
        "createdAt" : "2020-08-25T10:53:13Z",
        "updatedAt" : "2020-08-25T15:02:13Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cf12b044-3012-4ea7-b655-e3a73ae025f3",
        "parentId" : "a7db48ad-9652-4011-8920-b4ed5ee5c3c5",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "We don't seem to have a convention about these. As IntelliJ has added them and we favor them elsewhere in the codebase (I think as the IntelliJ default), I'd prefer not to worry about them unless we can automate the addition or removal.",
        "createdAt" : "2020-08-25T11:17:08Z",
        "updatedAt" : "2020-08-25T15:02:13Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0020dd8e089d897ae22c94ce2643c7d7f6073b04",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@    }\n  }\n\n}"
  }
]