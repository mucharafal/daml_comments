[
  {
    "id" : "9cf64759-74f8-4f9b-bf8c-b7feb36c7eaa",
    "prId" : 6711,
    "comments" : [
      {
        "id" : "8dbfce65-ceb1-43c5-be6c-48dc553ca55f",
        "parentId" : null,
        "author" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "body" : "```suggestion\r\n    * @return  fingerprinted results of key lookups for the requested keys, in the same order as requested\r\n```",
        "createdAt" : "2020-07-14T09:15:43Z",
        "updatedAt" : "2020-07-15T08:11:38Z",
        "lastEditedBy" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e6145fdda1728eb9dd00d6dc94b3e0058872bbb2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,24 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.validator.preexecution\n+\n+import com.daml.ledger.participant.state.kvutils.DamlKvutils.{DamlStateKey, DamlStateValue}\n+import com.daml.ledger.participant.state.kvutils.Fingerprint\n+import com.daml.ledger.validator.LedgerStateOperations.{Key, Value}\n+\n+import scala.concurrent.Future\n+\n+trait LedgerStateReaderWithFingerprints {\n+\n+  /**\n+    * Reads values of a set of keys from the backing store, including their associated fingerprints.\n+    * @param keys  list of keys to look up data for\n+    * @return  values corresponding to the requested keys, in the same order as requested"
  },
  {
    "id" : "04ed0dc8-2407-4ac8-8642-9473a5f1b3a6",
    "prId" : 6711,
    "comments" : [
      {
        "id" : "bd6bf7e4-e6f5-4ec7-b9bc-0c5de81be49a",
        "parentId" : null,
        "author" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "body" : "Add comment adapted from the one above.\r\n\r\nI'm basing this on the general rule that every function in a trait should have its own documentation. Shout if you disagree.",
        "createdAt" : "2020-07-14T09:42:31Z",
        "updatedAt" : "2020-07-15T08:11:38Z",
        "lastEditedBy" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ccb39781-a977-479a-aba3-22dc96f6d298",
        "parentId" : "bd6bf7e4-e6f5-4ec7-b9bc-0c5de81be49a",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Will add documentation later.",
        "createdAt" : "2020-07-14T10:20:04Z",
        "updatedAt" : "2020-07-15T08:11:38Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e6145fdda1728eb9dd00d6dc94b3e0058872bbb2",
    "line" : 23,
    "diffHunk" : "@@ -0,0 +1,24 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.validator.preexecution\n+\n+import com.daml.ledger.participant.state.kvutils.DamlKvutils.{DamlStateKey, DamlStateValue}\n+import com.daml.ledger.participant.state.kvutils.Fingerprint\n+import com.daml.ledger.validator.LedgerStateOperations.{Key, Value}\n+\n+import scala.concurrent.Future\n+\n+trait LedgerStateReaderWithFingerprints {\n+\n+  /**\n+    * Reads values of a set of keys from the backing store, including their associated fingerprints.\n+    * @param keys  list of keys to look up data for\n+    * @return  values corresponding to the requested keys, in the same order as requested\n+    */\n+  def read(keys: Seq[Key]): Future[Seq[(Option[Value], Fingerprint)]]\n+}\n+\n+trait DamlLedgerStateReaderWithFingerprints {\n+  def read(keys: Seq[DamlStateKey]): Future[Seq[(Option[DamlStateValue], Fingerprint)]]"
  }
]