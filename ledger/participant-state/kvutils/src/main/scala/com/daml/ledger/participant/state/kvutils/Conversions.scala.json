[
  {
    "id" : "a88a5d53-54fa-4f44-8397-0419fc613864",
    "prId" : 5321,
    "comments" : [
      {
        "id" : "0d847b17-b5cf-4375-9b94-6d18995e1b98",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "What’s up with this?",
        "createdAt" : "2020-03-31T18:02:54Z",
        "updatedAt" : "2020-03-31T18:22:25Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "bd285462-35c1-4595-a64f-feb25761126e",
        "parentId" : "0d847b17-b5cf-4375-9b94-6d18995e1b98",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed ",
        "createdAt" : "2020-03-31T18:06:25Z",
        "updatedAt" : "2020-03-31T18:22:25Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "052763d581b46dda90478bba8fcdc3d4e7f49df3",
    "line" : null,
    "diffHunk" : "@@ -1,252 +0,0 @@\n-// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved."
  },
  {
    "id" : "254e8410-c354-4f1a-985a-0472929623cc",
    "prId" : 4741,
    "comments" : [
      {
        "id" : "71c43593-9769-4fe3-9bb2-4ad8c527d3c4",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Please use meaningful argument names.",
        "createdAt" : "2020-02-27T14:22:48Z",
        "updatedAt" : "2020-03-02T09:32:20Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9955a19c-bb8d-48eb-a109-ac03943ed806",
        "parentId" : "71c43593-9769-4fe3-9bb2-4ad8c527d3c4",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2020-02-27T18:35:11Z",
        "updatedAt" : "2020-03-02T09:32:20Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6fdd134e28edcb94e9bf2aff60e5605405bf6128",
    "line" : null,
    "diffHunk" : "@@ -192,6 +152,15 @@ private[state] object Conversions {\n   def parseTimestamp(ts: com.google.protobuf.Timestamp): Time.Timestamp =\n     Time.Timestamp.assertFromInstant(Instant.ofEpochSecond(ts.getSeconds, ts.getNanos.toLong))\n \n+  def parseHash(a: com.google.protobuf.ByteString): crypto.Hash ="
  },
  {
    "id" : "7b1ca921-752c-43cc-a6fc-91c6b09c4953",
    "prId" : 4722,
    "comments" : [
      {
        "id" : "faa60d1b-fae9-46d1-a994-ef10434f2210",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Can we pick a default here if it is missing? e.g. make this backwards compatible.\r\n\r\nIt really doesn't matter so much with this change at this point in time, but I want us to get into habit to correctly do these changes. We'll soon be at a point when we'll enable data continuity testing, which will of course help to force the issue.",
        "createdAt" : "2020-03-06T16:34:15Z",
        "updatedAt" : "2020-03-09T16:23:44Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ecd5f47ac6267722864002b678eeaa67142ff5cd",
    "line" : 6,
    "diffHunk" : "@@ -138,7 +138,8 @@ private[state] object Conversions {\n       submitter = Party.assertFromString(subInfo.getSubmitter),\n       applicationId = LedgerString.assertFromString(subInfo.getApplicationId),\n       commandId = LedgerString.assertFromString(subInfo.getCommandId),\n-      maxRecordTime = parseTimestamp(subInfo.getMaximumRecordTime)\n+      maxRecordTime = parseTimestamp(subInfo.getMaximumRecordTime),\n+      deduplicateUntil = parseTimestamp(subInfo.getDeduplicateUntil).toInstant,"
  },
  {
    "id" : "d00c4da6-980d-49f1-a3b0-e67a9b9645ef",
    "prId" : 4722,
    "comments" : [
      {
        "id" : "8301fac9-9d1c-438e-86df-56c7bb67b93f",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Minor: it would make sense to make the naming fully consistent here (`maxRecordTime` vs. `SubmitterInfo`'s `maximumRecordTime`).",
        "createdAt" : "2020-03-06T17:07:53Z",
        "updatedAt" : "2020-03-09T16:23:44Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ecd5f47ac6267722864002b678eeaa67142ff5cd",
    "line" : 5,
    "diffHunk" : "@@ -138,7 +138,8 @@ private[state] object Conversions {\n       submitter = Party.assertFromString(subInfo.getSubmitter),\n       applicationId = LedgerString.assertFromString(subInfo.getApplicationId),\n       commandId = LedgerString.assertFromString(subInfo.getCommandId),\n-      maxRecordTime = parseTimestamp(subInfo.getMaximumRecordTime)\n+      maxRecordTime = parseTimestamp(subInfo.getMaximumRecordTime),"
  },
  {
    "id" : "14cef6c5-50f8-4db6-8ada-a6180ac0cfe0",
    "prId" : 3966,
    "comments" : [
      {
        "id" : "86102a9a-0d90-48c4-9d22-24352eac8ba2",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Wouldn't `private[state]` suffice? I.e., that way you could use functionality here from all classes under `com.ledger.participant.state`.",
        "createdAt" : "2020-01-07T17:13:15Z",
        "updatedAt" : "2020-01-08T13:43:42Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f74560f9-adac-4d20-9545-6105bbce64fe",
        "parentId" : "86102a9a-0d90-48c4-9d22-24352eac8ba2",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Yes it would. I'll make that change.",
        "createdAt" : "2020-01-08T09:38:24Z",
        "updatedAt" : "2020-01-08T13:43:42Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9df0c47c64a4fc5c7b0d6d4122fd6aaafaee5498",
    "line" : null,
    "diffHunk" : "@@ -25,10 +25,10 @@ import com.google.protobuf.{ByteString, Empty}\n \n import scala.util.Try\n \n-/** Internal utilities for converting between protobuf messages and our scala\n+/** Utilities for converting between protobuf messages and our scala\n   * data structures.\n   */\n-private[kvutils] object Conversions {\n+object Conversions {"
  },
  {
    "id" : "2de22a00-01a9-4f92-bf8c-d24445888fdb",
    "prId" : 637,
    "comments" : [
      {
        "id" : "57c9332a-7508-4879-9ae2-81a29748f925",
        "parentId" : null,
        "author" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "body" : "comment",
        "createdAt" : "2019-04-26T13:21:59Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d5b2167d99861a69fd3366ab5fb08acc35514642",
    "line" : 35,
    "diffHunk" : "@@ -0,0 +1,198 @@\n+package com.daml.ledger.participant.state.kvutils\n+\n+import java.time.{Duration, Instant}\n+\n+import com.daml.ledger.participant.state.kvutils.DamlKvutils._\n+import com.daml.ledger.participant.state.v1.{Configuration, SubmittedTransaction, SubmitterInfo}\n+import com.digitalasset.daml.lf.data.Ref.SimpleString\n+import com.digitalasset.daml.lf.data.Time\n+import com.digitalasset.daml.lf.transaction.{\n+  Transaction,\n+  TransactionOuterClass,\n+  TransactionVersions,\n+  VersionedTransaction\n+}\n+import com.digitalasset.daml.lf.value.Value.{\n+  AbsoluteContractId,\n+  ContractId,\n+  NodeId,\n+  RelativeContractId\n+}\n+import com.digitalasset.daml.lf.value.ValueCoder.DecodeError\n+import com.digitalasset.daml.lf.value.ValueOuterClass\n+import com.digitalasset.daml.lf.transaction.TransactionCoder\n+import com.digitalasset.daml.lf.value.ValueCoder\n+import com.digitalasset.platform.services.time.TimeModel\n+import com.google.common.io.BaseEncoding\n+import com.google.protobuf.ByteString\n+\n+import scala.util.Try\n+\n+private[kvutils] object Conversions {"
  }
]