[
  {
    "id" : "1fc1ae3c-143d-4155-9aa4-43010e2b9c88",
    "prId" : 4722,
    "comments" : [
      {
        "id" : "18609bea-8bc5-4b4b-b2e3-bf55f18cf5d7",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Can we pick a default here if it is missing? e.g. make this backwards compatible.\r\n\r\nIt really doesn't matter so much with this change at this point in time, but I want us to get into habit to correctly do these changes. We'll soon be at a point when we'll enable data continuity testing, which will of course help to force the issue.",
        "createdAt" : "2020-03-06T16:34:15Z",
        "updatedAt" : "2020-03-09T16:23:44Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ecd5f47ac6267722864002b678eeaa67142ff5cd",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +140,144 @@      commandId = LedgerString.assertFromString(subInfo.getCommandId),\n      maxRecordTime = parseTimestamp(subInfo.getMaximumRecordTime),\n      deduplicateUntil = parseTimestamp(subInfo.getDeduplicateUntil).toInstant,\n    )\n"
  },
  {
    "id" : "a090039a-cbcb-4080-bac7-13e683589ea4",
    "prId" : 4722,
    "comments" : [
      {
        "id" : "de68d247-41a5-4259-8958-90df8a5abdf4",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Minor: it would make sense to make the naming fully consistent here (`maxRecordTime` vs. `SubmitterInfo`'s `maximumRecordTime`).",
        "createdAt" : "2020-03-06T17:07:53Z",
        "updatedAt" : "2020-03-09T16:23:44Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ecd5f47ac6267722864002b678eeaa67142ff5cd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +139,143 @@      applicationId = LedgerString.assertFromString(subInfo.getApplicationId),\n      commandId = LedgerString.assertFromString(subInfo.getCommandId),\n      maxRecordTime = parseTimestamp(subInfo.getMaximumRecordTime),\n      deduplicateUntil = parseTimestamp(subInfo.getDeduplicateUntil).toInstant,\n    )"
  },
  {
    "id" : "9f46be95-7976-4abf-b1e4-9c7214820e1a",
    "prId" : 637,
    "comments" : [
      {
        "id" : "688ea483-a4be-46e2-bc9f-3b837c10f0ec",
        "parentId" : null,
        "author" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "body" : "comment",
        "createdAt" : "2019-04-26T13:21:59Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d5b2167d99861a69fd3366ab5fb08acc35514642",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@  * data structures.\n  */\nprivate[kvutils] object Conversions {\n\n  def toAbsCoid(txId: DamlLogEntryId, coid: ContractId): AbsoluteContractId = {"
  }
]