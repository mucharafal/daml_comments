[
  {
    "id" : "11827371-11c2-42d7-bc30-ef0839f086f3",
    "prId" : 3923,
    "comments" : [
      {
        "id" : "e43b62dc-2629-47e8-a547-d7b57b2eceda",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Just `extends ReportsHealth` instead. And probably don't provide a default value.",
        "createdAt" : "2019-12-23T09:13:40Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a5922f62-e604-4b22-b769-242541e0d940",
        "parentId" : "e43b62dc-2629-47e8-a547-d7b57b2eceda",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Changed.",
        "createdAt" : "2020-01-06T09:53:39Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ee7c68c6-4882-43da-9f05-12c7210c0af6",
        "parentId" : "e43b62dc-2629-47e8-a547-d7b57b2eceda",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I see this conversation is marked as solved but if I'm not mistaken the code didn't change, so I guess you came offline to a mutual understanding of why the existing code would be better. Would you mind writing down here the reasoning, so that everybody has visibility on it? Thanks. :slightly_smiling_face: ",
        "createdAt" : "2020-01-06T16:31:15Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c820159bc8cad55858939f177705f0a8bab0fd13",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,28 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.participant.state.kvutils.api\n+\n+import akka.NotUsed\n+import akka.stream.scaladsl.Source\n+import com.daml.ledger.participant.state.kvutils.DamlKvutils.DamlLogEntryId\n+import com.daml.ledger.participant.state.v1.{Configuration, LedgerId, Offset, TimeModel}\n+import com.digitalasset.ledger.api.health.{HealthStatus, Healthy}\n+@SuppressWarnings(Array(\"org.wartremover.warts.ArrayEquals\"))\n+case class LedgerRecord(offset: Offset, entryId: DamlLogEntryId, envelope: Array[Byte])\n+\n+trait LedgerReader {\n+  def events(offset: Option[Offset]): Source[LedgerRecord, NotUsed]\n+\n+  def retrieveLedgerId(): LedgerId\n+\n+  def checkHealth(): HealthStatus = Healthy"
  },
  {
    "id" : "69c40d48-b178-442f-92af-cbb54904cf10",
    "prId" : 3923,
    "comments" : [
      {
        "id" : "fa4294ac-2075-4ba5-9980-514e2fa0698e",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Newline above this please.",
        "createdAt" : "2019-12-23T10:24:31Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "242007d1-0d80-421a-9d6e-78380c5d58b5",
        "parentId" : "fa4294ac-2075-4ba5-9980-514e2fa0698e",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Done.",
        "createdAt" : "2020-01-06T12:23:12Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c820159bc8cad55858939f177705f0a8bab0fd13",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,27 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.participant.state.kvutils.api\n+\n+import akka.NotUsed\n+import akka.stream.scaladsl.Source\n+import com.daml.ledger.participant.state.kvutils.DamlKvutils.DamlLogEntryId\n+import com.daml.ledger.participant.state.v1.{Configuration, LedgerId, Offset, TimeModel}\n+import com.digitalasset.ledger.api.health.{HealthStatus, Healthy}\n+@SuppressWarnings(Array(\"org.wartremover.warts.ArrayEquals\"))"
  },
  {
    "id" : "2b312639-e070-4b3c-9eb0-73c6025eff43",
    "prId" : 3923,
    "comments" : [
      {
        "id" : "e7037830-57c9-40d6-a16a-45500a0804a5",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Shouldn't this be returning a `Future[LedgerId]`?",
        "createdAt" : "2019-12-23T11:13:40Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0bb19720-7f43-4f14-bf08-c199cbc19f98",
        "parentId" : "e7037830-57c9-40d6-a16a-45500a0804a5",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Yes, that would suit use-cases when this needs to be fetched via an RPC call.",
        "createdAt" : "2020-01-06T13:56:16Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "91f70125-c246-4211-82fe-27c6d979b98f",
        "parentId" : "e7037830-57c9-40d6-a16a-45500a0804a5",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "I've made a note to do this later as part of the next related PR.",
        "createdAt" : "2020-01-08T16:51:59Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c820159bc8cad55858939f177705f0a8bab0fd13",
    "line" : 22,
    "diffHunk" : "@@ -0,0 +1,27 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.participant.state.kvutils.api\n+\n+import akka.NotUsed\n+import akka.stream.scaladsl.Source\n+import com.daml.ledger.participant.state.kvutils.DamlKvutils.DamlLogEntryId\n+import com.daml.ledger.participant.state.v1.{Configuration, LedgerId, Offset, TimeModel}\n+import com.digitalasset.ledger.api.health.{HealthStatus, Healthy}\n+@SuppressWarnings(Array(\"org.wartremover.warts.ArrayEquals\"))\n+case class LedgerRecord(offset: Offset, entryId: DamlLogEntryId, envelope: Array[Byte])\n+\n+trait LedgerReader {\n+  def events(offset: Option[Offset]): Source[LedgerRecord, NotUsed]\n+\n+  def retrieveLedgerId(): LedgerId"
  },
  {
    "id" : "76d42027-03f9-4727-b2e4-58c1c8c809bd",
    "prId" : 3923,
    "comments" : [
      {
        "id" : "de3795f0-790b-48fd-a7ba-cbc4228eee72",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "`Array`s are only equal if they are the same reference. This might not be a problem right now, but is a potential problem. One could move the `envelope` field out of the scope of equality by putting it into a separate parameter list.\r\n\r\n```\r\nscala> Array(1) == Array(1)\r\nres0: Boolean = false\r\n\r\nscala> val arr = Array(1)\r\narr: Array[Int] = Array(1)\r\n\r\nscala> arr == arr\r\nres1: Boolean = true\r\n```",
        "createdAt" : "2020-01-06T13:18:06Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e82a1e06-7588-409b-8366-344a1174a301",
        "parentId" : "de3795f0-790b-48fd-a7ba-cbc4228eee72",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Alternatively, `LedgerRecord` might not need to be a case class, if it is only used as a transport object / handle for the data and doesn't need to be compared, etc...",
        "createdAt" : "2020-01-06T13:29:33Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "51c518d6-9b6c-48f5-b41c-cf5023a54f2d",
        "parentId" : "de3795f0-790b-48fd-a7ba-cbc4228eee72",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Switched to a plain class.",
        "createdAt" : "2020-01-06T16:18:26Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c820159bc8cad55858939f177705f0a8bab0fd13",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,27 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.participant.state.kvutils.api\n+\n+import akka.NotUsed\n+import akka.stream.scaladsl.Source\n+import com.daml.ledger.participant.state.kvutils.DamlKvutils.DamlLogEntryId\n+import com.daml.ledger.participant.state.v1.{Configuration, LedgerId, Offset, TimeModel}\n+import com.digitalasset.ledger.api.health.{HealthStatus, Healthy}\n+@SuppressWarnings(Array(\"org.wartremover.warts.ArrayEquals\"))\n+case class LedgerRecord(offset: Offset, entryId: DamlLogEntryId, envelope: Array[Byte])"
  },
  {
    "id" : "fded56e3-01fb-4354-92a7-c95b489fb2e0",
    "prId" : 3923,
    "comments" : [
      {
        "id" : "9ff3a895-a0b7-4ca9-8d84-aadd3868a72d",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "this should be `DefaultConfiguration`?",
        "createdAt" : "2020-01-08T17:03:25Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1f30af2d-95b9-462e-9ece-4cfcccd47248",
        "parentId" : "9ff3a895-a0b7-4ca9-8d84-aadd3868a72d",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Yes -- renamed it.",
        "createdAt" : "2020-01-08T17:31:45Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c820159bc8cad55858939f177705f0a8bab0fd13",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,30 @@\n+// Copyright (c) 2020 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.participant.state.kvutils.api\n+\n+import akka.NotUsed\n+import akka.stream.scaladsl.Source\n+import com.daml.ledger.participant.state.kvutils.DamlKvutils.DamlLogEntryId\n+import com.daml.ledger.participant.state.v1.{Configuration, LedgerId, Offset, TimeModel}\n+import com.digitalasset.ledger.api.health.ReportsHealth\n+\n+class LedgerRecord(val offset: Offset, val entryId: DamlLogEntryId, val envelope: Array[Byte]) {}\n+\n+object LedgerRecord {\n+  def apply(offset: Offset, entryId: DamlLogEntryId, envelope: Array[Byte]): LedgerRecord =\n+    new LedgerRecord(offset, entryId, envelope)\n+}\n+\n+trait LedgerReader extends ReportsHealth with AutoCloseable {\n+  def events(offset: Option[Offset]): Source[LedgerRecord, NotUsed]\n+\n+  def retrieveLedgerId(): LedgerId\n+}\n+\n+object LedgerReader {\n+  val DefaultTimeModel = Configuration("
  }
]