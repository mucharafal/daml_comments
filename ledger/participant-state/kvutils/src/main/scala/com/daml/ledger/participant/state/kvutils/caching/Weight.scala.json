[
  {
    "id" : "df5f673b-881c-4154-82ad-ce038bfed8f5",
    "prId" : 5426,
    "comments" : [
      {
        "id" : "4cc23cc4-f0d4-4d7d-888b-f0d46f329e94",
        "parentId" : null,
        "author" : {
          "login" : "ben-manes",
          "name" : "Ben Manes",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/378614?v=4"
        },
        "body" : "You can use `cache.policy().eviction()` to obtain the `weightedSize()`",
        "createdAt" : "2020-04-06T17:11:14Z",
        "updatedAt" : "2020-04-06T17:11:14Z",
        "lastEditedBy" : {
          "login" : "ben-manes",
          "name" : "Ben Manes",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/378614?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fdb1e31a-29eb-477d-9268-c7dfd6b59914",
        "parentId" : "4cc23cc4-f0d4-4d7d-888b-f0d46f329e94",
        "author" : {
          "login" : "ben-manes",
          "name" : "Ben Manes",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/378614?v=4"
        },
        "body" : "Assuming the same weigher, of course.",
        "createdAt" : "2020-04-06T17:11:54Z",
        "updatedAt" : "2020-04-06T17:11:54Z",
        "lastEditedBy" : {
          "login" : "ben-manes",
          "name" : "Ben Manes",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/378614?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "496fccda-d670-4938-9627-aef708763855",
        "parentId" : "4cc23cc4-f0d4-4d7d-888b-f0d46f329e94",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Thanks! This let me delete a chunk of code. ðŸ˜€\r\n\r\nI opened #5461 with your suggestion.",
        "createdAt" : "2020-04-07T08:40:45Z",
        "updatedAt" : "2020-04-07T08:40:45Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3d02b4d5980332a10e8ba6b26dda8c844e1a6e87",
    "line" : 28,
    "diffHunk" : "@@ -0,0 +1,44 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.participant.state.kvutils.caching\n+\n+import com.daml.ledger.participant.state.kvutils.Bytes\n+import com.github.benmanes.caffeine.{cache => caffeine}\n+import com.google.protobuf.MessageLite\n+\n+trait Weight[-T] {\n+  def weigh(value: T): Size\n+}\n+\n+object Weight {\n+  def apply[T](implicit weight: Weight[T]): Weight[T] =\n+    weight\n+\n+  def weigh[T](value: T)(implicit weight: Weight[T]): Size =\n+    weight.weigh(value)\n+\n+  def weigher[Key: Weight, Value: Weight]: caffeine.Weigher[Key, Value] =\n+    new WeightWeigher[Key, Value]\n+\n+  def ofCache[Key, Value](cache: Cache[Key, Value])(\n+      implicit keyWeight: Weight[Key],\n+      valueWeight: Weight[Value],\n+  ): Size =\n+    cache.entries.map { case (key, value) => keyWeight.weigh(key) + valueWeight.weigh(value) }.sum"
  }
]