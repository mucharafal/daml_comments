[
  {
    "id" : "e6175b1f-a30e-4361-bfa8-54364c5d00be",
    "prId" : 6793,
    "comments" : [
      {
        "id" : "e2795371-70e3-468d-93d1-d11d355810eb",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "If you are using pre-execution then you should only lock ledger state when committing.",
        "createdAt" : "2020-07-24T16:00:25Z",
        "updatedAt" : "2020-08-05T07:01:01Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a54d6153-b7c1-4f73-85b9-a561c861f423",
        "parentId" : "e2795371-70e3-468d-93d1-d11d355810eb",
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "(And on every single read as the map is not synchronized) This means enabling concurrent pre-execution that currently does not pass conformance. See [this PR](https://github.com/digital-asset/daml/pull/6862) for concurrent pre-execution.",
        "createdAt" : "2020-07-24T17:05:02Z",
        "updatedAt" : "2020-08-05T07:01:01Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b29591138330b767e0e3a5dc19bca73b14d0522c",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +57,61 @@      implicit executionContext: ExecutionContext): Future[SubmissionResult] =\n    // Sequential pre-execution, implemented by enclosing the whole pre-post-exec pipeline is a single transaction.\n    ledgerStateAccess.inTransaction { ledgerStateOperations =>\n      for {\n        preExecutionOutput <- validator"
  },
  {
    "id" : "64d6871e-5a1a-4a88-b70c-a534b71cb294",
    "prId" : 6793,
    "comments" : [
      {
        "id" : "8f02a0f1-b7ad-421e-9f51-7ed7ea485417",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "For pre-execution we shouldn't need new instances of `LedgerStateReader` for every request.",
        "createdAt" : "2020-07-24T16:01:47Z",
        "updatedAt" : "2020-08-05T07:01:01Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6a45bf95-ec8b-40a9-82bd-b4380fc4d3b0",
        "parentId" : "8f02a0f1-b7ad-421e-9f51-7ed7ea485417",
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "We do, but only because the transaction is opened every time a commit operation is initiated (and only in the context of the transaction we have access to the operations).",
        "createdAt" : "2020-08-03T16:44:24Z",
        "updatedAt" : "2020-08-05T07:01:01Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b29591138330b767e0e3a5dc19bca73b14d0522c",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +64,68 @@            correlationId,\n            submittingParticipantId,\n            CachingDamlLedgerStateReaderWithFingerprints(\n              stateValueCache,\n              cacheUpdatePolicy,"
  }
]