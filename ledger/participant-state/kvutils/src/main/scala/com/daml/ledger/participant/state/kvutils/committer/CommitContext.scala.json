[
  {
    "id" : "1e7a14c9-9fea-427a-b72e-35ad921e348e",
    "prId" : 6630,
    "comments" : [
      {
        "id" : "72972b4e-0833-4e2b-adb9-3c19b19ba977",
        "parentId" : null,
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "We might want to turn all these `var` into properties for easier testability,",
        "createdAt" : "2020-07-08T14:46:53Z",
        "updatedAt" : "2020-07-09T10:04:48Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "005b69e1-0ace-4779-8127-8ffa00eb68af",
        "parentId" : "72972b4e-0833-4e2b-adb9-3c19b19ba977",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "That's exactly the same comment I had on this before for you ;) mockito is happy to stub these as well so didn't make that change.",
        "createdAt" : "2020-07-17T09:25:46Z",
        "updatedAt" : "2020-07-17T09:25:47Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "30f59a7ea813c8683703e913a307efff5574108f",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +48,52 @@  // Rejection log entry used for generating an out-of-time-bounds log entry in case of\n  // pre-execution.\n  var outOfTimeBoundsLogEntry: Option[DamlLogEntry] = None\n\n  def getRecordTime: Option[Timestamp]"
  },
  {
    "id" : "c2a24cd3-db8a-4f28-bb27-86b543dc0611",
    "prId" : 6567,
    "comments" : [
      {
        "id" : "7e3d0d9f-dbb6-4958-95d7-ae128880deeb",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "I wouldn't make this `final`. If we keep the same `CommitContext` interface for both pre-execution vs. normal use-cases then these two methods must be implemented in `Committer` in order to avoid rebuilding the input map every time for normal execution.\r\nA simple solution is to lazily transform the inputs to the other type (i.e., inputs with vs. without fingerprints).",
        "createdAt" : "2020-07-03T08:33:56Z",
        "updatedAt" : "2020-07-03T08:42:54Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "112848b33c7d7e20093c922504fa5e654512b27a",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +28,32 @@\n  def inputsWithFingerprints: DamlStateMapWithFingerprints\n  final def inputs: DamlStateMap = inputsWithFingerprints.map {\n    case (key, (value, _)) => (key, value)\n  }"
  },
  {
    "id" : "972e0c18-1e47-4b8c-8216-35469c99683e",
    "prId" : 6567,
    "comments" : [
      {
        "id" : "e7ab8dae-c130-4a92-9c8b-0971713a27a4",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "We may leave associating fingerprints to accessed input keys to the caller, i.e., that would keep this interface less tailored to pre-execution (as we are using the same fingerprints that have been input this is trivial to do at the caller side) as well as remove the need to have an `inputsWithFingerprints` method.",
        "createdAt" : "2020-07-03T08:38:51Z",
        "updatedAt" : "2020-07-03T08:48:45Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "112848b33c7d7e20093c922504fa5e654512b27a",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +79,83 @@\n  /** Get the accessed input key set. */\n  def getAccessedInputKeysWithFingerprints: collection.Set[(DamlStateKey, Fingerprint)] =\n    accessedInputKeysAndFingerprints\n"
  },
  {
    "id" : "ebda99af-877c-46c7-b9da-0ca772cf4abf",
    "prId" : 6166,
    "comments" : [
      {
        "id" : "e9284a3e-64c0-4cb7-8fbd-48e42c8fb527",
        "parentId" : null,
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "Every `Committer` uses its own `CommitContext`, so the output order is determinized for each DamlSubmission in isolation. The output order across several DamlSubmissions does not seem to be deterministic given that `BatchedSubmissionValidator` calls `commit`s inside a `mapAsync`. I'm not sure though why we even need deterministic output order here. Can you check why we need the deterministic output order in the first place?",
        "createdAt" : "2020-06-02T06:57:19Z",
        "updatedAt" : "2020-06-02T10:17:50Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2ce165e7-c8be-4276-966c-a6077e577154",
        "parentId" : "e9284a3e-64c0-4cb7-8fbd-48e42c8fb527",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "We ensure determinisim in `BatchedSubmissionValidator` by doing the conflict detection first (according to a fixed order) and only `commit`ing submissions that won't conflict and will generate the same write set regardless of order of execution.\r\nWe need deterministic output for historical reasons here -- we may want to relax this requirement.",
        "createdAt" : "2020-06-02T08:38:04Z",
        "updatedAt" : "2020-06-02T10:17:50Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bee9ecdf-b14a-475b-b67e-31ab9bc5a809",
        "parentId" : "e9284a3e-64c0-4cb7-8fbd-48e42c8fb527",
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "Makes sense. Thanks for explaining the historical reasons.",
        "createdAt" : "2020-06-02T09:16:21Z",
        "updatedAt" : "2020-06-02T10:17:50Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4fa409c01178f2afb0bc265221613b023a96b20b",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +24,28 @@  def inputs: DamlStateMap\n  // NOTE(JM): The outputs must be iterable in deterministic order, hence we\n  // keep track of insertion order.\n  private val outputOrder: mutable.ArrayBuffer[DamlStateKey] =\n    mutable.ArrayBuffer()"
  }
]