[
  {
    "id" : "affbc7e3-2117-4f30-af2d-21e96c65335a",
    "prId" : 6538,
    "comments" : [
      {
        "id" : "4b143c09-cffc-4139-81c8-987504a87f05",
        "parentId" : null,
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "Why is that needed and what's the connection with this PR's topic? There are similar occurrences in other committers too.",
        "createdAt" : "2020-07-01T08:42:52Z",
        "updatedAt" : "2020-07-01T13:47:51Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "156d9e16-1c67-41de-88c0-14eb5212f33b",
        "parentId" : "4b143c09-cffc-4139-81c8-987504a87f05",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "In #6526  I accidentally removed generating the empty dedup value. In case of a `oneof` protobuf type we need to have a value set (even if it's empty) -- hence these changes.",
        "createdAt" : "2020-07-01T12:43:41Z",
        "updatedAt" : "2020-07-01T13:47:51Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "40b42d61-c538-447b-86bd-250d0bec1eef",
        "parentId" : "4b143c09-cffc-4139-81c8-987504a87f05",
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "OK, ideally we should have that in a separate PR but I understand it's not worth the hassle, unless there's an SDK release with this issue though.",
        "createdAt" : "2020-07-01T13:31:14Z",
        "updatedAt" : "2020-07-01T13:47:51Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fbc24f12-91fa-4e9c-b46c-1519f5a987cf",
        "parentId" : "4b143c09-cffc-4139-81c8-987504a87f05",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Yes. protobuf allows setting at most one value in a `oneof` so unless our code tries to read a value the serialization/deserialization should work. However, we could remove these empty dedup messages altogether in a separate PR.",
        "createdAt" : "2020-07-01T13:38:32Z",
        "updatedAt" : "2020-07-01T13:47:51Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7fcd13b1e8abafa8318221497401dd1746cfe5e2",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +160,164 @@      configDedupKey(ctx.getParticipantId, result.submission.getSubmissionId),\n      DamlStateValue.newBuilder\n        .setSubmissionDedup(DamlSubmissionDedupValue.newBuilder)\n        .build\n    )"
  },
  {
    "id" : "cc2a62ba-9cd5-4cd6-9975-82c3437e32de",
    "prId" : 3847,
    "comments" : [
      {
        "id" : "8de920db-e365-4325-a5d4-bc8b6a01caca",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "make this a constant.",
        "createdAt" : "2019-12-17T12:18:53Z",
        "updatedAt" : "2019-12-17T18:52:24Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4520fb14-8984-416b-9476-f6af3d47da1a",
        "parentId" : "8de920db-e365-4325-a5d4-bc8b6a01caca",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "Not sure I follow, this is a constant, and its application is wrapped in a function",
        "createdAt" : "2019-12-17T16:17:29Z",
        "updatedAt" : "2019-12-17T18:52:24Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "386b7afb-0e3b-470f-a42e-efd47b8ea2f1",
        "parentId" : "8de920db-e365-4325-a5d4-bc8b6a01caca",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Meant that only compute this value once (e.g. `val dedupValue = DamlStateValue.newBuilder`). This doesn't make sense anymore as we have the record time there. ",
        "createdAt" : "2019-12-17T18:01:14Z",
        "updatedAt" : "2019-12-17T18:52:24Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c9a07f89574f1c170c540c240010fa88a826ce2f",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +154,158 @@    ctx.set(\n      configDedupKey(ctx.getParticipantId, result.submission.getSubmissionId),\n      DamlStateValue.newBuilder\n        .setSubmissionDedup(\n          DamlSubmissionDedupValue.newBuilder"
  },
  {
    "id" : "1944c459-3d46-4216-a67e-b3c45c2aef4e",
    "prId" : 3780,
    "comments" : [
      {
        "id" : "3a953d9c-1062-47b3-bd81-9ca2956d5911",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "consider already in this PR pulling the checkTtl and authorizeSubmission to be built into Committer (we'll of course need to specify how to build the timeout/participant not authorized results).",
        "createdAt" : "2019-12-09T10:31:44Z",
        "updatedAt" : "2019-12-10T08:35:01Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "52a409b2-3019-4caf-9553-cee27f099a9c",
        "parentId" : "3a953d9c-1062-47b3-bd81-9ca2956d5911",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "Haven't done that one. The commonalities are still too hard to spot through the thicket of diverging abstractions.",
        "createdAt" : "2019-12-10T07:24:08Z",
        "updatedAt" : "2019-12-10T08:35:01Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "485c0c8b47042f401b12c0c13992bc13ed2ea4dd",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +28,32 @@    logger.trace(s\"Configuration rejected, $msg, correlationId=${submission.getSubmissionId}\")\n\n  private val checkTtl: Step = (ctx, result) => {\n    // Check the maximum record time against the record time of the commit.\n    // This mechanism allows the submitter to detect lost submissions and retry"
  }
]