[
  {
    "id" : "edc83f5b-ca6c-478b-a891-59650430eea7",
    "prId" : 7460,
    "comments" : [
      {
        "id" : "f96b6174-69a8-4b39-bf94-bfde678d8a57",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Not sure if this is inherited from earlier code or not, but this would only update the metric once at startup which isn't the idea. It should be done from within a step or probably preferably this is a metric that the engine should maintain and it shouldn't belong here.",
        "createdAt" : "2020-09-29T14:46:54Z",
        "updatedAt" : "2020-10-08T09:30:43Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4634ee6c-7e67-4d6d-ae14-d3a2b3772ad7",
        "parentId" : "f96b6174-69a8-4b39-bf94-bfde678d8a57",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "It is from the original code. \r\nCurrently the Engine does not handle metric. If we want to do so, I will prefer wrapping it in a kv specific class. \r\nFor now, I moved this code at the end of the preload step.\r\n  ",
        "createdAt" : "2020-09-29T15:29:14Z",
        "updatedAt" : "2020-10-08T09:30:43Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0a4599bcbf38cacac4088b9b73021b01c997c440",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,130 @@\n+package com.daml.ledger.participant.state.kvutils.committer\n+\n+import com.daml.daml_lf_dev.DamlLf.Archive\n+import com.daml.ledger.participant.state.kvutils.DamlKvutils.Invalid\n+import com.daml.ledger.participant.state.kvutils.committer.Committer.StepInfo\n+import com.daml.lf.archive.Decode\n+import com.daml.lf.data.Ref\n+import com.daml.lf.engine.Engine\n+import com.daml.lf.language.Ast\n+import com.daml.metrics.Metrics\n+\n+import scala.collection.JavaConverters._\n+\n+/*\n+ * This PackagesCommitter performs a minimal package validation before commit and\n+ * upload the packages in the engine in a background process.\n+ *\n+ * This is design for kvutils integrations that cannot long-running submissions.\n+ * When using this committer, packages on the ledger cannot be trusted and should be\n+ * validated each time uploaded to the engine.\n+ */\n+private[committer] class PackageUploader(\n+    engine: Engine,\n+    metrics: Metrics\n+) extends PackageCommitter(metrics) {\n+\n+  override protected val committerName: String = \"package_upload\"\n+\n+  metrics.daml.kvutils.committer.packageUpload.loadedPackages(() =>"
  },
  {
    "id" : "7fc50add-179b-4150-9f11-cb1b74cf1225",
    "prId" : 7460,
    "comments" : [
      {
        "id" : "4efaae54-fff0-448a-9d4b-29dbd43b3753",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Sorry for not bringing this up in previous review round, but the naming here is also confusing. Could you name these so that it's clear to the reader that these are different \"PackageCommitter\" variants? E.g. NonValidatingPackageCommitter, HashValidatingPackageCommitter and maybe FullValidatingPackageCommitter (or better names if you can think of them). This way it's clear at a glance what these are.",
        "createdAt" : "2020-09-30T10:55:53Z",
        "updatedAt" : "2020-10-08T09:30:43Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5b35659a-ee58-4d88-84f4-9ba621907fac",
        "parentId" : "4efaae54-fff0-448a-9d4b-29dbd43b3753",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I agree with Jussi.",
        "createdAt" : "2020-09-30T15:37:08Z",
        "updatedAt" : "2020-10-08T09:30:43Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0a4599bcbf38cacac4088b9b73021b01c997c440",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,127 @@\n+package com.daml.ledger.participant.state.kvutils.committer\n+\n+import com.daml.daml_lf_dev.DamlLf.Archive\n+import com.daml.ledger.participant.state.kvutils.DamlKvutils.Invalid\n+import com.daml.ledger.participant.state.kvutils.committer.Committer.StepInfo\n+import com.daml.lf.archive.Decode\n+import com.daml.lf.data.Ref\n+import com.daml.lf.engine.Engine\n+import com.daml.lf.language.Ast\n+import com.daml.metrics.Metrics\n+\n+import scala.collection.JavaConverters._\n+\n+/*\n+ * This PackagesCommitter performs a minimal package validation before commit and\n+ * upload the packages in the engine in a background process.\n+ *\n+ * This is design for kvutils integrations that cannot long-running submissions.\n+ * When using this committer, packages on the ledger cannot be trusted and should be\n+ * validated each time uploaded to the engine.\n+ */\n+private[committer] class PackageUploader("
  }
]