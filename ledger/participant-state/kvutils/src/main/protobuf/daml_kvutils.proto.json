[
  {
    "id" : "4945845d-468d-4cdf-a024-0ff6ba6ea9ac",
    "prId" : 6603,
    "comments" : [
      {
        "id" : "c45783ec-87fc-47a9-a238-10ca7d356dc6",
        "parentId" : null,
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "This changes the state value format, does it have consequences? CC @mziolekda ",
        "createdAt" : "2020-07-03T14:05:32Z",
        "updatedAt" : "2020-07-03T14:06:22Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "331e3558-2730-4ef4-a452-a2734c624092",
        "parentId" : "c45783ec-87fc-47a9-a238-10ca7d356dc6",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "It doesn't change it as the field has been optional anyway (it does not need to be populated).",
        "createdAt" : "2020-07-03T14:46:55Z",
        "updatedAt" : "2020-07-03T14:46:55Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "612f5f8da43a0429722455669a93ad70007440e0",
    "line" : 6,
    "diffHunk" : "@@ -392,8 +392,7 @@ message DamlContractState {\n   // Optional, if set the contract has been archived.\n   google.protobuf.Timestamp archived_at = 2;\n \n-  // Optional. The log entry that caused the contract to be archived.\n-  DamlLogEntryId archived_by_entry = 3;\n+  reserved 3; // was archived_by_entry"
  },
  {
    "id" : "c3ea247f-72b1-4975-88b6-dc0c40bf3d08",
    "prId" : 6515,
    "comments" : [
      {
        "id" : "f6fd2aff-cceb-4d96-9078-bdca8c001cf1",
        "parentId" : null,
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "I'm surprised that you want to ship the estimated_interpretation_cost as part of a correlated submission, which is only used for batching. Given that we don't plan to use batching and pre-execution simultaneously, I wonder why we need this at all. Batching could just set the timing parameter to `None` for the underlying LedgerWriter.",
        "createdAt" : "2020-06-29T15:34:17Z",
        "updatedAt" : "2020-06-30T08:52:03Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5345d5e1-05ad-429b-ad12-028d316fd809",
        "parentId" : "f6fd2aff-cceb-4d96-9078-bdca8c001cf1",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "That's a good point. I have added this before making the timing parameter in `CommitMetadata` optional -- removing it.",
        "createdAt" : "2020-06-30T08:28:39Z",
        "updatedAt" : "2020-06-30T08:52:03Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5b5d17d48af638f059d785c2d530c2f7d89eec0e",
    "line" : null,
    "diffHunk" : "@@ -71,6 +71,7 @@ message DamlSubmissionBatch {\n   message CorrelatedSubmission {\n     bytes submission = 1;\n     string correlation_id = 2;\n+    int64 estimated_interpretation_cost = 3;"
  },
  {
    "id" : "38938ba1-f27b-4efe-8201-be983a666532",
    "prId" : 5608,
    "comments" : [
      {
        "id" : "63785f58-b448-4a26-8f26-3f5f9f6c12a2",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Please note here how this timestamp is determined (i.e., that it is ledger effective time) or rename it to `active_at_ledger_effective_time` or similar.",
        "createdAt" : "2020-04-20T16:22:48Z",
        "updatedAt" : "2020-04-22T08:28:36Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c2988b8a-5e6d-4952-9fac-ce785c128571",
        "parentId" : "63785f58-b448-4a26-8f26-3f5f9f6c12a2",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I used the same name and comment as in `DamlContractState`. I can change it, but then these two fields are inconcistent.",
        "createdAt" : "2020-04-21T10:12:11Z",
        "updatedAt" : "2020-04-22T08:28:36Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "252c98bc-6301-4fa3-bfda-583b9c7af07e",
        "parentId" : "63785f58-b448-4a26-8f26-3f5f9f6c12a2",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Well, if this is a general concept (i.e., fields of type `Timestamp` general refer to a ledger effective time) then this does not need to be changed but we need to make sure we state such context in `daml_kvutils.proto`.",
        "createdAt" : "2020-04-21T13:06:47Z",
        "updatedAt" : "2020-04-22T08:28:36Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6dda7a7b-a3ce-4a12-acb5-c0860ab9d095",
        "parentId" : "63785f58-b448-4a26-8f26-3f5f9f6c12a2",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I added more comments to both fields in 14a595f.",
        "createdAt" : "2020-04-22T08:30:07Z",
        "updatedAt" : "2020-04-22T08:30:07Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "14a595f3821f329c479056c81f9a9413d0109715",
    "line" : 14,
    "diffHunk" : "@@ -438,6 +438,9 @@ message DamlContractKeyState {\n   // The contract to which the key points to.\n   // If unset the key is inactive.\n   string contract_id = 1;\n+\n+  // The time from which the contract is active."
  },
  {
    "id" : "28cafc21-d86c-40d8-abb2-11ef5c284775",
    "prId" : 5242,
    "comments" : [
      {
        "id" : "ba031b62-b183-49a3-a233-25d6ab776d96",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Accidental line?",
        "createdAt" : "2020-03-27T11:20:51Z",
        "updatedAt" : "2020-04-02T17:56:41Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "64c508cfb374ce5826a0006b0a54b5ecfea275ab",
    "line" : null,
    "diffHunk" : "@@ -350,11 +350,15 @@ message DamlCommandDedupKey {\n   string submitter = 1;\n   string application_id = 2;\n   string command_id = 3;\n+  google.protobuf.Timestamp submissionUntil = 4;"
  },
  {
    "id" : "f364c4bf-227f-49ce-90b3-ee779094f80e",
    "prId" : 5242,
    "comments" : [
      {
        "id" : "ac142ab3-3891-4fbc-bc4f-9117df08be39",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Please add a comment. Perhaps a better name could be `deduplicated_until`?",
        "createdAt" : "2020-03-27T11:21:27Z",
        "updatedAt" : "2020-04-02T17:56:41Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "64c508cfb374ce5826a0006b0a54b5ecfea275ab",
    "line" : null,
    "diffHunk" : "@@ -350,11 +350,15 @@ message DamlCommandDedupKey {\n   string submitter = 1;\n   string application_id = 2;\n   string command_id = 3;\n+  google.protobuf.Timestamp submissionUntil = 4;\n+\n+\n }\n \n message DamlCommandDedupValue {\n   // record time will be used in the future for pruning\n   google.protobuf.Timestamp record_time = 1;\n+  google.protobuf.Timestamp deduplication_time = 2;"
  },
  {
    "id" : "722be213-8d5a-4bad-ab5b-ae76b02e7f90",
    "prId" : 5100,
    "comments" : [
      {
        "id" : "5d240e78-f0d1-4f8a-8379-6a85c9df1fd7",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Can you `reserve` the field here as well?",
        "createdAt" : "2020-03-20T17:25:19Z",
        "updatedAt" : "2020-03-25T08:01:02Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d421ae1a437d89063df1c3e40078f52885762eaf",
    "line" : null,
    "diffHunk" : "@@ -167,7 +166,7 @@ message DamlTransactionRejectionEntry {\n     Inconsistent inconsistent = 2;\n     Disputed disputed = 3;\n     ResourcesExhausted resources_exhausted = 4;\n-    MaximumRecordTimeExceeded maximum_record_time_exceeded = 5;\n+    // deprecated maximum_record_time_exceeded = 5;"
  },
  {
    "id" : "ff2846c9-b27f-4054-87f1-1eb90b8ee6d4",
    "prId" : 5023,
    "comments" : [
      {
        "id" : "2969b464-4b8e-4408-91c4-2238ee56b3d4",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Is a string sufficient here, i.e., wouldn't it be beneficial to store e.g. the exact time that violated a time constraint?",
        "createdAt" : "2020-03-16T17:32:23Z",
        "updatedAt" : "2020-03-17T12:07:46Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "51b72383-4c2a-4191-a31c-78f22f1a91a0",
        "parentId" : "2969b464-4b8e-4408-91c4-2238ee56b3d4",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "All of these messages (e.g., `MaximumRecordTimeExceeded`, `PartyNotKnownOnLedger`, `Inconsistent`) only contain one human-readable description that ultimately ends up in a gRPC error status.",
        "createdAt" : "2020-03-17T07:09:17Z",
        "updatedAt" : "2020-03-17T12:07:46Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b64c0523-9c05-4300-bc8e-d056172faee7",
        "parentId" : "2969b464-4b8e-4408-91c4-2238ee56b3d4",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Thanks for the confirmation. In that case we might want to revisit how we model these errors as I don't see the point in having separate message types if they contain the same field. I.e., an enum plus one message definition would suffice.",
        "createdAt" : "2020-03-17T09:04:45Z",
        "updatedAt" : "2020-03-17T12:07:46Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "89832a788482cb4316af912ba73c5abcbae963aa",
    "line" : 14,
    "diffHunk" : "@@ -473,6 +474,11 @@ message MaximumRecordTimeExceeded {\n   string details = 1;\n }\n \n+// The ledger time of the transaction submission violates some constraint.\n+message InvalidLedgerTime {\n+  string details = 1;"
  },
  {
    "id" : "d4e59587-41b6-4ab9-aca3-f7f030d6348f",
    "prId" : 4776,
    "comments" : [
      {
        "id" : "54fe3930-9291-49c3-9a1f-3ab0d200df3d",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "comment would be helpful: what is it and what it's used for.",
        "createdAt" : "2020-03-10T12:46:39Z",
        "updatedAt" : "2020-03-11T09:35:58Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "87f38ebe-8620-40e0-a2bc-5e2ffe15942d",
        "parentId" : "54fe3930-9291-49c3-9a1f-3ab0d200df3d",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "done",
        "createdAt" : "2020-03-11T08:44:24Z",
        "updatedAt" : "2020-03-11T09:35:58Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a94af9a492326522034688b9bdf1cf1d90efd4e4",
    "line" : 6,
    "diffHunk" : "@@ -153,6 +153,8 @@ message DamlTransactionEntry {\n \n   // The nonce used to generate contract ids\n   bytes submission_seed = 5;\n+\n+  google.protobuf.Timestamp submission_time = 6;"
  },
  {
    "id" : "d7b4b3c5-3930-4823-a860-6ed7aa6e678f",
    "prId" : 4741,
    "comments" : [
      {
        "id" : "9386a6b4-96c4-4ea9-97c7-a17190f7eb64",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Please keep it as a message so we can extend it if needed.",
        "createdAt" : "2020-02-27T13:42:06Z",
        "updatedAt" : "2020-03-02T09:32:20Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c3aacce8-4502-4418-90f9-db9b07559449",
        "parentId" : "9386a6b4-96c4-4ea9-97c7-a17190f7eb64",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2020-02-27T18:17:07Z",
        "updatedAt" : "2020-03-02T09:32:20Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6fdd134e28edcb94e9bf2aff60e5605405bf6128",
    "line" : null,
    "diffHunk" : "@@ -321,7 +324,7 @@ message DamlStateValue {\n     DamlContractState contract_state = 2;\n     DamlCommandDedupValue command_dedup = 3;\n     DamlPartyAllocation party = 4;\n-    DamlContractKeyState contract_key_state = 5;\n+    string contract_key_state = 5;"
  },
  {
    "id" : "fe94b7dc-e87e-4887-aaf7-786cdf262b6e",
    "prId" : 4741,
    "comments" : [
      {
        "id" : "6761682d-2a90-4692-b8ee-827d7104fae7",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Why is submission seed here? I don't see how this can work, since we must also be able to deduplicate commands that are sent by different participants (we support a deployment where we have clones of the participant for high availability).",
        "createdAt" : "2020-02-27T13:42:38Z",
        "updatedAt" : "2020-03-02T09:32:20Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "996ca3b5-9c9a-4614-b39b-3e61e9c168d1",
        "parentId" : "6761682d-2a90-4692-b8ee-827d7104fae7",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "It has nothing to do here. I dropped it. Good catch ",
        "createdAt" : "2020-02-27T18:17:44Z",
        "updatedAt" : "2020-03-02T09:32:20Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6fdd134e28edcb94e9bf2aff60e5605405bf6128",
    "line" : null,
    "diffHunk" : "@@ -357,6 +360,9 @@ message DamlSubmissionDedupKey {\n \n   // Uploading participant's id.\n   string participant_id = 3;\n+\n+  // Seed use for interpretation.\n+  bytes submissionSeed = 4;"
  },
  {
    "id" : "13e2a23d-1963-48df-b4a0-4bf060bddaef",
    "prId" : 4741,
    "comments" : [
      {
        "id" : "0f9cc059-d30f-4779-8f21-25a5cc8ad471",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "use underscores.",
        "createdAt" : "2020-02-27T13:58:29Z",
        "updatedAt" : "2020-03-02T09:32:20Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e04bfb32-0b16-4f34-9880-2e8ea5886fca",
        "parentId" : "0f9cc059-d30f-4779-8f21-25a5cc8ad471",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2020-02-27T18:34:33Z",
        "updatedAt" : "2020-03-02T09:32:20Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6fdd134e28edcb94e9bf2aff60e5605405bf6128",
    "line" : null,
    "diffHunk" : "@@ -150,6 +150,9 @@ message DamlTransactionEntry {\n   // the bounds for valid timestamps in relation to the ledger record time\n   // (the time at which the transaction is committed).\n   google.protobuf.Timestamp ledger_effective_time = 4;\n+\n+  // The nonce used to generate contract ids\n+  bytes submissionSeed = 5;"
  },
  {
    "id" : "8a818428-46fe-48ed-9df6-0a3b18624f39",
    "prId" : 4741,
    "comments" : [
      {
        "id" : "6dd28cc4-77fe-4956-91ef-e01308518179",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "```suggestion\r\n  bytes submission_seed = 5;\r\n```",
        "createdAt" : "2020-02-27T14:21:45Z",
        "updatedAt" : "2020-03-02T09:32:20Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6fdd134e28edcb94e9bf2aff60e5605405bf6128",
    "line" : null,
    "diffHunk" : "@@ -150,6 +150,9 @@ message DamlTransactionEntry {\n   // the bounds for valid timestamps in relation to the ledger record time\n   // (the time at which the transaction is committed).\n   google.protobuf.Timestamp ledger_effective_time = 4;\n+\n+  // The nonce used to generate contract ids\n+  bytes submissionSeed = 5;"
  },
  {
    "id" : "b97cce42-e6d7-4093-a788-f5171bae781a",
    "prId" : 4741,
    "comments" : [
      {
        "id" : "fdc4ce70-3d16-484c-80c9-e8a92a721cea",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "```suggestion\r\n  bytes submission_seed = 4;\r\n```",
        "createdAt" : "2020-02-27T14:22:14Z",
        "updatedAt" : "2020-03-02T09:32:20Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6fdd134e28edcb94e9bf2aff60e5605405bf6128",
    "line" : null,
    "diffHunk" : "@@ -357,6 +360,9 @@ message DamlSubmissionDedupKey {\n \n   // Uploading participant's id.\n   string participant_id = 3;\n+\n+  // Seed use for interpretation.\n+  bytes submissionSeed = 4;"
  },
  {
    "id" : "e870e792-188d-43a3-8c5e-31d08100dd08",
    "prId" : 4722,
    "comments" : [
      {
        "id" : "433c2cc4-649e-4c4a-a0cc-4e24b9f483e2",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Shouldn't this be `expiry_time` instead? I.e., `ttl` means the lifetime of a command in relative terms in places (e.g., in the configuration) and in other places it means the time at which the command is going to expire. We should use consistent naming.",
        "createdAt" : "2020-02-27T16:29:44Z",
        "updatedAt" : "2020-03-09T16:23:44Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c1510482-7487-4cd8-bb26-477dd4de8742",
        "parentId" : "433c2cc4-649e-4c4a-a0cc-4e24b9f483e2",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Good point, the `TTL` name is not very good, I'll rename it everywhere.",
        "createdAt" : "2020-02-27T17:45:30Z",
        "updatedAt" : "2020-03-09T16:23:44Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f431a8fc-d820-4535-9521-cacc64b9935d",
        "parentId" : "433c2cc4-649e-4c4a-a0cc-4e24b9f483e2",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : ":thumbsup:",
        "createdAt" : "2020-02-27T18:13:42Z",
        "updatedAt" : "2020-03-09T16:23:44Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ecd5f47ac6267722864002b678eeaa67142ff5cd",
    "line" : null,
    "diffHunk" : "@@ -122,6 +122,7 @@ message DamlSubmitterInfo {\n   string command_id = 2;\n   string application_id = 3;\n   google.protobuf.Timestamp maximum_record_time = 4;\n+  google.protobuf.Timestamp ttl = 5;"
  },
  {
    "id" : "02b7b1b3-a73b-49c4-972f-7e04341830ae",
    "prId" : 4722,
    "comments" : [
      {
        "id" : "a23a065e-f19a-46a7-b353-6db7cb076f7b",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "If the change is backwards incompatible and we cannot pick a default value for deduplicate_until, we should in principle bump kvutils version to make sure we fail in predictable manner (rather than with obscure decoding error). Have a look at kvutils/Version.scala and possibly bump the version. Also add a mention in that file about what changed and what the semantics are going forward.",
        "createdAt" : "2020-03-06T16:32:38Z",
        "updatedAt" : "2020-03-09T16:23:44Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ecd5f47ac6267722864002b678eeaa67142ff5cd",
    "line" : 4,
    "diffHunk" : "@@ -122,6 +122,7 @@ message DamlSubmitterInfo {\n   string command_id = 2;\n   string application_id = 3;\n   google.protobuf.Timestamp maximum_record_time = 4;\n+  google.protobuf.Timestamp deduplicate_until = 5;"
  },
  {
    "id" : "91b02ae6-6ad3-4cb0-9fb7-76d635fa593d",
    "prId" : 4533,
    "comments" : [
      {
        "id" : "2bb13617-b563-488a-aa53-ca3450134d9e",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "This change in indentation seems unnecessary. Obviously minor though.",
        "createdAt" : "2020-02-15T15:47:21Z",
        "updatedAt" : "2020-02-17T13:59:03Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "69e42150daf521f93631ef81bea5b8b2314d7beb",
    "line" : 27,
    "diffHunk" : "@@ -106,14 +107,14 @@ message DamlLogEntry {\n }\n \n message DamlLogEntryId {\n-  // Entry identifiers are opaque bytestrings chosen by the implementation that provide a unique\n-  // reference to the entry. They do not need to be comparable, as long as the implementation can\n-  // provide an ordered sequence of log entries.\n-  // The entry identifier is used:\n-  // * to lookup the log entry when producing `Update`.\n-  // * as the DAML transaction identifier and rendered as hexadecimal.\n-  // * as part of absolute contract identifiers.\n-  bytes entry_id = 1;\n+   // Entry identifiers are opaque bytestrings chosen by the implementation that provide a unique\n+   // reference to the entry. They do not need to be comparable, as long as the implementation can\n+   // provide an ordered sequence of log entries.\n+   // The entry identifier is used:\n+   // * to lookup the log entry when producing `Update`.\n+   // * as the DAML transaction identifier and rendered as hexadecimal.\n+   // * as part of absolute contract identifiers.\n+   bytes entry_id = 1;"
  },
  {
    "id" : "c304ff06-d468-449e-8cf2-3519249d1af7",
    "prId" : 3847,
    "comments" : [
      {
        "id" : "1abe3aa3-4fea-468f-a1ba-422118488c3d",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "repeating these is really starting to rub me the wrong way. I'd consider merging at least the ones that are clearly the exact same error.",
        "createdAt" : "2019-12-13T16:25:11Z",
        "updatedAt" : "2019-12-17T18:52:24Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a29579a7-fd42-4b5d-a54b-e61f02f9c48b",
        "parentId" : "1abe3aa3-4fea-468f-a1ba-422118488c3d",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "Extracted all errors to a common section at the bottom of the file",
        "createdAt" : "2019-12-16T20:28:42Z",
        "updatedAt" : "2019-12-17T18:52:24Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c9a07f89574f1c170c540c240010fa88a826ce2f",
    "line" : null,
    "diffHunk" : "@@ -237,9 +237,15 @@ message DamlPackageUploadRejectionEntry {\n     string details = 1;\n   }\n \n+  // Duplicate submission with same (participant_id, submission_id) as a previous one"
  },
  {
    "id" : "476e58f0-edfb-42e9-96fb-fff7e6de5a4c",
    "prId" : 3847,
    "comments" : [
      {
        "id" : "9208f304-d606-4088-ac7c-856c77a66f0c",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Add comment that disputed error happens when the DAML model conformance or authorization fails.",
        "createdAt" : "2019-12-17T12:10:33Z",
        "updatedAt" : "2019-12-17T18:52:24Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c1105a2e-d966-44a0-b9aa-772aceb929ba",
        "parentId" : "9208f304-d606-4088-ac7c-856c77a66f0c",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "Done",
        "createdAt" : "2019-12-17T16:21:17Z",
        "updatedAt" : "2019-12-17T18:52:24Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c9a07f89574f1c170c540c240010fa88a826ce2f",
    "line" : null,
    "diffHunk" : "@@ -494,3 +442,71 @@ message LedgerDumpEntry {\n   // The resulting output state.\n   repeated StatePair output_state = 5;\n }\n+\n+// Errors\n+\n+// The transaction relied on contracts or keys being active that were no longer active\n+message Inconsistent {\n+  string details = 1;\n+}\n+\n+// The transaction has been disputed"
  },
  {
    "id" : "1fdd1673-903a-40ed-a527-e0ebdfbc15d2",
    "prId" : 3847,
    "comments" : [
      {
        "id" : "b348f791-2b6c-454a-a8c2-bc91b37b3474",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "We should add some content here as e.g. Sawtooth doesn't like empty values.",
        "createdAt" : "2019-12-17T12:12:49Z",
        "updatedAt" : "2019-12-17T18:52:24Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8520c6a8-6bdb-4870-a8f2-05a48c971553",
        "parentId" : "b348f791-2b6c-454a-a8c2-bc91b37b3474",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "Done, added recordTime as value throughout",
        "createdAt" : "2019-12-17T16:21:40Z",
        "updatedAt" : "2019-12-17T18:52:24Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c9a07f89574f1c170c540c240010fa88a826ce2f",
    "line" : null,
    "diffHunk" : "@@ -408,10 +336,30 @@ message DamlCommandDedupKey {\n   string application_id = 2;\n   string command_id = 3;\n }\n+\n message DamlCommandDedupValue {\n-  // NOTE(JM): Currently no content. Could store pointer to log entry.\n+  // Currently no content. Could store pointer to log entry.\n }\n \n+message DamlSubmissionDedupKey {\n+  enum SubmissionKind {\n+    PARTY_ALLOCATION = 0;\n+    PACKAGE_UPLOAD = 1;\n+    CONFIGURATION = 2;\n+  }\n+\n+  SubmissionKind submission_kind = 1;\n+\n+  // A unique string scoped to a particular participant.\n+  string submission_id = 2;\n+\n+  // Uploading participant's id.\n+  string participant_id = 3;\n+}\n+\n+message DamlSubmissionDedupValue {\n+  // Currently no content. Could store pointer to log entry."
  },
  {
    "id" : "cb8608b1-024d-420f-870d-7f2eeeaf2a7e",
    "prId" : 3847,
    "comments" : [
      {
        "id" : "e09487ad-98c0-4a58-8d1c-fad107361c81",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Could you add a comment that this is meant to be used in the future for pruning?",
        "createdAt" : "2019-12-17T18:02:35Z",
        "updatedAt" : "2019-12-17T18:52:24Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "65b5d842-8462-437e-9a49-61cb4365c92d",
        "parentId" : "e09487ad-98c0-4a58-8d1c-fad107361c81",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "Done",
        "createdAt" : "2019-12-17T19:05:43Z",
        "updatedAt" : "2019-12-17T19:05:43Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c9a07f89574f1c170c540c240010fa88a826ce2f",
    "line" : 154,
    "diffHunk" : "@@ -408,10 +336,30 @@ message DamlCommandDedupKey {\n   string application_id = 2;\n   string command_id = 3;\n }\n+\n message DamlCommandDedupValue {\n-  // NOTE(JM): Currently no content. Could store pointer to log entry.\n+  google.protobuf.Timestamp record_time = 1;"
  },
  {
    "id" : "18528ceb-10f1-4100-b44d-c0d6fd8b7031",
    "prId" : 3553,
    "comments" : [
      {
        "id" : "8ff32455-8b67-4a67-a6c3-8173569eb05b",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Changing the type and semantics of protobuf fields is a dangerous habit to get into.",
        "createdAt" : "2019-11-25T08:12:07Z",
        "updatedAt" : "2019-11-27T14:09:02Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "092c9ff6-0abc-4ea1-aa56-5a76bd8c4260",
        "parentId" : "8ff32455-8b67-4a67-a6c3-8173569eb05b",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "100% agree in the general case. Here I'm making a conscientious decision to break it as there has never existed a mechanism to submit these type of messages and there are no ledgers out there containing this data. In this case I think this is reasonable, but happy to have a discussion if you disagree and find an alternative.",
        "createdAt" : "2019-11-25T09:48:40Z",
        "updatedAt" : "2019-11-27T14:09:02Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8e926426-273c-41b2-a01f-a1c4f5a1ad40",
        "parentId" : "8ff32455-8b67-4a67-a6c3-8173569eb05b",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "The alternative would be to use `string participant_id = 4;`.\r\nI'm more concerned about reeeeaaaaallly getting into the habit of just never doing it. If this has never been persisted before, then fine. Let's not spend any more time on it.",
        "createdAt" : "2019-11-25T10:44:12Z",
        "updatedAt" : "2019-11-27T14:09:02Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "04d3118b43225ee033b4c9bba93102cdc650df6a",
    "line" : 13,
    "diffHunk" : "@@ -249,12 +250,15 @@ message DamlConfigurationSubmission {\n   // Implementers are free to select adequate mechanism e.g. UUID or similar.\n   string submission_id = 1;\n \n+  // Submitting participant's id.\n+  string participant_id = 2;"
  },
  {
    "id" : "be5b1da0-cac8-4b77-ad2a-d9c6615cd85a",
    "prId" : 3553,
    "comments" : [
      {
        "id" : "7fdd6c3d-bf87-45a7-a399-b0739ef960bb",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Please take a look at the ledger-api protobuf definitions and accompanying build rules to avoid having to prefix the path in the repository:\r\nhttps://github.com/digital-asset/daml/blob/1bd2ec5b1a441e3a933b99e3d0473b6b64a027af/ledger-api/grpc-definitions/BUILD.bazel#L16-L21",
        "createdAt" : "2019-11-25T08:21:50Z",
        "updatedAt" : "2019-11-27T14:09:02Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e1673f19-eea8-469a-b223-d592734246da",
        "parentId" : "7fdd6c3d-bf87-45a7-a399-b0739ef960bb",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "better way to do that is to use relative path like we do in transaction.proto:\r\nhttps://github.com/digital-asset/daml/blob/master/daml-lf/transaction/BUILD.bazel#L19\r\n",
        "createdAt" : "2019-11-25T14:57:30Z",
        "updatedAt" : "2019-11-27T14:09:02Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "04d3118b43225ee033b4c9bba93102cdc650df6a",
    "line" : null,
    "diffHunk" : "@@ -20,6 +20,7 @@ import \"google/protobuf/duration.proto\";\n import \"com/digitalasset/daml_lf_dev/daml_lf.proto\";\n import \"com/digitalasset/daml/lf/transaction.proto\";\n import \"com/digitalasset/daml/lf/value.proto\";\n+import \"ledger/participant-state/protobuf/ledger_configuration.proto\";"
  },
  {
    "id" : "2cbda0fb-c419-4fe2-9b51-9c8210156ee1",
    "prId" : 2433,
    "comments" : [
      {
        "id" : "861bacfd-a285-4858-8683-118ffc844b54",
        "parentId" : null,
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "maybe use simply `configuration`?",
        "createdAt" : "2019-08-07T06:59:33Z",
        "updatedAt" : "2019-08-21T15:40:08Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "124056b461b8f3d4007c926cf0dd986d852f1a26",
    "line" : null,
    "diffHunk" : "@@ -279,6 +314,7 @@ message DamlStateKey {\n     DamlCommandDedupKey command_dedup = 3;\n     string party = 4;\n     DamlContractKey contract_key = 5;\n+    google.protobuf.Empty current_configuration = 6;"
  },
  {
    "id" : "d47c3cb2-ca71-4e21-b073-e2385736ae9f",
    "prId" : 2433,
    "comments" : [
      {
        "id" : "880a1d2b-a9f8-472b-9deb-c96c0c5e045a",
        "parentId" : null,
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "I am not sure what pulling up just one error buys us. It seems we lose on the type safety side by gaining some ability to write reusable error handlers.",
        "createdAt" : "2019-08-21T07:14:52Z",
        "updatedAt" : "2019-08-21T15:40:08Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "20bcbe56-90c0-4a86-81d8-337fa56e40e7",
        "parentId" : "880a1d2b-a9f8-472b-9deb-c96c0c5e045a",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "It also isn't going to play nicely if we modularize this. I'll revert the changes.",
        "createdAt" : "2019-08-21T08:26:43Z",
        "updatedAt" : "2019-08-21T15:40:08Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "124056b461b8f3d4007c926cf0dd986d852f1a26",
    "line" : null,
    "diffHunk" : "@@ -364,3 +426,8 @@ message DamlContractKeyState {\n   // If unset the key is inactive.\n   DamlContractId contract_id = 1;\n }\n+\n+// Participant not authorized to submit the request, a common rejection reason."
  },
  {
    "id" : "00d33d86-fbed-4980-9aa1-448cc61016d7",
    "prId" : 2433,
    "comments" : [
      {
        "id" : "9cbf575c-487f-4476-b959-6fec2ddb28c9",
        "parentId" : null,
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "It seems configuration needs a submission id, just like party allocation and package upload, else it is difficult to match responses with requests, generation number is not globally unique and 2 participants will decide on the same subsequent number, opening up the possibility of mixing up the responses.",
        "createdAt" : "2019-08-21T07:37:05Z",
        "updatedAt" : "2019-08-21T15:40:08Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7ace3934-17e0-4468-a214-e86a58015dcb",
        "parentId" : "9cbf575c-487f-4476-b959-6fec2ddb28c9",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "I considered it, but felt that it doesn't need to be that complex due to the configuration changes being very rare and almost invariably coming from a single source (by design configuration can also only be changed by one \"admin\" participant). Though on the other hand if we add things to the configuration that may be tweaked more regularly or from multiple sources at once we might want to consider just adding it in. \r\n\r\nDo you think we still should add it?",
        "createdAt" : "2019-08-21T08:29:03Z",
        "updatedAt" : "2019-08-21T15:40:08Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0ef82a02-aadd-4570-aaa4-2b2fd00ec9c6",
        "parentId" : "9cbf575c-487f-4476-b959-6fec2ddb28c9",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "I would add it for consistency sake",
        "createdAt" : "2019-08-21T09:19:30Z",
        "updatedAt" : "2019-08-21T15:40:08Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2cfeeb25-62d1-45dc-be5d-67d1be7c7277",
        "parentId" : "9cbf575c-487f-4476-b959-6fec2ddb28c9",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "cool, I'll add it.",
        "createdAt" : "2019-08-21T11:24:15Z",
        "updatedAt" : "2019-08-21T15:40:08Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "124056b461b8f3d4007c926cf0dd986d852f1a26",
    "line" : 117,
    "diffHunk" : "@@ -189,32 +201,85 @@ message DamlPackageUploadRejectionEntry {\n     string details = 1;\n   }\n \n-  // The participant was not authorized to submit the upload request.\n-  message ParticipantNotAuthorized {\n-    string details = 1;\n-  }\n-\n   oneof reason {\n-\n     InvalidPackage invalid_package = 3;\n     ParticipantNotAuthorized participant_not_authorized = 4;\n   }\n }\n \n-message DamlConfigurationEntry {\n-  DamlTimeModel time_model = 1;\n+// Configuration change request to change the ledger configuration.\n+message DamlConfigurationSubmission {"
  },
  {
    "id" : "fec954a6-71c3-4a80-9392-35f0008a02bd",
    "prId" : 2393,
    "comments" : [
      {
        "id" : "b5a6aa6a-2180-4c6b-bf5d-9f7462aabfae",
        "parentId" : null,
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "Don't we also need to extend this structure with a field that links to DamlLogEntryId where it was created? Right now we have this \"DamlLogEntryId archived_by_entry = 3;\". It seems that we should have either both creattion/archival or none.",
        "createdAt" : "2019-08-05T09:31:16Z",
        "updatedAt" : "2019-08-05T13:38:29Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4203e1b6-5de9-40a6-823e-4f2d689c2ca2",
        "parentId" : "b5a6aa6a-2180-4c6b-bf5d-9f7462aabfae",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Good point. We'll probably want to go with actual deletion of the state on archival so we shouldn't have either. What do you think about changing the interface now to support deletion of keys and dropping archived_by_entry?",
        "createdAt" : "2019-08-05T09:33:22Z",
        "updatedAt" : "2019-08-05T13:38:29Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5a3f5d0a-f2de-4043-802a-d6e388efdb68",
        "parentId" : "b5a6aa6a-2180-4c6b-bf5d-9f7462aabfae",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Btw, note that the \"ContractId\" contains the entry id in it, so no need for a \"created_by_entry\".",
        "createdAt" : "2019-08-05T09:51:28Z",
        "updatedAt" : "2019-08-05T13:38:29Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5764dc9e-2cd2-4d05-bb9c-4d067d7e3f05",
        "parentId" : "b5a6aa6a-2180-4c6b-bf5d-9f7462aabfae",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "Which ContractId do you mean? \r\nI don't think you mean this: https://github.com/digital-asset/daml/blob/f84e7d79d2bfcd141a6cab9f05703872b94204af/daml-lf/transaction/src/main/protobuf/com/digitalasset/daml/lf/value.proto#L107",
        "createdAt" : "2019-08-05T11:29:23Z",
        "updatedAt" : "2019-08-05T13:38:29Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "65a7e751-79dc-4c7c-9825-d3cbf0dcae05",
        "parentId" : "b5a6aa6a-2180-4c6b-bf5d-9f7462aabfae",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "https://github.com/digital-asset/daml/blob/master/ledger/participant-state/kvutils/src/main/protobuf/daml_kvutils.proto#L297",
        "createdAt" : "2019-08-05T13:12:26Z",
        "updatedAt" : "2019-08-05T13:38:29Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1510e7700c4deccf7c15bb64862ad7bde712f49f",
    "line" : 23,
    "diffHunk" : "@@ -334,6 +333,9 @@ message DamlContractState {\n \n   // The contract key set by the contract. Optional.\n   DamlContractKey contract_key = 6;\n+"
  },
  {
    "id" : "f5cfcd99-8adb-4fa0-aead-8f82ea048796",
    "prId" : 1553,
    "comments" : [
      {
        "id" : "456f9d3a-6961-4ffc-ad05-6795783ea461",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "You are re-assigning field number 5, is it ok do to break backwards compatibility?",
        "createdAt" : "2019-06-28T11:07:43Z",
        "updatedAt" : "2019-07-01T09:03:27Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9bdbea0b-840e-4a0b-b9b1-7f2428164bf3",
        "parentId" : "456f9d3a-6961-4ffc-ad05-6795783ea461",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "Yes, the interface is deemed unstable and we control all consumers",
        "createdAt" : "2019-06-28T15:58:56Z",
        "updatedAt" : "2019-07-01T09:03:27Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b89ec3eec97b94cea04cfd27c4bf94180ecef4ca",
    "line" : 19,
    "diffHunk" : "@@ -58,11 +59,19 @@ message DamlLogEntry {\n     DamlRejectionEntry rejection_entry = 3;\n \n     // A collection of DAML-LF archives uploaded together by a participant.\n-    // Can be converted into `Update.PublicPackageUploaded`.\n     DamlPackageUploadEntry package_upload_entry = 4;\n \n+    // A rejection of package upload\n+    DamlPackageUploadRejectionEntry package_upload_rejection_entry = 5;\n+\n     // A DAML configuration change.\n-    DamlConfigurationEntry configuration_entry = 5;"
  },
  {
    "id" : "032e941b-6078-40fb-a557-e9be6a03ed52",
    "prId" : 1553,
    "comments" : [
      {
        "id" : "710361aa-70a8-4d8a-8eb2-15d66a44664d",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "use `message InvalidPackageReason` and `message ParticipantNotAuthorizedReason` as types instead. This way we can extend them without having to pick a new field number.",
        "createdAt" : "2019-06-28T11:17:37Z",
        "updatedAt" : "2019-07-01T09:03:27Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d3c817b3-6c98-4990-b06e-196c9045bf2a",
        "parentId" : "710361aa-70a8-4d8a-8eb2-15d66a44664d",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "What should happen with the preexisting transaction rejection entries. Should they also change. For consistency sake I used the same pattern as in:\r\n`message DamlRejectionEntry {\r\n  DamlSubmitterInfo submitter_info = 1;\r\n\r\n  oneof reason {\r\n    // NOTE(JM): Not all payloads are used, but marked as 'string' for\r\n    // extensibility.\r\n    string inconsistent = 2;\r\n    string disputed = 3;\r\n    string resources_exhausted = 4;\r\n    string maximum_record_time_exceeded = 5;\r\n    string duplicate_command = 6;\r\n    string party_not_known_on_ledger = 7;\r\n    string submitter_cannot_act_via_participant = 8;\r\n  }\r\n}`",
        "createdAt" : "2019-06-28T16:23:25Z",
        "updatedAt" : "2019-07-01T09:03:27Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "98f1959f-1e33-4838-bf47-15dd3d822e13",
        "parentId" : "710361aa-70a8-4d8a-8eb2-15d66a44664d",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "Adding the same pattern to all the errors.",
        "createdAt" : "2019-07-01T08:31:56Z",
        "updatedAt" : "2019-07-01T09:03:27Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b89ec3eec97b94cea04cfd27c4bf94180ecef4ca",
    "line" : null,
    "diffHunk" : "@@ -121,12 +130,45 @@ message DamlRejectionEntry {\n   }\n }\n \n-// A public package upload. We don't store dars as they would\n-// not allow for easy deduplication of DAML-LF packages.\n+// A public package upload.\n+// DAML-LF packages will be deduplicated based on their hashes. Only unique\n+// ones will be added to the KV storage. Deduplication has no impact on the\n+// upload result.\n message DamlPackageUploadEntry {\n-  repeated daml_lf.Archive archives = 1;\n-  string source_description = 2;\n-  string participant_id = 3;\n+  // A unique string scoped to a particular participant.\n+  // Implementers are free to select adequate mechanism e.g. UUID or similar.\n+  string submission_id = 1;\n+\n+  // List of archives to be uploaded.\n+  repeated daml_lf.Archive archives = 2;\n+\n+  // Description provided by the backing participant describing where it got\n+  // the package from, e.g., when, where, or by whom the packages were\n+  // uploaded.\n+  string source_description = 3;\n+\n+  // Uploading participant's id.\n+  string participant_id = 4;\n+}\n+\n+// A message indicating that package upload was unsuccessful.\n+// If validation of any of the uploaded packages fails, the whole upload fails\n+// and a rejection message is produced.\n+message DamlPackageUploadRejectionEntry {\n+  // An id selected by the submitter, can be used for matching rejection with\n+  // the original upload entry.\n+  string submission_id = 1;\n+\n+  // Uploading participant's id.\n+  string participant_id = 2;\n+\n+  oneof reason {\n+    // One of the uploaded packages is not valid.\n+    string invalid_package = 3;"
  },
  {
    "id" : "f9e85173-4793-44d0-b10b-1346e27b79a4",
    "prId" : 1553,
    "comments" : [
      {
        "id" : "293a584d-3727-4e66-9695-a58d1b1fc323",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "Same here as above. Consider using messages as types as otherwise we cannot extend these without having to deprecate the field number.",
        "createdAt" : "2019-06-28T11:18:24Z",
        "updatedAt" : "2019-07-01T09:03:27Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b89ec3eec97b94cea04cfd27c4bf94180ecef4ca",
    "line" : null,
    "diffHunk" : "@@ -145,6 +187,45 @@ message DamlTimeModel {\n   google.protobuf.Duration maxTtl = 3;\n }\n \n+// An allocation of party name and assignment of a party to a given\n+// participant.\n+// A party can only be hosted once (this may not be true in more\n+// sophisticated ledgers in the future).\n+message DamlPartyAllocationEntry {\n+  // A unique string scoped to a particular participant.\n+  // Implementers are free to select adequate mechanism e.g. UUID or similar.\n+  string submission_id = 1;\n+\n+  // The party name to be allocated.\n+  string party = 2;\n+\n+  // Allocating participant's id.\n+  string participant_id = 3;\n+\n+  // A display name associated with the given party.\n+  string display_name = 4;\n+}\n+\n+// A message indicating that party allocation was unsuccessful.\n+message DamlPartyAllocationRejectionEntry {\n+  // An id selected by the submitter, can be used for matching rejection with\n+  // the original upload entry.\n+  string submission_id = 1;\n+\n+  // Uploading participant's id.\n+  string participant_id = 2;\n+\n+  oneof reason {\n+    // The requested party name already exists.\n+    string already_exists = 3;"
  },
  {
    "id" : "082074ec-4341-4c3b-ab6f-28dd8e279395",
    "prId" : 1553,
    "comments" : [
      {
        "id" : "fe310f44-e3bc-46e1-9930-ef07380b3323",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "should we also track when this was created? We should also document that this is all immutable and cannot be changed once it has been created. That is, party tenancy is immutable.",
        "createdAt" : "2019-06-28T11:21:47Z",
        "updatedAt" : "2019-07-01T09:03:27Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5bead138-a71c-44ee-b4b4-aa6b31ba1a76",
        "parentId" : "fe310f44-e3bc-46e1-9930-ef07380b3323",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "It is not that simple as it would seem. Modification of the party record has to be verifiable by the all the committers/validators. For that you need a notion of LET for party allocation. I will a comment about it without addressing it ATM.",
        "createdAt" : "2019-07-01T08:28:31Z",
        "updatedAt" : "2019-07-01T09:03:27Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b89ec3eec97b94cea04cfd27c4bf94180ecef4ca",
    "line" : 232,
    "diffHunk" : "@@ -208,3 +290,10 @@ message DamlContractState {\n \n }\n \n+// Stored information about a given party.\n+message DamlPartyValue {\n+  // Id of participant where the party is hosted.\n+  string participant_id = 1;\n+  // A display name associated with the given party.\n+  string display_name = 2;"
  },
  {
    "id" : "3509f9cd-b308-416e-93eb-a2368ffb1880",
    "prId" : 1553,
    "comments" : [
      {
        "id" : "b14e2c86-af93-4870-b17f-b67c05c222c9",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "probably time to add version number to all the top-level messages now as we're very soon in a situation where we'll have semantic changes. DamlSubmission, DamlLogEntry, DamlLogEntryId, DamlStateKey and DamlStateValue should all probably carry a \"kvutils\" version number. ",
        "createdAt" : "2019-06-28T11:27:12Z",
        "updatedAt" : "2019-07-01T09:03:27Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1a94a7e5-285c-47c8-b0bd-5fa7aed9c187",
        "parentId" : "b14e2c86-af93-4870-b17f-b67c05c222c9",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "Will be adding it in a follow-up PR",
        "createdAt" : "2019-07-01T08:32:32Z",
        "updatedAt" : "2019-07-01T09:03:27Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b89ec3eec97b94cea04cfd27c4bf94180ecef4ca",
    "line" : 4,
    "diffHunk" : "@@ -34,6 +34,7 @@ message DamlSubmission {\n     DamlTransactionEntry transaction_entry = 3;\n     DamlPackageUploadEntry package_upload_entry = 4;\n     DamlConfigurationEntry configuration_entry = 5;\n+    DamlPartyAllocationEntry party_allocation_entry = 6;"
  },
  {
    "id" : "9f2fd6fc-33b6-44a7-8eb6-192548556ffa",
    "prId" : 1553,
    "comments" : [
      {
        "id" : "60f71891-fba5-4f21-8d28-b7653e6f74ff",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "\"Uploading\"?",
        "createdAt" : "2019-06-28T11:27:34Z",
        "updatedAt" : "2019-07-01T09:03:27Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b89ec3eec97b94cea04cfd27c4bf94180ecef4ca",
    "line" : 175,
    "diffHunk" : "@@ -145,6 +187,45 @@ message DamlTimeModel {\n   google.protobuf.Duration maxTtl = 3;\n }\n \n+// An allocation of party name and assignment of a party to a given\n+// participant.\n+// A party can only be hosted once (this may not be true in more\n+// sophisticated ledgers in the future).\n+message DamlPartyAllocationEntry {\n+  // A unique string scoped to a particular participant.\n+  // Implementers are free to select adequate mechanism e.g. UUID or similar.\n+  string submission_id = 1;\n+\n+  // The party name to be allocated.\n+  string party = 2;\n+\n+  // Allocating participant's id.\n+  string participant_id = 3;\n+\n+  // A display name associated with the given party.\n+  string display_name = 4;\n+}\n+\n+// A message indicating that party allocation was unsuccessful.\n+message DamlPartyAllocationRejectionEntry {\n+  // An id selected by the submitter, can be used for matching rejection with\n+  // the original upload entry.\n+  string submission_id = 1;\n+\n+  // Uploading participant's id."
  },
  {
    "id" : "9ee7c1de-db41-4e52-8bd5-018a7dd130a4",
    "prId" : 1553,
    "comments" : [
      {
        "id" : "3ea61bb7-cf24-409e-848b-0ea0e0276223",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "I'd prefer a more descriptive name.. like DamlPartyAllocation? Not DamlPartyState as this is immutable.",
        "createdAt" : "2019-06-28T12:53:56Z",
        "updatedAt" : "2019-07-01T09:03:27Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e53c21a1-660e-4941-b2d2-26d8fa8042a2",
        "parentId" : "3ea61bb7-cf24-409e-848b-0ea0e0276223",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "OK",
        "createdAt" : "2019-07-01T08:55:20Z",
        "updatedAt" : "2019-07-01T09:03:27Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b89ec3eec97b94cea04cfd27c4bf94180ecef4ca",
    "line" : null,
    "diffHunk" : "@@ -208,3 +290,10 @@ message DamlContractState {\n \n }\n \n+// Stored information about a given party.\n+message DamlPartyValue {"
  },
  {
    "id" : "d721692a-f426-43f3-b7f8-7f76d2155ea5",
    "prId" : 1553,
    "comments" : [
      {
        "id" : "7661470d-3f18-4599-83c8-e30cd2b9af4f",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "This is very bad practice. Never reuse a previously used field id for another field.",
        "createdAt" : "2019-06-28T13:43:31Z",
        "updatedAt" : "2019-07-01T09:03:27Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "159ddf7c-909d-4462-8518-2ad0a4d2a437",
        "parentId" : "7661470d-3f18-4599-83c8-e30cd2b9af4f",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "We control all consumers, interface is considered unstable at the moment",
        "createdAt" : "2019-06-28T15:59:56Z",
        "updatedAt" : "2019-07-01T09:03:27Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b89ec3eec97b94cea04cfd27c4bf94180ecef4ca",
    "line" : 20,
    "diffHunk" : "@@ -58,11 +59,19 @@ message DamlLogEntry {\n     DamlRejectionEntry rejection_entry = 3;\n \n     // A collection of DAML-LF archives uploaded together by a participant.\n-    // Can be converted into `Update.PublicPackageUploaded`.\n     DamlPackageUploadEntry package_upload_entry = 4;\n \n+    // A rejection of package upload\n+    DamlPackageUploadRejectionEntry package_upload_rejection_entry = 5;\n+\n     // A DAML configuration change.\n-    DamlConfigurationEntry configuration_entry = 5;\n+    DamlConfigurationEntry configuration_entry = 6;"
  },
  {
    "id" : "65d066ed-37a9-4029-91aa-2aaf62a718bf",
    "prId" : 1553,
    "comments" : [
      {
        "id" : "3298aa55-98a0-4fff-87eb-d39cfeac0663",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Same as above. Do not re-purpose field ids.",
        "createdAt" : "2019-06-28T14:06:01Z",
        "updatedAt" : "2019-07-01T09:03:27Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b89ec3eec97b94cea04cfd27c4bf94180ecef4ca",
    "line" : 98,
    "diffHunk" : "@@ -121,12 +130,45 @@ message DamlRejectionEntry {\n   }\n }\n \n-// A public package upload. We don't store dars as they would\n-// not allow for easy deduplication of DAML-LF packages.\n+// A public package upload.\n+// DAML-LF packages will be deduplicated based on their hashes. Only unique\n+// ones will be added to the KV storage. Deduplication has no impact on the\n+// upload result.\n message DamlPackageUploadEntry {\n-  repeated daml_lf.Archive archives = 1;"
  },
  {
    "id" : "979d5427-98c3-49fc-bf5f-44928455551e",
    "prId" : 637,
    "comments" : [
      {
        "id" : "3f8bb2d5-2fed-478f-8eb9-cdadc040bbbe",
        "parentId" : null,
        "author" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "body" : "Reading the later code I'm seeing an alternative structure for how we partition the key-value space and store the state of the DAML Ledger.\r\n\r\nThe key idea is to represent the state of the ledger as a `([DamlLogEntry],Map DamlStateKey DamlStateValue)` tuple. A transactions inputs can both refer to past log entries via their `Int` offset and to `DamlStateKey` bytes. Transaction validation is given the current recordTime and the values associated to the requested inputs. It must return the modification to the ledger as a `([DamlLogEntry], Map DamlStateKey DamlStateValue)` tuple as well. The semantics is to append the `DamlLogEntry`s and to overwrite the given keys with the new values.\r\n\r\nNote that in this case a failed validation should result in a command-rejection log entry; i.e., the ledger is always extended with the transaction, but it's state modification depends on its validity.\r\n\r\nThe benefit of this scheme is that we can evolve from different tx-representations and kv-representations in a backwards compatible form by extending the protobufs. In particular, we can smoothly switch to a decomposed representation of transactions.",
        "createdAt" : "2019-04-24T08:20:21Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9d9b5c4a-bfad-4ade-a3e0-8619f9990ea2",
        "parentId" : "3f8bb2d5-2fed-478f-8eb9-cdadc040bbbe",
        "author" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "body" : "Also: `validation` should be able to fail fatally with `Left \"reason\"` to denote a missing input or the like.",
        "createdAt" : "2019-04-24T08:22:00Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b7304206-a086-4514-9d62-fa3e4543aac6",
        "parentId" : "3f8bb2d5-2fed-478f-8eb9-cdadc040bbbe",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "sounds reasonable! I'll do a quick draft and then verify with you.",
        "createdAt" : "2019-04-24T10:00:37Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d5b2167d99861a69fd3366ab5fb08acc35514642",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,53 @@\n+//\n+// Protocol buffer messages used by the participant state key-value utilities\n+// for implementing a DAML ledger backed by a key-value store.\n+//\n+\n+syntax = \"proto3\";\n+package com.daml.ledger.participant.state.kvutils;\n+option java_package = \"com.daml.ledger.participant.state.kvutils\";\n+\n+import \"google/protobuf/timestamp.proto\";\n+import \"daml-lf/transaction/src/main/protobuf/transaction.proto\";\n+\n+// The ledger implementation stores the `DamlKVEntry`s in an\n+// ordered sequence of keys, allowing for offset-based querying.\n+//\n+// The value in which entry (or entries) is stored should include\n+// the record time at which it was committed.\n+//\n+// Each entry can be converted into a participant state `Update` event.\n+message DamlKVEntry {"
  },
  {
    "id" : "f5d8bc8c-16e6-4a8d-bf32-61b76381280e",
    "prId" : 637,
    "comments" : [
      {
        "id" : "71f17fee-7370-476b-9344-96b49a3ae1cd",
        "parentId" : null,
        "author" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "body" : "s/classes/objects.\r\n\r\nAlso consider adding full package reference.",
        "createdAt" : "2019-04-26T13:15:37Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d5b2167d99861a69fd3366ab5fb08acc35514642",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,165 @@\n+//\n+// Protocol buffer messages used by the participant state key-value utilities\n+// for implementing a DAML ledger backed by a key-value store.\n+//\n+// These messages must only be produced and consumed by the methods in\n+// `KeyValueCommitting`, `KeyValueConsumption` and `KeyValueSubmission` classes."
  },
  {
    "id" : "b8f2064e-fe24-4344-b464-3f28a08d8895",
    "prId" : 637,
    "comments" : [
      {
        "id" : "cb30c4b7-8e7c-4796-9222-eaaa04c1a8c1",
        "parentId" : null,
        "author" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "body" : "Good point. `KvDaml`? `Raw`?",
        "createdAt" : "2019-04-26T13:16:19Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "47f2af89-5692-494e-b493-611e5d5e656f",
        "parentId" : "cb30c4b7-8e7c-4796-9222-eaaa04c1a8c1",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "They aren't really `Raw` in the sense that they're really the data structures these utilities deal with. Perhaps I'll go with `DamlKV`.",
        "createdAt" : "2019-04-26T14:14:47Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d5b2167d99861a69fd3366ab5fb08acc35514642",
    "line" : 14,
    "diffHunk" : "@@ -0,0 +1,165 @@\n+//\n+// Protocol buffer messages used by the participant state key-value utilities\n+// for implementing a DAML ledger backed by a key-value store.\n+//\n+// These messages must only be produced and consumed by the methods in\n+// `KeyValueCommitting`, `KeyValueConsumption` and `KeyValueSubmission` classes.\n+// You must not embed these messages in other protocol buffer messages.\n+//\n+// TODO(JM): We're consistently using the 'Daml' prefix to allow unqualified import\n+// of the generated classes and to distinguish these from the scala types in participant-state.\n+// Might want to use a more telling prefix."
  },
  {
    "id" : "c4787024-380a-4697-87e7-9c7798965d94",
    "prId" : 637,
    "comments" : [
      {
        "id" : "42dab5b4-df28-46f4-b0f9-ec7cadc674de",
        "parentId" : null,
        "author" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "body" : "Hard to understand this comment without context. Please point to what context needs to be read before these comments start to make sense.",
        "createdAt" : "2019-04-26T13:17:04Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d5b2167d99861a69fd3366ab5fb08acc35514642",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,165 @@\n+//\n+// Protocol buffer messages used by the participant state key-value utilities\n+// for implementing a DAML ledger backed by a key-value store.\n+//\n+// These messages must only be produced and consumed by the methods in\n+// `KeyValueCommitting`, `KeyValueConsumption` and `KeyValueSubmission` classes.\n+// You must not embed these messages in other protocol buffer messages.\n+//\n+// TODO(JM): We're consistently using the 'Daml' prefix to allow unqualified import\n+// of the generated classes and to distinguish these from the scala types in participant-state.\n+// Might want to use a more telling prefix.\n+\n+syntax = \"proto3\";\n+package com.daml.ledger.participant.state.kvutils;\n+option java_package = \"com.daml.ledger.participant.state.kvutils\";\n+\n+import \"google/protobuf/empty.proto\";\n+import \"google/protobuf/timestamp.proto\";\n+import \"google/protobuf/duration.proto\";\n+import \"da/daml_lf.proto\";\n+import \"daml-lf/transaction/src/main/protobuf/transaction.proto\";\n+\n+// The ledger implementation stores the `DamlLogEntry`s in an"
  },
  {
    "id" : "914a9a76-586a-4277-9aa9-4b03a7f7e8a3",
    "prId" : 637,
    "comments" : [
      {
        "id" : "0ac39efd-88d8-4fc8-826b-d776a09dec40",
        "parentId" : null,
        "author" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "body" : "archive vs archive_entry in the other cases?",
        "createdAt" : "2019-04-26T13:17:35Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d5b2167d99861a69fd3366ab5fb08acc35514642",
    "line" : 61,
    "diffHunk" : "@@ -0,0 +1,165 @@\n+//\n+// Protocol buffer messages used by the participant state key-value utilities\n+// for implementing a DAML ledger backed by a key-value store.\n+//\n+// These messages must only be produced and consumed by the methods in\n+// `KeyValueCommitting`, `KeyValueConsumption` and `KeyValueSubmission` classes.\n+// You must not embed these messages in other protocol buffer messages.\n+//\n+// TODO(JM): We're consistently using the 'Daml' prefix to allow unqualified import\n+// of the generated classes and to distinguish these from the scala types in participant-state.\n+// Might want to use a more telling prefix.\n+\n+syntax = \"proto3\";\n+package com.daml.ledger.participant.state.kvutils;\n+option java_package = \"com.daml.ledger.participant.state.kvutils\";\n+\n+import \"google/protobuf/empty.proto\";\n+import \"google/protobuf/timestamp.proto\";\n+import \"google/protobuf/duration.proto\";\n+import \"da/daml_lf.proto\";\n+import \"daml-lf/transaction/src/main/protobuf/transaction.proto\";\n+\n+// The ledger implementation stores the `DamlLogEntry`s in an\n+// ordered sequence of keys, allowing for offset-based querying.\n+//\n+// Each entry can be converted into a participant state `Update` event.\n+message DamlLogEntry {\n+  // The record time at which this entry was committed.\n+  google.protobuf.Timestamp record_time = 1;\n+\n+  oneof payload {\n+    // A committed DAML transaction.\n+    // Can be converted into `Update.TransactionAccepted`.\n+    DamlTransactionEntry transaction_entry = 2;\n+\n+    // A rejected command.\n+    DamlRejectionEntry rejection_entry = 3;\n+\n+    // A DAML-LF archive.\n+    // Can be converted into `Update.PublicPackageUploaded`.\n+    daml_lf.Archive archive = 4;"
  },
  {
    "id" : "1700acc6-5da1-421e-a40c-88526a7dfb93",
    "prId" : 637,
    "comments" : [
      {
        "id" : "dad51ea7-d4b6-484e-b020-2b8140372b1a",
        "parentId" : null,
        "author" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "body" : "add comment and link to issue for only storing roots and hash of inner nodes",
        "createdAt" : "2019-04-26T13:18:14Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d5b2167d99861a69fd3366ab5fb08acc35514642",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,165 @@\n+//\n+// Protocol buffer messages used by the participant state key-value utilities\n+// for implementing a DAML ledger backed by a key-value store.\n+//\n+// These messages must only be produced and consumed by the methods in\n+// `KeyValueCommitting`, `KeyValueConsumption` and `KeyValueSubmission` classes.\n+// You must not embed these messages in other protocol buffer messages.\n+//\n+// TODO(JM): We're consistently using the 'Daml' prefix to allow unqualified import\n+// of the generated classes and to distinguish these from the scala types in participant-state.\n+// Might want to use a more telling prefix.\n+\n+syntax = \"proto3\";\n+package com.daml.ledger.participant.state.kvutils;\n+option java_package = \"com.daml.ledger.participant.state.kvutils\";\n+\n+import \"google/protobuf/empty.proto\";\n+import \"google/protobuf/timestamp.proto\";\n+import \"google/protobuf/duration.proto\";\n+import \"da/daml_lf.proto\";\n+import \"daml-lf/transaction/src/main/protobuf/transaction.proto\";\n+\n+// The ledger implementation stores the `DamlLogEntry`s in an\n+// ordered sequence of keys, allowing for offset-based querying.\n+//\n+// Each entry can be converted into a participant state `Update` event.\n+message DamlLogEntry {\n+  // The record time at which this entry was committed.\n+  google.protobuf.Timestamp record_time = 1;\n+\n+  oneof payload {\n+    // A committed DAML transaction.\n+    // Can be converted into `Update.TransactionAccepted`.\n+    DamlTransactionEntry transaction_entry = 2;\n+\n+    // A rejected command.\n+    DamlRejectionEntry rejection_entry = 3;\n+\n+    // A DAML-LF archive.\n+    // Can be converted into `Update.PublicPackageUploaded`.\n+    daml_lf.Archive archive = 4;\n+\n+    // A DAML configuration change.\n+    DamlConfigurationEntry configuration_entry = 5;\n+  }\n+}\n+\n+message DamlLogEntryId {\n+  // Entry identifiers are opaque bytestrings chosen by the implementation that provide a unique\n+  // reference to the entry.\n+  // The entry identifier is used:\n+  // * to lookup the log entry when producing `Update`.\n+  // * as the DAML transaction identifier and rendered as hexadecimal.\n+  // * as part of absolute contract identifiers.\n+  bytes entry_id = 1;\n+}\n+\n+\n+// A submission to the ledger: a payload and its inputs if any."
  },
  {
    "id" : "b1fb3a08-e89d-459b-8195-e39931c191f9",
    "prId" : 637,
    "comments" : [
      {
        "id" : "3660a239-b2fa-4ab0-84a3-1f5a23906a79",
        "parentId" : null,
        "author" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "body" : "s/deduplicating/duplicating",
        "createdAt" : "2019-04-26T13:19:13Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d5b2167d99861a69fd3366ab5fb08acc35514642",
    "line" : 92,
    "diffHunk" : "@@ -0,0 +1,165 @@\n+//\n+// Protocol buffer messages used by the participant state key-value utilities\n+// for implementing a DAML ledger backed by a key-value store.\n+//\n+// These messages must only be produced and consumed by the methods in\n+// `KeyValueCommitting`, `KeyValueConsumption` and `KeyValueSubmission` classes.\n+// You must not embed these messages in other protocol buffer messages.\n+//\n+// TODO(JM): We're consistently using the 'Daml' prefix to allow unqualified import\n+// of the generated classes and to distinguish these from the scala types in participant-state.\n+// Might want to use a more telling prefix.\n+\n+syntax = \"proto3\";\n+package com.daml.ledger.participant.state.kvutils;\n+option java_package = \"com.daml.ledger.participant.state.kvutils\";\n+\n+import \"google/protobuf/empty.proto\";\n+import \"google/protobuf/timestamp.proto\";\n+import \"google/protobuf/duration.proto\";\n+import \"da/daml_lf.proto\";\n+import \"daml-lf/transaction/src/main/protobuf/transaction.proto\";\n+\n+// The ledger implementation stores the `DamlLogEntry`s in an\n+// ordered sequence of keys, allowing for offset-based querying.\n+//\n+// Each entry can be converted into a participant state `Update` event.\n+message DamlLogEntry {\n+  // The record time at which this entry was committed.\n+  google.protobuf.Timestamp record_time = 1;\n+\n+  oneof payload {\n+    // A committed DAML transaction.\n+    // Can be converted into `Update.TransactionAccepted`.\n+    DamlTransactionEntry transaction_entry = 2;\n+\n+    // A rejected command.\n+    DamlRejectionEntry rejection_entry = 3;\n+\n+    // A DAML-LF archive.\n+    // Can be converted into `Update.PublicPackageUploaded`.\n+    daml_lf.Archive archive = 4;\n+\n+    // A DAML configuration change.\n+    DamlConfigurationEntry configuration_entry = 5;\n+  }\n+}\n+\n+message DamlLogEntryId {\n+  // Entry identifiers are opaque bytestrings chosen by the implementation that provide a unique\n+  // reference to the entry.\n+  // The entry identifier is used:\n+  // * to lookup the log entry when producing `Update`.\n+  // * as the DAML transaction identifier and rendered as hexadecimal.\n+  // * as part of absolute contract identifiers.\n+  bytes entry_id = 1;\n+}\n+\n+\n+// A submission to the ledger: a payload and its inputs if any.\n+message DamlSubmission {\n+  repeated DamlLogEntryId input_log_entries = 1;\n+  repeated DamlStateKey input_daml_state = 2;\n+  oneof payload {\n+    DamlTransactionEntry transaction_entry = 3;\n+    daml_lf.Archive archive = 4;\n+    DamlConfigurationEntry configuration_entry = 5;\n+  }\n+}\n+\n+message DamlSubmitterInfo {\n+  string submitter = 1;\n+  string command_id = 2;\n+  string application_id = 3;\n+  google.protobuf.Timestamp maximum_record_time = 4;\n+}\n+\n+message DamlTransactionEntry {\n+  // The original submitted transaction, with relative identifiers.\n+  // For now we're deduplicating the data and storing the contract instances"
  },
  {
    "id" : "483d5c3e-3ffe-4230-9ef8-35b4f269d720",
    "prId" : 637,
    "comments" : [
      {
        "id" : "e26ca393-7273-4e3f-aa95-ef52e5c96b84",
        "parentId" : null,
        "author" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "body" : "point to participant.state.v1.TransactionMeta",
        "createdAt" : "2019-04-26T13:19:44Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ff47dc4b-d02f-4840-af56-ff359090e59e",
        "parentId" : "e26ca393-7273-4e3f-aa95-ef52e5c96b84",
        "author" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "body" : "(hope that's the right link)",
        "createdAt" : "2019-04-26T13:19:54Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d5b2167d99861a69fd3366ab5fb08acc35514642",
    "line" : 100,
    "diffHunk" : "@@ -0,0 +1,165 @@\n+//\n+// Protocol buffer messages used by the participant state key-value utilities\n+// for implementing a DAML ledger backed by a key-value store.\n+//\n+// These messages must only be produced and consumed by the methods in\n+// `KeyValueCommitting`, `KeyValueConsumption` and `KeyValueSubmission` classes.\n+// You must not embed these messages in other protocol buffer messages.\n+//\n+// TODO(JM): We're consistently using the 'Daml' prefix to allow unqualified import\n+// of the generated classes and to distinguish these from the scala types in participant-state.\n+// Might want to use a more telling prefix.\n+\n+syntax = \"proto3\";\n+package com.daml.ledger.participant.state.kvutils;\n+option java_package = \"com.daml.ledger.participant.state.kvutils\";\n+\n+import \"google/protobuf/empty.proto\";\n+import \"google/protobuf/timestamp.proto\";\n+import \"google/protobuf/duration.proto\";\n+import \"da/daml_lf.proto\";\n+import \"daml-lf/transaction/src/main/protobuf/transaction.proto\";\n+\n+// The ledger implementation stores the `DamlLogEntry`s in an\n+// ordered sequence of keys, allowing for offset-based querying.\n+//\n+// Each entry can be converted into a participant state `Update` event.\n+message DamlLogEntry {\n+  // The record time at which this entry was committed.\n+  google.protobuf.Timestamp record_time = 1;\n+\n+  oneof payload {\n+    // A committed DAML transaction.\n+    // Can be converted into `Update.TransactionAccepted`.\n+    DamlTransactionEntry transaction_entry = 2;\n+\n+    // A rejected command.\n+    DamlRejectionEntry rejection_entry = 3;\n+\n+    // A DAML-LF archive.\n+    // Can be converted into `Update.PublicPackageUploaded`.\n+    daml_lf.Archive archive = 4;\n+\n+    // A DAML configuration change.\n+    DamlConfigurationEntry configuration_entry = 5;\n+  }\n+}\n+\n+message DamlLogEntryId {\n+  // Entry identifiers are opaque bytestrings chosen by the implementation that provide a unique\n+  // reference to the entry.\n+  // The entry identifier is used:\n+  // * to lookup the log entry when producing `Update`.\n+  // * as the DAML transaction identifier and rendered as hexadecimal.\n+  // * as part of absolute contract identifiers.\n+  bytes entry_id = 1;\n+}\n+\n+\n+// A submission to the ledger: a payload and its inputs if any.\n+message DamlSubmission {\n+  repeated DamlLogEntryId input_log_entries = 1;\n+  repeated DamlStateKey input_daml_state = 2;\n+  oneof payload {\n+    DamlTransactionEntry transaction_entry = 3;\n+    daml_lf.Archive archive = 4;\n+    DamlConfigurationEntry configuration_entry = 5;\n+  }\n+}\n+\n+message DamlSubmitterInfo {\n+  string submitter = 1;\n+  string command_id = 2;\n+  string application_id = 3;\n+  google.protobuf.Timestamp maximum_record_time = 4;\n+}\n+\n+message DamlTransactionEntry {\n+  // The original submitted transaction, with relative identifiers.\n+  // For now we're deduplicating the data and storing the contract instances\n+  // both in this transaction, and in \"DamlState\". Later on the transaction here\n+  // will only record the node identifiers, and nodes themselves are stored under\n+  // \"DamlState\".\n+  com.digitalasset.daml.lf.transaction.Transaction transaction = 1;\n+\n+  DamlSubmitterInfo submitter_info = 2;\n+\n+  // Transaction metadata"
  },
  {
    "id" : "07be8383-9512-42ce-b508-6c44959787ed",
    "prId" : 637,
    "comments" : [
      {
        "id" : "1951cded-37f8-4ed2-8b9e-434103e21d74",
        "parentId" : null,
        "author" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "body" : "How do you mean that?",
        "createdAt" : "2019-04-26T13:20:24Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d8135865-5336-4833-b6cd-46a1fc9533c4",
        "parentId" : "1951cded-37f8-4ed2-8b9e-434103e21d74",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "We did a pretty rough pass with the rejection reasons and I find it more than likely that we'll add detailed messages to some of them. If I mark the reasons here with google.protobuf.Empty I'll need to deprecate the field and introduce new one if we want to add a detailed message later. This feels messier to me.\r\n\r\nWe could of course just change rejection reason to always carry an extra detail string?",
        "createdAt" : "2019-04-26T13:48:03Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d5b2167d99861a69fd3366ab5fb08acc35514642",
    "line" : 112,
    "diffHunk" : "@@ -0,0 +1,165 @@\n+//\n+// Protocol buffer messages used by the participant state key-value utilities\n+// for implementing a DAML ledger backed by a key-value store.\n+//\n+// These messages must only be produced and consumed by the methods in\n+// `KeyValueCommitting`, `KeyValueConsumption` and `KeyValueSubmission` classes.\n+// You must not embed these messages in other protocol buffer messages.\n+//\n+// TODO(JM): We're consistently using the 'Daml' prefix to allow unqualified import\n+// of the generated classes and to distinguish these from the scala types in participant-state.\n+// Might want to use a more telling prefix.\n+\n+syntax = \"proto3\";\n+package com.daml.ledger.participant.state.kvutils;\n+option java_package = \"com.daml.ledger.participant.state.kvutils\";\n+\n+import \"google/protobuf/empty.proto\";\n+import \"google/protobuf/timestamp.proto\";\n+import \"google/protobuf/duration.proto\";\n+import \"da/daml_lf.proto\";\n+import \"daml-lf/transaction/src/main/protobuf/transaction.proto\";\n+\n+// The ledger implementation stores the `DamlLogEntry`s in an\n+// ordered sequence of keys, allowing for offset-based querying.\n+//\n+// Each entry can be converted into a participant state `Update` event.\n+message DamlLogEntry {\n+  // The record time at which this entry was committed.\n+  google.protobuf.Timestamp record_time = 1;\n+\n+  oneof payload {\n+    // A committed DAML transaction.\n+    // Can be converted into `Update.TransactionAccepted`.\n+    DamlTransactionEntry transaction_entry = 2;\n+\n+    // A rejected command.\n+    DamlRejectionEntry rejection_entry = 3;\n+\n+    // A DAML-LF archive.\n+    // Can be converted into `Update.PublicPackageUploaded`.\n+    daml_lf.Archive archive = 4;\n+\n+    // A DAML configuration change.\n+    DamlConfigurationEntry configuration_entry = 5;\n+  }\n+}\n+\n+message DamlLogEntryId {\n+  // Entry identifiers are opaque bytestrings chosen by the implementation that provide a unique\n+  // reference to the entry.\n+  // The entry identifier is used:\n+  // * to lookup the log entry when producing `Update`.\n+  // * as the DAML transaction identifier and rendered as hexadecimal.\n+  // * as part of absolute contract identifiers.\n+  bytes entry_id = 1;\n+}\n+\n+\n+// A submission to the ledger: a payload and its inputs if any.\n+message DamlSubmission {\n+  repeated DamlLogEntryId input_log_entries = 1;\n+  repeated DamlStateKey input_daml_state = 2;\n+  oneof payload {\n+    DamlTransactionEntry transaction_entry = 3;\n+    daml_lf.Archive archive = 4;\n+    DamlConfigurationEntry configuration_entry = 5;\n+  }\n+}\n+\n+message DamlSubmitterInfo {\n+  string submitter = 1;\n+  string command_id = 2;\n+  string application_id = 3;\n+  google.protobuf.Timestamp maximum_record_time = 4;\n+}\n+\n+message DamlTransactionEntry {\n+  // The original submitted transaction, with relative identifiers.\n+  // For now we're deduplicating the data and storing the contract instances\n+  // both in this transaction, and in \"DamlState\". Later on the transaction here\n+  // will only record the node identifiers, and nodes themselves are stored under\n+  // \"DamlState\".\n+  com.digitalasset.daml.lf.transaction.Transaction transaction = 1;\n+\n+  DamlSubmitterInfo submitter_info = 2;\n+\n+  // Transaction metadata\n+  string workflow_id = 3;\n+  google.protobuf.Timestamp ledger_effective_time = 4;\n+}\n+\n+message DamlRejectionEntry {\n+  DamlSubmitterInfo submitter_info = 1;\n+\n+  oneof reason {\n+    // NOTE(JM): Not all payloads are used, but marked as 'string' for\n+    // extensibility."
  },
  {
    "id" : "409625d4-6758-4eb6-8d97-267ad2259c3a",
    "prId" : 637,
    "comments" : [
      {
        "id" : "2652b8e6-4b9b-410a-85ba-4613753580f8",
        "parentId" : null,
        "author" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "body" : "Comment",
        "createdAt" : "2019-04-26T13:20:52Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "95a26916-fe7f-4080-ad66-38b88feb5e87",
        "parentId" : "2652b8e6-4b9b-410a-85ba-4613753580f8",
        "author" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "body" : "also add link to a ticket in BETA milestone that is about adding support for contract-keys. -- probably doesn't exist yet",
        "createdAt" : "2019-04-26T13:21:32Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d5b2167d99861a69fd3366ab5fb08acc35514642",
    "line" : 143,
    "diffHunk" : "@@ -0,0 +1,165 @@\n+//\n+// Protocol buffer messages used by the participant state key-value utilities\n+// for implementing a DAML ledger backed by a key-value store.\n+//\n+// These messages must only be produced and consumed by the methods in\n+// `KeyValueCommitting`, `KeyValueConsumption` and `KeyValueSubmission` classes.\n+// You must not embed these messages in other protocol buffer messages.\n+//\n+// TODO(JM): We're consistently using the 'Daml' prefix to allow unqualified import\n+// of the generated classes and to distinguish these from the scala types in participant-state.\n+// Might want to use a more telling prefix.\n+\n+syntax = \"proto3\";\n+package com.daml.ledger.participant.state.kvutils;\n+option java_package = \"com.daml.ledger.participant.state.kvutils\";\n+\n+import \"google/protobuf/empty.proto\";\n+import \"google/protobuf/timestamp.proto\";\n+import \"google/protobuf/duration.proto\";\n+import \"da/daml_lf.proto\";\n+import \"daml-lf/transaction/src/main/protobuf/transaction.proto\";\n+\n+// The ledger implementation stores the `DamlLogEntry`s in an\n+// ordered sequence of keys, allowing for offset-based querying.\n+//\n+// Each entry can be converted into a participant state `Update` event.\n+message DamlLogEntry {\n+  // The record time at which this entry was committed.\n+  google.protobuf.Timestamp record_time = 1;\n+\n+  oneof payload {\n+    // A committed DAML transaction.\n+    // Can be converted into `Update.TransactionAccepted`.\n+    DamlTransactionEntry transaction_entry = 2;\n+\n+    // A rejected command.\n+    DamlRejectionEntry rejection_entry = 3;\n+\n+    // A DAML-LF archive.\n+    // Can be converted into `Update.PublicPackageUploaded`.\n+    daml_lf.Archive archive = 4;\n+\n+    // A DAML configuration change.\n+    DamlConfigurationEntry configuration_entry = 5;\n+  }\n+}\n+\n+message DamlLogEntryId {\n+  // Entry identifiers are opaque bytestrings chosen by the implementation that provide a unique\n+  // reference to the entry.\n+  // The entry identifier is used:\n+  // * to lookup the log entry when producing `Update`.\n+  // * as the DAML transaction identifier and rendered as hexadecimal.\n+  // * as part of absolute contract identifiers.\n+  bytes entry_id = 1;\n+}\n+\n+\n+// A submission to the ledger: a payload and its inputs if any.\n+message DamlSubmission {\n+  repeated DamlLogEntryId input_log_entries = 1;\n+  repeated DamlStateKey input_daml_state = 2;\n+  oneof payload {\n+    DamlTransactionEntry transaction_entry = 3;\n+    daml_lf.Archive archive = 4;\n+    DamlConfigurationEntry configuration_entry = 5;\n+  }\n+}\n+\n+message DamlSubmitterInfo {\n+  string submitter = 1;\n+  string command_id = 2;\n+  string application_id = 3;\n+  google.protobuf.Timestamp maximum_record_time = 4;\n+}\n+\n+message DamlTransactionEntry {\n+  // The original submitted transaction, with relative identifiers.\n+  // For now we're deduplicating the data and storing the contract instances\n+  // both in this transaction, and in \"DamlState\". Later on the transaction here\n+  // will only record the node identifiers, and nodes themselves are stored under\n+  // \"DamlState\".\n+  com.digitalasset.daml.lf.transaction.Transaction transaction = 1;\n+\n+  DamlSubmitterInfo submitter_info = 2;\n+\n+  // Transaction metadata\n+  string workflow_id = 3;\n+  google.protobuf.Timestamp ledger_effective_time = 4;\n+}\n+\n+message DamlRejectionEntry {\n+  DamlSubmitterInfo submitter_info = 1;\n+\n+  oneof reason {\n+    // NOTE(JM): Not all payloads are used, but marked as 'string' for\n+    // extensibility.\n+    string inconsistent = 2;\n+    string disputed = 3;\n+    string resources_exhausted = 4;\n+    string maximum_record_time_exceeded = 5;\n+    string duplicate_command = 6;\n+    string party_not_known_on_ledger = 7;\n+    string submitter_cannot_act_via_participant = 8;\n+  }\n+}\n+\n+\n+message DamlConfigurationEntry {\n+  DamlTimeModel time_model = 1;\n+}\n+\n+message DamlTimeModel {\n+  // The expected minimum latency of a transaction.\n+  google.protobuf.Duration minTransactionLatency = 1;\n+\n+  // The maximum allowed clock skew between the ledger and clients.\n+  google.protobuf.Duration maxClockSkew = 2;\n+\n+  // The maximum allowed time to live for a transaction.\n+  // Must be greater than the derived minimum time to live.\n+  google.protobuf.Duration maxTtl = 3;\n+}\n+\n+message DamlStateKey {"
  }
]