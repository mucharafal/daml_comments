[
  {
    "id" : "30f23bd9-3f39-43a2-b3bb-d4dcf32a6126",
    "prId" : 6004,
    "comments" : [
      {
        "id" : "9fb9d54c-f44a-4315-9859-1102ad6490cc",
        "parentId" : null,
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "Isn't this test included in the next one?",
        "createdAt" : "2020-05-22T16:50:57Z",
        "updatedAt" : "2020-05-25T16:06:53Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "303d803a-e82a-4bca-b865-405c3fd629e4",
        "parentId" : "9fb9d54c-f44a-4315-9859-1102ad6490cc",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "No, because this case does not have an input state defined whereas the next one has.",
        "createdAt" : "2020-05-25T10:35:13Z",
        "updatedAt" : "2020-05-25T16:06:53Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f5039a2c00da681659f3cc8423f9ddfc9d993996",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +55,59 @@    }\n\n    \"report conflict for new output key also part of input invalidated key set\" in {\n      val aliceKey = DamlStateKey.newBuilder.setParty(\"Alice\").build\n      val outputState = Map(aliceKey -> DamlStateValue.getDefaultInstance)"
  },
  {
    "id" : "386f23e9-6917-453b-8ff3-e37b149aa623",
    "prId" : 6004,
    "comments" : [
      {
        "id" : "9a2510f7-3ac8-439c-bc89-86094334498e",
        "parentId" : null,
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "Should actually be empty, shouldn't it?",
        "createdAt" : "2020-05-22T16:54:11Z",
        "updatedAt" : "2020-05-25T16:06:53Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e778fe31-200f-4c63-aa08-9b999f46f07f",
        "parentId" : "9a2510f7-3ac8-439c-bc89-86094334498e",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Yes, but this way the test is easier to read.",
        "createdAt" : "2020-05-25T10:34:00Z",
        "updatedAt" : "2020-05-25T16:06:53Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f5039a2c00da681659f3cc8423f9ddfc9d993996",
    "line" : 174,
    "diffHunk" : "@@ -1,1 +172,176 @@\n      result should be(logEntry -> outputState)\n      actualInvalidatedKeys should not contain aliceKey\n      conflictDetectionMetrics.removedTransientKey.getCount should be(1)\n      conflictDetectionMetrics.conflicted.getCount should be(0)"
  },
  {
    "id" : "6904f892-f39f-4355-b402-4310d8f6ad85",
    "prId" : 6004,
    "comments" : [
      {
        "id" : "5cda615d-d639-4bee-bfee-fab041d5f26f",
        "parentId" : null,
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "These should be 0",
        "createdAt" : "2020-05-22T16:54:38Z",
        "updatedAt" : "2020-05-25T16:06:53Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "752f1434-2a2e-4bbe-9285-a614fbce0c0d",
        "parentId" : "5cda615d-d639-4bee-bfee-fab041d5f26f",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "I'll remove these types of expectations as they are no longer required. I.e., earlier we couldn't assume that the metrics are re-created from fresh and hence counters would start from 0.",
        "createdAt" : "2020-05-25T10:36:23Z",
        "updatedAt" : "2020-05-25T16:06:53Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f5039a2c00da681659f3cc8423f9ddfc9d993996",
    "line" : 162,
    "diffHunk" : "@@ -1,1 +160,164 @@      val conflictDetectionMetrics = damlMetrics.daml.kvutils.conflictdetection\n      val conflictDetection = new ConflictDetection(damlMetrics)\n\n      val Some((actualInvalidatedKeys, result)) = LoggingContext.newLoggingContext {\n        implicit logCtx =>"
  }
]