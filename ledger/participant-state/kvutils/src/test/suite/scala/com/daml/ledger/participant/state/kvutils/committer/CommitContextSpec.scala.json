[
  {
    "id" : "1da083f7-952a-47c9-bfa3-13bbcb41e22a",
    "prId" : 6561,
    "comments" : [
      {
        "id" : "3b0f36c8-c5e0-4458-b701-0d22525feec3",
        "parentId" : null,
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "@miklos-da This really checks all the properties we're interested in and it includes the previous one, so I removed the latter.",
        "createdAt" : "2020-07-01T14:13:33Z",
        "updatedAt" : "2020-07-01T15:52:08Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c94005b8-f8af-4bcd-a18c-37b9f550cf49",
        "parentId" : "3b0f36c8-c5e0-4458-b701-0d22525feec3",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "That's fine. In order to document by a test that the input set is not necessarily the same as the read keys I would suggest adding a test case where you have 2 input keys but only read one (even if they're `None`, doesn't matter).",
        "createdAt" : "2020-07-01T14:30:56Z",
        "updatedAt" : "2020-07-01T15:52:08Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "04259b94-0b58-4fa4-b297-f1773c97972f",
        "parentId" : "3b0f36c8-c5e0-4458-b701-0d22525feec3",
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "Good idea, added.",
        "createdAt" : "2020-07-01T14:35:50Z",
        "updatedAt" : "2020-07-01T15:52:08Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1daf68a136e83014d4801aff22c806a970e54c44",
    "line" : null,
    "diffHunk" : "@@ -28,14 +28,7 @@ class CommitContextSpec extends WordSpec with Matchers {\n       context.get(aKey) shouldBe Some(aValue)\n     }\n \n-    \"record accessed input keys\" in {\n-      val context = newInstance(Map(aKey -> Some(aValue)))\n-      context.get(aKey)\n-      context.getAccessedInputKeys.size shouldBe 1\n-      context.getAccessedInputKeys.head shouldBe aKey\n-    }\n-\n-    \"maintain the order of accessed input keys based on when they were accessed first\" in {\n+    \"records all accessed input keys and iterates over them in a stable order\" in {"
  }
]