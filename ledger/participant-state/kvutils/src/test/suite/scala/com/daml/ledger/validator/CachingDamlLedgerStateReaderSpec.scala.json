[
  {
    "id" : "68f99a81-851f-4744-ad30-f7a46cbf4ad2",
    "prId" : 6111,
    "comments" : [
      {
        "id" : "0695cd31-f248-4637-84ab-f818460cc75a",
        "parentId" : null,
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "We have a parameter for this in other ledgers, would it make sense to use it here as well?",
        "createdAt" : "2020-05-27T10:17:00Z",
        "updatedAt" : "2020-05-28T08:28:21Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "846b23cd-d0a3-43b0-98fc-98f2da2453c6",
        "parentId" : "0695cd31-f248-4637-84ab-f818460cc75a",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Can you elaborate, please? This just creates a small cache to test the caching logic without having to mock the cache instance.",
        "createdAt" : "2020-05-27T10:24:48Z",
        "updatedAt" : "2020-05-28T08:28:21Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9f0b3c7a-8bb3-4feb-8bdd-31e63b544749",
        "parentId" : "0695cd31-f248-4637-84ab-f818460cc75a",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "please ignore, i didn't read filename",
        "createdAt" : "2020-05-27T10:59:58Z",
        "updatedAt" : "2020-05-28T08:28:21Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4eaa7219a57e7cae32f14958b2c32423ade3c9d3",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +70,74 @@  private def newInstance(damlLedgerStateReader: DamlLedgerStateReader)(\n      implicit executionContext: ExecutionContext): CachingDamlLedgerStateReader = {\n    val cache = Cache.from[DamlStateKey, DamlStateValue](Configuration(1024))\n    new CachingDamlLedgerStateReader(cache, keySerializationStrategy, damlLedgerStateReader)\n  }"
  },
  {
    "id" : "bd514a27-3579-4f86-8c71-16185fd37184",
    "prId" : 6004,
    "comments" : [
      {
        "id" : "97f21e84-7a3b-4a54-a2d9-2c4267692f8f",
        "parentId" : null,
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "Isn't this test included in the next one?",
        "createdAt" : "2020-05-22T16:28:59Z",
        "updatedAt" : "2020-05-25T16:06:53Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9983cd50-d011-4a08-aa04-948c00c08e75",
        "parentId" : "97f21e84-7a3b-4a54-a2d9-2c4267692f8f",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "No, the next one checks that we are not reading what's already in the cache whereas this one checks that we write the just read value back to the cache.",
        "createdAt" : "2020-05-25T10:04:01Z",
        "updatedAt" : "2020-05-25T16:06:53Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f5039a2c00da681659f3cc8423f9ddfc9d993996",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +35,39 @@    }\n\n    \"write to cache what was read\" in {\n      val mockReader = mock[DamlLedgerStateReader]\n      when(mockReader.readState(argThat((keys: Seq[DamlStateKey]) => keys.size == 1)))"
  }
]