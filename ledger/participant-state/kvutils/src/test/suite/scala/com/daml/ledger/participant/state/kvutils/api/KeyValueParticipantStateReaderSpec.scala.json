[
  {
    "id" : "1c453029-c604-456b-8f6d-fc589a1d7c23",
    "prId" : 5790,
    "comments" : [
      {
        "id" : "afbbbdbc-2056-4208-a5a0-496117bcbf80",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Move this into the companion object where the helper methods are, please.",
        "createdAt" : "2020-05-05T08:30:08Z",
        "updatedAt" : "2020-05-06T10:18:00Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7234f1f69f87d95d1420a0faa8a6f2a70e0433f0",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +27,31 @@  import KVOffset.{fromLong => toOffset}\n\n  private def newMetrics = new Metrics(new MetricRegistry)\n\n  \"participant state reader\" should {"
  },
  {
    "id" : "ab8af022-9fbf-4f48-a88e-0c4a00d5299e",
    "prId" : 5790,
    "comments" : [
      {
        "id" : "3b1c7366-f7bc-4c09-befb-ca241dddb96c",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "```suggestion\r\n  private def createMetrics() = new Metrics(new MetricRegistry)\r\n```\r\nor\r\n```scala\r\n  private def newMetrics() = new Metrics(new MetricRegistry)\r\n```",
        "createdAt" : "2020-05-05T08:32:03Z",
        "updatedAt" : "2020-05-06T10:18:00Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7234f1f69f87d95d1420a0faa8a6f2a70e0433f0",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +27,31 @@  import KVOffset.{fromLong => toOffset}\n\n  private def newMetrics = new Metrics(new MetricRegistry)\n\n  \"participant state reader\" should {"
  },
  {
    "id" : "1e296834-b07b-4b41-a832-6cff93c2981d",
    "prId" : 3923,
    "comments" : [
      {
        "id" : "3fcfbee8-8b62-4fbf-a142-f90b7bebd637",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Why not just use `Source(items)`?",
        "createdAt" : "2019-12-23T10:20:17Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bb06da4f-87d9-4d8c-bb9d-549918ab3087",
        "parentId" : "3fcfbee8-8b62-4fbf-a142-f90b7bebd637",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Because that expects an immutable `Seq` whereas `items` is a mutable `Seq`. The above solution avoids copying the elements.",
        "createdAt" : "2020-01-06T13:01:33Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c820159bc8cad55858939f177705f0a8bab0fd13",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +129,133 @@  private def readerStreamingFrom(offset: Option[Offset], items: LedgerRecord*): LedgerReader = {\n    val reader = mock[LedgerReader]\n    val stream = Source.fromIterator(() => items.toIterator)\n    if (offset.isDefined) {\n      when(reader.events(offset)).thenReturn(stream)"
  }
]