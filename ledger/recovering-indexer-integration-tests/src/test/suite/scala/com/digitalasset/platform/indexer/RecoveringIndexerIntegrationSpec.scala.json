[
  {
    "id" : "856361e0-b97c-4413-9238-39b041af112f",
    "prId" : 5426,
    "comments" : [
      {
        "id" : "421d655d-5a6a-4fe8-8156-5dd2480dedd4",
        "parentId" : null,
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "I don't think this adds to readability",
        "createdAt" : "2020-04-03T16:34:02Z",
        "updatedAt" : "2020-04-06T15:24:56Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "72742384-898c-4736-8ee0-d8bf7b2d7720",
        "parentId" : "421d655d-5a6a-4fe8-8156-5dd2480dedd4",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "It's just because there's a default argument in the middle.",
        "createdAt" : "2020-04-06T07:12:55Z",
        "updatedAt" : "2020-04-06T15:24:56Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3d02b4d5980332a10e8ba6b26dda8c844e1a6e87",
    "line" : 10,
    "diffHunk" : "@@ -230,9 +230,12 @@ object RecoveringIndexerIntegrationSpec {\n         logCtx: LoggingContext\n     ): ResourceOwner[ParticipantState] = {\n       val metricRegistry = new MetricRegistry\n-      new InMemoryLedgerReaderWriter.SingleParticipantOwner(ledgerId, participantId, metricRegistry)\n-        .map(readerWriter =>\n-          new KeyValueParticipantState(readerWriter, readerWriter, metricRegistry))\n+      new InMemoryLedgerReaderWriter.SingleParticipantOwner(\n+        ledgerId,\n+        participantId,\n+        metricRegistry = metricRegistry,"
  },
  {
    "id" : "1c72070d-0c01-47d6-bdf2-f9563f591df3",
    "prId" : 5413,
    "comments" : [
      {
        "id" : "c7b2a6a8-5050-4a9d-a663-ae6b5fd2d6d4",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Minor: I think named parameters are best used consistently in a call.",
        "createdAt" : "2020-04-03T10:09:54Z",
        "updatedAt" : "2020-04-03T10:18:58Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3ff8b368-1a80-4525-9c89-5eb27127a6c6",
        "parentId" : "c7b2a6a8-5050-4a9d-a663-ae6b5fd2d6d4",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Good point. I've added names to all other parameters.",
        "createdAt" : "2020-04-03T10:19:18Z",
        "updatedAt" : "2020-04-03T10:19:18Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "cf835f64fc17bc2828e2be1b01590c8a4318f82d",
    "line" : 16,
    "diffHunk" : "@@ -192,15 +192,19 @@ class RecoveringIndexerIntegrationSpec extends AsyncWordSpec with Matchers with\n           restartDelay = restartDelay,\n         ),\n         metrics = new MetricRegistry,\n-        eventsPageSize = 100,\n       )(materializer, logCtx)\n     } yield participantState\n   }\n \n   private def index(implicit logCtx: LoggingContext): ResourceOwner[LedgerDao] = {\n     val jdbcUrl =\n       s\"jdbc:h2:mem:${getClass.getSimpleName.toLowerCase}-$testId;db_close_delay=-1;db_close_on_exit=false\"\n-    JdbcLedgerDao.writeOwner(ServerRole.Testing(getClass), jdbcUrl, new MetricRegistry, 100)\n+    JdbcLedgerDao.writeOwner(\n+      ServerRole.Testing(getClass),\n+      jdbcUrl,\n+      eventsPageSize = 100,"
  }
]