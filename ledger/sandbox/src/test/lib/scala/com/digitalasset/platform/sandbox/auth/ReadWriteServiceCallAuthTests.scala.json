[
  {
    "id" : "edc20e03-922d-412d-9191-5eef8a314935",
    "prId" : 6342,
    "comments" : [
      {
        "id" : "d2430204-39f6-42db-9ac8-1e1c8e87be59",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "I would expect we test 3 scenarios:\r\n\r\n1. No application ID in the token (should succeed)\r\n2. Correct application ID in the token (should succeed)\r\n3. Wrong application ID in the token (should fail)\r\n\r\nIt looks to me like we only test 1 and 3, is that correct?\r\n\r\n",
        "createdAt" : "2020-06-15T07:56:48Z",
        "updatedAt" : "2020-06-15T09:08:19Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b164dba6-9655-4ac4-ad7b-4943c705ae90",
        "parentId" : "d2430204-39f6-42db-9ac8-1e1c8e87be59",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Good catch, thanks.",
        "createdAt" : "2020-06-15T09:08:14Z",
        "updatedAt" : "2020-06-15T09:08:19Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "83e979f8-90a7-4f73-b538-996c33bd8e7a",
        "parentId" : "d2430204-39f6-42db-9ac8-1e1c8e87be59",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/6342/commits/37e3b6c4311f180c3cce2813e7b2af5bc50501fc",
        "createdAt" : "2020-06-15T09:09:20Z",
        "updatedAt" : "2020-06-15T09:09:21Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "37e3b6c4311f180c3cce2813e7b2af5bc50501fc",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +38,42 @@    expectSuccess(serviceCallWithToken(canActAsMainActorActualApplicationId))\n  }\n  it should \"deny calls with a random application ID\" in {\n    expectPermissionDenied(serviceCallWithToken(canActAsMainActorRandomApplicationId))\n  }"
  },
  {
    "id" : "887977db-deb7-4838-b232-e6c0d0d16675",
    "prId" : 3598,
    "comments" : [
      {
        "id" : "76842f0f-de11-4134-b616-6024f3c7c481",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I'm not sure that it's very clear what an \"implicitly non-expired\" token is. How about `allow calls with a read/write token without an expiration date`?",
        "createdAt" : "2019-11-26T07:47:01Z",
        "updatedAt" : "2019-11-26T08:32:31Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9b4fe137-045a-4f6e-a539-6dfbe17d378c",
        "parentId" : "76842f0f-de11-4134-b616-6024f3c7c481",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I'll make a separate PR to fix this, thanks! :slightly_smiling_face: ",
        "createdAt" : "2019-11-26T09:13:31Z",
        "updatedAt" : "2019-11-26T09:13:31Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bdecb32d-064d-4f01-a012-0cf0f39d9835",
        "parentId" : "76842f0f-de11-4134-b616-6024f3c7c481",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed here https://github.com/digital-asset/daml/pull/3629",
        "createdAt" : "2019-11-26T09:25:41Z",
        "updatedAt" : "2019-11-26T09:25:42Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0861fc99c196c4f679d95440b2795fcd3c2e404c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@    expectSuccess(serviceCallWithToken(canActAsMainActorExpiresTomorrow))\n  }\n  it should \"allow calls with implicitly non-expired read/write token\" in {\n    expectSuccess(serviceCallWithToken(canActAsMainActor))\n  }"
  }
]