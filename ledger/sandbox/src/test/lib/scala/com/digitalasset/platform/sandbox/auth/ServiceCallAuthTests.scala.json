[
  {
    "id" : "a60e8508-5193-4ae5-b3bd-4274c6c1da37",
    "prId" : 3781,
    "comments" : [
      {
        "id" : "8c741c95-6c52-43b0-a646-d71385ce9810",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Nice comment!",
        "createdAt" : "2019-12-09T13:22:51Z",
        "updatedAt" : "2019-12-09T14:38:30Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7e5e0f692b68fd0b61e3e50e9cc341a38cdab2b7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +76,80 @@    toHeader(expiringIn(Duration.ofDays(1), adminToken)))\n\n  // Note: lazy val, because the ledger ID is only known after the sandbox start\n  protected lazy val canReadAsRandomPartyActualLedgerId =\n    Option(toHeader(forLedgerId(unwrappedLedgerId, readOnlyToken(UUID.randomUUID.toString))))"
  }
]