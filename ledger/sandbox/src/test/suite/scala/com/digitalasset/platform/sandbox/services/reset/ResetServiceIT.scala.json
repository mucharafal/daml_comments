[
  {
    "id" : "fd652324-13b3-42c6-93fc-87882d15873b",
    "prId" : 4447,
    "comments" : [
      {
        "id" : "eebf4163-734a-4854-a543-351d85d33e6e",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "To the best of my understanding, this simply suggests the runtime to run garbage collection but it doesn't guarantee it will happen. Can this introduce flakiness in the test?",
        "createdAt" : "2020-02-10T10:01:35Z",
        "updatedAt" : "2020-02-10T15:56:26Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6d116e86-51d9-46e3-bac8-3b30d0f69fd1",
        "parentId" : "eebf4163-734a-4854-a543-351d85d33e6e",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Yes, but it seems our VM is happy with the \"suggestion\". If this fails when we upgrade Java, we can disable it and find another way to test it then.",
        "createdAt" : "2020-02-10T10:11:39Z",
        "updatedAt" : "2020-02-10T15:56:26Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "84e6c618d4689590c8f46682a40a528bbafe76f7",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +180,184 @@          _ <- reset(lid)\n        } yield {\n          System.gc()\n          state.get should be(None)\n        }"
  },
  {
    "id" : "0c2f4a7e-c22b-465f-b93f-e82022a5fef2",
    "prId" : 3844,
    "comments" : [
      {
        "id" : "b067347c-d7e1-496a-a9aa-b6ef48280b3a",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Why not use ScalaTest's `eventually`?",
        "createdAt" : "2019-12-13T15:50:13Z",
        "updatedAt" : "2019-12-13T15:55:07Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3b55d003-8a32-4db1-98cb-ff928ffedbc5",
        "parentId" : "b067347c-d7e1-496a-a9aa-b6ef48280b3a",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I'm not sure of the reason why but everything fails if I use that. I'm not sure of the semantics there.",
        "createdAt" : "2019-12-13T16:04:07Z",
        "updatedAt" : "2019-12-13T16:04:07Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b1493b21c23cbfff4e88cad63f00f68284ec1f4a",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +55,59 @@    with TestCommands {\n\n  private val eventually = RetryStrategy.exponentialBackoff(10, 10.millis)\n\n  override def timeLimit: Span = scaled(30.seconds)"
  },
  {
    "id" : "f2492414-e7f6-48d0-acae-71398dd40490",
    "prId" : 3844,
    "comments" : [
      {
        "id" : "4b7776a1-8823-4d3b-a77f-36bf218b75d3",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "I think I'd prefer it if we could use `for` comprehensions with assertions.",
        "createdAt" : "2019-12-13T15:53:25Z",
        "updatedAt" : "2019-12-13T15:55:07Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b1493b21c23cbfff4e88cad63f00f68284ec1f4a",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +132,136 @@        Future\n          .sequence(Iterator.iterate(getLedgerId())(_.flatMap(reset)).take(20).toVector)\n          .map(ids => ids.distinct should have size 20L)\n      }\n"
  },
  {
    "id" : "f32bb6ef-7dd9-43e0-bd6b-334eb4b86fc1",
    "prId" : 3844,
    "comments" : [
      {
        "id" : "a388321f-2592-44fb-bd90-3a7ce6914087",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Even when the assertion is just a `succeed`, I think I'd still prefer a `for`, but I'm less fussed about this one.",
        "createdAt" : "2019-12-13T15:53:50Z",
        "updatedAt" : "2019-12-13T15:55:07Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "881b82b7-7310-4d44-b1a3-d190ea08e82b",
        "parentId" : "a388321f-2592-44fb-bd90-3a7ce6914087",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "There are different opinions in the team (@gerolf-da usually prefers `map` when the call is very simple). If you don't have a strong argument against this one I'd keep it as it is right now, mostly out of sheer inertia. Ideally I would have wanted to use `all(measurements) should be <= threshold` but for some reason it doesn't compile.",
        "createdAt" : "2019-12-13T16:00:02Z",
        "updatedAt" : "2019-12-13T16:00:02Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b1493b21c23cbfff4e88cad63f00f68284ec1f4a",
    "line" : 159,
    "diffHunk" : "@@ -1,1 +157,161 @@              .take(numberOfAttempts)\n          )\n          .map(_ => succeed)\n      }\n"
  }
]