[
  {
    "id" : "34a2da32-9c20-4455-b14a-5d33711ed6b3",
    "prId" : 3874,
    "comments" : [
      {
        "id" : "017794b7-ba33-4cdb-8488-ce9a3ec429b2",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Why not just `.flatMapConcat(Source(_.transactions))`?",
        "createdAt" : "2019-12-17T13:55:59Z",
        "updatedAt" : "2019-12-17T14:15:02Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "0854f395-86f5-4b41-81bf-3775c6035676",
        "parentId" : "017794b7-ba33-4cdb-8488-ce9a3ec429b2",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "`Source` wants `scala.collection.immutable.Iterable[A]` and the value returned by the gRPC call is `scala.collection.Seq[A]` which is `<: scala.collection.Iterable[A]` but cannot be upcast to a `scala.collection.immutable.Iterable[A]`. I was a bit confused as well, but I can have a second look. :slightly_smiling_face: ",
        "createdAt" : "2019-12-17T14:03:01Z",
        "updatedAt" : "2019-12-17T14:15:02Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "91b95dfc-dd74-413a-81ba-40f70b41d931",
        "parentId" : "017794b7-ba33-4cdb-8488-ce9a3ec429b2",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/3874/commits/ee05a8ccee3e4c282f52449d9536e91d23442ad0",
        "createdAt" : "2019-12-17T14:15:45Z",
        "updatedAt" : "2019-12-17T14:15:45Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ee05a8ccee3e4c282f52449d9536e91d23442ad0",
    "line" : null,
    "diffHunk" : "@@ -179,24 +246,39 @@ class CommandStaticTimeIT\n       }\n \n       \"a choice on a contract is exercised before its LET\" should {\n-        \"result in a rejection\" in allFixtures { ctx =>\n+        \"result in a rejection\" in {\n           for {\n-            commandClient <- ctx.commandClient()\n-            getTimeResponse <- timeSource(ctx).runWith(Sink.head)\n+            commandClient <- commandClient\n+            getTimeResponse <- timeSource.runWith(Sink.head)\n             currentTime = getTimeResponse.getCurrentTime\n             templateId = templateIds.dummy\n-            txEndOffset <- ctx.transactionClient.getLedgerEnd().map(_.getOffset)\n-            comp <- commandClient.send(dummyCreateRequest(ctx, toInstant(currentTime), templateId))\n-            _ = comp.getStatus should have('code(0))\n-            transaction <- ctx.transactionClient.getTransactions(txEndOffset, None, TransactionFilter(Map(submitRequest.commands.value.party -> Filters.defaultInstance)))\n+            txEndOffset <- TransactionServiceGrpc\n+              .stub(channel)\n+              .getLedgerEnd(GetLedgerEndRequest(unwrappedLedgerId))\n+              .map(_.getOffset)\n+            comp <- commandClient.send(dummyCreateRequest(toInstant(currentTime), templateId))\n+            _ = comp.getStatus should have('code (0))\n+            transaction <- ClientAdapter\n+              .serverStreaming(\n+                GetTransactionsRequest(\n+                  unwrappedLedgerId,\n+                  Some(txEndOffset),\n+                  None,\n+                  Some(TransactionFilter(\n+                    Map(submitRequest.commands.value.party -> Filters.defaultInstance)))),\n+                TransactionServiceGrpc\n+                  .stub(channel)\n+                  .getTransactions\n+              )\n+              .flatMapConcat(res => Source.fromIterator(() => res.transactions.iterator))"
  },
  {
    "id" : "a5a876dc-e3c4-4600-b49b-cb6af6c64c7c",
    "prId" : 3874,
    "comments" : [
      {
        "id" : "facf0cfe-8efd-493c-8fbc-a5d89a935fd6",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Please rename one of these. Preferably the function. Call it `newCommandClient` or something.\r\n\r\nI also think it'd be nice if it had parentheses. It's not a pure function, exactlyâ€”it uses the materializer.",
        "createdAt" : "2019-12-17T13:57:24Z",
        "updatedAt" : "2019-12-17T14:15:02Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "735c2e6c-9134-47e9-8132-e724e40f17a6",
        "parentId" : "facf0cfe-8efd-493c-8fbc-a5d89a935fd6",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Makes a lot of sense, thanks.",
        "createdAt" : "2019-12-17T14:03:14Z",
        "updatedAt" : "2019-12-17T14:15:02Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7517ac85-fb56-4805-bb84-2dee9124977d",
        "parentId" : "facf0cfe-8efd-493c-8fbc-a5d89a935fd6",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/3874/commits/2d27ff8655ae1e109a97201be518807c241f1cf5",
        "createdAt" : "2019-12-17T14:15:58Z",
        "updatedAt" : "2019-12-17T14:15:58Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ee05a8ccee3e4c282f52449d9536e91d23442ad0",
    "line" : null,
    "diffHunk" : "@@ -102,33 +161,38 @@ class CommandStaticTimeIT\n     }.head\n   }\n \n-  private def timeSource(ctx: LedgerContext) =\n-    ClientAdapter.serverStreaming(GetTimeRequest(ctx.ledgerId.unwrap), ctx.timeService.getTime)\n+  private def timeSource =\n+    ClientAdapter.serverStreaming(\n+      GetTimeRequest(unwrappedLedgerId),\n+      TimeServiceGrpc.stub(channel).getTime)\n \n   \"Command and Time Services\" when {\n \n     \"ledger effective time is within acceptance window\" should {\n \n-      \"commands should be accepted\" in allFixtures { ctx =>\n+      \"commands should be accepted\" in {\n         for {\n-          commandClient <- ctx.commandClient()\n+          commandClient <- commandClient"
  },
  {
    "id" : "5aac4319-a2f1-47d3-aed5-292a55c9d7ae",
    "prId" : 3874,
    "comments" : [
      {
        "id" : "3cb61b56-395d-4117-a5b5-c668cd90752d",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Is there a reason we're not letting the formatter do its thing?",
        "createdAt" : "2019-12-17T13:57:59Z",
        "updatedAt" : "2019-12-17T14:15:02Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e181c7ad-5706-4d23-83fc-312eb0a2b660",
        "parentId" : "3cb61b56-395d-4117-a5b5-c668cd90752d",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I can disable this and see if it works, all I've done was adding a missing `// format: off`. :wink: ",
        "createdAt" : "2019-12-17T14:03:51Z",
        "updatedAt" : "2019-12-17T14:15:02Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "801e3744-6f68-4dbc-9e7a-cb76d76f76c1",
        "parentId" : "3cb61b56-395d-4117-a5b5-c668cd90752d",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "My best guess is a `scalafmt` search state explosion, but probably this has been mitigated by your recent dependency bump and it's worth trying. :slightly_smiling_face: ",
        "createdAt" : "2019-12-17T14:04:36Z",
        "updatedAt" : "2019-12-17T14:15:02Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9af2b289-67e2-453d-b859-42d29a05eb69",
        "parentId" : "3cb61b56-395d-4117-a5b5-c668cd90752d",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "> Search state exploded around line 135\r\n\r\nConfirmed, I'll have to leave this as is, but at least the rest of the file will be formatted automatically. :slightly_smiling_face: ",
        "createdAt" : "2019-12-17T14:05:38Z",
        "updatedAt" : "2019-12-17T14:15:02Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "efd25b42-446d-4198-a1a3-182bc89dc66d",
        "parentId" : "3cb61b56-395d-4117-a5b5-c668cd90752d",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Fair. ðŸ˜„ ",
        "createdAt" : "2019-12-17T15:07:04Z",
        "updatedAt" : "2019-12-17T15:07:04Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ee05a8ccee3e4c282f52449d9536e91d23442ad0",
    "line" : 130,
    "diffHunk" : "@@ -64,33 +115,41 @@ class CommandStaticTimeIT\n \n   }\n \n-  private def submissionWithTime(ctx: LedgerContext, time: Instant): SubmitRequest = {\n+  private def submissionWithTime(time: Instant): SubmitRequest = {\n     val let = fromInstant(time)\n     val mrt = let.update(_.seconds.modify(_ + ttlSeconds))\n     submitRequest\n       .update(\n         _.commands.ledgerEffectiveTime := let,\n         _.commands.maximumRecordTime := mrt,\n-        _.commands.ledgerId := ctx.ledgerId.unwrap,\n+        _.commands.ledgerId := unwrappedLedgerId,\n         _.commands.commandId := newCommandId()\n       )\n   }\n \n   // format: off"
  }
]