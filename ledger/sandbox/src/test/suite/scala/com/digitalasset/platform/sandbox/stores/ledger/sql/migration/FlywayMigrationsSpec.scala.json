[
  {
    "id" : "bd66b3ae-ee28-47da-961f-68d0655c315d",
    "prId" : 2425,
    "comments" : [
      {
        "id" : "af960592-017c-49f9-8d38-d188b5483a25",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "I assume this test only checks the checksums of the Postgres migration scripts? If yes, can we add the same test for the H2 migration scripts? Or maybe replacing `resourceScanner` by a list of scanners, and use `resourceScanners.forEach` in the tests?",
        "createdAt" : "2019-08-21T13:54:38Z",
        "updatedAt" : "2019-08-28T11:21:54Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "eda052da-b5fc-445f-92e6-d77c2f7a4072",
        "parentId" : "af960592-017c-49f9-8d38-d188b5483a25",
        "author" : {
          "login" : "oliverse-da",
          "name" : "Oliver Seeliger",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/46452754?u=dd1d8e09760abe67b40a4e527a15aafe9d104d82&v=4"
        },
        "body" : "Yes I was planning of making the same check for H2Database migration files",
        "createdAt" : "2019-08-22T12:21:34Z",
        "updatedAt" : "2019-08-28T11:21:54Z",
        "lastEditedBy" : {
          "login" : "oliverse-da",
          "name" : "Oliver Seeliger",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/46452754?u=dd1d8e09760abe67b40a4e527a15aafe9d104d82&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5efabc07-5bb6-464b-b6b9-05b4d2eb8e3e",
        "parentId" : "af960592-017c-49f9-8d38-d188b5483a25",
        "author" : {
          "login" : "oliverse-da",
          "name" : "Oliver Seeliger",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/46452754?u=dd1d8e09760abe67b40a4e527a15aafe9d104d82&v=4"
        },
        "body" : "Done this.",
        "createdAt" : "2019-08-23T11:47:58Z",
        "updatedAt" : "2019-08-28T11:21:54Z",
        "lastEditedBy" : {
          "login" : "oliverse-da",
          "name" : "Oliver Seeliger",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/46452754?u=dd1d8e09760abe67b40a4e527a15aafe9d104d82&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1fee0715b6e5ad68a7c644fcc1d5e65f71f5a8ed",
    "line" : null,
    "diffHunk" : "@@ -6,25 +6,27 @@ package com.digitalasset.platform.sandbox.stores.ledger.sql.migration\n import java.math.BigInteger\n import java.security.MessageDigest\n \n+import com.digitalasset.platform.sandbox.stores.ledger.sql.dao.JdbcLedgerDao\n import com.digitalasset.platform.sandbox.stores.ledger.sql.migration.FlywayMigrations.configurationBase\n import org.flywaydb.core.internal.resource.LoadableResource\n import org.flywaydb.core.internal.scanner.Scanner\n import org.scalatest.{Matchers, WordSpec}\n \n-import scala.collection.JavaConverters._\n-\n // SQL MIGRATION AND THEIR DIGEST FILES SHOULD BE CREATED ONLY ONCE AND NEVER CHANGED AGAIN,\n // OTHERWISE MIGRATIONS BREAK ON EXISTING DEPLOYMENTS!\n @SuppressWarnings(Array(\"org.wartremover.warts.Any\", \"org.wartremover.warts.StringPlusAny\"))\n class FlywayMigrationsSpec extends WordSpec with Matchers {\n \n   private val digester = MessageDigest.getInstance(\"SHA-256\")\n \n-  private val resourceScanner = new Scanner(\n-    configurationBase.getLocations.toList.asJava,\n-    getClass.getClassLoader,\n-    configurationBase.getEncoding\n-  )\n+  private val resourceScanner = {\n+    val postgresConfig = configurationBase(JdbcLedgerDao.Postgres)\n+    new Scanner(\n+      postgresConfig.getLocations.toList.asJava,"
  },
  {
    "id" : "fae9d674-7bfa-4de5-a8e3-b1b471f57ac4",
    "prId" : 943,
    "comments" : [
      {
        "id" : "935911dd-6768-4d81-bf0b-3a3397da2fd8",
        "parentId" : null,
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "please:\r\n\r\n1. put a better error message, e.g. `I was expecting hash XYZ instead of hash ASD for file QWE`\r\n2. please write down how to generate the sha for a new file.",
        "createdAt" : "2019-05-06T14:21:40Z",
        "updatedAt" : "2019-05-06T14:54:00Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b6a0e670-fd5a-46ea-a2cb-545aa2e260bc",
        "parentId" : "935911dd-6768-4d81-bf0b-3a3397da2fd8",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "both done",
        "createdAt" : "2019-05-06T14:54:10Z",
        "updatedAt" : "2019-05-06T14:54:11Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "cc455bbcbafbf6151d41fdb7dba1782107230dd2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,57 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.platform.sandbox.stores.ledger.sql.migration\n+\n+import java.math.BigInteger\n+import java.security.MessageDigest\n+\n+import com.digitalasset.platform.sandbox.stores.ledger.sql.migration.FlywayMigrations.configurationBase\n+import org.flywaydb.core.internal.resource.LoadableResource\n+import org.flywaydb.core.internal.scanner.Scanner\n+import org.scalatest.{Matchers, WordSpec}\n+\n+import scala.collection.JavaConverters._\n+\n+// SQL MIGRATION AND THEIR DIGEST FILES SHOULD BE CREATED ONLY ONCE AND NEVER CHANGED AGAIN,\n+// OTHERWISE MIGRATIONS BREAK ON EXISTING DEPLOYMENTS!\n+@SuppressWarnings(Array(\"org.wartremover.warts.Any\", \"org.wartremover.warts.StringPlusAny\"))\n+class FlywayMigrationsSpec extends WordSpec with Matchers {\n+\n+  private val digester = MessageDigest.getInstance(\"SHA-256\");\n+\n+  private val resourceScanner = new Scanner(\n+    configurationBase.getLocations.toList.asJava,\n+    getClass.getClassLoader,\n+    configurationBase.getEncoding\n+  )\n+\n+  \"Flyway migration files\" should {\n+    \"always have a valid SHA-256 digest file accompanied\" in {\n+      resourceScanner\n+        .getResources(\"\", \".sql\")\n+        .asScala\n+        .map { res =>\n+          val fileName = res.getFilename\n+          val expectedDigest = getExpectedDigest(fileName.dropRight(4) + \".sha256\")\n+          val currentDigest = getCurrentDigest(res)\n+\n+          currentDigest shouldEqual expectedDigest"
  },
  {
    "id" : "6fc68768-2c93-4136-98f3-afa1fc209908",
    "prId" : 943,
    "comments" : [
      {
        "id" : "edb7d888-cea4-4033-a4d3-bf1e62a4df41",
        "parentId" : null,
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "isn't there a java / scala function to drop the extension rather than `dropRight(4)`?",
        "createdAt" : "2019-05-06T14:23:14Z",
        "updatedAt" : "2019-05-06T14:54:00Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "dea8d31f-4fbc-4de5-ba69-98808b289d3c",
        "parentId" : "edb7d888-cea4-4033-a4d3-bf1e62a4df41",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "not really, it would require pulling in a library I think. Having this for a test is fine in my opinion.",
        "createdAt" : "2019-05-06T14:37:05Z",
        "updatedAt" : "2019-05-06T14:54:00Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "cc455bbcbafbf6151d41fdb7dba1782107230dd2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,57 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.platform.sandbox.stores.ledger.sql.migration\n+\n+import java.math.BigInteger\n+import java.security.MessageDigest\n+\n+import com.digitalasset.platform.sandbox.stores.ledger.sql.migration.FlywayMigrations.configurationBase\n+import org.flywaydb.core.internal.resource.LoadableResource\n+import org.flywaydb.core.internal.scanner.Scanner\n+import org.scalatest.{Matchers, WordSpec}\n+\n+import scala.collection.JavaConverters._\n+\n+// SQL MIGRATION AND THEIR DIGEST FILES SHOULD BE CREATED ONLY ONCE AND NEVER CHANGED AGAIN,\n+// OTHERWISE MIGRATIONS BREAK ON EXISTING DEPLOYMENTS!\n+@SuppressWarnings(Array(\"org.wartremover.warts.Any\", \"org.wartremover.warts.StringPlusAny\"))\n+class FlywayMigrationsSpec extends WordSpec with Matchers {\n+\n+  private val digester = MessageDigest.getInstance(\"SHA-256\");\n+\n+  private val resourceScanner = new Scanner(\n+    configurationBase.getLocations.toList.asJava,\n+    getClass.getClassLoader,\n+    configurationBase.getEncoding\n+  )\n+\n+  \"Flyway migration files\" should {\n+    \"always have a valid SHA-256 digest file accompanied\" in {\n+      resourceScanner\n+        .getResources(\"\", \".sql\")\n+        .asScala\n+        .map { res =>\n+          val fileName = res.getFilename\n+          val expectedDigest = getExpectedDigest(fileName.dropRight(4) + \".sha256\")"
  },
  {
    "id" : "beee3cd6-2465-444d-8d55-17259d5d85eb",
    "prId" : 943,
    "comments" : [
      {
        "id" : "db38d68b-56e3-4ad5-ad90-69b5da92eea3",
        "parentId" : null,
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "please write the expected and actual hash ",
        "createdAt" : "2019-05-06T14:31:46Z",
        "updatedAt" : "2019-05-06T14:54:00Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d81a65be-961b-4d4f-ae04-2124bdcbef37",
        "parentId" : "db38d68b-56e3-4ad5-ad90-69b5da92eea3",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "it's written automatically by `assert`",
        "createdAt" : "2019-05-06T14:34:29Z",
        "updatedAt" : "2019-05-06T14:54:00Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "cc455bbcbafbf6151d41fdb7dba1782107230dd2",
    "line" : 41,
    "diffHunk" : "@@ -0,0 +1,60 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.platform.sandbox.stores.ledger.sql.migration\n+\n+import java.math.BigInteger\n+import java.security.MessageDigest\n+\n+import com.digitalasset.platform.sandbox.stores.ledger.sql.migration.FlywayMigrations.configurationBase\n+import org.flywaydb.core.internal.resource.LoadableResource\n+import org.flywaydb.core.internal.scanner.Scanner\n+import org.scalatest.{Matchers, WordSpec}\n+\n+import scala.collection.JavaConverters._\n+\n+// SQL MIGRATION AND THEIR DIGEST FILES SHOULD BE CREATED ONLY ONCE AND NEVER CHANGED AGAIN,\n+// OTHERWISE MIGRATIONS BREAK ON EXISTING DEPLOYMENTS!\n+@SuppressWarnings(Array(\"org.wartremover.warts.Any\", \"org.wartremover.warts.StringPlusAny\"))\n+class FlywayMigrationsSpec extends WordSpec with Matchers {\n+\n+  private val digester = MessageDigest.getInstance(\"SHA-256\");\n+\n+  private val resourceScanner = new Scanner(\n+    configurationBase.getLocations.toList.asJava,\n+    getClass.getClassLoader,\n+    configurationBase.getEncoding\n+  )\n+\n+  \"Flyway migration files\" should {\n+    \"always have a valid SHA-256 digest file accompanied\" in {\n+      resourceScanner\n+        .getResources(\"\", \".sql\")\n+        .asScala\n+        .map { res =>\n+          val fileName = res.getFilename\n+          val expectedDigest = getExpectedDigest(fileName.dropRight(4) + \".sha256\")\n+          val currentDigest = getCurrentDigest(res)\n+\n+          assert(\n+            currentDigest == expectedDigest,\n+            s\"Digest of migration file $fileName has changed! It is NOT allowed to change neither existing sql migrations files nor their digests!\""
  }
]