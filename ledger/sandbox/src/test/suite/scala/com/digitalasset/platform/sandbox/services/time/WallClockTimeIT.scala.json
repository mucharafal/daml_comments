[
  {
    "id" : "93fd295e-3e43-43a6-9fd9-bbd8cbc061f0",
    "prId" : 3840,
    "comments" : [
      {
        "id" : "99ad3b4b-8fbf-4f58-bc57-df8af16a394f",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Why not `PartialFunction[Throwable, Unit]`?",
        "createdAt" : "2019-12-13T10:43:00Z",
        "updatedAt" : "2019-12-13T10:43:00Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d91b2923-2ec1-483c-818f-1382a027aeb6",
        "parentId" : "99ad3b4b-8fbf-4f58-bc57-df8af16a394f",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I tried that initially but unfortunately `matchResult` specifically asks for a ~`Receive`~ `PartialFunction[Any, Unit]` and changing this to `PartialFunction[Throwable, Unit]` makes it not compile. It's a bit weird now that I think about it, since I believe `PartialFunction` to be contravariant in the input type... :thinking: ",
        "createdAt" : "2019-12-13T10:53:21Z",
        "updatedAt" : "2019-12-13T10:53:21Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "433e7c49314321cc7bade9e722065506b397a3f7",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@\n  @SuppressWarnings(Array(\"org.wartremover.warts.Any\"))\n  private val unimplemented: PartialFunction[Any, Unit] = {\n    case GrpcException.UNIMPLEMENTED() => ()\n  }"
  }
]