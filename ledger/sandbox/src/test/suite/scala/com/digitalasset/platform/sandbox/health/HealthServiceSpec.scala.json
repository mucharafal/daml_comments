[
  {
    "id" : "da802384-9cdc-4683-a1c2-09cf76cb053f",
    "prId" : 3573,
    "comments" : [
      {
        "id" : "02109f36-8468-47b0-9192-c4c5b899beb5",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\nfinal class HealthServiceSpec\r\n```",
        "createdAt" : "2019-11-21T15:10:49Z",
        "updatedAt" : "2019-11-22T13:38:57Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4848f40af9b3e4bc6651d495959322efdfdbaa78",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,96 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.platform.sandbox.health\n+\n+import akka.actor.ActorSystem\n+import akka.stream.ActorMaterializer\n+import akka.testkit.TestKit\n+import com.digitalasset.platform.sandbox.health.HealthServiceSpec._\n+import io.grpc.health.v1.{HealthCheckRequest, HealthCheckResponse}\n+import io.grpc.stub.StreamObserver\n+import io.grpc.{Status, StatusRuntimeException}\n+import org.mockito.Mockito\n+import org.mockito.Mockito._\n+import org.scalatest.concurrent.Eventually\n+import org.scalatest.mockito.MockitoSugar\n+import org.scalatest.{BeforeAndAfterAll, Matchers, WordSpecLike}\n+\n+import scala.concurrent.ExecutionContext\n+import scala.concurrent.duration.DurationInt\n+\n+object HealthServiceSpec {\n+  private val request = HealthCheckRequest.getDefaultInstance\n+\n+  private val servingResponse = HealthCheckResponse\n+    .newBuilder()\n+    .setStatus(HealthCheckResponse.ServingStatus.SERVING)\n+    .build()\n+}\n+\n+class HealthServiceSpec"
  }
]