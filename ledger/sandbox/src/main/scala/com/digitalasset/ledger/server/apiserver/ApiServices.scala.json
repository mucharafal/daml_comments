[
  {
    "id" : "71cbef4f-62d7-4667-bad5-8c8992065952",
    "prId" : 3655,
    "comments" : [
      {
        "id" : "3e278479-4490-4406-b468-64e9f31b51b9",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Not your fault but I'd say it's time to maybe thing about ways in which we could refactor this class. Lots of concerns tied up in a single place. :thinking: ",
        "createdAt" : "2019-11-28T12:17:53Z",
        "updatedAt" : "2019-11-29T13:33:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6edcb2a7-a7ea-48e9-8ebf-adb04b73a31e",
        "parentId" : "3e278479-4490-4406-b468-64e9f31b51b9",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Agreed. I'll add it to the list of stuff to do after this is merged.",
        "createdAt" : "2019-11-28T13:10:54Z",
        "updatedAt" : "2019-11-29T13:33:04Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c1dfc268-6646-45b6-a5ef-53dee8d7d4fd",
        "parentId" : "3e278479-4490-4406-b468-64e9f31b51b9",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "FYI @gerolf-da and I had a quick chat about packaging together given concerns together to make the dependency hierarchy a bit taller but less broad, let's talk about how we want to proceed.",
        "createdAt" : "2019-11-28T13:54:59Z",
        "updatedAt" : "2019-11-29T13:33:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6faa9af0e976c271138c3d4af75a805e9497ba39",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +75,79 @@      metrics: MetricRegistry,\n      healthChecks: HealthChecks,\n  )(implicit mat: ActorMaterializer, esf: ExecutionSequencerFactory): Future[ApiServices] = {\n    implicit val ec: ExecutionContext = mat.system.dispatcher\n"
  },
  {
    "id" : "be239e37-c4d1-4fc0-81f8-a24c40f05250",
    "prId" : 3573,
    "comments" : [
      {
        "id" : "82dad5ea-c4ab-45e7-bd2f-1acad93750bd",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Most likely to be ok but notice you are now adding `otherServices` after `services` and it used to be the other way around because of the final `:` at the end of the method name.",
        "createdAt" : "2019-11-21T15:05:45Z",
        "updatedAt" : "2019-11-22T13:38:57Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "00005c67-c7c6-49fb-b4d7-6330ef3c6e31",
        "parentId" : "82dad5ea-c4ab-45e7-bd2f-1acad93750bd",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Yeah, I was wondering about this but it looks like it's fine either way around. It should probably be a `Set` TBH.",
        "createdAt" : "2019-11-21T15:22:31Z",
        "updatedAt" : "2019-11-22T13:38:57Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "86487af3-797f-49a1-b663-43bcdf30e512",
        "parentId" : "82dad5ea-c4ab-45e7-bd2f-1acad93750bd",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Ok, thank. :slightly_smiling_face: ",
        "createdAt" : "2019-11-21T16:36:57Z",
        "updatedAt" : "2019-11-22T13:38:57Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4848f40af9b3e4bc6651d495959322efdfdbaa78",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +56,60 @@\n  override def withServices(otherServices: immutable.Seq[BindableService]): ApiServices =\n    copy(services = services ++ otherServices)\n\n}"
  },
  {
    "id" : "4c3fdbb9-3bca-4e36-b8e1-2507e6f2616d",
    "prId" : 1544,
    "comments" : [
      {
        "id" : "ed6a65ee-1795-4e82-8c73-3e7a2917f98a",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "I'd do it in a follow-up PR.",
        "createdAt" : "2019-06-06T11:56:44Z",
        "updatedAt" : "2019-06-06T12:24:28Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "881b84a716a7a12a900c7c670aa46caeebf30a16",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +60,64 @@\n  def create(\n      config: SandboxConfig, //TODO this is still Sandbox specific, introduce a sub-config for this module instead\n      writeService: WriteService,\n      indexService: IndexService,"
  }
]