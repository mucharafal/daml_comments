[
  {
    "id" : "ef0b2270-6efb-4659-8dfc-99042852609d",
    "prId" : 3655,
    "comments" : [
      {
        "id" : "3d36858a-0c1b-4519-8103-ceb7e43a6fe6",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Not your fault but I'd say it's time to maybe thing about ways in which we could refactor this class. Lots of concerns tied up in a single place. :thinking: ",
        "createdAt" : "2019-11-28T12:17:53Z",
        "updatedAt" : "2019-11-29T13:33:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6af26110-838e-422e-8464-a4d43063b245",
        "parentId" : "3d36858a-0c1b-4519-8103-ceb7e43a6fe6",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Agreed. I'll add it to the list of stuff to do after this is merged.",
        "createdAt" : "2019-11-28T13:10:54Z",
        "updatedAt" : "2019-11-29T13:33:04Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "31cb0f99-4776-4cb4-a992-40bbde73485e",
        "parentId" : "3d36858a-0c1b-4519-8103-ceb7e43a6fe6",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "FYI @gerolf-da and I had a quick chat about packaging together given concerns together to make the dependency hierarchy a bit taller but less broad, let's talk about how we want to proceed.",
        "createdAt" : "2019-11-28T13:54:59Z",
        "updatedAt" : "2019-11-29T13:33:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6faa9af0e976c271138c3d4af75a805e9497ba39",
    "line" : 17,
    "diffHunk" : "@@ -71,9 +72,9 @@ object ApiServices {\n       commandConfig: CommandConfiguration,\n       optTimeServiceBackend: Option[TimeServiceBackend],\n       loggerFactory: NamedLoggerFactory,\n-      metrics: MetricRegistry)(\n-      implicit mat: ActorMaterializer,\n-      esf: ExecutionSequencerFactory): Future[ApiServices] = {\n+      metrics: MetricRegistry,\n+      healthChecks: HealthChecks,\n+  )(implicit mat: ActorMaterializer, esf: ExecutionSequencerFactory): Future[ApiServices] = {"
  },
  {
    "id" : "9cb4cfb7-a115-41fc-9b53-51038aef1ee7",
    "prId" : 3573,
    "comments" : [
      {
        "id" : "e7e33057-f1ba-4f89-8915-d531f2080d54",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Most likely to be ok but notice you are now adding `otherServices` after `services` and it used to be the other way around because of the final `:` at the end of the method name.",
        "createdAt" : "2019-11-21T15:05:45Z",
        "updatedAt" : "2019-11-22T13:38:57Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "66a613d2-0d55-462c-9b53-9ad101384d2c",
        "parentId" : "e7e33057-f1ba-4f89-8915-d531f2080d54",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Yeah, I was wondering about this but it looks like it's fine either way around. It should probably be a `Set` TBH.",
        "createdAt" : "2019-11-21T15:22:31Z",
        "updatedAt" : "2019-11-22T13:38:57Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ed468429-f4fa-4509-ae1a-4626422482d4",
        "parentId" : "e7e33057-f1ba-4f89-8915-d531f2080d54",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Ok, thank. :slightly_smiling_face: ",
        "createdAt" : "2019-11-21T16:36:57Z",
        "updatedAt" : "2019-11-22T13:38:57Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4848f40af9b3e4bc6651d495959322efdfdbaa78",
    "line" : 23,
    "diffHunk" : "@@ -54,7 +55,7 @@ private case class ApiServicesBundle(services: immutable.Seq[BindableService]) e\n     }\n \n   override def withServices(otherServices: immutable.Seq[BindableService]): ApiServices =\n-    copy(services = services.++:(otherServices))\n+    copy(services = services ++ otherServices)"
  },
  {
    "id" : "8e0a53f4-133e-4c1b-833a-9137a97ecd25",
    "prId" : 3286,
    "comments" : [
      {
        "id" : "dfd34a7f-a02f-4899-a5f9-d6f097ddeb41",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "This looks like the clock for checking token expiration is set to be identical to the clock used for DAML transactions. Is this a good idea in the case of a ledger in static time mode? I would have imagined that token expiration always refers to UTC time.",
        "createdAt" : "2019-10-30T10:28:23Z",
        "updatedAt" : "2019-10-31T15:48:18Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "80032977-7909-4f99-a5e4-c4b575277283",
        "parentId" : "dfd34a7f-a02f-4899-a5f9-d6f097ddeb41",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/3286/commits/0799c10dc275376fa91a59be992692f4ccaa6944",
        "createdAt" : "2019-10-30T19:10:14Z",
        "updatedAt" : "2019-10-31T15:48:18Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "20a4635add5f912c6e6c5fd78e06de61846a1171",
    "line" : null,
    "diffHunk" : "@@ -149,6 +139,8 @@ object ApiServices {\n \n       val apiReflectionService = ProtoReflectionService.newInstance()\n \n+      val authorizer = new Authorizer(TimeProvider.clock(timeProvider))"
  },
  {
    "id" : "972b601c-b533-43dd-97c2-f28e90d2e32b",
    "prId" : 3286,
    "comments" : [
      {
        "id" : "ebd0d0ae-ae94-4840-b622-eec32db7420f",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "How about passing the `Authorizer` down from `SandboxServer`?",
        "createdAt" : "2019-10-31T09:12:54Z",
        "updatedAt" : "2019-10-31T15:48:18Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "75106324-756a-4bef-b66b-edfccd9b8ed4",
        "parentId" : "ebd0d0ae-ae94-4840-b622-eec32db7420f",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Definitely, will do, good catch!",
        "createdAt" : "2019-10-31T15:18:23Z",
        "updatedAt" : "2019-10-31T15:48:18Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "048e553c-cfd2-4f9f-ab55-4e7f1e44c66a",
        "parentId" : "ebd0d0ae-ae94-4840-b622-eec32db7420f",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "This just made me realize that the `authService` was not used here either, I'm removing it.",
        "createdAt" : "2019-10-31T15:35:24Z",
        "updatedAt" : "2019-10-31T15:48:18Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "63fb56e6-2ee9-4b20-8ed0-5f7c578ab8d7",
        "parentId" : "ebd0d0ae-ae94-4840-b622-eec32db7420f",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Adding this to the `StandaloneIndexServer`. This makes me realize that we have integration tests for sandbox only.",
        "createdAt" : "2019-10-31T15:40:05Z",
        "updatedAt" : "2019-10-31T15:48:18Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7eb5226b-3364-41e3-97ef-5749d613099b",
        "parentId" : "ebd0d0ae-ae94-4840-b622-eec32db7420f",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/3286/commits/20a4635add5f912c6e6c5fd78e06de61846a1171",
        "createdAt" : "2019-10-31T15:50:33Z",
        "updatedAt" : "2019-10-31T15:50:34Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "20a4635add5f912c6e6c5fd78e06de61846a1171",
    "line" : null,
    "diffHunk" : "@@ -149,6 +139,8 @@ object ApiServices {\n \n       val apiReflectionService = ProtoReflectionService.newInstance()\n \n+      val authorizer = new Authorizer(() => java.time.Clock.systemUTC.instant())"
  },
  {
    "id" : "22269043-5123-4a93-bf57-ce85a0a63414",
    "prId" : 1555,
    "comments" : [
      {
        "id" : "bcf175de-d254-49b3-ad30-97a5e3e80290",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Use `v2` of the participant api. Ideally also remove the dependency on v1 altogether, like we did for the index-api v2.",
        "createdAt" : "2019-06-07T09:12:32Z",
        "updatedAt" : "2019-06-07T11:40:55Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2a302d0b3d12ee4828eda045d0f4799d3e00906e",
    "line" : null,
    "diffHunk" : "@@ -12,21 +12,21 @@ import com.daml.ledger.participant.state.index.v2.{\n   _\n }\n import com.daml.ledger.participant.state.v2.WriteService\n+import com.daml.ledger.participant.state.v1.TimeModel"
  },
  {
    "id" : "0dbc0138-eec4-4cdc-9b2a-d4dd0d6ed312",
    "prId" : 1544,
    "comments" : [
      {
        "id" : "a26e547d-dbd2-47af-b551-7ec29e823c93",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "I'd do it in a follow-up PR.",
        "createdAt" : "2019-06-06T11:56:44Z",
        "updatedAt" : "2019-06-06T12:24:28Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "881b84a716a7a12a900c7c670aa46caeebf30a16",
    "line" : 5,
    "diffHunk" : "@@ -59,7 +59,7 @@ object ApiServices {\n   private val logger = LoggerFactory.getLogger(this.getClass)\n \n   def create(\n-      config: SandboxConfig,\n+      config: SandboxConfig, //TODO this is still Sandbox specific, introduce a sub-config for this module instead"
  }
]