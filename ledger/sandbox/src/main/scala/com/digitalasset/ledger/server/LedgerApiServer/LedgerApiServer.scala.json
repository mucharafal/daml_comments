[
  {
    "id" : "39c76adc-d807-44b4-8bf4-1dcef2acb513",
    "prId" : 1077,
    "comments" : [
      {
        "id" : "e8a76916-fd0e-4c8f-a82e-8c7b758cec04",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Considering that `resetService` is only being folded into the regular list of services, do we really need to take care of it separately, or should rather whoever uses `LedgerApiServer` take care of optionally constructing the reset service in the `createApiServices` callback?",
        "createdAt" : "2019-05-13T06:52:29Z",
        "updatedAt" : "2019-05-13T08:01:37Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "db4440e5-666e-430a-9941-be9336080493",
        "parentId" : "e8a76916-fd0e-4c8f-a82e-8c7b758cec04",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "yes, good point. I am taking care of this in a follow-up PR.",
        "createdAt" : "2019-05-13T08:02:18Z",
        "updatedAt" : "2019-05-13T08:02:18Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1385a7c408d381bb96642e1198fd69cb61d76ee7",
    "line" : 139,
    "diffHunk" : "@@ -122,26 +109,18 @@ class LedgerApiServer(\n     builder.workerEventLoopGroup(serverEventLoopGroup)\n     builder.permitKeepAliveTime(10, TimeUnit.SECONDS)\n     builder.permitKeepAliveWithoutCalls(true)\n-    server = optResetService.toList\n-      .foldLeft(runningServices.foldLeft(builder)(_ addService _))(_ addService _)\n+    val grpcServer = resetService.toList"
  },
  {
    "id" : "810dc407-c018-49d2-9c0a-d4bf41438ce1",
    "prId" : 1077,
    "comments" : [
      {
        "id" : "eab53055-5bf7-4428-9ccc-14a6e013e01b",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "`timeServiceBackend` is not used anywhere in this class and probably should be removed or folded into the `ApiServices` like the `resetService`.",
        "createdAt" : "2019-05-13T07:03:54Z",
        "updatedAt" : "2019-05-13T08:01:37Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "aa6dbd09-ac81-43a9-ad01-657130af6de4",
        "parentId" : "eab53055-5bf7-4428-9ccc-14a6e013e01b",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "yes, I have a follow-up pr coming take care of that. I wanted to do the refactoring in small steps, and was hoping this can land early Friday.",
        "createdAt" : "2019-05-13T08:00:58Z",
        "updatedAt" : "2019-05-13T08:01:37Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d9f26b92-95e2-4c13-8419-792527a0cdaa",
        "parentId" : "eab53055-5bf7-4428-9ccc-14a6e013e01b",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "👍 ",
        "createdAt" : "2019-05-13T08:03:38Z",
        "updatedAt" : "2019-05-13T08:03:38Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1385a7c408d381bb96642e1198fd69cb61d76ee7",
    "line" : 80,
    "diffHunk" : "@@ -46,34 +33,33 @@ object LedgerApiServer {\n       config: SandboxConfig,\n       //even though the port is in the config as well, in case of a reset we have to keep the port to what it was originally set for the first time\n       serverPort: Int,\n-      optTimeServiceBackend: Option[TimeServiceBackend],\n-      optResetService: Option[SandboxResetService])(\n+      timeServiceBackend: Option[TimeServiceBackend],\n+      resetService: Option[SandboxResetService])(\n       implicit mat: ActorMaterializer): LedgerApiServer = {\n \n     new LedgerApiServer(\n-      ledgerBackend,\n-      timeProvider,\n-      engine,\n+      (am: ActorMaterializer, esf: ExecutionSequencerFactory) =>\n+        ApiServices.create(config, ledgerBackend, engine, timeProvider, timeServiceBackend)(\n+          am,\n+          esf),\n       config,\n       serverPort,\n-      optTimeServiceBackend,\n-      optResetService,\n+      timeServiceBackend,\n+      resetService,\n       config.address,\n       config.tlsConfig.flatMap(_.server)\n-    ).start()\n+    )\n   }\n }\n \n class LedgerApiServer(\n-    ledgerBackend: LedgerBackend,\n-    timeProvider: TimeProvider,\n-    engine: Engine,\n+    createApiServices: (ActorMaterializer, ExecutionSequencerFactory) => ApiServices,\n     config: SandboxConfig,\n     serverPort: Int,\n-    optTimeServiceBackend: Option[TimeServiceBackend],\n-    optResetService: Option[SandboxResetService],\n-    addressOption: Option[String],\n-    maybeBundle: Option[SslContext] = None)(implicit mat: ActorMaterializer)\n+    timeServiceBackend: Option[TimeServiceBackend],"
  },
  {
    "id" : "c5629e8c-77cb-43d8-ba26-ed3f307abcdf",
    "prId" : 1036,
    "comments" : [
      {
        "id" : "bda74fd2-2495-4dd2-9604-18a5df7e0448",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "@bitonic @gerolf-da FYI: ResetService bit me again..",
        "createdAt" : "2019-05-09T12:26:41Z",
        "updatedAt" : "2019-05-09T12:26:41Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e39108695b2d05582287c5a8c56dc52c7bccf863",
    "line" : 22,
    "diffHunk" : "@@ -39,37 +39,145 @@ import scala.concurrent.{ExecutionContext, Future}\n import scala.util.control.NoStackTrace\n \n object LedgerApiServer {\n-  private val logger = LoggerFactory.getLogger(this.getClass)\n-\n   def apply(\n       ledgerBackend: LedgerBackend,\n       timeProvider: TimeProvider,\n       engine: Engine,\n-      config: => SandboxConfig,\n-      serverPort: Int, //TODO: why do we need this if we already have a SandboxConfig?\n+      config: SandboxConfig,\n+      //even though the port is in the config as well, in case of a reset we have to keep the port to what it was originally set for the first time"
  }
]