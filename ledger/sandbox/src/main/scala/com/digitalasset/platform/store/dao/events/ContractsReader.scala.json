[
  {
    "id" : "d7b36e59-da6f-4a5c-bbbb-d7819d8e059b",
    "prId" : 5946,
    "comments" : [
      {
        "id" : "99db727c-fac4-4426-ab10-efea72279607",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "```suggestion\r\n            translationTimer = metrics.daml.index.db.lookupActiveContractDao.translationTimer,\r\n```",
        "createdAt" : "2020-05-13T07:24:38Z",
        "updatedAt" : "2020-05-13T14:44:33Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d8724467-7adb-4141-afe0-1620eb914128",
        "parentId" : "99db727c-fac4-4426-ab10-efea72279607",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I made the name generic to adapt to both sides, but when used I think it makes more time to keep the name specific.",
        "createdAt" : "2020-05-13T15:06:40Z",
        "updatedAt" : "2020-05-13T15:06:40Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e88f58ce119f393cede12d4bb759ad24582b1a06",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +51,55 @@            templateId = templateId,\n            createArgument = createArgument,\n            deserializationTimer = metrics.daml.index.db.lookupActiveContractDao.translationTimer,\n          )\n      })(executionContext)"
  },
  {
    "id" : "839519e9-e411-4797-856f-5c941e05371b",
    "prId" : 5541,
    "comments" : [
      {
        "id" : "bc5d8668-6cb6-4a43-8e62-e26bdff8b055",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "So I was going to make the suggestion below, before I found out that `contractsTable` is actually a join. Could you help me understand the motivation for that instead of putting the join into this query string directly?\r\n```suggestion\r\n      SQL\"select #$contractsTable.contract_id, template_id, create_argument from #$contractsTable where contract_witness = $submitter and #$contractsTable.contract_id = $contractId\"\r\n```",
        "createdAt" : "2020-04-16T07:51:28Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4c845e2e-973a-4399-bc61-0338c154129a",
        "parentId" : "bc5d8668-6cb6-4a43-8e62-e26bdff8b055",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "To make the query a bit shorter and not spell out the join twice.",
        "createdAt" : "2020-04-16T09:13:29Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a2365eac-8305-43ae-923c-966b976f0790",
        "parentId" : "bc5d8668-6cb6-4a43-8e62-e26bdff8b055",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Hm, I'm not sure the brevity is worth it tbh. I'd rather see a full page of query text rather than having to do mental dictionary lookups to the side.\r\nBut if this is the pattern we've been following so far (and I suspect it is), then let's continue with it.",
        "createdAt" : "2020-04-16T09:40:01Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2034352017063fbc2c958c5a086273e66ed0ad47",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +31,35 @@  ): Future[Option[Contract]] =\n    dispatcher.executeSql(\"lookup_active_contract\") { implicit connection =>\n      SQL\"select participant_contracts.contract_id, template_id, create_argument from #$contractsTable where contract_witness = $submitter and participant_contracts.contract_id = $contractId\"\n        .as(contractRowParser.singleOpt)\n    }"
  },
  {
    "id" : "ae99dc6a-e30c-4a7f-ad46-633ba0c7cd62",
    "prId" : 5541,
    "comments" : [
      {
        "id" : "10568260-9fce-4c7f-84f8-da8a056faaea",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I wasn't sure whether this was actually true and wanted to confirm that. unfortunately you won't like the result :sob:\r\n`agreement` is a function that can be invoked during interpretation:\r\n![image](https://user-images.githubusercontent.com/29121423/79431181-5c7c6900-7fca-11ea-9b17-017fcca0db50.png)\r\n",
        "createdAt" : "2020-04-16T08:10:26Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b1427372-8e5f-4d43-860b-174ff6751418",
        "parentId" : "10568260-9fce-4c7f-84f8-da8a056faaea",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Then I'm a bit concerned that this didn't make any test fail.",
        "createdAt" : "2020-04-16T09:13:49Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "04407ea7-4af8-4817-876b-361c005572e3",
        "parentId" : "10568260-9fce-4c7f-84f8-da8a056faaea",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Good point. Looks like we don't have a test that uses the agreement text inside an exercise I suppose. Could you add one please?",
        "createdAt" : "2020-04-16T09:36:07Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e2c7fe0a-de94-4264-9ca0-f188fe04a230",
        "parentId" : "10568260-9fce-4c7f-84f8-da8a056faaea",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I was wrong in my assessment. The `agreement` expression is reified in the DAML LF template definition, and calling `agreement` in a choice body re-evaluates that expression. There is no need to store the agreement text together with the contract instance for the purpose of command interpretation.",
        "createdAt" : "2020-04-17T11:20:28Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2034352017063fbc2c958c5a086273e66ed0ad47",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +82,86 @@\n  // The contracts table _does not_ store agreement texts as they are\n  // unnecessary for interpretation and validation. The contracts returned\n  // from this table will _always_ have an empty agreement text.\n  private val contractRowParser: RowParser[Contract] ="
  },
  {
    "id" : "74807899-d072-406d-9ea3-2112f5468d6d",
    "prId" : 5541,
    "comments" : [
      {
        "id" : "4ae3cfa0-68b4-4951-afe9-9f217e51141c",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I hope the `binaryStream` won't bite us with H2 again.",
        "createdAt" : "2020-04-16T08:11:41Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "901eec38-7baa-4709-bb5b-e4ea4a92807a",
        "parentId" : "4ae3cfa0-68b4-4951-afe9-9f217e51141c",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Rather than hoping, I'll convert this to a `byteArray`, thanks for raising this.",
        "createdAt" : "2020-04-16T09:14:27Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2034352017063fbc2c958c5a086273e66ed0ad47",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +85,89 @@  // from this table will _always_ have an empty agreement text.\n  private val contractRowParser: RowParser[Contract] =\n    str(\"contract_id\") ~ str(\"template_id\") ~ binaryStream(\"create_argument\") map {\n      case contractId ~ templateId ~ createArgument =>\n        Contract("
  }
]