[
  {
    "id" : "05476109-c2d9-4450-be3f-f4808180a204",
    "prId" : 6588,
    "comments" : [
      {
        "id" : "22a3a615-a004-4d57-9055-3d0d99ca94e9",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "This comment seems out of date.",
        "createdAt" : "2020-07-02T14:17:29Z",
        "updatedAt" : "2020-07-02T14:28:00Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b0526900-b811-4fa2-b3ed-5e9e63527ff7",
        "parentId" : "22a3a615-a004-4d57-9055-3d0d99ca94e9",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "It's not, but it's not particularly important either. The `ActiveLedgerStateManager` tracks the state of the ledger over the course of a transaction but it's used only for the in-memory implementation and will soon be on its way out.",
        "createdAt" : "2020-07-02T17:00:26Z",
        "updatedAt" : "2020-07-02T17:00:27Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "cf66d9010432b741c0d02d5ea75fc691edc74909",
    "line" : 18,
    "diffHunk" : "@@ -65,20 +65,9 @@ class ActiveLedgerStateManager[ALS <: ActiveLedgerState[ALS]](initialState: => A\n       submitter: Option[Party],\n       transaction: Tx.CommittedTransaction,\n       disclosure: Relation[Tx.NodeId, Party],\n-      globalDivulgence: Relation[ContractId, Party],\n+      divulgence: Relation[ContractId, Party],\n       divulgedContracts: List[(Value.ContractId, ContractInst)])\n     : Either[Set[RejectionReason], ALS] = {\n-    // NOTE(RA): `globalImplicitDisclosure` was meant to refer to contracts created in previous transactions.\n-    // However, because we have translated relative to absolute IDs at this point, `globalImplicitDisclosure`\n-    // will also point to contracts created in the same transaction.\n-    //\n-    // This is dealt with as follows:\n-    // - First, all transaction nodes are traversed without updating divulgence info.\n-    //   - When validating a fetch/exercise node, both the set of previously divulged contracts and\n-    //     the newly divulged contracts is used.\n-    //   - While traversing consuming exercise nodes, the set of all contracts archived in this transaction is collected.\n-    // - Finally, divulgence information is updated using `globalImplicitDisclosure` minus the set of contracts\n-    //   archived in this transaction."
  },
  {
    "id" : "2186828f-2f59-431c-a26b-66d4603f2293",
    "prId" : 5608,
    "comments" : [
      {
        "id" : "66fe2e8e-69a1-4b2c-8a9f-41c3b85220c7",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "```suggestion\r\n                          s\"Contract key lookup with different results: expected [${nlkup.result}], actual [${currentResult}]\")\r\n```",
        "createdAt" : "2020-04-20T08:35:29Z",
        "updatedAt" : "2020-04-22T08:28:36Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c166bbf6-d8ea-442b-86e0-98cb82ef385a",
        "parentId" : "66fe2e8e-69a1-4b2c-8a9f-41c3b85220c7",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Fixed in 14a595f.",
        "createdAt" : "2020-04-22T08:29:36Z",
        "updatedAt" : "2020-04-22T08:29:36Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "14a595f3821f329c479056c81f9a9413d0109715",
    "line" : null,
    "diffHunk" : "@@ -206,7 +199,8 @@ class ActiveLedgerStateManager[ALS <: ActiveLedgerState[ALS]](initialState: => A\n                       )\n                     } else {\n                       ats.copy(\n-                        errs = errs + InvalidLookup(gk, nlkup.result, currentResult)\n+                        errs = errs + Disputed(\n+                          s\"Contract key lookup with different results: expected [${nlkup.result}], actual[${currentResult}]\")"
  },
  {
    "id" : "17592291-8a17-4ca1-85e5-f39f2c6ea068",
    "prId" : 5608,
    "comments" : [
      {
        "id" : "ce8e01b8-e035-4b22-b9e2-65f7d2880f51",
        "parentId" : null,
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "Is this an improvement related to the fix? I lack bg. on the previous error reporting but can you elaborate here?",
        "createdAt" : "2020-04-20T12:13:38Z",
        "updatedAt" : "2020-04-22T08:28:36Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d41b10d1-d61e-4438-b160-3c0c17916b15",
        "parentId" : "ce8e01b8-e035-4b22-b9e2-65f7d2880f51",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "This is needed, because I had to fix the test to expect the correct error message due to the validation error. Without this change, the tests for sandbox-classic would not have passed, because sandbox-classic would produce a different error message.\r\nSo this is basically making kvutils based ledgers and sandbox-classic more consistent.",
        "createdAt" : "2020-04-20T12:39:36Z",
        "updatedAt" : "2020-04-22T08:28:36Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "14a595f3821f329c479056c81f9a9413d0109715",
    "line" : 76,
    "diffHunk" : "@@ -112,7 +105,7 @@ class ActiveLedgerStateManager[ALS <: ActiveLedgerState[ALS]](initialState: => A\n                   None\n                 case None =>\n                   // Contract not known\n-                  Some(InactiveDependencyError(cid, predType))\n+                  Some(Inconsistent(s\"Could not lookup contract $cid\"))"
  },
  {
    "id" : "40ecb6bf-c125-4791-91a5-b571fcbd816a",
    "prId" : 5608,
    "comments" : [
      {
        "id" : "916a7c70-254d-4328-8128-b9b762f2dee0",
        "parentId" : null,
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "Is this an improvement related to the fix? I lack bg. on the previous error reporting but can you elaborate here?",
        "createdAt" : "2020-04-20T12:21:07Z",
        "updatedAt" : "2020-04-22T08:28:36Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4669773a-92ee-4c8f-84db-2bf750476558",
        "parentId" : "916a7c70-254d-4328-8128-b9b762f2dee0",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "See my [previous comment](https://github.com/digital-asset/daml/pull/5608#discussion_r411343492).",
        "createdAt" : "2020-04-20T12:40:01Z",
        "updatedAt" : "2020-04-22T08:28:36Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "14a595f3821f329c479056c81f9a9413d0109715",
    "line" : null,
    "diffHunk" : "@@ -206,7 +199,8 @@ class ActiveLedgerStateManager[ALS <: ActiveLedgerState[ALS]](initialState: => A\n                       )\n                     } else {\n                       ats.copy(\n-                        errs = errs + InvalidLookup(gk, nlkup.result, currentResult)\n+                        errs = errs + Disputed(\n+                          s\"Contract key lookup with different results: expected [${nlkup.result}], actual[${currentResult}]\")"
  },
  {
    "id" : "db0570c2-e543-42c1-b776-2b6ae1c7fc0e",
    "prId" : 4424,
    "comments" : [
      {
        "id" : "1c350961-ff6c-4482-93ac-6d446fc0cc71",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Would this affect privacy-aware participants?",
        "createdAt" : "2020-02-06T17:25:21Z",
        "updatedAt" : "2020-02-06T18:59:14Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8d0b370f-cfd5-4ecf-8722-b1eac0322383",
        "parentId" : "1c350961-ff6c-4482-93ac-6d446fc0cc71",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "No, because this field was filled with data coming from `localDivulgence`, which is proven to be empty at this stage (see https://github.com/digital-asset/daml/pull/4424/files#diff-63d033a4194960839071d50782fc9920L291)",
        "createdAt" : "2020-02-06T18:53:42Z",
        "updatedAt" : "2020-02-06T18:59:14Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2aa433f6-493e-4954-ae9a-ff179fb5cb65",
        "parentId" : "1c350961-ff6c-4482-93ac-6d446fc0cc71",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "~But the comment above it should be reworded...~ Done",
        "createdAt" : "2020-02-06T18:54:40Z",
        "updatedAt" : "2020-02-06T19:10:02Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9c8968bdd1d947e2f802fa13e0b9bba08af2662f",
    "line" : 33,
    "diffHunk" : "@@ -150,10 +143,7 @@ class ActiveLedgerStateManager[ALS <: ActiveLedgerState[ALS]](initialState: => A\n                   witnesses = disclosure(nodeId),\n                   // we need to `getOrElse` here because the `Nid` might include absolute\n                   // contract ids, and those are never present in the local disclosure.\n-                  divulgences = (localDivulgence\n-                    .getOrElse(nodeId, Set.empty) diff nc.stakeholders).toList\n-                    .map(p => p -> transactionId)\n-                    .toMap,\n+                  divulgences = Map.empty,"
  }
]