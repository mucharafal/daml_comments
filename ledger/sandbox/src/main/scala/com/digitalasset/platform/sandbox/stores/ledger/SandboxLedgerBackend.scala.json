[
  {
    "id" : "de6d2d13-20c7-4925-a16e-e67a923bfc8c",
    "prId" : 1426,
    "comments" : [
      {
        "id" : "955a5da2-0c63-4a25-a875-2442f8baa5b9",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "If the `AcceptedTransaction` doesn't have the commandId set, it means we received the transaction from some other node.\r\nIt seems that the filtering on applicationId and party is missing, or did I overlook it?",
        "createdAt" : "2019-05-28T12:38:03Z",
        "updatedAt" : "2019-05-28T13:07:19Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "70123b21-2d55-4051-9a52-329345c85d8f",
        "parentId" : "955a5da2-0c63-4a25-a875-2442f8baa5b9",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "you did not, it's indeed missing. fix is on the way",
        "createdAt" : "2019-05-28T12:59:55Z",
        "updatedAt" : "2019-05-28T13:07:19Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ce7c52cb-aefc-4bc1-9713-a274336276fb",
        "parentId" : "955a5da2-0c63-4a25-a875-2442f8baa5b9",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "it's pushed",
        "createdAt" : "2019-05-28T13:07:36Z",
        "updatedAt" : "2019-05-28T13:07:36Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b2087ef6864ee9b2a582a8119a092cbf231851c2",
    "line" : null,
    "diffHunk" : "@@ -260,4 +271,48 @@ class SandboxLedgerBackend(ledger: Ledger)(implicit mat: Materializer)\n     getTransactionById(transactionId.unwrap)\n       .map(_.flatMap(TransactionConversion.acceptedToDomainTree(_, filter)))(DEC)\n   }\n+\n+  override def getCompletions(\n+      begin: LedgerOffset,\n+      applicationId: ApplicationId,\n+      parties: Set[Ref.Party]\n+  ): Source[CompletionEvent, NotUsed] = {\n+    val converter = new OffsetConverter()\n+    converter.toAbsolute(begin).flatMapConcat {\n+      case LedgerOffset.Absolute(absBegin) =>\n+        ledgerSyncEvents(Some(absBegin)).collect {\n+          case at: LedgerSyncEvent.AcceptedTransaction =>\n+            CommandAccepted(\n+              domain.LedgerOffset.Absolute(at.offset),\n+              at.recordTime,\n+              at.commandId.map(domain.CommandId(_)),"
  },
  {
    "id" : "ab349f19-2978-4175-a0e8-5f136161dbb1",
    "prId" : 1362,
    "comments" : [
      {
        "id" : "607b12ac-fa50-4ba0-813e-61536f751f86",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "?",
        "createdAt" : "2019-05-24T07:53:55Z",
        "updatedAt" : "2019-05-24T15:15:46Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "50018268-43ff-42a8-a031-bed7e0a09724",
        "parentId" : "607b12ac-fa50-4ba0-813e-61536f751f86",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "thanks for noticing, will delete it.",
        "createdAt" : "2019-05-24T09:35:47Z",
        "updatedAt" : "2019-05-24T15:15:46Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "07158cacfc99b310dd03da6c571924f9c965e077",
    "line" : null,
    "diffHunk" : "@@ -178,6 +182,8 @@ class SandboxLedgerBackend(ledger: Ledger)(implicit mat: Materializer)\n       )\n   }\n \n+  //def getTransactionById(transactionId: TransactionId): Future[Option[AcceptedTransaction]]"
  },
  {
    "id" : "abd87b41-2711-4b4c-bb72-3f6aa0ff5c8f",
    "prId" : 1362,
    "comments" : [
      {
        "id" : "f7fb2a5d-a033-4662-9347-4db082f8a806",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "`ActiveContracts.ActiveContract` has a field `transactionId`.",
        "createdAt" : "2019-05-24T15:03:14Z",
        "updatedAt" : "2019-05-24T15:15:46Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "dbbd4c74-8bbd-4487-9aa7-922943101d7c",
        "parentId" : "f7fb2a5d-a033-4662-9347-4db082f8a806",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "indeed, fixed",
        "createdAt" : "2019-05-24T15:16:02Z",
        "updatedAt" : "2019-05-24T15:16:02Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "07158cacfc99b310dd03da6c571924f9c965e077",
    "line" : null,
    "diffHunk" : "@@ -123,12 +125,13 @@ class SandboxLedgerBackend(ledger: Ledger)(implicit mat: Materializer)\n     Future.successful(LedgerString.fromLong(ledger.ledgerEnd))\n \n   private def toUpdateEvent(\n-      id: Value.AbsoluteContractId,\n+      cId: Value.AbsoluteContractId,\n       ac: ActiveContracts.ActiveContract): AcsUpdateEvent.Create =\n     AcsUpdateEvent.Create(\n       // we use absolute contract ids as event ids throughout the sandbox\n-      id.coid,\n-      id,\n+      domain.TransactionId(cId.coid), //TODO: is this correct?"
  },
  {
    "id" : "456ffe2c-b63d-46d5-a386-93b3a4b4e178",
    "prId" : 753,
    "comments" : [
      {
        "id" : "b4e6efdb-802c-46cc-86c8-524040085025",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Because guards break exhaustiveness checking:\r\n\r\n```suggestion\r\n            _ flatMap (ac => if (canSeeContract(submitter, ac))  Some(cid)\r\n```",
        "createdAt" : "2019-04-29T16:23:03Z",
        "updatedAt" : "2019-05-02T13:18:49Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f3510cfc-226c-463f-b252-2726f9c25f17",
        "parentId" : "b4e6efdb-802c-46cc-86c8-524040085025",
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "done",
        "createdAt" : "2019-04-30T08:30:16Z",
        "updatedAt" : "2019-05-02T13:18:49Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d04d7e71d5ab5908c338ee16a2b3e4ed40b731cd",
    "line" : null,
    "diffHunk" : "@@ -31,19 +31,37 @@ class SandboxLedgerBackend(ledger: Ledger)(implicit mat: Materializer) extends L\n       ledger.publishTransaction(submitted)\n     }\n \n+    private[this] def canSeeContract(\n+        submitter: Party,\n+        ac: ActiveContracts.ActiveContract): Boolean = {\n+      // ^ only parties disclosed or divulged to can lookup; see https://github.com/digital-asset/daml/issues/10\n+      // and https://github.com/digital-asset/daml/issues/751 .\n+      Ref.Party fromString submitter exists (p => ac.witnesses(p) || ac.divulgences(p))\n+    }\n+\n     override def lookupActiveContract(submitter: Party, contractId: Value.AbsoluteContractId)\n       : Future[Option[Value.ContractInst[TxValue[Value.AbsoluteContractId]]]] =\n       ledger\n         .lookupContract(contractId)\n         .map(_.collect {\n-          case ac\n-              if Ref.Party fromString submitter exists (p => ac.witnesses(p) || ac.divulgences(p)) =>\n-            // ^ only parties disclosed or divulged to can lookup; see https://github.com/digital-asset/daml/issues/10\n-            ac.contract\n+          case ac if canSeeContract(submitter, ac) => ac.contract\n         })(DirectExecutionContext)\n \n-    override def lookupContractKey(key: Node.GlobalKey): Future[Option[Value.AbsoluteContractId]] =\n-      ledger.lookupKey(key)\n+    override def lookupContractKey(\n+        submitter: Party,\n+        key: Node.GlobalKey): Future[Option[Value.AbsoluteContractId]] = {\n+      implicit val ec: ExecutionContext = DirectExecutionContext\n+      ledger.lookupKey(key).flatMap {\n+        // note that we need to check visibility for keys, too, otherwise we leak the existence of a non-divulged\n+        // contract if we return `Some`.\n+        case None => Future.successful(None)\n+        case Some(cid) =>\n+          ledger.lookupContract(cid) map {\n+            case Some(ac) if canSeeContract(submitter, ac) => Some(cid)"
  },
  {
    "id" : "3c14ab9d-08bf-4c87-a684-ea24c4fe9c25",
    "prId" : 405,
    "comments" : [
      {
        "id" : "a7ed4936-62ce-45d6-bd02-40d0e42b6650",
        "parentId" : null,
        "author" : {
          "login" : "francesco-da",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25149700?u=1141981d6c61003d54f8e8cd8a3cbd67cbbc1e77&v=4"
        },
        "body" : "please write down why you're doing this, linking to the issue.",
        "createdAt" : "2019-04-15T11:52:21Z",
        "updatedAt" : "2019-04-19T14:25:46Z",
        "lastEditedBy" : {
          "login" : "francesco-da",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25149700?u=1141981d6c61003d54f8e8cd8a3cbd67cbbc1e77&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1b8009c8-b054-4416-b5b3-815a93100557",
        "parentId" : "a7ed4936-62ce-45d6-bd02-40d0e42b6650",
        "author" : {
          "login" : "stephencompall-DA",
          "name" : "Actually @S11001001 (Stephen Compall)",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/32464278?u=2f0eaeb2500ecacccd6c1af95b27424d5193ad65&v=4"
        },
        "body" : "c745ed9c7b",
        "createdAt" : "2019-04-15T11:59:14Z",
        "updatedAt" : "2019-04-19T14:25:46Z",
        "lastEditedBy" : {
          "login" : "stephencompall-DA",
          "name" : "Actually @S11001001 (Stephen Compall)",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/32464278?u=2f0eaeb2500ecacccd6c1af95b27424d5193ad65&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "38ab46d8b26e1e46a78717ee7131e4cc857bc971",
    "line" : 12,
    "diffHunk" : "@@ -36,7 +36,9 @@ class SandboxLedgerBackend(ledger: Ledger)(implicit mat: Materializer) extends L\n       ledger\n         .lookupContract(contractId)\n         .map(_.collect {\n-          case ac if Ref.Party fromString submitter exists ac.disclosedTo => ac.contract\n+          case ac\n+              if Ref.Party fromString submitter exists (p => ac.witnesses(p) || ac.divulgences(p)) =>"
  }
]