[
  {
    "id" : "845d2d6b-9a0d-492d-aa25-55e8fee97000",
    "prId" : 5145,
    "comments" : [
      {
        "id" : "a7af7a99-bb76-4767-8a59-6dc68b0c563c",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "How does this behave with streaming responses? Does it only stop the timer when the stream is closed?",
        "createdAt" : "2020-03-23T18:25:49Z",
        "updatedAt" : "2020-03-25T08:22:03Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7e21e622-d089-4400-b734-c51b54fd2eeb",
        "parentId" : "a7af7a99-bb76-4767-8a59-6dc68b0c563c",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I believe so; it's really hard to tell and I couldn't find a good way to test it, but the numbers look about right.",
        "createdAt" : "2020-03-23T18:26:26Z",
        "updatedAt" : "2020-03-25T08:22:03Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2128776d-0786-4ccd-a75c-1c9f552a6b11",
        "parentId" : "a7af7a99-bb76-4767-8a59-6dc68b0c563c",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "OK, wrote some tests; looks good.",
        "createdAt" : "2020-03-24T17:35:46Z",
        "updatedAt" : "2020-03-25T08:22:03Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "cbd99f7733138a176a0a2f87287a3c6d363f0eec",
    "line" : 76,
    "diffHunk" : "@@ -79,12 +81,45 @@ final class MetricsInterceptor(metrics: MetricRegistry) extends ServerIntercepto\n   override def interceptCall[ReqT, RespT](\n       call: ServerCall[ReqT, RespT],\n       headers: Metadata,\n-      next: ServerCallHandler[ReqT, RespT]): ServerCall.Listener[ReqT] = {\n+      next: ServerCallHandler[ReqT, RespT],\n+  ): ServerCall.Listener[ReqT] = {\n     val fullMethodName = call.getMethodDescriptor.getFullMethodName\n     val metricName = fullServiceToMetricNameCache.getOrElseUpdate(\n       fullMethodName,\n       MetricsInterceptor.nameFor(fullMethodName))\n-    metrics.meter(metricName).mark()\n-    next.startCall(call, headers)\n+    val timer = metrics.timer(metricName).time()\n+    val listener = next.startCall(call, headers)\n+    new TimedListener(listener, timer)"
  }
]