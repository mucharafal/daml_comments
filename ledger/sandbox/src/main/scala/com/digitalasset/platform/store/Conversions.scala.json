[
  {
    "id" : "ba9296ac-ef13-4b48-88d1-bca70e5eabc3",
    "prId" : 5706,
    "comments" : [
      {
        "id" : "4946cbc0-ce9f-4817-9fd8-9ebc113cc83b",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Am I reading this weird, or does \"SubString\" in this context mean \"something that extends `String`\"? If so, that's an overload my brain was not prepared for.\r\n\r\nIf I am right, can we change this to `SubTypeOfString` or something to make it clearer?",
        "createdAt" : "2020-04-23T15:28:56Z",
        "updatedAt" : "2020-04-23T15:36:24Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "df012337-cb30-4b42-9c5b-60f2d2aee0d7",
        "parentId" : "4946cbc0-ce9f-4817-9fd8-9ebc113cc83b",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I was just using what was there before but sure.",
        "createdAt" : "2020-04-23T15:33:08Z",
        "updatedAt" : "2020-04-23T15:36:24Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d71531bc-72d0-4821-8f03-a2ecc5760d55",
        "parentId" : "4946cbc0-ce9f-4817-9fd8-9ebc113cc83b",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/5706/commits/d14449de39fc87d40ac96f7e69f906a20fc0157d",
        "createdAt" : "2020-04-23T15:37:05Z",
        "updatedAt" : "2020-04-23T15:37:06Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "90df6ffe-8787-47a1-b280-39515fe5f4f1",
        "parentId" : "4946cbc0-ce9f-4817-9fd8-9ebc113cc83b",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Yeah, I know, but it seems like a good opportunity.",
        "createdAt" : "2020-04-23T15:37:39Z",
        "updatedAt" : "2020-04-23T15:37:39Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "fcc79ba8-e23e-47fb-88e6-e0cc985bf0e6",
        "parentId" : "4946cbc0-ce9f-4817-9fd8-9ebc113cc83b",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Thanks!",
        "createdAt" : "2020-04-23T15:40:34Z",
        "updatedAt" : "2020-04-23T15:40:35Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d14449de39fc87d40ac96f7e69f906a20fc0157d",
    "line" : null,
    "diffHunk" : "@@ -7,185 +7,164 @@ import java.sql.PreparedStatement\n import java.time.Instant\n import java.util.Date\n \n-import anorm.ParameterMetaData.ByteArrayParameterMetaData\n-import anorm.{\n-  Column,\n-  MetaDataItem,\n-  ParameterMetaData,\n-  RowParser,\n-  SqlMappingError,\n-  SqlParser,\n-  ToStatement\n-}\n+import anorm._\n import com.daml.ledger.participant.state.v1.Offset\n import com.daml.lf.crypto.Hash\n import com.daml.lf.data.Ref\n import com.daml.lf.value.Value\n \n object Conversions {\n \n-  private def stringColumnToX[X](f: String => Either[String, X])(c: Column[String]): Column[X] =\n+  private def stringColumnToX[X](f: String => Either[String, X]): Column[X] =\n     Column.nonNull((value: Any, meta) =>\n-      c(value, meta).toEither.flatMap(x => f(x).left.map(SqlMappingError)))\n+      Column.columnToString(value, meta).toEither.flatMap(x => f(x).left.map(SqlMappingError)))\n+\n+  private final class SubStringToStatement[S <: String] extends ToStatement[S] {"
  },
  {
    "id" : "d99c65d9-84b4-4b0f-96ef-081c97c293db",
    "prId" : 5140,
    "comments" : [
      {
        "id" : "d509a9aa-d08d-4fb5-851a-3b562cd29fee",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Same as previously, we can make use of the methods directly on `Offset`.",
        "createdAt" : "2020-03-23T17:13:59Z",
        "updatedAt" : "2020-03-23T22:49:17Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6b413b9d-e5dd-46e5-b943-d23b62da3d45",
        "parentId" : "d509a9aa-d08d-4fb5-851a-3b562cd29fee",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2020-03-23T17:25:44Z",
        "updatedAt" : "2020-03-23T22:49:17Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f294ff3bf6e8f914a9259daabba5a33e2634244d",
    "line" : null,
    "diffHunk" : "@@ -142,8 +142,9 @@ object Conversions {\n \n   implicit def offsetToStatement: ToStatement[Offset] = new ToStatement[Offset] {\n     override def set(s: PreparedStatement, index: Int, v: Offset): Unit =\n-      s.setBinaryStream(index, v.toInputStream)\n+      s.setBinaryStream(index, v.bytes.toInputStream)"
  },
  {
    "id" : "20807e4b-3243-4b95-b191-1c5c8ee172d9",
    "prId" : 4504,
    "comments" : [
      {
        "id" : "690d43d2-8dd7-42eb-8b12-9e9b7c132094",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Maybe just import `Ref`?",
        "createdAt" : "2020-02-13T15:20:36Z",
        "updatedAt" : "2020-02-13T15:24:24Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "fa739073-64e3-4fe3-9475-df37b487d88d",
        "parentId" : "690d43d2-8dd7-42eb-8b12-9e9b7c132094",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "done",
        "createdAt" : "2020-02-13T15:28:27Z",
        "updatedAt" : "2020-02-13T15:28:28Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9db4c5fd5f7a176e292b18122cdf5e56ae4203a1",
    "line" : null,
    "diffHunk" : "@@ -14,7 +14,13 @@ import anorm.{\n   SqlParser,\n   ToStatement\n }\n-import com.digitalasset.daml.lf.data.Ref.{ContractIdString, LedgerString, PackageId, Party}\n+import com.digitalasset.daml.lf.data.Ref.{\n+  ContractIdString,\n+  LedgerString,\n+  PackageId,\n+  ParticipantId,\n+  Party\n+}"
  }
]