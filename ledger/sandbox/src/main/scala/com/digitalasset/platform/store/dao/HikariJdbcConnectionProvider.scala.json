[
  {
    "id" : "0fc27763-2276-4240-804f-2fd17ac25ac6",
    "prId" : 6222,
    "comments" : [
      {
        "id" : "0eea2d9e-8efb-4f61-9a02-ab7708285128",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Perhaps make this two parameter lists so the second can still use the `{ conn => … }` syntax?\r\n\r\n```suggestion\r\n  override def runSQL[T](databaseMetrics: DatabaseMetrics)(block: Connection => T): T = {\r\n```",
        "createdAt" : "2020-06-04T11:58:16Z",
        "updatedAt" : "2020-06-08T08:37:30Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "eebf5010903079bf01fdae291dc77676657e1cac",
    "line" : null,
    "diffHunk" : "@@ -73,12 +74,18 @@ class HikariJdbcConnectionProvider(dataSource: HikariDataSource, healthPoller: T\n     else\n       Unhealthy\n \n-  override def runSQL[T](block: Connection => T): T = {\n+  override def runSQL[T](block: Connection => T, databaseMetrics: DatabaseMetrics): T = {"
  },
  {
    "id" : "6f085558-bf4b-4a3d-84fb-eb3f30f5e39f",
    "prId" : 6146,
    "comments" : [
      {
        "id" : "31ec37ca-2ec1-4ded-8f5e-9066f9aae6be",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "We're not using Scalaz here and I don't think it makes sense to pull it in for a single use.",
        "createdAt" : "2020-05-28T14:19:07Z",
        "updatedAt" : "2020-06-04T16:42:35Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "35297039-d7a5-408a-88bb-2febbe615dcc",
        "parentId" : "31ec37ca-2ec1-4ded-8f5e-9066f9aae6be",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Perhaps use `RetryStrategy.exponentialBackoff` instead?",
        "createdAt" : "2020-05-28T15:20:51Z",
        "updatedAt" : "2020-06-04T16:42:35Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d76d04e8a0fef67ed00f98bbad2480a2d9bde9c0",
    "line" : null,
    "diffHunk" : "@@ -14,6 +14,7 @@ import com.daml.platform.store.DbType\n import com.daml.platform.store.dao.HikariJdbcConnectionProvider._\n import com.daml.resources.ResourceOwner\n import com.zaxxer.hikari.{HikariConfig, HikariDataSource}\n+import scalaz.concurrent.Task"
  },
  {
    "id" : "20218a2f-d82b-48ac-8cfb-f1fdc6b0935f",
    "prId" : 6146,
    "comments" : [
      {
        "id" : "6f1a0747-e0d4-4d70-9b55-492ceb57ebb3",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "You can use `Future` here and use `ResourceOwner.forFuture` at line 34.",
        "createdAt" : "2020-05-28T14:20:07Z",
        "updatedAt" : "2020-06-04T16:42:35Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d76d04e8a0fef67ed00f98bbad2480a2d9bde9c0",
    "line" : null,
    "diffHunk" : "@@ -44,9 +45,12 @@ object HikariConnection {\n       config.setPoolName(s\"$ConnectionPoolPrefix.${serverRole.threadPoolSuffix}\")\n       metrics.foreach(config.setMetricRegistry)\n \n-      //note that Hikari uses auto-commit by default.\n-      //in `runSql` below, the `.close()` will automatically trigger a commit.\n-      new HikariDataSource(config)\n+      // Hikari dies if a database connection could not be opened almost immediately\n+      // regardless of any connection timeout settings. We retry connections so that\n+      // Postgres and Sandbox can be started in any order.\n+      Task { new HikariDataSource(config) }"
  },
  {
    "id" : "194787ca-b24e-49fc-ab70-33fb5b23c87c",
    "prId" : 6146,
    "comments" : [
      {
        "id" : "ec6d182c-3277-4b9f-af34-136771b53b2a",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Well, it won't, because we disable auto-commit two lines down.",
        "createdAt" : "2020-05-28T15:21:43Z",
        "updatedAt" : "2020-06-04T16:42:35Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4cf7b430-c3b4-4428-8628-91000e7cf272",
        "parentId" : "ec6d182c-3277-4b9f-af34-136771b53b2a",
        "author" : {
          "login" : "da-tanabe",
          "name" : "Davin K. Tanabe",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19478290?u=c4eed11976b50dbaed21ccb17371a74a7e802541&v=4"
        },
        "body" : "heh…should I just drop this comment then? It looked like it was in the wrong place, but now it just seems completely out of date.",
        "createdAt" : "2020-05-28T16:12:36Z",
        "updatedAt" : "2020-06-04T16:42:35Z",
        "lastEditedBy" : {
          "login" : "da-tanabe",
          "name" : "Davin K. Tanabe",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19478290?u=c4eed11976b50dbaed21ccb17371a74a7e802541&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2a125610-9379-4203-a4ed-58f98ca8f3e1",
        "parentId" : "ec6d182c-3277-4b9f-af34-136771b53b2a",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Yeah, I think so. I think this changed a few months ago.",
        "createdAt" : "2020-05-28T17:08:03Z",
        "updatedAt" : "2020-06-04T16:42:35Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d76d04e8a0fef67ed00f98bbad2480a2d9bde9c0",
    "line" : null,
    "diffHunk" : "@@ -75,6 +79,8 @@ class HikariJdbcConnectionProvider(dataSource: HikariDataSource, healthPoller: T\n       Unhealthy\n \n   override def runSQL[T](block: Connection => T): T = {\n+    //note that Hikari uses auto-commit by default.\n+    //in `runSql` below, the `.close()` will automatically trigger a commit."
  },
  {
    "id" : "74616e6b-1fce-465f-a848-f9e571ac5ff1",
    "prId" : 6146,
    "comments" : [
      {
        "id" : "b9cf3e5c-3cdd-4e79-b1ef-b08af667e38a",
        "parentId" : null,
        "author" : {
          "login" : "da-tanabe",
          "name" : "Davin K. Tanabe",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19478290?u=c4eed11976b50dbaed21ccb17371a74a7e802541&v=4"
        },
        "body" : "So I don't have an `ExecutionContext` here. I _think_ the appropriate one is the one passed in with the call to `ResourceOwner.acquire`, but this `ExecutionContext` is not exposed here.\r\n\r\nWould you prefer I:\r\n* Modify `FutureCloseableResourceOwner` to expose the `ExecutionContext` to this function body? It involves changing the other usages to ignore this parameter now too.\r\n* Implement an explicit `ResourceOwner` subclass whose `acquire` method is essentially the body of this method? This approach seems to make the most sense to me, though it does bloat the code a little here.\r\n* Create a single-threaded `ExecutionContext` _just_ for this retry here?\r\n* Add `ExecutionContext` as an implicit parameter to the `owner` method? (This seems completely wrong to me if I'm understanding what `ResourceOwner` is meant to accomplish though).",
        "createdAt" : "2020-05-28T19:49:39Z",
        "updatedAt" : "2020-06-04T16:42:35Z",
        "lastEditedBy" : {
          "login" : "da-tanabe",
          "name" : "Davin K. Tanabe",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19478290?u=c4eed11976b50dbaed21ccb17371a74a7e802541&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1263e417-8e62-4c59-bb97-544c9dd73103",
        "parentId" : "b9cf3e5c-3cdd-4e79-b1ef-b08af667e38a",
        "author" : {
          "login" : "da-tanabe",
          "name" : "Davin K. Tanabe",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19478290?u=c4eed11976b50dbaed21ccb17371a74a7e802541&v=4"
        },
        "body" : "(I guess scalaz sort of hid that decision from us, which is definitely a strong argument for not using it here)",
        "createdAt" : "2020-05-28T19:51:12Z",
        "updatedAt" : "2020-06-04T16:42:35Z",
        "lastEditedBy" : {
          "login" : "da-tanabe",
          "name" : "Davin K. Tanabe",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19478290?u=c4eed11976b50dbaed21ccb17371a74a7e802541&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ae9be466-cf5c-43fb-98dc-46a591289a9f",
        "parentId" : "b9cf3e5c-3cdd-4e79-b1ef-b08af667e38a",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I think you want to add an explicit `ResourceOwner`. I'm increasingly thinking that some of those helper constructors were a mistake.",
        "createdAt" : "2020-05-29T08:13:11Z",
        "updatedAt" : "2020-06-04T16:42:35Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9f2647af-4db6-4856-b672-fc49b822ad21",
        "parentId" : "b9cf3e5c-3cdd-4e79-b1ef-b08af667e38a",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "It's important that the execution context is passed in during acquisition, not when constructing the owner. I tried the latter and it caused a lot of subtle problems. Backing that out in https://github.com/digital-asset/daml/pull/5010 helped.",
        "createdAt" : "2020-05-29T08:14:10Z",
        "updatedAt" : "2020-06-04T16:42:35Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "57ca7f28-d60b-43fc-95f3-4a6d27f1af75",
        "parentId" : "b9cf3e5c-3cdd-4e79-b1ef-b08af667e38a",
        "author" : {
          "login" : "da-tanabe",
          "name" : "Davin K. Tanabe",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19478290?u=c4eed11976b50dbaed21ccb17371a74a7e802541&v=4"
        },
        "body" : "@SamirTalwar got around to finishing this up and made the changes as discussed.",
        "createdAt" : "2020-06-03T22:49:19Z",
        "updatedAt" : "2020-06-04T16:42:35Z",
        "lastEditedBy" : {
          "login" : "da-tanabe",
          "name" : "Davin K. Tanabe",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19478290?u=c4eed11976b50dbaed21ccb17371a74a7e802541&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "94ff51ca-13ac-40c6-b2df-37d87020518d",
        "parentId" : "b9cf3e5c-3cdd-4e79-b1ef-b08af667e38a",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Awesome.",
        "createdAt" : "2020-06-04T07:51:02Z",
        "updatedAt" : "2020-06-04T16:42:35Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d76d04e8a0fef67ed00f98bbad2480a2d9bde9c0",
    "line" : null,
    "diffHunk" : "@@ -43,9 +45,12 @@ object HikariConnection {\n       config.setPoolName(s\"$ConnectionPoolPrefix.${serverRole.threadPoolSuffix}\")\n       metrics.foreach(config.setMetricRegistry)\n \n-      //note that Hikari uses auto-commit by default.\n-      //in `runSql` below, the `.close()` will automatically trigger a commit.\n-      new HikariDataSource(config)\n+      // Hikari dies if a database connection could not be opened almost immediately\n+      // regardless of any connection timeout settings. We retry connections so that\n+      // Postgres and Sandbox can be started in any order.\n+      RetryStrategy.constant(attempts = 600, waitTime = 1.second) { (_, _) =>\n+        Future { new HikariDataSource(config) }"
  },
  {
    "id" : "b6be51d6-107c-48ea-aebe-f10ca83945e2",
    "prId" : 6146,
    "comments" : [
      {
        "id" : "036db199-6f99-4a5c-8ca1-dac63fa40cfa",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I would add a log line before this one to give some feedback as to what's going on. The parameters of the anonymous function should give some meaningful information. `info` level should be enough.",
        "createdAt" : "2020-06-04T06:25:59Z",
        "updatedAt" : "2020-06-04T16:42:35Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d76d04e8a0fef67ed00f98bbad2480a2d9bde9c0",
    "line" : null,
    "diffHunk" : "@@ -43,10 +64,16 @@ object HikariConnection {\n       config.setPoolName(s\"$ConnectionPoolPrefix.${serverRole.threadPoolSuffix}\")\n       metrics.foreach(config.setMetricRegistry)\n \n-      //note that Hikari uses auto-commit by default.\n-      //in `runSql` below, the `.close()` will automatically trigger a commit.\n-      new HikariDataSource(config)\n-    })\n+      // Hikari dies if a database connection could not be opened almost immediately\n+      // regardless of any connection timeout settings. We retry connections so that\n+      // Postgres and Sandbox can be started in any order.\n+      Resource(\n+        RetryStrategy.constant(attempts = 600, waitTime = 1.second) { (_, _) =>\n+          Future { new HikariDataSource(config) }"
  },
  {
    "id" : "213d70bc-f609-4b99-86e1-27c85e9cc60c",
    "prId" : 6146,
    "comments" : [
      {
        "id" : "1d172d2d-10a8-46ed-948e-4bf5842a896e",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "It would probably make sense to move this in its own file and giving it a meaningful name.",
        "createdAt" : "2020-06-04T06:26:38Z",
        "updatedAt" : "2020-06-04T16:42:35Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b4370a91-81bf-43d8-8b1a-9ad35357df67",
        "parentId" : "1d172d2d-10a8-46ed-948e-4bf5842a896e",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Or just make `HikariConnection` itself a `ResourceOwner`. I don't think there's a need for the indirection.",
        "createdAt" : "2020-06-04T07:50:36Z",
        "updatedAt" : "2020-06-04T16:42:35Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d76d04e8a0fef67ed00f98bbad2480a2d9bde9c0",
    "line" : null,
    "diffHunk" : "@@ -29,7 +31,26 @@ object HikariConnection {\n       connectionTimeout: FiniteDuration,\n       metrics: Option[MetricRegistry],\n   ): ResourceOwner[HikariDataSource] =\n-    ResourceOwner.forCloseable(() => {\n+    new Owner(\n+      serverRole,\n+      jdbcUrl,\n+      minimumIdle,\n+      maxPoolSize,\n+      connectionTimeout,\n+      metrics\n+    )\n+\n+  final class Owner("
  }
]