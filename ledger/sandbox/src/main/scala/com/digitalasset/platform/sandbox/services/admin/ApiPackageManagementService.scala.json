[
  {
    "id" : "3161e88e-4ebf-4c77-8189-dfeb8ba685b6",
    "prId" : 3524,
    "comments" : [
      {
        "id" : "c70556ce-5674-4769-a0e2-fb0d5bdc38e0",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n            case UploadPackagesResult.Overloaded =>\r\n```\r\n`r` seems to be unused.",
        "createdAt" : "2019-11-20T09:54:55Z",
        "updatedAt" : "2019-11-20T12:51:07Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "02760b2d9223fbfc9c776e4b3edac71864bcd5f9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +77,81 @@            case UploadPackagesResult.Ok =>\n              Future.successful(UploadDarFileResponse())\n            case r @ UploadPackagesResult.Overloaded =>\n              Future.failed(ErrorFactories.resourceExhausted(r.description))\n            case r @ UploadPackagesResult.InternalError(_) =>"
  },
  {
    "id" : "031bedd8-324c-46f9-b5b2-7dd1c17efd53",
    "prId" : 2194,
    "comments" : [
      {
        "id" : "3db1aee2-fff3-4f6e-b580-f58f491aa4ff",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Do you think it would make sense to move this in `PollingUtils`?",
        "createdAt" : "2019-07-17T13:17:32Z",
        "updatedAt" : "2019-07-18T04:20:59Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "164fb2d5-61b2-4cdf-9e1f-25c0c0c2b20c",
        "parentId" : "3db1aee2-fff3-4f6e-b580-f58f491aa4ff",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "If you prefer to leave it here, it may be worth to cut on the parameters and call `PollingUtils.pollUntilPersisted` with the actual values here.",
        "createdAt" : "2019-07-17T13:33:05Z",
        "updatedAt" : "2019-07-18T04:20:59Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9050ac4d-0389-4df8-af9f-110f9de96851",
        "parentId" : "3db1aee2-fff3-4f6e-b580-f58f491aa4ff",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Since we use the same values for `minWait`, `maxWait`, and `backoffProgression`, we could also hard-code them inside `PollingUtils.pollUntilPersisted`. If we realize that we need different values for party and package checking, we can put them as parameters, but I doubt that will be the case.",
        "createdAt" : "2019-07-18T07:30:00Z",
        "updatedAt" : "2019-07-18T07:30:01Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "83ceca26-af56-488b-9e11-4f3fdb56b9ba",
        "parentId" : "3db1aee2-fff3-4f6e-b580-f58f491aa4ff",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "The test uses explicit values for `minWait`, `maxWait`, and `backoffProgression` to check whether they behave correctly, so I will leave the parameters for now.",
        "createdAt" : "2019-07-18T07:57:30Z",
        "updatedAt" : "2019-07-18T07:57:31Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "848717af9c07474e7fae355da54c904ec52b1295",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +93,97 @@    * @return The result of the party allocation received originally, wrapped in a [[Future]]\n    */\n  private def pollUntilPersisted(\n      ids: List[String],\n      result: UploadDarFileResponse): Future[UploadDarFileResponse] = {"
  },
  {
    "id" : "c2049b86-6a7c-48dc-992c-2e52b249982b",
    "prId" : 1800,
    "comments" : [
      {
        "id" : "9c91282b-1f0f-40f6-9148-b7a054c10b5a",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I think it would be nice to have `DarReader` support `ZipInputStream` as well if possible. This way we don't have to create a temporary zipfile, but can feed the `ZipInputStream` directly from the byte array.",
        "createdAt" : "2019-06-26T13:28:59Z",
        "updatedAt" : "2019-06-27T08:00:27Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "af629774-9cbf-457c-904a-9969ad417ac2",
        "parentId" : "9c91282b-1f0f-40f6-9148-b7a054c10b5a",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "I agree this would be better. The `DarReader` does random-access reading of zip file entries, which does not work with `ZipInputStream`, so this would require some refactoring of the reader.",
        "createdAt" : "2019-06-26T13:56:23Z",
        "updatedAt" : "2019-06-27T08:00:27Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "939e4453-461b-42f2-8b25-2557b62f3e9b",
        "parentId" : "9c91282b-1f0f-40f6-9148-b7a054c10b5a",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Right. I didn't mean for this to be changed in this PR. Thanks for checking.",
        "createdAt" : "2019-06-26T15:15:03Z",
        "updatedAt" : "2019-06-27T08:00:27Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "720e4237da08f6f60dc2001e8f439cb9614a907e",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +58,62 @@        Try(fos.write(request.darFile.toByteArray))\n      }\n      dar <- DarReader { case (_, x) => Try(Archive.parseFrom(x)) }.readArchive(new ZipFile(file))\n    } yield {\n      packagesWrite.uploadPackages(dar.all, None)"
  }
]