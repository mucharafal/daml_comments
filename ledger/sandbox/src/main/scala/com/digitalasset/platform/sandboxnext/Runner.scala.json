[
  {
    "id" : "3b72037b-c79a-435d-9ef1-0c017658170f",
    "prId" : 5728,
    "comments" : [
      {
        "id" : "1cfdaba3-d196-4603-9d8b-effae0fb94c5",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I think it'd be useful to add a test case to ensure that the packages are available and can be both listed and used after a reset.",
        "createdAt" : "2020-04-27T08:27:22Z",
        "updatedAt" : "2020-04-30T13:47:45Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a3ed27f1-4760-4721-8fd6-77fb6093eb47",
        "parentId" : "1cfdaba3-d196-4603-9d8b-effae0fb94c5",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Added a test case in b4d5a7f.",
        "createdAt" : "2020-04-29T11:26:26Z",
        "updatedAt" : "2020-04-30T13:47:45Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4ee9cefa20fdce93a350b26379d23a1c3164e4fe",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +153,157 @@                      Future.sequence(config.damlPackages.map(uploadDar(_, writeService))))\n                    .map(_ => ())\n                }\n                _ <- new StandaloneIndexerServer(\n                  readService = readService,"
  },
  {
    "id" : "f2e928b5-aaec-49eb-b0d3-a318422eca6c",
    "prId" : 4422,
    "comments" : [
      {
        "id" : "221e2ca1-bac2-487a-9d7f-d129799eeb63",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I'm not sure we need the logging context to wrap the whole thing. I would suggest you restrict the scope to where it's actually used. Can you check where this is needed? From a cursory look you can probably move it inside the `startParticipant` method (and avoid asking for an `implicit` one).",
        "createdAt" : "2020-02-06T12:39:00Z",
        "updatedAt" : "2020-02-06T14:21:29Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b20ab1bd-c424-4fd7-ad8d-51e123417f26",
        "parentId" : "221e2ca1-bac2-487a-9d7f-d129799eeb63",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "That's where it was when I copied it from the KVUtils _Runner_, but it's also needed for the `SqlLedgerReaderWriter`.",
        "createdAt" : "2020-02-06T13:59:35Z",
        "updatedAt" : "2020-02-06T14:21:29Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a3e584e59ae39b77a6088641e3c5a3287071b5ff",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +71,75 @@    }\n\n    newLoggingContext { implicit logCtx =>\n      for {\n        // Take ownership of the actor system and materializer so they're cleaned up properly."
  }
]