[
  {
    "id" : "28cf3601-9c4b-4be6-9024-471c311c6598",
    "prId" : 4801,
    "comments" : [
      {
        "id" : "994972df-e234-480c-849c-3eb2a7111af3",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "hrhr, `RC` ;)",
        "createdAt" : "2020-03-04T08:20:33Z",
        "updatedAt" : "2020-03-04T10:03:41Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a1515897-a455-4d61-a353-240d9d981fd0",
        "parentId" : "994972df-e234-480c-849c-3eb2a7111af3",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Force of habit ðŸ˜„ ",
        "createdAt" : "2020-03-04T08:52:32Z",
        "updatedAt" : "2020-03-04T10:03:41Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "027fa5b8-4b8e-4784-989c-6a7d28bcf75d",
        "parentId" : "994972df-e234-480c-849c-3eb2a7111af3",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Apologies, I definitely didn't intend for you to change it :(\r\nJust found it funny.",
        "createdAt" : "2020-03-04T10:31:43Z",
        "updatedAt" : "2020-03-04T10:31:43Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "58de78a3b9dd1df2ba212b249cf2b7dcdaaeb575",
    "line" : null,
    "diffHunk" : "@@ -194,7 +198,9 @@ object ApiCommandService {\n       maxCommandsInFlight: Int,\n       limitMaxCommandsInFlight: Boolean,\n       historySize: Int,\n-      retentionPeriod: FiniteDuration)\n+      retentionPeriod: FiniteDuration,\n+      // TODO(RC): this should be updated dynamically from the ledger configuration"
  },
  {
    "id" : "c6a67f23-b580-448e-bfad-3713f04be71d",
    "prId" : 4205,
    "comments" : [
      {
        "id" : "08761879-9c6b-465c-a069-aa38140fe8b6",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Makes subsequent diffs nicer if we use trailing commas.\r\n\r\n```suggestion\r\n      logging.party(request.getCommands.party),\r\n    ) { implicit logCtx =>\r\n```\r\n\r\nThere's a few other places in the diff too, which you're welcome to address or not as you like.",
        "createdAt" : "2020-01-24T15:50:37Z",
        "updatedAt" : "2020-01-24T16:26:46Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bb06918f-8f6f-4818-86e0-f985e990c66b",
        "parentId" : "08761879-9c6b-465c-a069-aa38140fe8b6",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I get a compilation error if I try to do this, are you sure this is valid syntax for varargs?",
        "createdAt" : "2020-01-24T16:14:52Z",
        "updatedAt" : "2020-01-24T16:26:46Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7afb8593-098a-4450-a72e-e27ef2c85a4f",
        "parentId" : "08761879-9c6b-465c-a069-aa38140fe8b6",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/4205/commits/c887bf168c6fd7d8331aeedd61e5c284d1e47ae8",
        "createdAt" : "2020-01-24T16:27:18Z",
        "updatedAt" : "2020-01-24T16:27:18Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "857785d8-01a6-4f55-ae15-56d3169b8517",
        "parentId" : "08761879-9c6b-465c-a069-aa38140fe8b6",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "> I get a compilation error if I try to do this, are you sure this is valid syntax for varargs?\r\n\r\nTIL trailing commas are valid only before a trailing newline. Thanks for clarifying this offline.",
        "createdAt" : "2020-01-24T16:27:54Z",
        "updatedAt" : "2020-01-24T16:27:54Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c887bf168c6fd7d8331aeedd61e5c284d1e47ae8",
    "line" : 53,
    "diffHunk" : "@@ -74,92 +75,86 @@ final class ApiCommandService private (\n   }\n \n   @SuppressWarnings(Array(\"org.wartremover.warts.Any\"))\n-  private def submitAndWaitInternal(request: SubmitAndWaitRequest): Future[Completion] = {\n-\n-    val appId = request.getCommands.applicationId\n-    val submitter = TrackerMap.Key(application = appId, party = request.getCommands.party)\n-\n-    if (running) {\n-      submissionTracker\n-        .track(submitter, request) {\n-          for {\n-            trackingFlow <- {\n-              lowLevelCommandServiceAccess match {\n-                case LowLevelCommandServiceAccess.LocalServices(\n-                    submissionFlow,\n-                    getCompletionSource,\n-                    getCompletionEnd,\n-                    _,\n-                    _) =>\n-                  for {\n-                    ledgerEnd <- getCompletionEnd().map(_.getOffset)\n-                  } yield {\n-                    val tracker =\n-                      CommandTrackerFlow[Promise[Completion], NotUsed](\n-                        submissionFlow,\n-                        offset =>\n-                          getCompletionSource(\n-                            CompletionStreamRequest(\n-                              configuration.ledgerId.unwrap,\n-                              appId,\n-                              List(submitter.party),\n-                              Some(offset)))\n-                            .mapConcat(CommandCompletionSource.toStreamElements),\n-                        ledgerEnd\n-                      )\n-\n-                    if (configuration.limitMaxCommandsInFlight)\n-                      MaxInFlight(configuration.maxCommandsInFlight).joinMat(tracker)(Keep.right)\n-                    else tracker\n-                  }\n+  private def submitAndWaitInternal(request: SubmitAndWaitRequest): Future[Completion] =\n+    withEnrichedLoggingContext(\n+      logging.commandId(request.getCommands.commandId),\n+      logging.party(request.getCommands.party)) { implicit logCtx =>"
  }
]