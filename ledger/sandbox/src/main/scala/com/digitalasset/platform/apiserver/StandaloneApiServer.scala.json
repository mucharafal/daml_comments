[
  {
    "id" : "1f30cce5-fb04-404b-b3ef-10ac71a5cd51",
    "prId" : 6721,
    "comments" : [
      {
        "id" : "5ce2b28b-9ccd-4a4a-b870-06319296252e",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "This is a breaking change:\r\n- the ledger ID is not given by the ledger backend (ReadService) anymore\r\n- the initial time model is not given by the ledger backend (ReadService) anymore\r\n\r\nI think the part about the time model should be added to the changelog as well.",
        "createdAt" : "2020-07-16T08:11:19Z",
        "updatedAt" : "2020-07-16T15:42:46Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4300b5f5-9734-4b6f-95a2-b14fe2443b38",
        "parentId" : "5ce2b28b-9ccd-4a4a-b870-06319296252e",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I think we should actually rather try to fetch the configuration from the database. We have the infrastructure now in place. Both here and in `LedgerBackedIndexServer#getLedgerConfiguration`. What do you think?",
        "createdAt" : "2020-07-16T09:39:22Z",
        "updatedAt" : "2020-07-16T15:42:46Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b946b4df-456f-4f57-9af6-3b942d719cb4",
        "parentId" : "5ce2b28b-9ccd-4a4a-b870-06319296252e",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Yes, `JdbcIndex` should not depend on the initial configuration.\r\n\r\nThe only component that should access the initial configuration is `LedgerConfigProvider`, which is responsible for writing the initial configuration to the ledger if there is none.",
        "createdAt" : "2020-07-16T12:45:57Z",
        "updatedAt" : "2020-07-16T15:42:46Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9317365d3249dfafc8dea2cd1562eb4cf29b0de3",
    "line" : null,
    "diffHunk" : "@@ -69,33 +68,28 @@ final class StandaloneApiServer(\n     preloadPackages(packageStore)\n \n     val owner = for {\n-      initialConditions <- ResourceOwner.forFuture(() =>\n-        readService.getLedgerInitialConditions().runWith(Sink.head))\n-      authorizer = new Authorizer(\n-        () => java.time.Clock.systemUTC.instant(),\n-        initialConditions.ledgerId,\n-        participantId)\n       indexService <- JdbcIndex\n         .owner(\n           ServerRole.ApiServer,\n-          initialConditions.config,\n-          domain.LedgerId(initialConditions.ledgerId),\n+          ledgerConfig.initialConfiguration,"
  },
  {
    "id" : "37717274-20a7-4ad7-8207-e176d1598f20",
    "prId" : 6721,
    "comments" : [
      {
        "id" : "91aa628c-94cf-4d2c-b5e2-2ae5b51bce15",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Not part of this PR, but should we also print more details at a lower log level? Maybe the whole `(ledgerId, config, commandConfig, partyConfig, ledgerConfig)` at DEBUG?",
        "createdAt" : "2020-07-16T08:19:15Z",
        "updatedAt" : "2020-07-16T15:42:46Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9317365d3249dfafc8dea2cd1562eb4cf29b0de3",
    "line" : 87,
    "diffHunk" : "@@ -124,7 +118,7 @@ final class StandaloneApiServer(\n     } yield {\n       writePortFile(apiServer.port)\n       logger.info(\n-        s\"Initialized API server version ${BuildInfo.Version} with ledger-id = ${initialConditions.ledgerId}, port = ${apiServer.port}, dar file = ${config.archiveFiles}\")\n+        s\"Initialized API server version ${BuildInfo.Version} with ledger-id = $ledgerId, port = ${apiServer.port}, dar file = ${config.archiveFiles}\")"
  },
  {
    "id" : "f9fdccb3-9043-42a0-ad8b-1d4ce559be81",
    "prId" : 6052,
    "comments" : [
      {
        "id" : "1d799076-d547-4865-a4f4-6d61e0e7e4ab",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "If this is optional, shall we add a default parameter value?",
        "createdAt" : "2020-05-25T13:54:56Z",
        "updatedAt" : "2020-05-26T07:28:28Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "be5c561e-3875-48e8-aad4-f1a63c02a311",
        "parentId" : "1d799076-d547-4865-a4f4-6d61e0e7e4ab",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "The default is already established via a default on the CLI. If that changes, I don't want to need us going to every usage of this parameter to make sure it matches.",
        "createdAt" : "2020-05-26T07:22:21Z",
        "updatedAt" : "2020-05-26T07:28:28Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9945ea44fabe5fe18e6608839b2ce57f04cbb4ee",
    "line" : 14,
    "diffHunk" : "@@ -53,7 +54,8 @@ final class StandaloneApiServer(\n     timeServiceBackend: Option[TimeServiceBackend] = None,\n     otherServices: immutable.Seq[BindableService] = immutable.Seq.empty,\n     otherInterceptors: List[ServerInterceptor] = List.empty,\n-    engine: Engine\n+    engine: Engine,\n+    lfValueTranslationCache: LfValueTranslation.Cache,"
  },
  {
    "id" : "b1cd27cb-9d3c-46b5-920c-03817d19e3e2",
    "prId" : 5669,
    "comments" : [
      {
        "id" : "5035f25f-a6ba-45a4-8993-87770afbde24",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Should we maybe set the generation to 1 in the default ledger configurations?",
        "createdAt" : "2020-04-28T08:36:33Z",
        "updatedAt" : "2020-05-06T07:31:30Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e734fdf3-8c17-4046-bb50-ee61a018b600",
        "parentId" : "5035f25f-a6ba-45a4-8993-87770afbde24",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "And completely disregard the value returned by `ReadService.getLedgerInitialConditions()`?",
        "createdAt" : "2020-04-28T11:28:50Z",
        "updatedAt" : "2020-05-06T07:31:30Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d727159f8b35003f5e8fc75af2a53edb62b2b8fc",
    "line" : null,
    "diffHunk" : "@@ -95,7 +93,9 @@ final class StandaloneApiServer(\n       )\n       ledgerConfiguration = ledgerConfig.copy(\n         // TODO: Remove the initial ledger config from readService.getLedgerInitialConditions()\n-        initialConfiguration = initialConditions.config,\n+        initialConfiguration = initialConditions.config.copy(\n+          generation = initialConditions.config.generation + 1"
  },
  {
    "id" : "70ea0957-fde2-4f13-b4b7-15d4890c5fc9",
    "prId" : 5591,
    "comments" : [
      {
        "id" : "0fa7463c-58b9-4abe-8d44-da184ea5ac8f",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Do you plan to remove the use of `readService` in a follow-up PR?",
        "createdAt" : "2020-04-20T12:13:10Z",
        "updatedAt" : "2020-04-21T13:49:25Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5fbdb69f-e4e9-490f-8eca-055a0364f5fc",
        "parentId" : "0fa7463c-58b9-4abe-8d44-da184ea5ac8f",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Yep, #5635",
        "createdAt" : "2020-04-20T15:36:37Z",
        "updatedAt" : "2020-04-21T13:49:25Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c88cb69f1442ab96bd253fb3a6720778c58fb8f0",
    "line" : null,
    "diffHunk" : "@@ -91,6 +92,10 @@ final class StandaloneApiServer(\n         \"read\" -> readService,\n         \"write\" -> writeService,\n       )\n+      ledgerConfigConfiguration = LedgerConfigConfiguration(\n+        defaultConfiguration = initialConditions.config,"
  },
  {
    "id" : "d33300c8-00da-4846-8841-03ffeb961b48",
    "prId" : 5591,
    "comments" : [
      {
        "id" : "5828efe8-be6f-4aa1-920c-ffd11a335348",
        "parentId" : null,
        "author" : {
          "login" : "oliverse-da",
          "name" : "Oliver Seeliger",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/46452754?u=dd1d8e09760abe67b40a4e527a15aafe9d104d82&v=4"
        },
        "body" : "Could we make the submit delay configurable, e.g. via `ApiServerConfig`? In Canton it may take a variable amount of time until a participant connects to a domain and thus does not have a time model.",
        "createdAt" : "2020-04-21T07:11:25Z",
        "updatedAt" : "2020-04-21T13:49:25Z",
        "lastEditedBy" : {
          "login" : "oliverse-da",
          "name" : "Oliver Seeliger",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/46452754?u=dd1d8e09760abe67b40a4e527a15aafe9d104d82&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "28e909b8-eea1-4fee-990b-3feba52b0324",
        "parentId" : "5828efe8-be6f-4aa1-920c-ffd11a335348",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "I have added an extra parameter to `StandaloneApiServer` of type `LedgerConfiguration`.",
        "createdAt" : "2020-04-21T12:27:59Z",
        "updatedAt" : "2020-04-21T13:49:25Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "63bada6b-1750-4de2-a0b9-a2d558767d18",
        "parentId" : "5828efe8-be6f-4aa1-920c-ffd11a335348",
        "author" : {
          "login" : "oliverse-da",
          "name" : "Oliver Seeliger",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/46452754?u=dd1d8e09760abe67b40a4e527a15aafe9d104d82&v=4"
        },
        "body" : "Great thanks.\r\n\r\nNot sure if I read the code correctly, but I couldn't find the instance of 5 seconds anymore - was assuming I'd find it in Kvutils Runner ledger config. But I don't know that code too well.",
        "createdAt" : "2020-04-21T13:01:24Z",
        "updatedAt" : "2020-04-21T13:49:25Z",
        "lastEditedBy" : {
          "login" : "oliverse-da",
          "name" : "Oliver Seeliger",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/46452754?u=dd1d8e09760abe67b40a4e527a15aafe9d104d82&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c88cb69f1442ab96bd253fb3a6720778c58fb8f0",
    "line" : null,
    "diffHunk" : "@@ -91,6 +92,10 @@ final class StandaloneApiServer(\n         \"read\" -> readService,\n         \"write\" -> writeService,\n       )\n+      ledgerConfiguration = LedgerConfiguration(\n+        initialConfiguration = initialConditions.config,\n+        initialConfigurationSubmitDelay = Duration.ofSeconds(5),"
  },
  {
    "id" : "38f7eb28-887b-4602-9ef2-0d12cdd483ba",
    "prId" : 5591,
    "comments" : [
      {
        "id" : "057565e4-83e9-4f82-abb1-ff686faa65f8",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "In case this is not going to be trivial can you create an issue to track this and remove the TODO, please?",
        "createdAt" : "2020-04-21T12:57:06Z",
        "updatedAt" : "2020-04-21T13:49:25Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "85d4371b-f147-4801-97d7-735db88ad52b",
        "parentId" : "057565e4-83e9-4f82-abb1-ff686faa65f8",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "https://github.com/digital-asset/daml/issues/5635, the TODO is more for the reviewers of this PR.",
        "createdAt" : "2020-04-21T13:32:08Z",
        "updatedAt" : "2020-04-21T13:49:25Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "43be3412-7c89-4e5e-890f-712c2ff189d4",
        "parentId" : "057565e4-83e9-4f82-abb1-ff686faa65f8",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "OK, that's appreciated -- then you may add it as a review comment as well, i.e., don't need to make a code change for that.",
        "createdAt" : "2020-04-21T14:30:50Z",
        "updatedAt" : "2020-04-21T14:30:50Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c88cb69f1442ab96bd253fb3a6720778c58fb8f0",
    "line" : 21,
    "diffHunk" : "@@ -91,6 +93,10 @@ final class StandaloneApiServer(\n         \"read\" -> readService,\n         \"write\" -> writeService,\n       )\n+      ledgerConfiguration = ledgerConfig.copy(\n+        // TODO: Remove the initial ledger config from readService.getLedgerInitialConditions()"
  },
  {
    "id" : "1963e695-8398-4ba2-9f93-6c9ffc2fa6ba",
    "prId" : 4382,
    "comments" : [
      {
        "id" : "54705189-b38a-4291-956d-ab87f5a60d6c",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Perhaps `Resource.fromFuture` reads better?",
        "createdAt" : "2020-02-04T15:56:15Z",
        "updatedAt" : "2020-02-04T16:01:08Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1c7ab604-ab7b-44db-bb31-1436e51fa48d",
        "parentId" : "54705189-b38a-4291-956d-ab87f5a60d6c",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/4382/commits/107e162c8d59dbb6d113a47cd9e9b597f8b760d2",
        "createdAt" : "2020-02-04T16:01:21Z",
        "updatedAt" : "2020-02-04T16:01:21Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "107e162c8d59dbb6d113a47cd9e9b597f8b760d2",
    "line" : null,
    "diffHunk" : "@@ -134,7 +133,7 @@ final class StandaloneApiServer(\n         List(AuthorizationInterceptor(authService, ec)),\n         metrics\n       )(actorSystem, materializer, logCtx).acquire()\n-      _ <- ResourceOwner.forFuture(() => writePortFile(apiServer.port)).acquire()\n+      _ <- Resource.unreleasable(writePortFile(apiServer.port))"
  },
  {
    "id" : "2440a962-b5ff-4091-8760-fead1e2e5b2a",
    "prId" : 3783,
    "comments" : [
      {
        "id" : "696bbd1c-6ee2-44f1-aef7-2fb75ff518d8",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n```\r\nThis can be removed now. :tada:",
        "createdAt" : "2019-12-09T12:56:32Z",
        "updatedAt" : "2019-12-11T12:31:03Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "44a27282-b039-440e-8035-faaa7be20050",
        "parentId" : "696bbd1c-6ee2-44f1-aef7-2fb75ff518d8",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Done.",
        "createdAt" : "2019-12-09T15:08:25Z",
        "updatedAt" : "2019-12-11T12:31:03Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "85572a07fd9cb2ccf9a2a6cdafdaf86b85861323",
    "line" : null,
    "diffHunk" : "@@ -123,7 +81,7 @@ class StandaloneIndexServer(\n   @SuppressWarnings(Array(\"org.wartremover.warts.ExplicitImplicitTypes\"))"
  },
  {
    "id" : "8151fd48-e095-4b37-a2fc-7eba61652411",
    "prId" : 3783,
    "comments" : [
      {
        "id" : "d83dd0c2-a106-4df5-ad24-fd3b4b97b72e",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Not the biggest fan of being so generic, would you mind pointing out the advantage of this, please? :slightly_smiling_face: ",
        "createdAt" : "2019-12-09T12:56:54Z",
        "updatedAt" : "2019-12-11T12:31:03Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2496c062-a1ce-417e-a3f4-01df5c17e635",
        "parentId" : "d83dd0c2-a106-4df5-ad24-fd3b4b97b72e",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Just that exposing `SandboxState` seems quite unnecessary; I wanted to make it `private`. This follows `StandaloneIndexerServer`.",
        "createdAt" : "2019-12-09T14:50:52Z",
        "updatedAt" : "2019-12-11T12:31:03Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fbcac945-4d17-4664-8bcd-ff26af4c6b67",
        "parentId" : "d83dd0c2-a106-4df5-ad24-fd3b4b97b72e",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Cool, thanks!",
        "createdAt" : "2019-12-09T14:57:58Z",
        "updatedAt" : "2019-12-11T12:31:03Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "85572a07fd9cb2ccf9a2a6cdafdaf86b85861323",
    "line" : 116,
    "diffHunk" : "@@ -185,7 +143,7 @@ class StandaloneIndexServer(\n     } yield apiServerState\n   }\n \n-  def start(): Future[SandboxState] = {\n+  def start(): Future[AutoCloseable] = {"
  },
  {
    "id" : "b92fe5e5-cccb-46f5-954e-74477c9354d0",
    "prId" : 3783,
    "comments" : [
      {
        "id" : "087a1041-59d9-4d9c-b2f9-172733824f4b",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n  private final case class ApiServerState(\r\n```\r\nSince we're here... :slightly_smiling_face: ",
        "createdAt" : "2019-12-09T12:57:48Z",
        "updatedAt" : "2019-12-11T12:31:03Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "abc71dc2-7656-491e-860e-3cb519befed7",
        "parentId" : "087a1041-59d9-4d9c-b2f9-172733824f4b",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Also, please consider turning this into a normal class if the `case` part of it is not really needed.",
        "createdAt" : "2019-12-09T12:58:40Z",
        "updatedAt" : "2019-12-11T12:31:03Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "156651a7-b9fc-4b13-a07d-1ad64dd5f7dc",
        "parentId" : "087a1041-59d9-4d9c-b2f9-172733824f4b",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Done and done.",
        "createdAt" : "2019-12-09T15:08:38Z",
        "updatedAt" : "2019-12-11T12:31:03Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "85572a07fd9cb2ccf9a2a6cdafdaf86b85861323",
    "line" : null,
    "diffHunk" : "@@ -211,3 +169,43 @@ class StandaloneIndexServer(\n   }\n \n }\n+\n+object StandaloneApiServer {\n+  private val actorSystemName = \"index\"\n+\n+  private val asyncTolerance = 30.seconds\n+\n+  private val sharedEngine = Engine()\n+\n+  private case class ApiServerState("
  },
  {
    "id" : "763842e1-4391-4fa7-92c8-41542f88d424",
    "prId" : 3783,
    "comments" : [
      {
        "id" : "49759621-e223-490e-abf6-421f1a46efc8",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I realize you're not the original author of this bit, but since we're here: do we need this to be a `case class`? Can it not be a simple class?",
        "createdAt" : "2019-12-09T12:59:16Z",
        "updatedAt" : "2019-12-11T12:31:03Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "29f79ab0-b45c-45c9-a3b9-1762429b084e",
        "parentId" : "49759621-e223-490e-abf6-421f1a46efc8",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Done.",
        "createdAt" : "2019-12-09T15:08:46Z",
        "updatedAt" : "2019-12-11T12:31:03Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "85572a07fd9cb2ccf9a2a6cdafdaf86b85861323",
    "line" : null,
    "diffHunk" : "@@ -211,3 +169,43 @@ class StandaloneIndexServer(\n   }\n \n }\n+\n+object StandaloneApiServer {\n+  private val actorSystemName = \"index\"\n+\n+  private val asyncTolerance = 30.seconds\n+\n+  private val sharedEngine = Engine()\n+\n+  private case class ApiServerState(\n+      ledgerId: LedgerId,\n+      apiServer: ApiServer,\n+      indexAndWriteService: AutoCloseable,\n+  ) extends AutoCloseable {\n+    def port: Int = apiServer.port\n+\n+    override def close(): Unit = {\n+      apiServer.close() //fully tear down the old server.\n+      indexAndWriteService.close()\n+    }\n+  }\n+\n+  private case class Infrastructure(actorSystem: ActorSystem, materializer: ActorMaterializer)"
  },
  {
    "id" : "dfd02fb2-5f22-4c57-9a5b-04596cf8e40a",
    "prId" : 3783,
    "comments" : [
      {
        "id" : "ebf3cde5-1a47-4ba5-adca-99226c1d2301",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "As noted about, I'd take advantage of the situation to re-evaluate if we really need this to be a `case class`. My rule of a thumb is that if it doesn't make sense for a class to be `Serializable`, it should not be a `case class`. :slightly_smiling_face: ",
        "createdAt" : "2019-12-09T13:00:21Z",
        "updatedAt" : "2019-12-11T12:31:03Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c71d1267-2ab3-454f-a8a6-493cdf4cf864",
        "parentId" : "ebf3cde5-1a47-4ba5-adca-99226c1d2301",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Done.",
        "createdAt" : "2019-12-09T15:08:52Z",
        "updatedAt" : "2019-12-11T12:31:03Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "85572a07fd9cb2ccf9a2a6cdafdaf86b85861323",
    "line" : null,
    "diffHunk" : "@@ -211,3 +169,43 @@ class StandaloneIndexServer(\n   }\n \n }\n+\n+object StandaloneApiServer {\n+  private val actorSystemName = \"index\"\n+\n+  private val asyncTolerance = 30.seconds\n+\n+  private val sharedEngine = Engine()\n+\n+  private case class ApiServerState(\n+      ledgerId: LedgerId,\n+      apiServer: ApiServer,\n+      indexAndWriteService: AutoCloseable,\n+  ) extends AutoCloseable {\n+    def port: Int = apiServer.port\n+\n+    override def close(): Unit = {\n+      apiServer.close() //fully tear down the old server.\n+      indexAndWriteService.close()\n+    }\n+  }\n+\n+  private case class Infrastructure(actorSystem: ActorSystem, materializer: ActorMaterializer)\n+      extends AutoCloseable {\n+    def executionContext: ExecutionContext = materializer.executionContext\n+\n+    override def close(): Unit = {\n+      materializer.shutdown()\n+      Await.result(actorSystem.terminate(), asyncTolerance)\n+      ()\n+    }\n+  }\n+\n+  private case class SandboxState(apiServerState: ApiServerState, infra: Infrastructure)"
  },
  {
    "id" : "c476434f-b6c8-4d40-9437-e508d71c3b44",
    "prId" : 3783,
    "comments" : [
      {
        "id" : "69d94137-8ad9-4e3f-bb13-2c95497ae086",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "What does 'old server' mean in this context?",
        "createdAt" : "2019-12-09T15:49:57Z",
        "updatedAt" : "2019-12-11T12:31:03Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f56a08ef-2963-4ddc-a77f-fec7eca4592d",
        "parentId" : "69d94137-8ad9-4e3f-bb13-2c95497ae086",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "If I knew, I would have improved the code and deleted the comment, but I have no idea. This is just a move from above.",
        "createdAt" : "2019-12-09T16:14:49Z",
        "updatedAt" : "2019-12-11T12:31:03Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9491e129-66f7-49c0-a660-e5b50697793b",
        "parentId" : "69d94137-8ad9-4e3f-bb13-2c95497ae086",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I'm not sure of the meaning either and in any case it doesn't seem very informative. I _suppose_ someone with some context on how things were handled in some previous version of this can extrapolate some information from this but I don't think it's the case anymore, so feel free to remove it if you want.",
        "createdAt" : "2019-12-09T16:49:12Z",
        "updatedAt" : "2019-12-11T12:31:03Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "0ea49277-b7f6-421b-84fd-34c2c14ead19",
        "parentId" : "69d94137-8ad9-4e3f-bb13-2c95497ae086",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Agreed.",
        "createdAt" : "2019-12-09T17:43:59Z",
        "updatedAt" : "2019-12-11T12:31:03Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "aa2fe533-6a2b-4130-b9ef-85026e4b1733",
        "parentId" : "69d94137-8ad9-4e3f-bb13-2c95497ae086",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "This comment is misleading as it talks about the \"old server\" but nowhere mentions a new one. The comment can be deleted, because `close` just closes the api server.",
        "createdAt" : "2019-12-11T10:41:16Z",
        "updatedAt" : "2019-12-11T12:31:03Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "94811a7e-2a88-413d-a990-dc1ffb471afb",
        "parentId" : "69d94137-8ad9-4e3f-bb13-2c95497ae086",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Deleted.",
        "createdAt" : "2019-12-11T11:15:47Z",
        "updatedAt" : "2019-12-11T12:31:03Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "85572a07fd9cb2ccf9a2a6cdafdaf86b85861323",
    "line" : null,
    "diffHunk" : "@@ -211,3 +168,43 @@ class StandaloneIndexServer(\n   }\n \n }\n+\n+object StandaloneApiServer {\n+  private val actorSystemName = \"index\"\n+\n+  private val asyncTolerance = 30.seconds\n+\n+  private val sharedEngine = Engine()\n+\n+  private final class ApiServerState(\n+      ledgerId: LedgerId,\n+      apiServer: ApiServer,\n+      indexAndWriteService: AutoCloseable,\n+  ) extends AutoCloseable {\n+    def port: Int = apiServer.port\n+\n+    override def close(): Unit = {\n+      apiServer.close() //fully tear down the old server."
  }
]