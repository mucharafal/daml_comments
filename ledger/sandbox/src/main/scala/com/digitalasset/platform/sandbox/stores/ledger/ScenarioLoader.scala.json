[
  {
    "id" : "ffa7aff0-5b4e-45b0-bc3a-008c5698ffa3",
    "prId" : 4221,
    "comments" : [
      {
        "id" : "d723fbb0-1c46-467b-bafc-f59db956397c",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Why change from `concat` to `assetFromString`?",
        "createdAt" : "2020-01-31T15:19:11Z",
        "updatedAt" : "2020-02-03T21:56:31Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "dc759c7b-4fd3-4cbd-ad9a-45866c11ba4e",
        "parentId" : "d723fbb0-1c46-467b-bafc-f59db956397c",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2020-02-03T15:13:12Z",
        "updatedAt" : "2020-02-03T21:56:31Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9233a4097ca730ce5db7e0b07a328048ff91a0cc",
    "line" : null,
    "diffHunk" : "@@ -290,13 +290,13 @@ object ScenarioLoader {\n     }\n   }\n \n-  private val `#` = Ref.ContractIdString.assertFromString(\"#\")\n+  private val `#` = Ref.LedgerString.assertFromString(\"#\")\n   // currently the scenario interpreter produces the contract ids with no hash prefix,\n   // but the sandbox does. add them here too for consistency\n   private def absCidWithHash(a: AbsoluteContractId): AbsoluteContractId =\n-    AbsoluteContractId(Ref.ContractIdString.concat(`#`, a.coid))\n+    AbsoluteContractId(Ref.ContractIdStringV0.assertFromString(`#` + a.coid))"
  },
  {
    "id" : "fbdfa918-b115-4f0b-9dcf-632c84af79e6",
    "prId" : 1610,
    "comments" : [
      {
        "id" : "8ead858e-58be-4329-b150-01cbdedc0cfa",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Do not use `Option#get`.\r\n\r\n```suggestion\r\n          val pkg = packages.getLfPackageSync(packageId) getOrElse sys.error(s\"I am actually explaining the difficulty with $packageId\")\r\n```",
        "createdAt" : "2019-06-14T18:04:01Z",
        "updatedAt" : "2019-06-19T11:34:16Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5e866b02c0df2f20dcee08439e1105fe577f0609",
    "line" : null,
    "diffHunk" : "@@ -150,36 +149,42 @@ object ScenarioLoader {\n   }\n \n   private def getCandidateScenarios(\n-      packages: DamlPackageContainer,\n+      packages: InMemoryPackageStore,\n       scenarioQualName: Ref.QualifiedName\n   ): List[(Ref.Identifier, Definition)] = {\n-    packages.packages.flatMap {\n-      case (packageId, pkg) =>\n-        pkg.lookupIdentifier(scenarioQualName) match {\n-          case Right(x) => List((Ref.Identifier(packageId, scenarioQualName), x))\n-          case Left(_) => List()\n-        }\n-    }(breakOut)\n+    packages\n+      .listLfPackagesSync()\n+      .flatMap {\n+        case (packageId, _) =>\n+          val pkg = packages.getLfPackageSync(packageId).get"
  },
  {
    "id" : "1dd2f55e-2171-465b-b7ee-7cbf78b8a092",
    "prId" : 1610,
    "comments" : [
      {
        "id" : "fc496e15-c4f9-4ab0-87f9-59bbe1f5ff19",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Likewise, `.get`. Should you discard failed packages here instead? Not sure.",
        "createdAt" : "2019-06-14T18:06:26Z",
        "updatedAt" : "2019-06-19T11:34:16Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d104c857-d39f-46e0-bc1d-58e33b230243",
        "parentId" : "fc496e15-c4f9-4ab0-87f9-59bbe1f5ff19",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "It is unlikely that `.get` would fail here - this code is more or less equivalent to `myMap.keys.map(myMap.get)`. I have replaced `.get` with `.getOrElse` and a helpful error message.",
        "createdAt" : "2019-06-18T10:52:38Z",
        "updatedAt" : "2019-06-19T11:34:16Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5e866b02c0df2f20dcee08439e1105fe577f0609",
    "line" : null,
    "diffHunk" : "@@ -150,36 +149,42 @@ object ScenarioLoader {\n   }\n \n   private def getCandidateScenarios(\n-      packages: DamlPackageContainer,\n+      packages: InMemoryPackageStore,\n       scenarioQualName: Ref.QualifiedName\n   ): List[(Ref.Identifier, Definition)] = {\n-    packages.packages.flatMap {\n-      case (packageId, pkg) =>\n-        pkg.lookupIdentifier(scenarioQualName) match {\n-          case Right(x) => List((Ref.Identifier(packageId, scenarioQualName), x))\n-          case Left(_) => List()\n-        }\n-    }(breakOut)\n+    packages\n+      .listLfPackagesSync()\n+      .flatMap {\n+        case (packageId, _) =>\n+          val pkg = packages.getLfPackageSync(packageId).get\n+          pkg.lookupIdentifier(scenarioQualName) match {\n+            case Right(x) => List((Ref.Identifier(packageId, scenarioQualName), x))\n+            case Left(_) => List()\n+          }\n+      }(breakOut)\n   }\n \n   private def getScenarioQualifiedName(\n-      packages: DamlPackageContainer,\n+      packages: InMemoryPackageStore,\n       scenario: String\n   ): Ref.QualifiedName = {\n     Ref.QualifiedName.fromString(scenario) match {\n       case Left(err) =>\n         logger.warn(\n           \"Dot-separated scenario specification is deprecated. Names are Module.Name:Inner.Name, with a colon between module name and the name of the definition. Falling back to deprecated name resolution.\")\n-        packages.packages.iterator\n+        packages\n+          .listLfPackagesSync()\n+          .iterator\n           .map {\n-            case (_, pkg) => DeprecatedIdentifier.lookup(pkg, scenario)\n+            case (pkgId, _) =>\n+              DeprecatedIdentifier.lookup(packages.getLfPackageSync(pkgId).get, scenario)"
  },
  {
    "id" : "3c1d13ef-a688-4734-b9eb-11e7aed762d2",
    "prId" : 1105,
    "comments" : [
      {
        "id" : "7110020a-6436-4978-ad53-14e4dc19725f",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "why the extra `(`, `)`s?",
        "createdAt" : "2019-05-13T14:50:10Z",
        "updatedAt" : "2019-05-14T09:16:28Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cafa2731-8376-4737-ae3c-1672ad44132f",
        "parentId" : "7110020a-6436-4978-ad53-14e4dc19725f",
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "because otherwise it's invoking the method with two arguments",
        "createdAt" : "2019-05-14T07:19:10Z",
        "updatedAt" : "2019-05-14T09:16:28Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2fdfc3b5-2265-4be1-bcbb-1540f828f068",
        "parentId" : "7110020a-6436-4978-ad53-14e4dc19725f",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "oh, right",
        "createdAt" : "2019-05-14T07:36:22Z",
        "updatedAt" : "2019-05-14T09:16:28Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6d81164920cc6c9affc0286dc658e1a78e9b981e",
    "line" : 97,
    "diffHunk" : "@@ -190,17 +222,20 @@ object ScenarioLoader {\n               case (nid, parties) => (nodeIdWithHash(nid), parties)\n             }\n             ledger +=\n-              Transaction(\n-                transactionId,\n-                transactionId,\n-                \"scenario-loader\",\n-                richTransaction.committer,\n-                workflowId,\n-                time.toInstant,\n-                time.toInstant,\n-                recordTx,\n-                recordDisclosure.transform((_, v) => v.toSet[String])\n-              )\n+              ("
  }
]