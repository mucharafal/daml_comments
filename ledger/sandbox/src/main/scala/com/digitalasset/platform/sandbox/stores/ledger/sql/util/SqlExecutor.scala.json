[
  {
    "id" : "416724db-49f8-452a-a2b8-363efb7b44ac",
    "prId" : 3359,
    "comments" : [
      {
        "id" : "7c87ef61-2669-4d76-9efc-be4beff47c85",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Great, thanks, very good catch!\r\n\r\nNo pun intended. :smile: ",
        "createdAt" : "2019-11-07T12:43:10Z",
        "updatedAt" : "2019-11-07T14:26:30Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "57b56f34c1c450872c0e56b48c140c1fe8a5ccab",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +60,64 @@      }\n\n      // decouple metrics updating from sql execution above\n      try {\n        val execNanos = System.nanoTime() - startExec"
  },
  {
    "id" : "98d9a2a7-a15e-408e-8db1-949c0acf352d",
    "prId" : 3359,
    "comments" : [
      {
        "id" : "4dd79d75-7c29-421c-a00d-3cb7132f8bc6",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I may be wrong here, but if `promise` is immutable then you'll have to return it from this expression and then call `.future` on that in the end.",
        "createdAt" : "2019-11-07T12:44:44Z",
        "updatedAt" : "2019-11-07T14:26:30Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9d09e294-c7ea-4e45-b075-2bffb3cdaf25",
        "parentId" : "4dd79d75-7c29-421c-a00d-3cb7132f8bc6",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "I believe promises are necessarily mutable; you return the `promise.future` immediately and then can complete it later.",
        "createdAt" : "2019-11-07T12:47:10Z",
        "updatedAt" : "2019-11-07T14:26:30Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f233b5e6-aa08-4c6e-bd88-8cf1dbca5a90",
        "parentId" : "4dd79d75-7c29-421c-a00d-3cb7132f8bc6",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "According to [the Scala documentation](https://docs.scala-lang.org/overviews/core/futures.html#promises), it's mutable by design.",
        "createdAt" : "2019-11-07T12:48:23Z",
        "updatedAt" : "2019-11-07T14:26:30Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "277d902b-8b63-454b-b8a8-af4a4e970b56",
        "parentId" : "4dd79d75-7c29-421c-a00d-3cb7132f8bc6",
        "author" : {
          "login" : "oliverse-da",
          "name" : "Oliver Seeliger",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/46452754?u=dd1d8e09760abe67b40a4e527a15aafe9d104d82&v=4"
        },
        "body" : "Indeed",
        "createdAt" : "2019-11-07T14:25:56Z",
        "updatedAt" : "2019-11-07T14:26:30Z",
        "lastEditedBy" : {
          "login" : "oliverse-da",
          "name" : "Oliver Seeliger",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/46452754?u=dd1d8e09760abe67b40a4e527a15aafe9d104d82&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "57b56f34c1c450872c0e56b48c140c1fe8a5ccab",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +48,52 @@      try {\n        // Actual execution\n        promise.success(block)\n      } catch {\n        case NonFatal(e) =>"
  }
]