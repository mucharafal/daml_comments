[
  {
    "id" : "9824c73f-cb05-4b16-9424-7ddb4138b4da",
    "prId" : 6658,
    "comments" : [
      {
        "id" : "f071665b-d92a-4f12-b5d4-3a1c16cc9763",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "What does this stand for? I would prefer if you could write the full name, it would make it more readable.",
        "createdAt" : "2020-07-15T09:17:23Z",
        "updatedAt" : "2020-07-28T19:42:13Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "0255f332-0d1a-4220-b14b-1bde06187d01",
        "parentId" : "f071665b-d92a-4f12-b5d4-3a1c16cc9763",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Er, \"Flatevents Range Queries Continuation\"? I'm not sure that clarifies anything though üòÉ \r\n\r\nHonestly I never thought about what it was called, I merely noticed that the return type of the various protected methods had nothing to do with the return type of the only public method, and was merely a protocol between the former and the latter, and therefore deserved an equally private shorthand. I'll...think of something.",
        "createdAt" : "2020-07-15T12:35:22Z",
        "updatedAt" : "2020-07-28T19:42:13Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b366d87b-5567-4dcd-a35e-580ff3ee4d74",
        "parentId" : "f071665b-d92a-4f12-b5d4-3a1c16cc9763",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "6c3c0e587631e5dedd7afa5cfce9a8201e2ae21c",
        "createdAt" : "2020-07-15T13:00:15Z",
        "updatedAt" : "2020-07-28T19:42:13Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "69f55443bf44c1520d2dc1c24b1aa8bee88b4d46",
    "line" : null,
    "diffHunk" : "@@ -108,11 +112,34 @@ private[events] sealed trait EventsTableFlatEventsRangeQueries[Offset] {\n         }\n       }\n     }\n+\n+    frqK match {\n+      case FrqK.ByArith(fasterRead, saferRead) =>\n+        EventsRange.readPage(\n+          fasterRead,\n+          saferRead,\n+          EventsTable.rawFlatEventParser,\n+          offsetRange(offset),\n+          pageSize)\n+      case FrqK.ByLimit(sql) =>\n+        SqlSequence.vector(sql withFetchSize Some(pageSize), EventsTable.rawFlatEventParser)\n+    }\n   }\n }\n \n private[events] object EventsTableFlatEventsRangeQueries {\n \n+  private[EventsTableFlatEventsRangeQueries] sealed abstract class FrqK"
  },
  {
    "id" : "9eca74de-8a13-45a7-9394-1f7655378405",
    "prId" : 5365,
    "comments" : [
      {
        "id" : "9c3f7bc2-29e4-4282-ac33-587110861f0c",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Do you plan on having multiple implementations of this trait, or can this just be folded into the accompanying `object`?",
        "createdAt" : "2020-04-02T09:05:08Z",
        "updatedAt" : "2020-04-02T09:05:12Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "420cbf79-dc41-42fa-b117-da9a40d676f9",
        "parentId" : "9c3f7bc2-29e4-4282-ac33-587110861f0c",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "The second implementation will contain the queries to serve the active contracts.",
        "createdAt" : "2020-04-02T09:16:05Z",
        "updatedAt" : "2020-04-02T09:16:05Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f734a9f0-297d-409d-9bce-c818f7d973ab",
        "parentId" : "9c3f7bc2-29e4-4282-ac33-587110861f0c",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "üëç ",
        "createdAt" : "2020-04-02T09:24:34Z",
        "updatedAt" : "2020-04-02T09:24:34Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c846018e0da9b93165da34bbc7ff985d36d68021",
    "line" : 11,
    "diffHunk" : "@@ -0,0 +1,150 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.platform.store.dao.events\n+\n+import anorm.{Row, SimpleSql, SqlStringInterpolation}\n+import com.daml.ledger.participant.state.v1.Offset\n+import com.digitalasset.daml.lf.data.Ref.Identifier\n+import com.digitalasset.platform.store.Conversions._\n+\n+private[events] sealed trait EventsTableFlatEventsRangeQueries[Offset] {"
  }
]