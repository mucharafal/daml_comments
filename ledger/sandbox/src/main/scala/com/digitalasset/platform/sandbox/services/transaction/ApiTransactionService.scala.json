[
  {
    "id" : "249d0649-3902-4358-9805-7c1269d8129a",
    "prId" : 1613,
    "comments" : [
      {
        "id" : "f090f4e4-9631-4717-8569-873a4d05b794",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "This should remain as `INVALID_ARGUMENT` because the eventID didn't match the expected format.",
        "createdAt" : "2019-06-13T12:23:26Z",
        "updatedAt" : "2019-06-13T12:24:34Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3e164c4d-1afc-4e5b-be22-d31e3a882260",
        "parentId" : "f090f4e4-9631-4717-8569-873a4d05b794",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "that's hard to implement. the daml-on-x cannot validate eventId form, so it's not clear how to write the test for this. lets follow up on fixing this!",
        "createdAt" : "2019-06-13T12:30:40Z",
        "updatedAt" : "2019-06-13T12:30:41Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "841e0f50-0558-4adb-83b5-f5e61facaa90",
        "parentId" : "f090f4e4-9631-4717-8569-873a4d05b794",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "After discussing offline with @dajmaki, we agreed that `NOT_FOUND` is the correct error status, because the ledger api never specifies the format of the event id. Returning `INVALID_ARGUMENT` without telling users how to make it valid (i.e. by way of specifying the format) is not a nice thing to do :)",
        "createdAt" : "2019-06-13T12:46:51Z",
        "updatedAt" : "2019-06-13T12:46:52Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3d8f6d43a2bc2f58902cd0ded39ae5957e44251d",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +106,110 @@      .fold(\n        Future.failed[Transaction](\n          Status.NOT_FOUND\n            .withDescription(s\"invalid eventId: ${request.eventId}\")\n            .asRuntimeException())) {"
  },
  {
    "id" : "18323a63-c49c-47b7-a938-02e7b5159d0c",
    "prId" : 1613,
    "comments" : [
      {
        "id" : "aeb96871-e6e5-4fb1-ba7a-f129e4640503",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "This should remain as `INVALID_ARGUMENT` because the eventID didn't match the expected format.",
        "createdAt" : "2019-06-13T12:23:38Z",
        "updatedAt" : "2019-06-13T12:24:34Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3d8f6d43a2bc2f58902cd0ded39ae5957e44251d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +87,91 @@      .fold(\n        Future.failed[TransactionTree](\n          Status.NOT_FOUND\n            .withDescription(s\"invalid eventId: ${request.eventId}\")\n            .asRuntimeException())) {"
  }
]