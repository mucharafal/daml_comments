[
  {
    "id" : "680a164b-6e50-4549-97fe-605926b84fcb",
    "prId" : 3080,
    "comments" : [
      {
        "id" : "8f095ae4-6587-403b-aa3e-50868b5fa172",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Since this is an internal API (hence we can change it), please make `parallelism` the last parameter and remove the named parameter passing in line 40.",
        "createdAt" : "2019-10-03T09:02:08Z",
        "updatedAt" : "2019-10-03T15:26:22Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "fc60780f-cfa9-4b4c-9e4f-dbfcdadc79f5",
        "parentId" : "8f095ae4-6587-403b-aa3e-50868b5fa172",
        "author" : {
          "login" : "oliverse-da",
          "name" : "Oliver Seeliger",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/46452754?u=dd1d8e09760abe67b40a4e527a15aafe9d104d82&v=4"
        },
        "body" : "Done",
        "createdAt" : "2019-10-03T12:17:39Z",
        "updatedAt" : "2019-10-03T15:26:22Z",
        "lastEditedBy" : {
          "login" : "oliverse-da",
          "name" : "Oliver Seeliger",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/46452754?u=dd1d8e09760abe67b40a4e527a15aafe9d104d82&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d95f1ee782ebcf961b9c14dc7408e26e2e9e470e",
    "line" : null,
    "diffHunk" : "@@ -18,37 +18,42 @@ import com.digitalasset.platform.sandbox.services.transaction.SandboxEventIdForm\n import com.digitalasset.platform.server.api.services.domain.TransactionService\n import com.digitalasset.platform.server.api.services.grpc.GrpcTransactionService\n import com.digitalasset.platform.server.api.validation.ErrorFactories\n+\n import io.grpc._\n-import org.slf4j.LoggerFactory\n import scalaz.syntax.tag._\n-import com.digitalasset.ledger.api.v1.transaction_service.{TransactionServiceLogging}\n+import com.digitalasset.ledger.api.v1.transaction_service.TransactionServiceLogging\n+import com.digitalasset.platform.common.logging.NamedLogger\n \n import scala.concurrent.{ExecutionContext, Future}\n \n object ApiTransactionService {\n \n-  def create(ledgerId: LedgerId, transactionsService: IndexTransactionsService)(\n+  def create(\n+      ledgerId: LedgerId,\n+      transactionsService: IndexTransactionsService,\n+      namedLogger: NamedLogger)(\n       implicit ec: ExecutionContext,\n       mat: Materializer,\n       esf: ExecutionSequencerFactory)\n     : GrpcTransactionService with BindableService with TransactionServiceLogging =\n     new GrpcTransactionService(\n-      new ApiTransactionService(transactionsService),\n+      new ApiTransactionService(transactionsService, namedLogger = namedLogger),\n       ledgerId,\n       PartyNameChecker.AllowAllParties\n     ) with TransactionServiceLogging\n }\n \n class ApiTransactionService private (\n     transactionsService: IndexTransactionsService,\n-    parallelism: Int = 4)(\n+    parallelism: Int = 4,\n+    namedLogger: NamedLogger)("
  },
  {
    "id" : "5a4541a3-2475-4e3e-86aa-13093b71481c",
    "prId" : 1613,
    "comments" : [
      {
        "id" : "35d36522-8126-4b2f-8bfa-3ac6b95b0077",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "This should remain as `INVALID_ARGUMENT` because the eventID didn't match the expected format.",
        "createdAt" : "2019-06-13T12:23:26Z",
        "updatedAt" : "2019-06-13T12:24:34Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "eb276148-0e2d-4406-b9fa-e149dcbc7c6b",
        "parentId" : "35d36522-8126-4b2f-8bfa-3ac6b95b0077",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "that's hard to implement. the daml-on-x cannot validate eventId form, so it's not clear how to write the test for this. lets follow up on fixing this!",
        "createdAt" : "2019-06-13T12:30:40Z",
        "updatedAt" : "2019-06-13T12:30:41Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "70255f24-d51c-4e3e-bf91-980965f8af0e",
        "parentId" : "35d36522-8126-4b2f-8bfa-3ac6b95b0077",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "After discussing offline with @dajmaki, we agreed that `NOT_FOUND` is the correct error status, because the ledger api never specifies the format of the event id. Returning `INVALID_ARGUMENT` without telling users how to make it valid (i.e. by way of specifying the format) is not a nice thing to do :)",
        "createdAt" : "2019-06-13T12:46:51Z",
        "updatedAt" : "2019-06-13T12:46:52Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3d8f6d43a2bc2f58902cd0ded39ae5957e44251d",
    "line" : 14,
    "diffHunk" : "@@ -105,7 +105,7 @@ class ApiTransactionService private (\n       .split(request.eventId.unwrap)\n       .fold(\n         Future.failed[Transaction](\n-          Status.INVALID_ARGUMENT\n+          Status.NOT_FOUND"
  },
  {
    "id" : "3016da70-ae3f-4b74-9f94-c4499a6a9f62",
    "prId" : 1613,
    "comments" : [
      {
        "id" : "e9824291-7ad8-4cd5-aecd-848678ce42a2",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "This should remain as `INVALID_ARGUMENT` because the eventID didn't match the expected format.",
        "createdAt" : "2019-06-13T12:23:38Z",
        "updatedAt" : "2019-06-13T12:24:34Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3d8f6d43a2bc2f58902cd0ded39ae5957e44251d",
    "line" : 5,
    "diffHunk" : "@@ -86,7 +86,7 @@ class ApiTransactionService private (\n       .split(request.eventId.unwrap)\n       .fold(\n         Future.failed[TransactionTree](\n-          Status.INVALID_ARGUMENT\n+          Status.NOT_FOUND"
  }
]