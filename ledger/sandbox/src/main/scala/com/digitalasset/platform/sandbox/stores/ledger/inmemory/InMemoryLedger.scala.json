[
  {
    "id" : "66ad8621-62f5-4b5d-8d9f-74d8640f671f",
    "prId" : 5541,
    "comments" : [
      {
        "id" : "e450fcf1-e432-4af2-b4ae-b1562dc0676e",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "If this can actually happen, can we use a better error type?",
        "createdAt" : "2020-04-15T12:36:16Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cf3f9673-f29f-4a7a-bf0d-fe3c8cbfdb4b",
        "parentId" : "e450fcf1-e432-4af2-b4ae-b1562dc0676e",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Not worth spending time on this, I had to change it due to the signature change, but `InMemoryLedger` will soon be gone. :crossed_fingers:",
        "createdAt" : "2020-04-15T12:51:36Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2034352017063fbc2c958c5a086273e66ed0ad47",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +275,279 @@            .getOrElse(\n              id,\n              sys.error(s\"Contract $id not found while looking for maximum ledger time\"))\n            .let\n          acc.map(acc => if (let.isAfter(acc)) let else acc)"
  },
  {
    "id" : "040b4f03-0cbd-41d9-8adb-ea6b3f76ab6e",
    "prId" : 5541,
    "comments" : [
      {
        "id" : "33a036ac-9eaa-4ec5-bc78-a415487761c9",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "You could do the following:\r\n```\r\nimport Ordering.Implicits._\r\nlet.max(acc)\r\n```",
        "createdAt" : "2020-04-16T07:23:16Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "df5bfde2-04bd-4963-8ecf-8452ebcb574e",
        "parentId" : "33a036ac-9eaa-4ec5-bc78-a415487761c9",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "`InMemoryLedger` is going away soon, I'm satisfied with this, but thanks for raising it.",
        "createdAt" : "2020-04-16T09:00:31Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7d0978ca-b1ea-440c-bbde-0e29205b43ef",
        "parentId" : "33a036ac-9eaa-4ec5-bc78-a415487761c9",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Yeah, you're right 👍 ",
        "createdAt" : "2020-04-16T09:36:30Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2034352017063fbc2c958c5a086273e66ed0ad47",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +277,281 @@              sys.error(s\"Contract $id not found while looking for maximum ledger time\"))\n            .let\n          acc.map(acc => if (let.isAfter(acc)) let else acc)\n        })\n      }))"
  },
  {
    "id" : "810a39ac-0855-4f6d-a1b8-bae9ccbbb3a7",
    "prId" : 5100,
    "comments" : [
      {
        "id" : "5e57012a-7d8c-464e-b33b-692250a170d1",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Wouldn't it be enough to synchronize on `acs` only?",
        "createdAt" : "2020-03-25T11:25:22Z",
        "updatedAt" : "2020-03-25T11:28:29Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "dbe91ab5-dd48-4e38-849e-a37d0ed6d807",
        "parentId" : "5e57012a-7d8c-464e-b33b-692250a170d1",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "This class goes away soon and this just follows the same pattern used in the other methods.",
        "createdAt" : "2020-03-25T11:45:44Z",
        "updatedAt" : "2020-03-25T11:45:44Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d421ae1a437d89063df1c3e40078f52885762eaf",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +172,176 @@\n  override def lookupMaximumLedgerTime(contractIds: Set[AbsoluteContractId]): Future[Instant] =\n    Future.successful(this.synchronized {\n      contractIds.foldLeft[Instant](Instant.EPOCH)((acc, id) => {\n        val let = acs.activeContracts"
  },
  {
    "id" : "86346100-048e-45fa-8a76-90a391296df3",
    "prId" : 5100,
    "comments" : [
      {
        "id" : "bf9b415b-1ee0-4e19-9212-7e472091277a",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "What is 5b?",
        "createdAt" : "2020-03-25T11:25:44Z",
        "updatedAt" : "2020-03-25T11:28:29Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d421ae1a437d89063df1c3e40078f52885762eaf",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +213,217 @@          val (transactionForIndex, disclosureForIndex, globalDivulgence) =\n            Ledger.convertToCommittedTransaction(transactionId, transaction)\n          // 5b. modify the ActiveContracts, while checking that we do not have double\n          // spends or timing issues\n          val acsRes = acs.addTransaction("
  },
  {
    "id" : "940bc0f0-6d5b-43c5-85b7-659d725cb073",
    "prId" : 3744,
    "comments" : [
      {
        "id" : "8003a033-9b82-4026-a94e-12007a466c88",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Do you think it would be possible to reduce the scope of the lock, maybe to something private?",
        "createdAt" : "2019-12-05T11:05:18Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3efcc65d-31fe-4707-adc3-1f95c68d27a8",
        "parentId" : "8003a033-9b82-4026-a94e-12007a466c88",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Maybe. I wouldn't make this change in this PR either way though.",
        "createdAt" : "2019-12-05T12:12:09Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d8204b7c377ce994002fb11ce1227c245747b3d0",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +264,268 @@      party: Party,\n      displayName: Option[String]): Future[SubmissionResult] =\n    Future.successful(this.synchronized[SubmissionResult] {\n      val ids = acs.parties.keySet\n      if (ids.contains(party)) {"
  },
  {
    "id" : "92aea1a8-02ee-414e-9998-f6074265647a",
    "prId" : 3553,
    "comments" : [
      {
        "id" : "e61a7abc-ae57-4af5-90d1-59d9f3b7b4f2",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "This needs to be `synchronized`, because of access to `var ledgerConfiguration`. See `publishTransaction` or `publishHeartbeat`.",
        "createdAt" : "2019-11-26T20:52:58Z",
        "updatedAt" : "2019-11-27T14:09:02Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "398ae089-b6c2-4bd6-a7c2-0d91eb419261",
        "parentId" : "e61a7abc-ae57-4af5-90d1-59d9f3b7b4f2",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "oops, fixing..",
        "createdAt" : "2019-11-27T09:30:41Z",
        "updatedAt" : "2019-11-27T14:09:02Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "04d3118b43225ee033b4c9bba93102cdc650df6a",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +315,319 @@      submissionId: String,\n      config: Configuration): Future[SubmissionResult] =\n    Future.successful {\n      this.synchronized {\n        ledgerConfiguration match {"
  },
  {
    "id" : "00e6a14a-5cd6-4b08-8b7a-b1548a4e047c",
    "prId" : 1818,
    "comments" : [
      {
        "id" : "04f2cb0a-cac2-4254-a23a-cf13ec5da473",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "@gaboraranyossy-da @gerolf-da Opinions? In practice, the ownership of the package store is \"moved\" from the sandbox initialization part (scenario loading) to the `InMemoryLedger` instance.",
        "createdAt" : "2019-06-28T08:42:00Z",
        "updatedAt" : "2019-07-02T12:24:58Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c2142d9a-6c97-4f53-a51c-15fe081648f6",
        "parentId" : "04f2cb0a-cac2-4254-a23a-cf13ec5da473",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "It's not really a clone, just a copied reference. I don't see why we would need it.",
        "createdAt" : "2019-06-28T09:10:14Z",
        "updatedAt" : "2019-07-02T12:24:58Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f6e5e540-ff2f-4fe9-b560-582beafac92c",
        "parentId" : "04f2cb0a-cac2-4254-a23a-cf13ec5da473",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Yes, this is just a copied reference. I was wondering whether we need a clone instead, given that the reference points to mutable data.",
        "createdAt" : "2019-07-02T12:24:02Z",
        "updatedAt" : "2019-07-02T12:24:58Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f0276c6b-8f06-4b2a-9ec5-182799d38e4a",
        "parentId" : "04f2cb0a-cac2-4254-a23a-cf13ec5da473",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "we are just reading here, aren't we? In that case I'd define a pure read-concerned interface for this purpose and have it passed as a dependency instead of the whole package store. ",
        "createdAt" : "2019-07-02T12:31:04Z",
        "updatedAt" : "2019-07-02T12:31:04Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4e745997-0023-4406-80e9-55ab42a2e828",
        "parentId" : "04f2cb0a-cac2-4254-a23a-cf13ec5da473",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "New packages can be added at run time through the new admin API, see https://github.com/digital-asset/daml/pull/1818/files#diff-f0fa0fae9e9e5750f0db679f20742a95R263",
        "createdAt" : "2019-07-02T12:33:41Z",
        "updatedAt" : "2019-07-02T12:33:41Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ec1ae182-5dbe-4411-bd9e-3111bcf2a538",
        "parentId" : "04f2cb0a-cac2-4254-a23a-cf13ec5da473",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "oh, right. Are we mutating the packages somewhere else too?",
        "createdAt" : "2019-07-02T13:05:51Z",
        "updatedAt" : "2019-07-02T13:05:52Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "09e138d4-ca62-4811-9c2f-3ef1e722da57",
        "parentId" : "04f2cb0a-cac2-4254-a23a-cf13ec5da473",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "No, the package store is initialized as part of the scenario loading, and after that passed to the ledger. It should not be modified from the outside.",
        "createdAt" : "2019-07-02T13:10:43Z",
        "updatedAt" : "2019-07-02T13:10:43Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "bae23a0a96200d0ece436a646cceb68a50511f37",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +71,75 @@\n  // TODO(RC): Do we need a clone here? The package store contains mutable state.\n  private val packages = packages0\n\n  override def ledgerEntries(offset: Option[Long]): Source[(Long, LedgerEntry), NotUsed] ="
  }
]