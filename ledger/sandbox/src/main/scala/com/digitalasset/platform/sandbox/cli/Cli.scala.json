[
  {
    "id" : "fbd93d4e-2567-473f-a966-3683ded6f140",
    "prId" : 6206,
    "comments" : [
      {
        "id" : "62aefb52-04e9-4fd8-acd6-12d2da08b705",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I’ve removed the `configured with TimeService through gRPC` part since I don’t think that’s helpful in any way. Happy to add it back if you disagree.",
        "createdAt" : "2020-06-03T09:18:32Z",
        "updatedAt" : "2020-06-03T09:18:33Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c02e0249057a81d7c2101b2bb25d7fe69a67a33a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +78,82 @@          setTimeProviderType(c, TimeProviderType.Static)\n        }\n        .text(\"Use static time. When not specified, wall-clock-time is used.\")\n\n      opt[Unit]('w', \"wall-clock-time\")"
  },
  {
    "id" : "82b9b8c3-f9e7-4859-830e-bc437cf90b2a",
    "prId" : 6093,
    "comments" : [
      {
        "id" : "78576391-6764-4604-bb3a-19140649a761",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This is a breaking change. Can we support both and only emit a warning for the old syntax?",
        "createdAt" : "2020-05-25T16:25:32Z",
        "updatedAt" : "2020-05-27T08:19:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6f9410d8-c2dd-422a-89f8-31bc5e535e18",
        "parentId" : "78576391-6764-4604-bb3a-19140649a761",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Yes, fixed that. What's our process for deprecating command-line parameters?",
        "createdAt" : "2020-05-26T17:03:14Z",
        "updatedAt" : "2020-05-27T08:19:55Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "aacd77ca8257366b04976b8ce94ed987f489d655",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +138,142 @@              Some(c.copy(clientAuth = clientAuth)))))\n\n      opt[Int](\"max-inbound-message-size\")\n        .action((x, c) => c.copy(maxInboundMessageSize = x))\n        .text("
  },
  {
    "id" : "32af6076-b878-4421-b486-10c6fba03137",
    "prId" : 6093,
    "comments" : [
      {
        "id" : "8f843659-4b88-4c23-a6de-5cdadc0b1c07",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Please only add a deprecation message to the help text and introduce a new option. This is to avoid breaking existing scripts.",
        "createdAt" : "2020-05-25T16:33:25Z",
        "updatedAt" : "2020-05-27T08:19:55Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "69a58765-177f-453e-ad70-2a62b2e4246a",
        "parentId" : "8f843659-4b88-4c23-a6de-5cdadc0b1c07",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Done.",
        "createdAt" : "2020-05-26T17:03:24Z",
        "updatedAt" : "2020-05-27T08:19:55Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "aacd77ca8257366b04976b8ce94ed987f489d655",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +138,142 @@              Some(c.copy(clientAuth = clientAuth)))))\n\n      opt[Int](\"max-inbound-message-size\")\n        .action((x, c) => c.copy(maxInboundMessageSize = x))\n        .text("
  },
  {
    "id" : "de759cb2-3560-4f4f-9383-32da3d83a830",
    "prId" : 4965,
    "comments" : [
      {
        "id" : "4d0faa26-74fe-4045-9c06-00f7a12063b1",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I don’t care that much about the CLI format here but this was the most reasonable option that I came up with.",
        "createdAt" : "2020-03-12T12:41:33Z",
        "updatedAt" : "2020-03-12T13:12:08Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "59b7325303e5e2cf6701f6caa0c71402f7460bff",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +37,41 @@  }\n\n  private implicit val clientAuthRead: Read[ClientAuth] = Read.reads {\n    case \"none\" => ClientAuth.NONE\n    case \"optional\" => ClientAuth.OPTIONAL"
  },
  {
    "id" : "d5659c50-7488-4fe2-92a3-28155aeb96b2",
    "prId" : 4930,
    "comments" : [
      {
        "id" : "3704d00f-15a8-4088-b17e-4756dc653ad4",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Hmmm… we _are_ changing the CLI switches, so I do think a changelog entry is in order now. People might be using them.",
        "createdAt" : "2020-03-11T11:10:37Z",
        "updatedAt" : "2020-03-11T12:32:00Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b11efa7bbae73685e0ab13521cd59b4d6f96b5db",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +184,188 @@                .valueOr(err => sys.error(s\"Failed to create RSA256 verifier: $err\"))))))\n\n      opt[String](\"auth-jwt-es256-crt\")\n        .optional()\n        .validate(v =>"
  },
  {
    "id" : "138dec89-c4b9-4ca0-8525-48d1b636dc53",
    "prId" : 3526,
    "comments" : [
      {
        "id" : "c88cf3e4-9ca5-41bc-b4e2-e5b6346f1d3b",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "There is a bit of inconsistency here:\r\n* the CLI option uses `crt` for certificate\r\n* The validation error uses `Public key file`\r\n* And the long text says X509 certificate file\r\n\r\nShould this file contain the certificate or the public key?\r\nI don't know what would be more common to \"encounter\" in the wild.",
        "createdAt" : "2019-11-19T16:16:38Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "834aa7b7-c281-4661-8be3-409b45745bfa",
        "parentId" : "c88cf3e4-9ca5-41bc-b4e2-e5b6346f1d3b",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "I have renamed the method name and some strings to be more consistent.\r\n\r\nAs to which one is more common. I have no actual experience with this, but here is what the internet has told me:\r\n\r\nThere are several common formats that include RSA key information:\r\n- [PKCS#1](https://en.wikipedia.org/wiki/PKCS_1): contains public key information\r\n- [X.509](https://en.wikipedia.org/wiki/X.509): contains public key information and also additional info like issuer or a signature of the public key\r\n- [PKCS#8](https://en.wikipedia.org/wiki/PKCS_8): contains private key information\r\n\r\nThere are two ways to serialize the above:\r\n- [DER](https://en.wikipedia.org/wiki/X.690#DER_encoding), a binary format\r\n- [PEM](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail), a text format. Basically a base64 encoded version of a DER file, with a header of the form:\r\n  - `----BEGIN CERTIFICATE----` for X.509 data (`Certificate` structure)\r\n  - `----BEGIN PUBLIC KEY----` for X.509 data (`SubjectPublicKeyInfo` structure, which is [a subset of the above](https://en.wikipedia.org/wiki/X.509#Structure_of_a_certificate))\r\n  - `----BEGIN RSA PUBLIC KEY----` for PKCS#1 data\r\n  - `----BEGIN PRIVATE KEY----` for PKCS#8 data\r\n  - [... a dozen other things](https://stackoverflow.com/a/5356351/2289701)\r\n\r\nFile extensions [tell you very little about the content of the file](https://support.ssl.com/Knowledgebase/Article/View/19/0/der-vs-crt-vs-cer-vs-pem-certificates-and-how-to-convert-them).\r\n\r\nCurrently, the `--auth-jwt-rs256-crt` sandbox option supports X.509 (the `Certificate` kind, not the `SubjectPublicKeyInfo` kind) in both PEM and DER encoding.",
        "createdAt" : "2019-11-20T08:55:23Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "af4dc812-90c5-45b1-b05b-4ef6658d985e",
        "parentId" : "c88cf3e4-9ca5-41bc-b4e2-e5b6346f1d3b",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Thanks 👍 ",
        "createdAt" : "2019-11-21T10:58:30Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "05954a0b4045904a799d2c604ce9a266692d6a07",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +163,167 @@      .action( (secret, config) => config.copy(authService = Some(AuthServiceJWT(HMAC256Verifier(secret).valueOr(err => sys.error(s\"Failed to create HMAC256 verifier: $err\"))))))\n\n    opt[String](\"auth-jwt-rs256-crt\")\n      .optional()\n      .validate(v => Either.cond(v.length > 0, (), \"Certificate file path must be a non-empty string\"))"
  },
  {
    "id" : "afa3d845-2b11-4edd-858c-50c83a4f992c",
    "prId" : 1835,
    "comments" : [
      {
        "id" : "9da20b37-316b-41ef-86c3-e4b7687d27fe",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "what happens when it's none of these?",
        "createdAt" : "2019-06-26T09:23:24Z",
        "updatedAt" : "2019-06-27T15:27:04Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c5e06bea-e134-4b23-86cf-a6526c21153a",
        "parentId" : "9da20b37-316b-41ef-86c3-e4b7687d27fe",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "minor comment on formatting: I very much agree with this style, but this could be configured as the style scalafmt formats to, which we used to have before open-sourcing. I find it silly to disable formatting just so we can achieve what we had before **with** formatting. cc @francesco-da ",
        "createdAt" : "2019-06-26T09:28:57Z",
        "updatedAt" : "2019-06-27T15:27:04Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "18596964-de00-4173-9c70-f667c5b5f704",
        "parentId" : "9da20b37-316b-41ef-86c3-e4b7687d27fe",
        "author" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "body" : "Added an explicit handling of this case. Previously it would be handled implicitly by scopt with a less-than-helpful error message.",
        "createdAt" : "2019-06-27T08:22:39Z",
        "updatedAt" : "2019-06-27T15:27:04Z",
        "lastEditedBy" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "95b0dcf3-b750-40e0-b9a1-968d8fcaabe6",
        "parentId" : "9da20b37-316b-41ef-86c3-e4b7687d27fe",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "@gerolf-da please mind my comment on formatting above",
        "createdAt" : "2019-06-28T08:34:47Z",
        "updatedAt" : "2019-06-28T08:34:47Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "aa80afa638e4cc73092c063ef31ae1da6d7bcb92",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +38,42 @@        case \"DEBUG\" | \"debug\" => Level.DEBUG\n        case \"WARN\"  | \"warn\"  => Level.WARN\n        case \"ERROR\" | \"error\" => Level.ERROR\n        case _                 => throw new IllegalArgumentException(s\"Unrecognized logging level $logLevel\")\n      }"
  },
  {
    "id" : "27692da0-f03c-4a41-ae70-1868152fdf8b",
    "prId" : 1835,
    "comments" : [
      {
        "id" : "86b2c1e2-17f0-41c9-a6e1-5449be4b0c17",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "an alternative and less involved way of doing this would be:\r\n\r\n```\r\nval knownLevels = Set(\"ERROR\", \"WARN\", \"INFO\", \"DEBUG\", \"TRACE\")\r\n// ...\r\nopt[String](\"log-level\")\r\n      .optional()\r\n      .validate(l => if (knownLevels.contains(l.toUpperCase) success else failure(s\"Unrecogized logging level $l\"))\r\n      .action((level, c) => c.copy(logLevel = Level.toLevel(level.toUpperCase)))\r\n```",
        "createdAt" : "2019-06-28T05:59:07Z",
        "updatedAt" : "2019-06-28T06:01:40Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "aec67b52-885f-45df-8aa1-59111c87fca8",
        "parentId" : "86b2c1e2-17f0-41c9-a6e1-5449be4b0c17",
        "author" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "body" : "@gerolf-da Is this a request to change it? I do not have strong preference here. Happy to make it both ways.",
        "createdAt" : "2019-06-28T08:10:29Z",
        "updatedAt" : "2019-06-28T08:10:29Z",
        "lastEditedBy" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7ee67351-0a47-4397-9147-5f9dc41cbad2",
        "parentId" : "86b2c1e2-17f0-41c9-a6e1-5449be4b0c17",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Sorry for being unclear. Yes, please change it. After that I'm 👍 ",
        "createdAt" : "2019-06-28T08:12:36Z",
        "updatedAt" : "2019-06-28T08:12:36Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "aa80afa638e4cc73092c063ef31ae1da6d7bcb92",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +29,33 @@  }\n\n  private implicit val levelRead: Read[Level] = new Read[Level] {\n    override def arity: Int = 1\n    override val reads: String => Level = (logLevel: String) => {"
  },
  {
    "id" : "95231cd1-b890-49a1-851a-819ff0a58599",
    "prId" : 1105,
    "comments" : [
      {
        "id" : "609a2f96-3f4f-401b-a705-9e21ecda9590",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "Please change the SandboxFixture part where this one is still used. Also, please add a test case in `CliSpec`!",
        "createdAt" : "2019-05-13T14:47:40Z",
        "updatedAt" : "2019-05-14T09:16:28Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b6d4cab7-faa2-43e2-970b-63e3d2ce5cc1",
        "parentId" : "609a2f96-3f4f-401b-a705-9e21ecda9590",
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "the `SandboxFixture` uses the config directly. I've amended `CliSpec`.",
        "createdAt" : "2019-05-14T07:23:34Z",
        "updatedAt" : "2019-05-14T09:16:28Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6d81164920cc6c9affc0286dc658e1a78e9b981e",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +104,108 @@    opt[String](\"jdbcurl\")\n      .optional()\n      .text(\"This flag is deprecated -- please use --sql-backend-jdbcurl.\")\n      .action((url, config) => config.copy(jdbcUrl = Some(url)))\n"
  },
  {
    "id" : "73837ec6-e2d1-4650-b1e8-5854ad01af83",
    "prId" : 668,
    "comments" : [
      {
        "id" : "177715ef-1126-45cc-935d-177f6282313c",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "NB: `--allow-dev` is being removed, see #681 for details.",
        "createdAt" : "2019-04-26T16:12:26Z",
        "updatedAt" : "2019-04-26T16:12:27Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2947cafe20480cf6ac32705c79e05ba04cad0568",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +108,112 @@\n    opt[Unit](\"allow-dev\")\n      .hidden()\n      .action { (_, c) =>\n        c.copy(damlPackageContainer = c.damlPackageContainer.allowDev)"
  }
]