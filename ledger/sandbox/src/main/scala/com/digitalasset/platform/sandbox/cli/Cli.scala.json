[
  {
    "id" : "6b720153-ebdc-470a-9573-d17bdfe7273f",
    "prId" : 6512,
    "comments" : [
      {
        "id" : "81482e65-2302-4839-9e73-f3896f0d031b",
        "parentId" : null,
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Is this text correct? It reads very odd.",
        "createdAt" : "2020-06-29T12:21:58Z",
        "updatedAt" : "2020-06-29T12:47:24Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "86345709-4524-4bea-bddd-3e3cabec1259",
        "parentId" : "81482e65-2302-4839-9e73-f3896f0d031b",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "perhaps: `\"Enable/Disable stack traces. Default is to enable them.\"`",
        "createdAt" : "2020-06-29T12:23:57Z",
        "updatedAt" : "2020-06-29T12:47:24Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e397f3c9-55e5-4769-affa-b8d17bdcb47a",
        "parentId" : "81482e65-2302-4839-9e73-f3896f0d031b",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Good idea. Thanks.",
        "createdAt" : "2020-06-29T12:46:40Z",
        "updatedAt" : "2020-06-29T12:47:24Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "84f09b9c-f7ce-4c04-9180-a8b2b880547c",
        "parentId" : "81482e65-2302-4839-9e73-f3896f0d031b",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n        .text(\"Enable/disable stack traces. Default is to enable them.\")\r\n```",
        "createdAt" : "2020-06-29T12:47:11Z",
        "updatedAt" : "2020-06-29T12:47:24Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9ec8a59682399aa5dbac069527e4e9a52cdeb4e7",
    "line" : null,
    "diffHunk" : "@@ -303,6 +303,12 @@ object Cli {\n         .action((dir, config) => config.copy(profileDir = Some(dir.toPath)))\n         .text(\"Enable profiling and write the profiles into the given directory.\")\n \n+      opt[Boolean](\"stack-traces\")\n+        .hidden()\n+        .optional()\n+        .action((enabled, config) => config.copy(stackTraces = enabled))\n+        .text(\"Enable stack traces. Default is to enable them.\")"
  },
  {
    "id" : "1b164315-88a0-4339-a1ff-9c527cee35de",
    "prId" : 6211,
    "comments" : [
      {
        "id" : "04f3bbd1-3e10-41a1-8b98-3ccf604a71e3",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "```suggestion\r\n        .text(\"Maximum number of successfully interpreted commands waiting to be sequenced (applied only when running sandbox-classic). The threshold is shared across all parties. Overflowing it will cause back-pressure, signaled by a RESOURCE_EXHAUSTED error code. Default is 512.\")\r\n```",
        "createdAt" : "2020-06-03T14:50:02Z",
        "updatedAt" : "2020-06-03T14:50:54Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2c7480b649780b117148cf521f58e135a4e1cd4a",
    "line" : null,
    "diffHunk" : "@@ -266,14 +266,19 @@ object Cli {\n         .optional()\n         .action((value, config) =>\n           config.copy(commandConfig = config.commandConfig.copy(maxCommandsInFlight = value)))\n-        .text(\"The maximum number of unconfirmed commands in flight in CommandService.\")\n+        .text(\"Maximum number of submitted commands waiting for completion for each party (only applied when using the CommandService). Overflowing this threshold will cause back-pressure, signaled by a RESOURCE_EXHAUSTED error code. Default is 256.\")\n \n       opt[Int](\"max-parallel-submissions\")\n         .optional()\n         .action((value, config) =>\n           config.copy(commandConfig = config.commandConfig.copy(maxParallelSubmissions = value)))\n-        .text(\n-          \"The maximum number of parallel command submissions. Only applicable to sandbox-classic.\")\n+        .text(\"Maximum number of successfully interpreted commands waiting to be sequenced (applied only when running sandbox-classic). The threshold is shared across all parties, overflowing it will cause back-pressure, signaled by a RESOURCE_EXHAUSTED error code. Default is 512.\")"
  },
  {
    "id" : "e44b5516-f522-46e7-9f31-bdb4d5dd57f6",
    "prId" : 6206,
    "comments" : [
      {
        "id" : "e8d7be07-ef34-4aa7-a6a0-f344dd0dafde",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I’ve removed the `configured with TimeService through gRPC` part since I don’t think that’s helpful in any way. Happy to add it back if you disagree.",
        "createdAt" : "2020-06-03T09:18:32Z",
        "updatedAt" : "2020-06-03T09:18:33Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c02e0249057a81d7c2101b2bb25d7fe69a67a33a",
    "line" : 5,
    "diffHunk" : "@@ -77,13 +77,13 @@ object Cli {\n         .action { (_, c) =>\n           setTimeProviderType(c, TimeProviderType.Static)\n         }\n-        .text(\"Use static time, configured with TimeService through gRPC.\")\n+        .text(\"Use static time. When not specified, wall-clock-time is used.\")"
  },
  {
    "id" : "50738586-f492-421d-8dfe-4bc76a2f1ca0",
    "prId" : 6093,
    "comments" : [
      {
        "id" : "85b4a231-832a-4e14-b1dc-fa67e2961da0",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This is a breaking change. Can we support both and only emit a warning for the old syntax?",
        "createdAt" : "2020-05-25T16:25:32Z",
        "updatedAt" : "2020-05-27T08:19:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ed98eee3-116b-419f-b73e-1528e34db01f",
        "parentId" : "85b4a231-832a-4e14-b1dc-fa67e2961da0",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Yes, fixed that. What's our process for deprecating command-line parameters?",
        "createdAt" : "2020-05-26T17:03:14Z",
        "updatedAt" : "2020-05-27T08:19:55Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "aacd77ca8257366b04976b8ce94ed987f489d655",
    "line" : 5,
    "diffHunk" : "@@ -137,7 +137,7 @@ object Cli {\n             .fold(Some(TlsConfiguration(enabled = true, None, None, None, clientAuth)))(c =>\n               Some(c.copy(clientAuth = clientAuth)))))\n \n-      opt[Int](\"maxInboundMessageSize\")\n+      opt[Int](\"max-inbound-message-size\")"
  },
  {
    "id" : "0fd65472-4128-462f-8c98-17d5504f2ec6",
    "prId" : 6093,
    "comments" : [
      {
        "id" : "721409ff-4d73-43d8-b916-644961e638ff",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Please only add a deprecation message to the help text and introduce a new option. This is to avoid breaking existing scripts.",
        "createdAt" : "2020-05-25T16:33:25Z",
        "updatedAt" : "2020-05-27T08:19:55Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f1192328-5bb8-4aba-9de0-8f4c6aaa8e23",
        "parentId" : "721409ff-4d73-43d8-b916-644961e638ff",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Done.",
        "createdAt" : "2020-05-26T17:03:24Z",
        "updatedAt" : "2020-05-27T08:19:55Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "aacd77ca8257366b04976b8ce94ed987f489d655",
    "line" : 5,
    "diffHunk" : "@@ -137,7 +137,7 @@ object Cli {\n             .fold(Some(TlsConfiguration(enabled = true, None, None, None, clientAuth)))(c =>\n               Some(c.copy(clientAuth = clientAuth)))))\n \n-      opt[Int](\"maxInboundMessageSize\")\n+      opt[Int](\"max-inbound-message-size\")"
  },
  {
    "id" : "2cf81d93-0254-49dc-a02d-df46f07da700",
    "prId" : 4965,
    "comments" : [
      {
        "id" : "181d74bb-465e-4594-8e67-4c93c1e1c332",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I don’t care that much about the CLI format here but this was the most reasonable option that I came up with.",
        "createdAt" : "2020-03-12T12:41:33Z",
        "updatedAt" : "2020-03-12T13:12:08Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "59b7325303e5e2cf6701f6caa0c71402f7460bff",
    "line" : 12,
    "diffHunk" : "@@ -35,6 +36,15 @@ object Cli {\n     override val reads: String => Duration = Duration.parse\n   }\n \n+  private implicit val clientAuthRead: Read[ClientAuth] = Read.reads {"
  },
  {
    "id" : "eb1b7a89-8949-4f58-8956-522ddbdb75e3",
    "prId" : 4930,
    "comments" : [
      {
        "id" : "6e8ec36d-4903-428d-afe0-6abb072d6c62",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Hmmm… we _are_ changing the CLI switches, so I do think a changelog entry is in order now. People might be using them.",
        "createdAt" : "2020-03-11T11:10:37Z",
        "updatedAt" : "2020-03-11T12:32:00Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b11efa7bbae73685e0ab13521cd59b4d6f96b5db",
    "line" : 5,
    "diffHunk" : "@@ -183,7 +183,7 @@ object Cli {\n                 .fromCrtFile(path)\n                 .valueOr(err => sys.error(s\"Failed to create RSA256 verifier: $err\"))))))\n \n-      opt[String](\"auth-jwt-ec256-crt\")\n+      opt[String](\"auth-jwt-es256-crt\")"
  },
  {
    "id" : "79fa61ba-62de-4f34-8469-a1801de09914",
    "prId" : 4864,
    "comments" : [
      {
        "id" : "97d191fc-7141-4106-8817-efd2cbb04823",
        "parentId" : null,
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "This seems quite aggressive. How about\r\n```suggestion\r\n        \"If set, the sandbox will execute the given scenario on startup and store all the contracts created by it.  (deprecated)\" +\r\n```",
        "createdAt" : "2020-03-06T13:33:55Z",
        "updatedAt" : "2020-03-06T17:01:27Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c55589427ad3d3ec81d819d1df58ad8d5bd67d75",
    "line" : null,
    "diffHunk" : "@@ -87,7 +87,7 @@ object Cli {\n     opt[String](name = \"scenario\")\n       .action((x, c) => c.copy(scenario = Some(x)))\n       .text(\n-        \"If set, the sandbox will execute the given scenario on startup and store all the contracts created by it. \" +\n+        \"DEPRECATED! If set, the sandbox will execute the given scenario on startup and store all the contracts created by it. \" +"
  },
  {
    "id" : "3ac93e6b-5860-4911-8c67-f47a2c4560e0",
    "prId" : 4557,
    "comments" : [
      {
        "id" : "ebb9affa-f3c9-4385-bad8-e8c1549778d8",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Please keep it hidden, as it is more a flag for us to be able to toggle it, but not intended to be used by end users.",
        "createdAt" : "2020-02-18T10:17:12Z",
        "updatedAt" : "2020-02-18T12:09:06Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1a3b8f47-b07a-44b6-aa27-2b74aca4ccdc",
        "parentId" : "ebb9affa-f3c9-4385-bad8-e8c1549778d8",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "done.",
        "createdAt" : "2020-02-18T10:18:23Z",
        "updatedAt" : "2020-02-18T12:09:06Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7b9b745fb4ebbb2ca9ebffb30612f19afcf976e0",
    "line" : null,
    "diffHunk" : "@@ -193,9 +193,8 @@ object Cli {\n       .action( (url, config) => config.copy(authService = Some(AuthServiceJWT(JwksVerifier(url)))))\n \n     opt[Unit](\"sortable-contract-ids\")\n-      .hidden()"
  },
  {
    "id" : "7801e570-4a7d-4592-98b2-1143b67a443d",
    "prId" : 4533,
    "comments" : [
      {
        "id" : "64005518-b9c8-4796-97a4-47e836b87d0f",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "rename to `sortable-contractids`.",
        "createdAt" : "2020-02-17T09:29:59Z",
        "updatedAt" : "2020-02-17T12:34:30Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ea257a0a-3d24-41c6-bc55-b55cb8f9cf3d",
        "parentId" : "64005518-b9c8-4796-97a4-47e836b87d0f",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I'd also say we should make it `hidden()` and only ask early voluntary users to turn it on. No need to surface it in the CLI.",
        "createdAt" : "2020-02-17T09:31:13Z",
        "updatedAt" : "2020-02-17T12:34:30Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ce761768-4bef-4cc7-af76-1398c4864f8c",
        "parentId" : "64005518-b9c8-4796-97a4-47e836b87d0f",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Fixed. Fixed",
        "createdAt" : "2020-02-17T09:50:46Z",
        "updatedAt" : "2020-02-17T12:34:30Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "69e42150daf521f93631ef81bea5b8b2314d7beb",
    "line" : null,
    "diffHunk" : "@@ -192,6 +192,11 @@ object Cli {\n       .text(\"Enables JWT-based authorization, where the JWT is signed by RSA256 with a public key loaded from the given JWKS URL\")\n       .action( (url, config) => config.copy(authService = Some(AuthServiceJWT(JwksVerifier(url)))))\n \n+    opt[Unit](\"sortable-ci\")"
  },
  {
    "id" : "b33be77b-c19c-402a-8212-4df4b2b0c06c",
    "prId" : 3526,
    "comments" : [
      {
        "id" : "0dcc7f8e-1483-40c1-8b71-ec5b0c9f6d4f",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "There is a bit of inconsistency here:\r\n* the CLI option uses `crt` for certificate\r\n* The validation error uses `Public key file`\r\n* And the long text says X509 certificate file\r\n\r\nShould this file contain the certificate or the public key?\r\nI don't know what would be more common to \"encounter\" in the wild.",
        "createdAt" : "2019-11-19T16:16:38Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0a044dda-3b8f-4ccf-a3d0-2338a607e374",
        "parentId" : "0dcc7f8e-1483-40c1-8b71-ec5b0c9f6d4f",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "I have renamed the method name and some strings to be more consistent.\r\n\r\nAs to which one is more common. I have no actual experience with this, but here is what the internet has told me:\r\n\r\nThere are several common formats that include RSA key information:\r\n- [PKCS#1](https://en.wikipedia.org/wiki/PKCS_1): contains public key information\r\n- [X.509](https://en.wikipedia.org/wiki/X.509): contains public key information and also additional info like issuer or a signature of the public key\r\n- [PKCS#8](https://en.wikipedia.org/wiki/PKCS_8): contains private key information\r\n\r\nThere are two ways to serialize the above:\r\n- [DER](https://en.wikipedia.org/wiki/X.690#DER_encoding), a binary format\r\n- [PEM](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail), a text format. Basically a base64 encoded version of a DER file, with a header of the form:\r\n  - `----BEGIN CERTIFICATE----` for X.509 data (`Certificate` structure)\r\n  - `----BEGIN PUBLIC KEY----` for X.509 data (`SubjectPublicKeyInfo` structure, which is [a subset of the above](https://en.wikipedia.org/wiki/X.509#Structure_of_a_certificate))\r\n  - `----BEGIN RSA PUBLIC KEY----` for PKCS#1 data\r\n  - `----BEGIN PRIVATE KEY----` for PKCS#8 data\r\n  - [... a dozen other things](https://stackoverflow.com/a/5356351/2289701)\r\n\r\nFile extensions [tell you very little about the content of the file](https://support.ssl.com/Knowledgebase/Article/View/19/0/der-vs-crt-vs-cer-vs-pem-certificates-and-how-to-convert-them).\r\n\r\nCurrently, the `--auth-jwt-rs256-crt` sandbox option supports X.509 (the `Certificate` kind, not the `SubjectPublicKeyInfo` kind) in both PEM and DER encoding.",
        "createdAt" : "2019-11-20T08:55:23Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "aeb786d8-36a2-45c3-890f-5fb2361d298c",
        "parentId" : "0dcc7f8e-1483-40c1-8b71-ec5b0c9f6d4f",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Thanks 👍 ",
        "createdAt" : "2019-11-21T10:58:30Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "05954a0b4045904a799d2c604ce9a266692d6a07",
    "line" : 16,
    "diffHunk" : "@@ -159,7 +159,19 @@ object Cli {\n       .optional()\n       .validate(v => Either.cond(v.length > 0, (), \"HMAC secret must be a non-empty string\"))\n       .text(\"Enables JWT-based authorization, where the JWT is signed by HMAC256 with the given secret\")\n-      .action( (secret, config) => config.copy(authService = Some(AuthServiceJWT(HMAC256Verifier(secret).getOrElse(sys.error(\"Failed to create HMAC256 verifier\"))))))\n+      .action( (secret, config) => config.copy(authService = Some(AuthServiceJWT(HMAC256Verifier(secret).valueOr(err => sys.error(s\"Failed to create HMAC256 verifier: $err\"))))))\n+\n+    opt[String](\"auth-jwt-rs256-crt\")"
  },
  {
    "id" : "e2af702d-cbc9-4c12-b4d8-c832df562aca",
    "prId" : 1835,
    "comments" : [
      {
        "id" : "733d9cd8-a46e-4942-9ae6-a6eccbb93b8a",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "what happens when it's none of these?",
        "createdAt" : "2019-06-26T09:23:24Z",
        "updatedAt" : "2019-06-27T15:27:04Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1cea6257-e93a-4817-9c04-358508662a6d",
        "parentId" : "733d9cd8-a46e-4942-9ae6-a6eccbb93b8a",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "minor comment on formatting: I very much agree with this style, but this could be configured as the style scalafmt formats to, which we used to have before open-sourcing. I find it silly to disable formatting just so we can achieve what we had before **with** formatting. cc @francesco-da ",
        "createdAt" : "2019-06-26T09:28:57Z",
        "updatedAt" : "2019-06-27T15:27:04Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "569033b0-feb2-4787-813f-dda037ea07d0",
        "parentId" : "733d9cd8-a46e-4942-9ae6-a6eccbb93b8a",
        "author" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "body" : "Added an explicit handling of this case. Previously it would be handled implicitly by scopt with a less-than-helpful error message.",
        "createdAt" : "2019-06-27T08:22:39Z",
        "updatedAt" : "2019-06-27T15:27:04Z",
        "lastEditedBy" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1f4209e0-c405-41e6-881f-564c207aa71f",
        "parentId" : "733d9cd8-a46e-4942-9ae6-a6eccbb93b8a",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "@gerolf-da please mind my comment on formatting above",
        "createdAt" : "2019-06-28T08:34:47Z",
        "updatedAt" : "2019-06-28T08:34:47Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "aa80afa638e4cc73092c063ef31ae1da6d7bcb92",
    "line" : 29,
    "diffHunk" : "@@ -28,6 +28,21 @@ object Cli {\n     override val reads: String => Duration = Duration.parse\n   }\n \n+  private implicit val levelRead: Read[Level] = new Read[Level] {\n+    override def arity: Int = 1\n+    override val reads: String => Level = (logLevel: String) => {\n+      // format: off\n+      logLevel match {\n+        case \"INFO\"  | \"info\"  => Level.INFO\n+        case \"TRACE\" | \"trace\" => Level.TRACE\n+        case \"DEBUG\" | \"debug\" => Level.DEBUG\n+        case \"WARN\"  | \"warn\"  => Level.WARN\n+        case \"ERROR\" | \"error\" => Level.ERROR"
  },
  {
    "id" : "d8b30b72-fcc7-4552-9cf7-34e8f16d7349",
    "prId" : 1835,
    "comments" : [
      {
        "id" : "f29f4a6c-c2c4-4493-bb03-437717732e9e",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "an alternative and less involved way of doing this would be:\r\n\r\n```\r\nval knownLevels = Set(\"ERROR\", \"WARN\", \"INFO\", \"DEBUG\", \"TRACE\")\r\n// ...\r\nopt[String](\"log-level\")\r\n      .optional()\r\n      .validate(l => if (knownLevels.contains(l.toUpperCase) success else failure(s\"Unrecogized logging level $l\"))\r\n      .action((level, c) => c.copy(logLevel = Level.toLevel(level.toUpperCase)))\r\n```",
        "createdAt" : "2019-06-28T05:59:07Z",
        "updatedAt" : "2019-06-28T06:01:40Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c970ac07-58cc-451c-ac7d-a965ba3936ec",
        "parentId" : "f29f4a6c-c2c4-4493-bb03-437717732e9e",
        "author" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "body" : "@gerolf-da Is this a request to change it? I do not have strong preference here. Happy to make it both ways.",
        "createdAt" : "2019-06-28T08:10:29Z",
        "updatedAt" : "2019-06-28T08:10:29Z",
        "lastEditedBy" : {
          "login" : "gleber-da",
          "name" : "gleber",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/34243031?u=682c8d513afbef14cd3f71d93040a37500b5b2d0&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0f1210d9-69e3-4c96-bf36-9ba0440483a7",
        "parentId" : "f29f4a6c-c2c4-4493-bb03-437717732e9e",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Sorry for being unclear. Yes, please change it. After that I'm 👍 ",
        "createdAt" : "2019-06-28T08:12:36Z",
        "updatedAt" : "2019-06-28T08:12:36Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "aa80afa638e4cc73092c063ef31ae1da6d7bcb92",
    "line" : 20,
    "diffHunk" : "@@ -28,6 +28,22 @@ object Cli {\n     override val reads: String => Duration = Duration.parse\n   }\n \n+  private implicit val levelRead: Read[Level] = new Read[Level] {"
  },
  {
    "id" : "8b64735e-40cd-4812-8b43-61787ab23f3f",
    "prId" : 1105,
    "comments" : [
      {
        "id" : "068bc451-f6df-4fde-bee1-9cbdbe0b4a13",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "Please change the SandboxFixture part where this one is still used. Also, please add a test case in `CliSpec`!",
        "createdAt" : "2019-05-13T14:47:40Z",
        "updatedAt" : "2019-05-14T09:16:28Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "97981259-06b1-4d6a-bc69-2cf0e657356b",
        "parentId" : "068bc451-f6df-4fde-bee1-9cbdbe0b4a13",
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "the `SandboxFixture` uses the config directly. I've amended `CliSpec`.",
        "createdAt" : "2019-05-14T07:23:34Z",
        "updatedAt" : "2019-05-14T09:16:28Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6d81164920cc6c9affc0286dc658e1a78e9b981e",
    "line" : 15,
    "diffHunk" : "@@ -102,7 +103,12 @@ object Cli {\n \n     opt[String](\"jdbcurl\")\n       .optional()\n-      .text(\"The JDBC connection URL to a Postgres database containing the username and password as well. If missing the Sandbox will use an in memory store.\")\n+      .text(\"This flag is deprecated -- please use --sql-backend-jdbcurl.\")"
  },
  {
    "id" : "369683ea-48dc-419a-8e52-164bbf3c1083",
    "prId" : 722,
    "comments" : [
      {
        "id" : "0e7ccd29-216b-4e7c-8b1a-f2aa283d1d1f",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "@bitonic FYI",
        "createdAt" : "2019-04-26T10:21:10Z",
        "updatedAt" : "2019-04-29T12:44:39Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "887aff80-5f51-455f-8f21-d966659321fe",
        "parentId" : "0e7ccd29-216b-4e7c-8b1a-f2aa283d1d1f",
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : ":+1: ",
        "createdAt" : "2019-04-29T08:16:11Z",
        "updatedAt" : "2019-04-29T12:44:39Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "af578f527d06dd80e63a5b53c815548675b05bd8",
    "line" : 4,
    "diffHunk" : "@@ -102,7 +102,6 @@ object Cli {\n \n     opt[String](\"jdbcurl\")\n       .optional()\n-      .hidden()"
  },
  {
    "id" : "2566633a-7b9d-49af-afd2-df7aecc91356",
    "prId" : 668,
    "comments" : [
      {
        "id" : "fb5faf49-1ffe-494f-8c53-1e8775602753",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "NB: `--allow-dev` is being removed, see #681 for details.",
        "createdAt" : "2019-04-26T16:12:26Z",
        "updatedAt" : "2019-04-26T16:12:27Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2947cafe20480cf6ac32705c79e05ba04cad0568",
    "line" : 58,
    "diffHunk" : "@@ -108,6 +107,7 @@ object Cli {\n       .action((url, config) => config.copy(jdbcUrl = Some(url)))\n \n     opt[Unit](\"allow-dev\")\n+      .hidden()"
  }
]