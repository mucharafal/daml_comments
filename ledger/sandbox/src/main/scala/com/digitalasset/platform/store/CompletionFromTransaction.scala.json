[
  {
    "id" : "7da3b25f-de2d-430e-8a88-842d6703ae01",
    "prId" : 4675,
    "comments" : [
      {
        "id" : "d12fd531-747d-4a00-8c30-bacc46e6e9cc",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Seems unnecessary to import these twice. (Or at all; I'd prefer prefixing them.)",
        "createdAt" : "2020-02-24T17:26:06Z",
        "updatedAt" : "2020-02-24T17:42:34Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "cae975d6-b0ec-4bf4-837a-2d468f340e8a",
        "parentId" : "d12fd531-747d-4a00-8c30-bacc46e6e9cc",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "`scalafmt` puts newlines that can reduce the readability but I'll do this, if we don't like it we can always turn back, thanks.",
        "createdAt" : "2020-02-24T17:33:10Z",
        "updatedAt" : "2020-02-24T17:42:34Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a8513d77-45c0-4482-bd4d-6cbf86022a9a",
        "parentId" : "d12fd531-747d-4a00-8c30-bacc46e6e9cc",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/4675/commits/7cedc01cfb3513928288f672123e578ed0d6f4a8",
        "createdAt" : "2020-02-24T17:42:45Z",
        "updatedAt" : "2020-02-24T17:42:45Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "69d2c05532d6197301717fba2a458b909a855af8",
    "line" : null,
    "diffHunk" : "@@ -3,29 +3,68 @@\n \n package com.digitalasset.platform.store\n \n+import java.time.Instant\n+\n import com.daml.ledger.participant.state.v1.TransactionId\n+import com.digitalasset.api.util.TimestampConversion.fromInstant\n import com.digitalasset.daml.lf.data.Ref\n import com.digitalasset.ledger.{ApplicationId, CommandId}\n import com.digitalasset.ledger.api.domain\n-import com.digitalasset.ledger.api.domain.CompletionEvent\n-import com.digitalasset.ledger.api.domain.CompletionEvent.{CommandAccepted, CommandRejected}\n+import com.digitalasset.ledger.api.domain.RejectionReason\n+import com.digitalasset.ledger.api.domain.RejectionReason.{\n+  Disputed,\n+  Inconsistent,\n+  OutOfQuota,\n+  PartyNotKnownOnLedger,\n+  SubmitterCannotActViaParticipant,\n+  TimedOut\n+}"
  },
  {
    "id" : "87e2d45b-19fa-4de7-9407-c593a40969cd",
    "prId" : 4675,
    "comments" : [
      {
        "id" : "186dac4d-8bfa-4d1f-99a6-791ac3eb04c5",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I would use `Some` here and lower down when it's clear it's a valid object, but not going to complain too much. I'd like to see consistency.",
        "createdAt" : "2020-02-24T17:27:08Z",
        "updatedAt" : "2020-02-24T17:42:34Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "56985464-b046-4896-a1aa-89d4ba3d755c",
        "parentId" : "186dac4d-8bfa-4d1f-99a6-791ac3eb04c5",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Makes sense, thanks.",
        "createdAt" : "2020-02-24T17:31:38Z",
        "updatedAt" : "2020-02-24T17:42:34Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2e2fdc36-07ff-42de-afac-fa8dc370e8ff",
        "parentId" : "186dac4d-8bfa-4d1f-99a6-791ac3eb04c5",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/4675/commits/69d2c05532d6197301717fba2a458b909a855af8",
        "createdAt" : "2020-02-24T17:43:12Z",
        "updatedAt" : "2020-02-24T17:43:13Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "69d2c05532d6197301717fba2a458b909a855af8",
    "line" : null,
    "diffHunk" : "@@ -3,29 +3,68 @@\n \n package com.digitalasset.platform.store\n \n+import java.time.Instant\n+\n import com.daml.ledger.participant.state.v1.TransactionId\n+import com.digitalasset.api.util.TimestampConversion.fromInstant\n import com.digitalasset.daml.lf.data.Ref\n import com.digitalasset.ledger.{ApplicationId, CommandId}\n import com.digitalasset.ledger.api.domain\n-import com.digitalasset.ledger.api.domain.CompletionEvent\n-import com.digitalasset.ledger.api.domain.CompletionEvent.{CommandAccepted, CommandRejected}\n+import com.digitalasset.ledger.api.domain.RejectionReason\n+import com.digitalasset.ledger.api.domain.RejectionReason.{\n+  Disputed,\n+  Inconsistent,\n+  OutOfQuota,\n+  PartyNotKnownOnLedger,\n+  SubmitterCannotActViaParticipant,\n+  TimedOut\n+}\n+import com.digitalasset.ledger.api.v1.command_completion_service.{\n+  Checkpoint,\n+  CompletionStreamResponse\n+}\n+import com.digitalasset.ledger.api.v1.completion.Completion\n+import com.digitalasset.ledger.api.v1.ledger_offset.LedgerOffset\n import com.digitalasset.platform.store.dao.LedgerDao\n import com.digitalasset.platform.store.entries.LedgerEntry\n+import com.google.rpc.status.Status\n+import io.grpc.Status.Code\n \n // Turn a stream of transactions into a stream of completions for a given application and set of parties\n // TODO Remove this when:\n // TODO - the participant can read completions off the index directly AND\n // TODO - the in-memory sandbox is gone\n private[platform] object CompletionFromTransaction {\n \n-  private def toApiOffset(offset: LedgerDao#LedgerOffset): domain.LedgerOffset.Absolute =\n-    domain.LedgerOffset.Absolute(Ref.LedgerString.assertFromString(offset.toString))\n+  private def toApiCheckpoint(\n+      recordedAt: Instant,\n+      offset: LedgerDao#LedgerOffset): Option[Checkpoint] =\n+    Option("
  },
  {
    "id" : "c4780120-6a93-4615-91a7-575908b4fd0d",
    "prId" : 4675,
    "comments" : [
      {
        "id" : "0eadef6c-474e-4fc8-af37-9c358155a6e1",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I think you can move the `.value()` call to the call site.",
        "createdAt" : "2020-02-24T17:27:25Z",
        "updatedAt" : "2020-02-24T17:42:34Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7b765bb3-2b05-4b21-bcd4-4b853be36559",
        "parentId" : "0eadef6c-474e-4fc8-af37-9c358155a6e1",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Ah, yes, good catch, thanks.",
        "createdAt" : "2020-02-24T17:31:48Z",
        "updatedAt" : "2020-02-24T17:42:34Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2c7cdf5e-0d94-496a-ae8a-c8a438b996c9",
        "parentId" : "0eadef6c-474e-4fc8-af37-9c358155a6e1",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/4675/commits/43dccf73f460eed53af535076097b6b51d1e601c",
        "createdAt" : "2020-02-24T17:43:00Z",
        "updatedAt" : "2020-02-24T17:43:01Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "69d2c05532d6197301717fba2a458b909a855af8",
    "line" : null,
    "diffHunk" : "@@ -3,29 +3,68 @@\n \n package com.digitalasset.platform.store\n \n+import java.time.Instant\n+\n import com.daml.ledger.participant.state.v1.TransactionId\n+import com.digitalasset.api.util.TimestampConversion.fromInstant\n import com.digitalasset.daml.lf.data.Ref\n import com.digitalasset.ledger.{ApplicationId, CommandId}\n import com.digitalasset.ledger.api.domain\n-import com.digitalasset.ledger.api.domain.CompletionEvent\n-import com.digitalasset.ledger.api.domain.CompletionEvent.{CommandAccepted, CommandRejected}\n+import com.digitalasset.ledger.api.domain.RejectionReason\n+import com.digitalasset.ledger.api.domain.RejectionReason.{\n+  Disputed,\n+  Inconsistent,\n+  OutOfQuota,\n+  PartyNotKnownOnLedger,\n+  SubmitterCannotActViaParticipant,\n+  TimedOut\n+}\n+import com.digitalasset.ledger.api.v1.command_completion_service.{\n+  Checkpoint,\n+  CompletionStreamResponse\n+}\n+import com.digitalasset.ledger.api.v1.completion.Completion\n+import com.digitalasset.ledger.api.v1.ledger_offset.LedgerOffset\n import com.digitalasset.platform.store.dao.LedgerDao\n import com.digitalasset.platform.store.entries.LedgerEntry\n+import com.google.rpc.status.Status\n+import io.grpc.Status.Code\n \n // Turn a stream of transactions into a stream of completions for a given application and set of parties\n // TODO Remove this when:\n // TODO - the participant can read completions off the index directly AND\n // TODO - the in-memory sandbox is gone\n private[platform] object CompletionFromTransaction {\n \n-  private def toApiOffset(offset: LedgerDao#LedgerOffset): domain.LedgerOffset.Absolute =\n-    domain.LedgerOffset.Absolute(Ref.LedgerString.assertFromString(offset.toString))\n+  private def toApiCheckpoint(\n+      recordedAt: Instant,\n+      offset: LedgerDao#LedgerOffset): Option[Checkpoint] =\n+    Option(\n+      Checkpoint(\n+        recordTime = Option(fromInstant(recordedAt)),\n+        offset = Option(LedgerOffset(LedgerOffset.Value.Absolute(offset.toString)))))\n \n-  private def toApiCommandId(commandId: CommandId): domain.CommandId =\n-    domain.CommandId(commandId)\n-\n-  private def toApiTransactionId(transactionId: TransactionId): domain.TransactionId =\n-    domain.TransactionId(transactionId)\n+  // We _rely_ on the following compiler flags for this to be safe:\n+  // * -Xno-patmat-analysis _MUST NOT_ be enabled\n+  // * -Xfatal-warnings _MUST_ be enabled\n+  private def toErrorCode(rejection: RejectionReason): Int = {\n+    import RejectionReason.{\n+      Inconsistent,\n+      Disputed,\n+      PartyNotKnownOnLedger,\n+      OutOfQuota,\n+      TimedOut,\n+      SubmitterCannotActViaParticipant\n+    }\n+    rejection match {\n+      case _: Inconsistent | _: Disputed | _: PartyNotKnownOnLedger =>\n+        Code.INVALID_ARGUMENT.value()"
  }
]