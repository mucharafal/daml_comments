[
  {
    "id" : "d20bea82-ff89-4814-82cb-3bbae2e79100",
    "prId" : 6658,
    "comments" : [
      {
        "id" : "aa5673ff-4305-4663-a283-9703a856e029",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "What does `Elt` stand for? Can you spell it out, please? I believe it would be more readable.",
        "createdAt" : "2020-07-15T09:38:31Z",
        "updatedAt" : "2020-07-28T19:42:13Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3a7968d2-5f2a-4f35-bbc3-61cb3d50280b",
        "parentId" : "aa5673ff-4305-4663-a283-9703a856e029",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "It's \"element\"; sure.",
        "createdAt" : "2020-07-15T12:24:43Z",
        "updatedAt" : "2020-07-28T19:42:13Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1d224b04-440f-4d75-ab46-b6db61a978d6",
        "parentId" : "aa5673ff-4305-4663-a283-9703a856e029",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Ah, thanks!",
        "createdAt" : "2020-07-15T12:29:35Z",
        "updatedAt" : "2020-07-28T19:42:13Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "22a3954f-0fc9-43e5-9cbf-952f91a1ecbc",
        "parentId" : "aa5673ff-4305-4663-a283-9703a856e029",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "a8c62b02698866cb8b3914822a9cee8b519a3b31",
        "createdAt" : "2020-07-15T13:00:34Z",
        "updatedAt" : "2020-07-28T19:42:13Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "69f55443bf44c1520d2dc1c24b1aa8bee88b4d46",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,48 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.platform.store.dao.events\n+\n+import com.daml.platform.store.SimpleSqlAsVectorOf._\n+import anorm.{ResultSetParser, Row, RowParser, SimpleSql}\n+import scalaz.{-\\/, Free, Functor, \\/-}\n+\n+import java.sql.Connection\n+\n+object SqlSequence {\n+\n+  /** A sequence of `SimpleSql`s, terminating in A. */\n+  type T[A] = Free[Elt, A]\n+\n+  // this representation is just trampolined Reader, but exposing that\n+  // would be unsound because it is _not_ distributive, and anyway\n+  // we may want to make the representation more explicit for more complex\n+  // analysis (e.g. applying polymorphic transforms to all contained SimpleSqls...)\n+  final class Elt[+A] private[SqlSequence] (private[SqlSequence] val run: Connection => A)"
  }
]