[
  {
    "id" : "e355143f-9e41-488f-95e7-71fa3e33eb34",
    "prId" : 1452,
    "comments" : [
      {
        "id" : "8ab7fa57-e701-4e45-a969-7ed1c2f09e24",
        "parentId" : null,
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "Why is there no `AddTransactionState` in this branch?",
        "createdAt" : "2019-05-31T11:10:30Z",
        "updatedAt" : "2019-06-07T21:22:35Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a489bdad-29a1-4422-99bd-7d6e58ef8b50",
        "parentId" : "8ab7fa57-e701-4e45-a969-7ed1c2f09e24",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "The above line is part of the `ats.copy` call, which copies the current `AddTransactionState`.",
        "createdAt" : "2019-05-31T12:38:53Z",
        "updatedAt" : "2019-06-07T21:22:35Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "21be6910a5debd0672b0db0815d8993c33b21e53",
    "line" : 80,
    "diffHunk" : "@@ -193,7 +144,8 @@ class ActiveContractsManager[ACS](initialState: => ACS)(implicit ACS: ACS => Act\n                     })\n                   } else {\n                     acc\n-                  })\n+                  }),\n+                  parties = parties.union(nodeParties)"
  },
  {
    "id" : "10ed09e4-d837-46b0-a48b-c62e58e3d6ff",
    "prId" : 1452,
    "comments" : [
      {
        "id" : "7bc706a6-2275-4f9b-9896-94bc03f1c60f",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "The set of parties is not updated here. Should be caught by the upcoming test.",
        "createdAt" : "2019-05-31T12:39:59Z",
        "updatedAt" : "2019-06-07T21:22:35Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "21be6910a5debd0672b0db0815d8993c33b21e53",
    "line" : null,
    "diffHunk" : "@@ -177,12 +125,15 @@ class ActiveContractsManager[ACS](initialState: => ACS)(implicit ACS: ACS => Act\n                   case Some(key) =>\n                     val gk = GlobalKey(activeContract.contract.template, key.key)\n                     if (acc keyExists gk) {\n-                      AddTransactionState(None, errs + DuplicateKey(gk))\n+                      AddTransactionState(None, errs + DuplicateKey(gk), parties.union(nodeParties))\n                     } else {\n                       ats.copy(acc = Some(acc.addContract(absCoid, activeContract, Some(gk))))"
  },
  {
    "id" : "f4f5d484-8798-4712-8791-2b82fa951533",
    "prId" : 1452,
    "comments" : [
      {
        "id" : "76f9fb15-3ca3-42ab-81f9-1c8fdb126111",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Do we not need to implicitly create the maintainer parties of the key as well?",
        "createdAt" : "2019-06-07T11:42:25Z",
        "updatedAt" : "2019-06-07T21:22:35Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e5491b7e-e090-4110-b520-29036f05cd43",
        "parentId" : "76f9fb15-3ca3-42ab-81f9-1c8fdb126111",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Good catch.",
        "createdAt" : "2019-06-07T12:36:45Z",
        "updatedAt" : "2019-06-07T21:22:35Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "21be6910a5debd0672b0db0815d8993c33b21e53",
    "line" : 82,
    "diffHunk" : "@@ -129,7 +147,8 @@ class ActiveContractsManager[ACS](initialState: => ACS)(implicit ACS: ACS => Act\n                     })\n                   } else {\n                     acc\n-                  })\n+                  }),\n+                  parties = parties.union(nodeParties)\n                 )\n               case nlkup: N.NodeLookupByKey.WithTxValue[AbsoluteContractId] =>"
  }
]