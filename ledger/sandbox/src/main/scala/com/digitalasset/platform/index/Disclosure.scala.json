[
  {
    "id" : "95ec9091-bec4-4169-a030-0aaf465f415a",
    "prId" : 4970,
    "comments" : [
      {
        "id" : "fbf90aa5-7449-4496-89cc-8e76318e232e",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Why not pass in the disclosure relation directly?",
        "createdAt" : "2020-03-12T16:24:59Z",
        "updatedAt" : "2020-03-12T16:53:43Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9ebd42eb-f160-4d6d-bdd9-9e2eb8c43d4f",
        "parentId" : "fbf90aa5-7449-4496-89cc-8e76318e232e",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I was hoping I could somehow make this testable by abstracting over this, but I guess I can undo this.",
        "createdAt" : "2020-03-12T16:34:04Z",
        "updatedAt" : "2020-03-12T16:53:43Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4edb571c-cdbb-43d4-be8c-f62f95439d33",
        "parentId" : "fbf90aa5-7449-4496-89cc-8e76318e232e",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Plus, initially I used this to test this in the current `TransactionConversion`.",
        "createdAt" : "2020-03-12T16:35:42Z",
        "updatedAt" : "2020-03-12T16:53:43Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a32fd936-e0cf-4823-9105-14bfb12120ad",
        "parentId" : "fbf90aa5-7449-4496-89cc-8e76318e232e",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "If yo don't intend to use it, then let's keep it to the minimum that's needed. 👍 ",
        "createdAt" : "2020-03-12T16:38:23Z",
        "updatedAt" : "2020-03-12T16:53:43Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9eb7e5e7-883b-47f2-810c-5a5a1f281971",
        "parentId" : "fbf90aa5-7449-4496-89cc-8e76318e232e",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/4970/commits/f8e11794c14a26621f54a77274d02ab8afe56067",
        "createdAt" : "2020-03-12T16:39:54Z",
        "updatedAt" : "2020-03-12T16:53:43Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7593e9b61c1cf81184a426ceac23ff97c0db82a1",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,38 @@\n+// Copyright (c) 2020 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.platform.index\n+\n+import com.digitalasset.daml.lf.data.Ref.Party\n+import com.digitalasset.daml.lf.data.Relation.Relation\n+import com.digitalasset.daml.lf.engine.Blinding\n+import com.digitalasset.daml.lf.transaction.Transaction.{NodeId, TContractId, Transaction, Value}\n+import com.digitalasset.daml.lf.transaction.{GenTransaction, NodeInfo}\n+\n+object Disclosure {\n+\n+  def forFlatTransaction[Nid, Cid, Val](tx: GenTransaction[Nid, Cid, Val]): Relation[Nid, Party] =\n+    tx.nodes.collect {\n+      case (nodeId, c: NodeInfo.Create) =>\n+        nodeId -> c.stakeholders\n+      case (nodeId, e: NodeInfo.Exercise) if e.consuming =>\n+        nodeId -> e.stakeholders\n+    }\n+\n+  def forTransactionTree[Nid, Cid, Val](\n+      disclosure: GenTransaction[Nid, Cid, Val] => Relation[Nid, Party])("
  },
  {
    "id" : "93c48435-20a0-4dfa-bd72-b576f212a238",
    "prId" : 4970,
    "comments" : [
      {
        "id" : "b4913a28-f7e3-410d-913c-134837d396f4",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I'm curious why this is not a regular `def` that takes a parameter?",
        "createdAt" : "2020-03-12T16:32:41Z",
        "updatedAt" : "2020-03-12T16:53:43Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "318aa9c8-c8fb-4ee6-9558-a04c83d35d52",
        "parentId" : "b4913a28-f7e3-410d-913c-134837d396f4",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I can turn this into one.",
        "createdAt" : "2020-03-12T16:33:19Z",
        "updatedAt" : "2020-03-12T16:53:43Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6945b976-d2cb-4b84-92f1-4a528781dd65",
        "parentId" : "b4913a28-f7e3-410d-913c-134837d396f4",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/4970/commits/f8e11794c14a26621f54a77274d02ab8afe56067",
        "createdAt" : "2020-03-12T16:39:59Z",
        "updatedAt" : "2020-03-12T16:53:43Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7593e9b61c1cf81184a426ceac23ff97c0db82a1",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,38 @@\n+// Copyright (c) 2020 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.platform.index\n+\n+import com.digitalasset.daml.lf.data.Ref.Party\n+import com.digitalasset.daml.lf.data.Relation.Relation\n+import com.digitalasset.daml.lf.engine.Blinding\n+import com.digitalasset.daml.lf.transaction.Transaction.{NodeId, TContractId, Transaction, Value}\n+import com.digitalasset.daml.lf.transaction.{GenTransaction, NodeInfo}\n+\n+object Disclosure {\n+\n+  def forFlatTransaction[Nid, Cid, Val](tx: GenTransaction[Nid, Cid, Val]): Relation[Nid, Party] =\n+    tx.nodes.collect {\n+      case (nodeId, c: NodeInfo.Create) =>\n+        nodeId -> c.stakeholders\n+      case (nodeId, e: NodeInfo.Exercise) if e.consuming =>\n+        nodeId -> e.stakeholders\n+    }\n+\n+  def forTransactionTree[Nid, Cid, Val](\n+      disclosure: GenTransaction[Nid, Cid, Val] => Relation[Nid, Party])(\n+      tx: GenTransaction[Nid, Cid, Val]): Relation[Nid, Party] = {\n+\n+    val createAndExercise: Set[Nid] =\n+      tx.nodes.collect {\n+        case p @ (_, _: NodeInfo.Create) => p\n+        case p @ (_, _: NodeInfo.Exercise) => p\n+      }.keySet\n+\n+    disclosure(tx).filterKeys(createAndExercise)\n+  }\n+\n+  val forTransactionTree: Transaction => Relation[NodeId, Party] ="
  }
]