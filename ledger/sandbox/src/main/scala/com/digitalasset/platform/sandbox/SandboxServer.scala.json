[
  {
    "id" : "254c56ca-fba6-4ddb-98d7-994e7ba13ea0",
    "prId" : 6512,
    "comments" : [
      {
        "id" : "44da5e75-7fb4-48ab-9286-2cc1e4f54f2d",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "@SamirTalwar-DA Is that enough to make it work in `sandbox-next`? Or does it only affect `sandbox-classic`?",
        "createdAt" : "2020-06-29T11:44:34Z",
        "updatedAt" : "2020-06-29T12:47:24Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b191e556-7225-4d75-912a-9b493e9a87bf",
        "parentId" : "44da5e75-7fb4-48ab-9286-2cc1e4f54f2d",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Oh, good catch. This will only affect Sandbox Classic. You'll need to add it to `com.daml.platform.sandboxnext.Runner` too.",
        "createdAt" : "2020-06-29T11:48:08Z",
        "updatedAt" : "2020-06-29T12:47:24Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3e3ac9e0-868b-4776-a275-0d633501db82",
        "parentId" : "44da5e75-7fb4-48ab-9286-2cc1e4f54f2d",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Thanks for letting me know. I'll do that in a followup PR together with the profiler as well.",
        "createdAt" : "2020-06-29T12:45:56Z",
        "updatedAt" : "2020-06-29T12:47:24Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9ec8a59682399aa5dbac069527e4e9a52cdeb4e7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +139,143 @@      engine.startProfiling(profileDir)\n  }\n  engine.enableStackTraces(config.stackTraces)\n\n  // Name of this participant"
  },
  {
    "id" : "569b6cf4-ef99-460d-9ca3-6bf32e37624f",
    "prId" : 6151,
    "comments" : [
      {
        "id" : "c9a04183-e8f0-4e31-8a29-fb77b604e5e4",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "`fold` might be cleaner here.\r\n\r\n```suggestion\r\n        config.profileDir.fold(\"\").fold(dir => s\", profile directory = ${dir}\")\r\n```",
        "createdAt" : "2020-05-29T12:00:58Z",
        "updatedAt" : "2020-05-29T12:04:10Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "58491ebf-d117-4922-ba45-8ea2ccf87253",
        "parentId" : "c9a04183-e8f0-4e31-8a29-fb77b604e5e4",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I'm not a big fan of `fold` and `foreach` on `Option`. At least for me, it makes reading code significantly harder since I need to run a type inference in my head, particularly during code review. And I don't mind writing a few more lines if it makes my intent easy to understand. It would have been cool if Scala had something like Rust's [`map_or`](https://doc.rust-lang.org/std/option/enum.Option.html#method.map_or).",
        "createdAt" : "2020-05-29T13:05:53Z",
        "updatedAt" : "2020-05-29T13:05:54Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a79bdc30-440b-40af-a522-eba06264ec73",
        "parentId" : "c9a04183-e8f0-4e31-8a29-fb77b604e5e4",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Fair. 🙂 ",
        "createdAt" : "2020-05-29T13:13:50Z",
        "updatedAt" : "2020-05-29T13:13:51Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "fa42faf4fffb4e6c0891d323b87bdf1cb115576f",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +342,346 @@          case None => \"\"\n          case Some(profileDir) => s\", profile directory = ${profileDir}\"\n        },\n      )\n      if (config.scenario.nonEmpty) {"
  },
  {
    "id" : "4ab34f8b-7f0e-4086-b153-057a0e97d077",
    "prId" : 6151,
    "comments" : [
      {
        "id" : "e9f2b487-2b59-4713-b94f-d46e76e99091",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "What happens if we reset the server with the ResetService?",
        "createdAt" : "2020-05-29T12:03:05Z",
        "updatedAt" : "2020-05-29T12:04:10Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f9daa235-ee4e-4748-b444-4ac7d490a02a",
        "parentId" : "e9f2b487-2b59-4713-b94f-d46e76e99091",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "To my best understanding, the engine is not touched when the reset service is used. That is at least how I understand the comment\r\nhttps://github.com/digital-asset/daml/blob/9d955d7039651e670bf58d908f460a96f17456ee/ledger/sandbox/src/main/scala/com/digitalasset/platform/sandbox/SandboxServer.scala#L60",
        "createdAt" : "2020-05-29T13:07:55Z",
        "updatedAt" : "2020-05-29T13:07:55Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8ef82043-f2b2-42b0-a2c0-66b3ea71afa0",
        "parentId" : "e9f2b487-2b59-4713-b94f-d46e76e99091",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Sounds good. I don't particularly understand how resetting affects things; I just know it's easy to get bitten by it.",
        "createdAt" : "2020-05-29T13:14:23Z",
        "updatedAt" : "2020-05-29T13:14:23Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "fa42faf4fffb4e6c0891d323b87bdf1cb115576f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +127,131 @@    this(config, materializer, new Metrics(new MetricRegistry))\n\n  // NOTE(MH): We must do this _before_ we load the first package.\n  config.profileDir match {\n    case None => ()"
  },
  {
    "id" : "e701455a-e531-4e99-92d9-91441b4f6fde",
    "prId" : 6151,
    "comments" : [
      {
        "id" : "0ca2162a-fa5f-4d17-9ee2-fbd33d2a85fb",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "You can use `foreach` here.\r\n\r\n```suggestion\r\n  config.profileDir.foreach { profileDir =>\r\n    Files.createDirectories(profileDir)\r\n    engine.startProfiling(profileDir)\r\n  }\r\n```",
        "createdAt" : "2020-05-29T12:03:41Z",
        "updatedAt" : "2020-05-29T12:04:10Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b401fe06-86b2-42a1-9d70-9a87482bcdbb",
        "parentId" : "0ca2162a-fa5f-4d17-9ee2-fbd33d2a85fb",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "See above.",
        "createdAt" : "2020-05-29T13:08:37Z",
        "updatedAt" : "2020-05-29T13:08:38Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "fa42faf4fffb4e6c0891d323b87bdf1cb115576f",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +133,137 @@      Files.createDirectories(profileDir)\n      engine.startProfiling(profileDir)\n  }\n\n  // Name of this participant"
  },
  {
    "id" : "db8e7440-2042-4a81-a09d-dc0e8ff558a2",
    "prId" : 5929,
    "comments" : [
      {
        "id" : "da639b4c-3b55-4fb6-bbb7-da372c77b23c",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : ":+1: ",
        "createdAt" : "2020-05-11T13:56:54Z",
        "updatedAt" : "2020-05-13T10:04:55Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "dba967f9f02fe374fa8a168129d2d6976b15b151",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +164,168 @@            packageStore = packageStore,\n            startMode = SqlStartMode.AlwaysReset,\n            currentPort = Some(port),\n        )))\n"
  },
  {
    "id" : "3e4a8f77-09da-4645-8695-8febf056becc",
    "prId" : 5781,
    "comments" : [
      {
        "id" : "c6f16116-e868-4f0b-800a-5333ba866bb4",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Previously `ActiveLedgerStateManager` did the implicit party allocation. But now that it's gone, we resort to the same mechanism as sadbonx (i.e. explicit implicit party allocation), right?",
        "createdAt" : "2020-05-04T14:10:40Z",
        "updatedAt" : "2020-05-04T14:46:46Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "904de3e4-245f-45f9-b8f6-f698fb0a5f85",
        "parentId" : "c6f16116-e868-4f0b-800a-5333ba866bb4",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Precisely, if this flag is on the command submission service walks the transaction tree and does the party allocation.",
        "createdAt" : "2020-05-04T14:52:39Z",
        "updatedAt" : "2020-05-04T14:52:39Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2cef248cc3f3c465650baeffbee12935ac37bb2e",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +290,294 @@        partyConfig = PartyConfiguration.default.copy(\n          // sandbox-classic always allocates party implicitly\n          implicitPartyAllocation = true,\n        ),\n        submissionConfig = config.submissionConfig,"
  },
  {
    "id" : "d0cc4d19-cd84-4571-8744-5d1c39e15433",
    "prId" : 4755,
    "comments" : [
      {
        "id" : "1b5179f4-5b9d-449c-a47b-00bbadb2f712",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "What do you mean by this comment? The code says if you already have a port set then don't care about the port specified in the config. If you would like to imply that `currentPort` is the port saved before reset then please rename the parameter accordingly.",
        "createdAt" : "2020-03-02T12:31:43Z",
        "updatedAt" : "2020-03-02T18:11:36Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a48a1043-d8ba-478a-a94c-88c15271c6f9",
        "parentId" : "1b5179f4-5b9d-449c-a47b-00bbadb2f712",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "This comment was just moved from the code above because it no longer fit; I didn't change it, and I'd rather not change it in this PR.",
        "createdAt" : "2020-03-02T13:44:26Z",
        "updatedAt" : "2020-03-02T18:11:36Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "20ff693d-03ee-46bc-aaf0-1e31a07f01e5",
        "parentId" : "1b5179f4-5b9d-449c-a47b-00bbadb2f712",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "OK -- I'm just pointing out this comment is rather confusing than helping.",
        "createdAt" : "2020-03-02T15:02:46Z",
        "updatedAt" : "2020-03-02T18:11:36Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6d36fdaa30a004657bd518f427ba4d9695681aa0",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +305,309 @@              )(mat, esf, logCtx)\n              .map(_.withServices(List(resetService(ledgerId, authorizer, executionContext)))),\n          // NOTE: Re-use the same port after reset.\n          currentPort.getOrElse(config.port),\n          config.maxInboundMessageSize,"
  },
  {
    "id" : "f0d10252-bd34-4c16-9a49-035ad1ec6e0e",
    "prId" : 4533,
    "comments" : [
      {
        "id" : "96a6d712-a98a-487a-a5ac-c5a6fa40dcd1",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Shouldn't it be the other way around? When `useSortableCid` is active, we create a seed service?",
        "createdAt" : "2020-02-17T09:29:27Z",
        "updatedAt" : "2020-02-17T12:34:30Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e3a5c1bf-a76b-4e16-9e11-633992472ef4",
        "parentId" : "96a6d712-a98a-487a-a5ac-c5a6fa40dcd1",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "You are right. Thanks.",
        "createdAt" : "2020-02-17T09:49:23Z",
        "updatedAt" : "2020-02-17T12:34:30Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "69e42150daf521f93631ef81bea5b8b2314d7beb",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +276,280 @@\n      val seedService =\n        if (config.useSortableCid)\n          Some(crypto.Hash.secureRandom(SecureRandom.getInstanceStrong.generateSeed(32)))\n        else"
  },
  {
    "id" : "a2180c3a-dff9-4cbd-b943-5d4aca91a0ac",
    "prId" : 4447,
    "comments" : [
      {
        "id" : "8bb7f178-80d5-4287-a5a5-d79e472314bb",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Would it make sense to have a `Resource.forTryCloseable` to avoid having an owner that just acquires?",
        "createdAt" : "2020-02-10T09:41:35Z",
        "updatedAt" : "2020-02-10T15:56:26Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d2eae990-79a0-4246-90d4-46fbc73b739c",
        "parentId" : "8bb7f178-80d5-4287-a5a5-d79e472314bb",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Maybe, but I think the explicit `acquire` is worth it for things that really should be released. I think this is a bigger question; perhaps all those `ResourceOwner.forXyz` methods should also be available on `Resource`?",
        "createdAt" : "2020-02-10T10:05:46Z",
        "updatedAt" : "2020-02-10T15:56:26Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ec9ac50e-c690-4485-9b8d-94b663cfd97b",
        "parentId" : "8bb7f178-80d5-4287-a5a5-d79e472314bb",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Does the explicit `acquire` actually change the semantics?",
        "createdAt" : "2020-02-10T10:21:05Z",
        "updatedAt" : "2020-02-10T15:56:26Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ce611181-eec3-4c12-859c-9c1dfe33453e",
        "parentId" : "8bb7f178-80d5-4287-a5a5-d79e472314bb",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Nah. I have a refactoring on the way but it's a big change because I'm making the constructor private, which breaks some stuff, so I'd rather do this in a separate piece of work.",
        "createdAt" : "2020-02-10T12:33:21Z",
        "updatedAt" : "2020-02-10T15:56:26Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "84e6c618d4689590c8f46682a40a528bbafe76f7",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +68,72 @@      override def acquire()(implicit executionContext: ExecutionContext): Resource[SandboxServer] =\n        for {\n          server <- ResourceOwner.forTryCloseable(() => Try(new SandboxServer(config))).acquire()\n          // Wait for the API server to start.\n          // We use the Future rather than the Resource to avoid holding onto the API server."
  },
  {
    "id" : "7a66bd9f-80d6-4aef-9381-194a5618ad3d",
    "prId" : 4447,
    "comments" : [
      {
        "id" : "fa8a16c9-80d3-4767-af70-116bd22453fb",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Would this make the `DirectExecutionContext` of the actor system?",
        "createdAt" : "2020-02-10T09:45:50Z",
        "updatedAt" : "2020-02-10T15:56:26Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a36c5d54-b979-412b-910b-bac80049ee4a",
        "parentId" : "fa8a16c9-80d3-4767-af70-116bd22453fb",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Good question. The semantics haven't changed here; it was always the implicit execution context. It appears that `ActorSystem` doesn't take an implicit execution context though, only an explicit one, and we never provide it, which I think means it uses `ExecutionContext.global` (but I'm not sure about that).",
        "createdAt" : "2020-02-10T10:53:38Z",
        "updatedAt" : "2020-02-10T15:56:26Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "59fafd0a-b80b-47bd-add4-5a8647856acb",
        "parentId" : "fa8a16c9-80d3-4767-af70-116bd22453fb",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I know how to fix this but it's a fairly big change (because lots of tests call `new SandboxServer` directly) so I'd like to do it separately.",
        "createdAt" : "2020-02-10T12:39:03Z",
        "updatedAt" : "2020-02-10T15:56:26Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "84e6c618d4689590c8f46682a40a528bbafe76f7",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +163,167 @@\n  private val materializerResource: Resource[Materializer] = {\n    implicit val executionContext: ExecutionContext = DirectExecutionContext\n    for {\n      actorSystem <- AkkaResourceOwner.forActorSystem(() => ActorSystem(ActorSystemName)).acquire()"
  },
  {
    "id" : "cd3c87c3-dbc7-4ca9-9372-79e059e52ee0",
    "prId" : 4447,
    "comments" : [
      {
        "id" : "ae5df458-0e3c-4409-8273-80ad6f1c35eb",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Was the `MetricRegistry` the only resource that was not released properly on reset?",
        "createdAt" : "2020-02-10T09:49:34Z",
        "updatedAt" : "2020-02-10T15:56:26Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4071346c-df2a-40bb-a692-2bb2a27e488a",
        "parentId" : "ae5df458-0e3c-4409-8273-80ad6f1c35eb",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Nope, the `SandboxState` (and by extension everything inside it) was being held on to.",
        "createdAt" : "2020-02-10T10:07:31Z",
        "updatedAt" : "2020-02-10T15:56:26Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "34f19f8b-a859-4a82-ad1a-a6ec8fca147c",
        "parentId" : "ae5df458-0e3c-4409-8273-80ad6f1c35eb",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I see, thanks.",
        "createdAt" : "2020-02-10T10:23:08Z",
        "updatedAt" : "2020-02-10T15:56:26Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "84e6c618d4689590c8f46682a40a528bbafe76f7",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +221,225 @@  private def buildAndStartApiServer(\n      materializer: Materializer,\n      metrics: MetricRegistry,\n      packageStore: InMemoryPackageStore,\n      startMode: SqlStartMode,"
  },
  {
    "id" : "2b327d33-337e-480b-8020-d537fd216a06",
    "prId" : 1818,
    "comments" : [
      {
        "id" : "ca06189a-4d52-443a-9145-61d13edbff1a",
        "parentId" : null,
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "👍 ",
        "createdAt" : "2019-06-28T08:13:25Z",
        "updatedAt" : "2019-07-02T12:24:58Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "bae23a0a96200d0ece436a646cceb68a50511f37",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +161,165 @@    }\n\n    val packageStore = InMemoryPackageStore.empty\n\n    // TODO is it sensible to have all the initial packages to be known"
  },
  {
    "id" : "ac67aa01-9120-4b56-81fb-75502d7356a1",
    "prId" : 1610,
    "comments" : [
      {
        "id" : "1ff28265-582a-4030-81f2-6b18d9378a57",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I think relying on `*Sync` methods here will make it harder to later switch to an SQL backed package store.",
        "createdAt" : "2019-06-13T08:46:57Z",
        "updatedAt" : "2019-06-19T11:34:16Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0aedbe26-26a6-4a50-a322-c7caf243a6cc",
        "parentId" : "1ff28265-582a-4030-81f2-6b18d9378a57",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Currently, the whole sandbox initialization part is hardcoded to work with in-memory data structures:\r\n- The scenario loader depends on `ActiveContractsInMemory` and `InMemoryPackageStore`\r\n- The scenario loader uses `listLfPackagesSync`, and does not use any async code.\r\n- The scenario loader uses its own ledger implementation\r\n\r\nThe scenario is executed before the postgres ledger is initialized. It would be a bigger change to refactor the scenario to be executed on the postgres ledger.",
        "createdAt" : "2019-06-14T12:02:12Z",
        "updatedAt" : "2019-06-19T11:34:16Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6a8f0671-c713-44ee-a04d-4d67971a9db0",
        "parentId" : "1ff28265-582a-4030-81f2-6b18d9378a57",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I see. Makes sense then.",
        "createdAt" : "2019-06-14T12:25:04Z",
        "updatedAt" : "2019-06-19T11:34:16Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5e866b02c0df2f20dcee08439e1105fe577f0609",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +57,61 @@    // make sure that that's the case\n    if (config.eagerPackageLoading || config.scenario.nonEmpty) {\n      for (pkgId <- packages.listLfPackagesSync().keys) {\n        val pkg = packages.getLfPackageSync(pkgId).get\n        engine"
  },
  {
    "id" : "9a1197a2-78bc-4b27-90e5-cdd5c644bc7a",
    "prId" : 1278,
    "comments" : [
      {
        "id" : "c356bd36-0223-4e3a-b404-93d5de3145e8",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Do we really want to wait until infinity in here?",
        "createdAt" : "2019-05-21T13:43:51Z",
        "updatedAt" : "2019-05-21T13:46:18Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c213f436-de57-4e65-966e-a3ed32bc04cb",
        "parentId" : "c356bd36-0223-4e3a-b404-93d5de3145e8",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "good point, I changed it to use `asyncTolerance`. BTW,  I am blocking here on purpose as it didn't seem reasonable to push the async behaviour further up the stack. We might do it later though.",
        "createdAt" : "2019-05-21T13:47:34Z",
        "updatedAt" : "2019-05-21T13:47:34Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6c78964bdfd67df79aee1708c222fc9bcbfb7383",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +208,212 @@    val stopHeartbeats = scheduleHeartbeats(timeProvider, ledger.publishHeartbeat)\n\n    val apiServer = Await.result(\n      LedgerApiServer.create(\n        (am: ActorMaterializer, esf: ExecutionSequencerFactory) =>"
  }
]