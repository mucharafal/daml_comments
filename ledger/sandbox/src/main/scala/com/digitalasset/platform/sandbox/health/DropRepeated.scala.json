[
  {
    "id" : "501ac3af-65ea-461f-9356-fbc1e7c2569a",
    "prId" : 3573,
    "comments" : [
      {
        "id" : "99f39f71-5fca-4bd4-a8fc-776c2eb88569",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\nfinal class DropRepeated[T] extends GraphStage[FlowShape[T, T]] {\r\n```\r\nMinor, feel free to skip this, but I usually prefer to close the inheritance hierarchy unless a class is designed to be extended.",
        "createdAt" : "2019-11-21T15:07:22Z",
        "updatedAt" : "2019-11-22T13:38:57Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4848f40af9b3e4bc6651d495959322efdfdbaa78",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,40 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.platform.sandbox.health\n+\n+import akka.stream.stage.{GraphStage, GraphStageLogic, InHandler, OutHandler}\n+import akka.stream.{Attributes, FlowShape, Inlet, Outlet}\n+\n+class DropRepeated[T] extends GraphStage[FlowShape[T, T]] {"
  },
  {
    "id" : "a38b20d0-e9e9-438e-80c8-5aff5e9ab4f4",
    "prId" : 3573,
    "comments" : [
      {
        "id" : "24d3f960-1735-4aaa-bbf2-b2c6258c68c9",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I'm not very familiar with Akka Streams so probably this is fine, but should you use some synchronization over this?",
        "createdAt" : "2019-11-21T15:08:42Z",
        "updatedAt" : "2019-11-22T13:38:57Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1dae616b-04be-4189-bcfa-0c00c479ce0d",
        "parentId" : "24d3f960-1735-4aaa-bbf2-b2c6258c68c9",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Pretty sure you don't need to; Akka manages synchronizations because actors are blocking. If you like we can loop in an expert (if you know of one hanging around).",
        "createdAt" : "2019-11-21T15:23:38Z",
        "updatedAt" : "2019-11-22T13:38:57Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5c04fdda-e383-4231-8b2c-39db0c64171d",
        "parentId" : "24d3f960-1735-4aaa-bbf2-b2c6258c68c9",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Cool, thanks!",
        "createdAt" : "2019-11-21T16:36:47Z",
        "updatedAt" : "2019-11-22T13:38:57Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a1b79a66-e89e-497d-9e75-2339770e5dde",
        "parentId" : "24d3f960-1735-4aaa-bbf2-b2c6258c68c9",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Should be fine inside `GraphStageLogic`.",
        "createdAt" : "2019-11-21T16:39:56Z",
        "updatedAt" : "2019-11-22T13:38:57Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4848f40af9b3e4bc6651d495959322efdfdbaa78",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,40 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.platform.sandbox.health\n+\n+import akka.stream.stage.{GraphStage, GraphStageLogic, InHandler, OutHandler}\n+import akka.stream.{Attributes, FlowShape, Inlet, Outlet}\n+\n+class DropRepeated[T] extends GraphStage[FlowShape[T, T]] {\n+  private val in = Inlet[T](\"input\")\n+  private val out = Outlet[T](\"DropRepeated output\")\n+\n+  override def shape: FlowShape[T, T] = FlowShape(in, out)\n+\n+  override def createLogic(inheritedAttributes: Attributes): GraphStageLogic =\n+    new GraphStageLogic(shape) {\n+      private var currentValue: Option[T] = None"
  }
]