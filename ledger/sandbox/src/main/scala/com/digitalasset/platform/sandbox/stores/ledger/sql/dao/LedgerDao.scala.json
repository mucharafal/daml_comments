[
  {
    "id" : "057949c5-9693-4383-880d-ee6ac9a15fd1",
    "prId" : 3744,
    "comments" : [
      {
        "id" : "9d9e7f5e-d48b-45c5-8849-a33fc6b6bf4c",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "```suggestion\r\n    * Stores a party allocation or rejection thereof.\r\n```",
        "createdAt" : "2019-12-05T10:59:18Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "12fea95a-99c2-48df-9add-fc2e5804e059",
        "parentId" : "9d9e7f5e-d48b-45c5-8849-a33fc6b6bf4c",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Addressed in 165899128.",
        "createdAt" : "2019-12-05T11:11:12Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d8204b7c377ce994002fb11ce1227c245747b3d0",
    "line" : null,
    "diffHunk" : "@@ -200,17 +212,18 @@ trait LedgerWriteDao extends AutoCloseable with ReportsHealth {\n   ): Future[Unit]\n \n   /**\n-    * Explicitly adds a new party to the list of known parties.\n+    * Stores a party allocation of rejection thereof."
  },
  {
    "id" : "5fadfad5-7768-4908-99ce-3319870af08e",
    "prId" : 3744,
    "comments" : [
      {
        "id" : "4b3c4497-ed83-49f9-a237-76fd53615c37",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n    * Stores a party allocation or rejection thereof.\r\n```\r\nOr am I reading it wrong?",
        "createdAt" : "2019-12-05T11:08:03Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e8b4c6d5-b05d-49b7-9fd3-e7fadb5f76b6",
        "parentId" : "4b3c4497-ed83-49f9-a237-76fd53615c37",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Thanks. Already fixed in response to @SamirTalwar's review.",
        "createdAt" : "2019-12-05T12:12:40Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d8204b7c377ce994002fb11ce1227c245747b3d0",
    "line" : null,
    "diffHunk" : "@@ -200,17 +212,18 @@ trait LedgerWriteDao extends AutoCloseable with ReportsHealth {\n   ): Future[Unit]\n \n   /**\n-    * Explicitly adds a new party to the list of known parties.\n+    * Stores a party allocation of rejection thereof."
  },
  {
    "id" : "64d71e34-5de2-41ac-9fb9-c62b50163010",
    "prId" : 959,
    "comments" : [
      {
        "id" : "fbcafb58-53af-4905-b0e9-47f9c3e20098",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "@gaboraranyossy-da Persistence queue now stores PersistenceEntry instead of LedgerEntry, see comment.",
        "createdAt" : "2019-05-07T06:35:15Z",
        "updatedAt" : "2019-05-15T16:27:45Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e4dc5b75fb95575adb8e21bb2ae04bcccdc97acf",
    "line" : 48,
    "diffHunk" : "@@ -25,16 +28,41 @@ final case class Contract(\n     transactionId: String,\n     workflowId: String,\n     witnesses: Set[Ref.Party],\n+    divulgences: Set[Ref.Party],\n     coinst: ContractInst[VersionedValue[AbsoluteContractId]],\n     key: Option[KeyWithMaintainers[VersionedValue[AbsoluteContractId]]]) {\n   def toActiveContract: ActiveContract =\n-    // TODO SC store divulgences\n-    ActiveContract(let, transactionId, workflowId, coinst, witnesses, Set.empty, key)\n+    ActiveContract(let, transactionId, workflowId, coinst, witnesses, divulgences, key)\n }\n \n object Contract {\n   def fromActiveContract(cid: AbsoluteContractId, ac: ActiveContract): Contract =\n-    Contract(cid, ac.let, ac.transactionId, ac.workflowId, ac.witnesses, ac.contract, ac.key)\n+    Contract(\n+      cid,\n+      ac.let,\n+      ac.transactionId,\n+      ac.workflowId,\n+      ac.witnesses,\n+      ac.divulgences,\n+      ac.contract,\n+      ac.key)\n+}\n+\n+/**\n+  * Every time the ledger persists a transactions, the active contract set (ACS) is updated.\n+  * Updating the ACS requires knowledge of blinding info, which is not included in LedgerEntry.Transaction.\n+  * The SqlLedger persistence queue Transaction elements are therefore enriched with blinding info.\n+  */\n+sealed abstract class PersistenceEntry extends Product with Serializable"
  },
  {
    "id" : "f8ee59f4-6f88-4e07-8b72-ebdaf61b6065",
    "prId" : 444,
    "comments" : [
      {
        "id" : "d51546af-354e-4ea1-bb71-89225c444524",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Is it ok that the contract key is read in its own SQL transaction? Doesn't it have to be read together with other `lookupKey` or `lookupContract` queries from some consistent snapshot?",
        "createdAt" : "2019-04-12T13:18:13Z",
        "updatedAt" : "2019-04-16T07:25:47Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "48f98f12-2a35-44cd-8526-612dc50f6de5",
        "parentId" : "d51546af-354e-4ea1-bb71-89225c444524",
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "yes, it is, see comment in https://github.com/digital-asset/daml/blob/e83c21ae11e939abc0c12a08887381b888df376a/ledger/backend-api/src/main/scala/com/digitalasset/ledger/backend/api/v1/SubmissionHandle.scala#L56",
        "createdAt" : "2019-04-15T15:01:29Z",
        "updatedAt" : "2019-04-16T07:25:47Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2caa7f293aac7972574e45eb2989deaffe86da96",
    "line" : 38,
    "diffHunk" : "@@ -74,6 +75,14 @@ trait LedgerDao extends AutoCloseable {\n       _.getOrElse(sys.error(s\"ledger entry not found for offset: $offset\")))(DirectExecutionContext)\n   }\n \n+  /**\n+    * Looks up a Contract given a contract key\n+    *\n+    * @param key the contract key to query\n+    * @return the optional AbsoluteContractId\n+    */\n+  def lookupKey(key: Node.GlobalKey): Future[Option[AbsoluteContractId]]"
  },
  {
    "id" : "711b2803-3ad5-4b60-a4c2-1b8e40f1d741",
    "prId" : 247,
    "comments" : [
      {
        "id" : "7bb91de6-d7af-4a9d-b8c2-4bb113383f9e",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "comment out this line?",
        "createdAt" : "2019-04-10T09:46:58Z",
        "updatedAt" : "2019-04-10T14:29:58Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8aeafc36-8495-4936-83d8-b868163e45ae",
        "parentId" : "7bb91de6-d7af-4a9d-b8c2-4bb113383f9e",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "yes, debug residue",
        "createdAt" : "2019-04-10T10:31:36Z",
        "updatedAt" : "2019-04-10T14:29:58Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "457c779849ad0e1d496ef8ecd28e9f7b41fdaeb9",
    "line" : null,
    "diffHunk" : "@@ -59,9 +65,11 @@ trait LedgerDao {\n     * @param offset the offset to look at\n     * @return the LedgerEntry found, or throws an exception\n     */\n-  def lookupLedgerEntryAssert(offset: Long): Future[LedgerEntry] =\n+  def lookupLedgerEntryAssert(offset: Long): Future[LedgerEntry] = {\n+    println(s\"reading record with offset: $offset\")"
  }
]