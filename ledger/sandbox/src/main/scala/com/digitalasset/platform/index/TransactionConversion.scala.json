[
  {
    "id" : "e56ecaab-aa61-42fa-8749-09c04789fc3c",
    "prId" : 4885,
    "comments" : [
      {
        "id" : "b1078fe8-f26b-456e-a7bf-c2a8c646f3d5",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "No action to be taken here as well, but in the process of tightening the loop we are creating more and more convenience functions that could probably be made part of an allocation-free implicit value type (like `EventOps` and `TreeEventOps`) as they will come in handy along the way to keep the code tidy while not needlessly creating intermediate objects.",
        "createdAt" : "2020-03-09T10:26:27Z",
        "updatedAt" : "2020-03-09T10:43:00Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "145bec4c-76b2-460d-a316-785e43a1f1f4",
        "parentId" : "b1078fe8-f26b-456e-a7bf-c2a8c646f3d5",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Not sure what you're saying. This doesn't create an intermediary object though. Or do you mean we should keep this sort of convenience function in `EventOps`?",
        "createdAt" : "2020-03-09T10:38:02Z",
        "updatedAt" : "2020-03-09T10:43:00Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bdce6a6e-1be0-4c5f-9b34-5e992c4adc3d",
        "parentId" : "b1078fe8-f26b-456e-a7bf-c2a8c646f3d5",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Actually in this case the method doesn't operate on ledger api events, but on the daml lf transaction nodes.",
        "createdAt" : "2020-03-09T10:43:43Z",
        "updatedAt" : "2020-03-09T10:43:43Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "96a369b3afd668ff924abde055ac20086b2d1fba",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +121,125 @@    ).filter(_.nonEmpty)\n\n  private def isCreateOrExercise(n: Node): Boolean = {\n    n match {\n      case _: Exercise => true"
  },
  {
    "id" : "482746a5-105b-4e59-8c65-44e84d782173",
    "prId" : 4763,
    "comments" : [
      {
        "id" : "1c960178-5f00-40d1-90c7-2b3210b38613",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "`Seq.empty` is just `Nil` in disguise. If you dislike the usage of `:::` further down below, we should rather switch explicitly to `Vector`.",
        "createdAt" : "2020-03-02T08:32:15Z",
        "updatedAt" : "2020-03-02T12:38:29Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fdb9f124-dbe6-429b-926c-46a8b5767c3d",
        "parentId" : "1c960178-5f00-40d1-90c7-2b3210b38613",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I had to turn everything to `Seq` instead of `List` because it's what used in the API types.",
        "createdAt" : "2020-03-02T10:46:24Z",
        "updatedAt" : "2020-03-02T12:38:29Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "084f83f6a7e9794c09cd508e4c4c0898039e0bea",
    "line" : 166,
    "diffHunk" : "@@ -1,1 +110,114 @@    val result =\n      rootEventIds.foldRight(\n        InvisibleRootRemovalState(rootsWereReplaced = false, eventsById, Seq.empty)) {\n        case (eventId, InvisibleRootRemovalState(hasInvisibleRoot, filteredEvents, newRoots)) =>\n          val event = eventsById"
  }
]