[
  {
    "id" : "a8c9fce8-5be2-4e76-9ff9-38a503608f71",
    "prId" : 6646,
    "comments" : [
      {
        "id" : "7a8c80b1-0eee-4702-8cdc-77b452b212df",
        "parentId" : null,
        "author" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "body" : "What happens if there are two concurrent calls to `setTimeModel`? Or is this a \"preemptive\" check and the problem should get caught by the `WriteService`? Is it even a problem?",
        "createdAt" : "2020-07-08T12:15:36Z",
        "updatedAt" : "2020-07-08T13:16:41Z",
        "lastEditedBy" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "01d28b5b-965c-4623-ad07-41584ea7fb0b",
        "parentId" : "7a8c80b1-0eee-4702-8cdc-77b452b212df",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "The `WriteService` implementation definitely has the last word on this.",
        "createdAt" : "2020-07-08T12:18:58Z",
        "updatedAt" : "2020-07-08T13:16:41Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7d93fa5fb876e41f24d6d98a451a08e0f381e545",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +87,91 @@\n      // Verify that we're modifying the current configuration.\n      expectedGeneration = currentConfig\n        .map(_.generation)\n        .getOrElse(LedgerConfiguration.NoGeneration)"
  },
  {
    "id" : "bff5ce40-8813-4160-952f-6c35b1351aa7",
    "prId" : 6646,
    "comments" : [
      {
        "id" : "075ea054-3057-4ce4-8e38-f0588474b644",
        "parentId" : null,
        "author" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "body" : "Is it sensible to return a config, even if no config is actually set? I see that you need to return a generation, but the model could in principle be left empty. Would this break other tests?",
        "createdAt" : "2020-07-08T12:35:32Z",
        "updatedAt" : "2020-07-08T13:16:41Z",
        "lastEditedBy" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "012940a2-5fa0-4ca2-ae42-798aed5d7797",
        "parentId" : "075ea054-3057-4ce4-8e38-f0588474b644",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I agree, but this would be a bigger change and I suggest we leave it until after we release. Perhaps @rautenrieth-da can weigh in.",
        "createdAt" : "2020-07-08T12:39:28Z",
        "updatedAt" : "2020-07-08T13:16:41Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1ecc3182-c0e5-459a-9bf7-b9f1d5b35391",
        "parentId" : "075ea054-3057-4ce4-8e38-f0588474b644",
        "author" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "body" : ":+1: ",
        "createdAt" : "2020-07-08T12:43:45Z",
        "updatedAt" : "2020-07-08T13:16:41Z",
        "lastEditedBy" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8c78d678-597c-48d6-9cb6-f4b94ec37e0a",
        "parentId" : "075ea054-3057-4ce4-8e38-f0588474b644",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "https://github.com/digital-asset/daml/issues/6668",
        "createdAt" : "2020-07-09T12:04:23Z",
        "updatedAt" : "2020-07-09T12:04:38Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7d93fa5fb876e41f24d6d98a451a08e0f381e545",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +46,50 @@\n  private val defaultConfigResponse = configToResponse(\n    ledgerConfiguration.initialConfiguration.copy(generation = LedgerConfiguration.NoGeneration))\n\n  override def close(): Unit = ()"
  },
  {
    "id" : "ba509ac1-c51e-4407-b0d5-29fa5fe28347",
    "prId" : 5591,
    "comments" : [
      {
        "id" : "c2f29608-6c8b-455f-bb4f-e8bed33ca412",
        "parentId" : null,
        "author" : {
          "login" : "oliverse-da",
          "name" : "Oliver Seeliger",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/46452754?u=dd1d8e09760abe67b40a4e527a15aafe9d104d82&v=4"
        },
        "body" : "Can we lower the logging level to info? In distributed ledgers, the participant administrator is not necessarily authorized to define the time model (owned by the domain administrators). In such cases submission would fail expectedly. In such cases a warning would indicate an incorrectly operating node which is not necessarily the case.\r\n\r\nFor Canton it would be great if: if the ledger returned `NotSupported` we only emitted a message at info level and warn on other `SubmissionResult`s.",
        "createdAt" : "2020-04-21T07:15:15Z",
        "updatedAt" : "2020-04-21T13:49:25Z",
        "lastEditedBy" : {
          "login" : "oliverse-da",
          "name" : "Oliver Seeliger",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/46452754?u=dd1d8e09760abe67b40a4e527a15aafe9d104d82&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cec41f77-1678-41ec-be64-531885dbba51",
        "parentId" : "c2f29608-6c8b-455f-bb4f-e8bed33ca412",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Done. `NotSupported` will emit a message at info level.",
        "createdAt" : "2020-04-21T12:25:53Z",
        "updatedAt" : "2020-04-21T13:49:25Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f75193c6-7c8e-4d7b-b7a1-248233d25ba7",
        "parentId" : "c2f29608-6c8b-455f-bb4f-e8bed33ca412",
        "author" : {
          "login" : "oliverse-da",
          "name" : "Oliver Seeliger",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/46452754?u=dd1d8e09760abe67b40a4e527a15aafe9d104d82&v=4"
        },
        "body" : "Thanks Robert. Much obliged.",
        "createdAt" : "2020-04-21T12:59:50Z",
        "updatedAt" : "2020-04-21T13:49:25Z",
        "lastEditedBy" : {
          "login" : "oliverse-da",
          "name" : "Oliver Seeliger",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/46452754?u=dd1d8e09760abe67b40a4e527a15aafe9d104d82&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c88cb69f1442ab96bd253fb3a6720778c58fb8f0",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +97,101 @@                ()\n              case result =>\n                logger.warn(\n                  s\"Initial configuration submission $submissionId failed. Reason: ${result.description}\")\n                ()"
  }
]