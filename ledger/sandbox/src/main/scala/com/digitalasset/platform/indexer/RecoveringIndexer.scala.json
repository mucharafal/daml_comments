[
  {
    "id" : "5e8d1224-8735-418f-ad60-e5a6211ecbdf",
    "prId" : 4097,
    "comments" : [
      {
        "id" : "2d763e42-b713-4870-bb58-b07c0291cc8f",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "I think this line snuck in during a rebase. It's been deleted; it shouldn't be necessary.",
        "createdAt" : "2020-01-20T17:03:50Z",
        "updatedAt" : "2020-01-21T09:13:27Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "14b50426-e32b-489e-a147-a05b85da8eae",
        "parentId" : "2d763e42-b713-4870-bb58-b07c0291cc8f",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Definitely, good catch, thanks!",
        "createdAt" : "2020-01-20T18:38:40Z",
        "updatedAt" : "2020-01-21T09:13:27Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "cc41cc8d-ac33-4151-a0b8-a859b61c3a93",
        "parentId" : "2d763e42-b713-4870-bb58-b07c0291cc8f",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/4097/commits/03d47341bd98899f3737afa61bb6d3404d3456f4",
        "createdAt" : "2020-01-20T18:43:28Z",
        "updatedAt" : "2020-01-21T09:13:27Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "80ef9a78495c345ca3a7442bc7c2397f4901c132",
    "line" : null,
    "diffHunk" : "@@ -22,14 +22,15 @@ import scala.util.{Failure, Success}\n   * @param restartDelay Time to wait before restarting the indexer after a failure\n   * @param asyncTolerance Time to wait for asynchronous operations to complete\n   */\n-class RecoveringIndexer(\n+final class RecoveringIndexer(\n     scheduler: Scheduler,\n     restartDelay: FiniteDuration,\n     asyncTolerance: FiniteDuration,\n-    loggerFactory: NamedLoggerFactory,\n-) {\n+)(implicit logCtx: LoggingContext) {\n   private implicit val executionContext: ExecutionContext = DirectExecutionContext\n-  private val logger = loggerFactory.getLogger(this.getClass)\n+  private val logger = ContextualizedLogger.get[this.type]\n+\n+  val lastHandle = new AtomicReference[Option[Resource[IndexFeedHandle]]](None)"
  }
]