[
  {
    "id" : "975699c6-622d-4e9e-b405-e845bf8c0882",
    "prId" : 5541,
    "comments" : [
      {
        "id" : "dc532e2f-edeb-434d-859e-1db414a51885",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Since this query needs to be overridden for contracts anyway, maybe make it abstract here and move this query to the `EventWitnessTable` implementation?",
        "createdAt" : "2020-04-16T08:44:04Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7997ac95-cb97-4516-b733-5d6661f2d306",
        "parentId" : "dc532e2f-edeb-434d-859e-1db414a51885",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Makes sense, thanks, this is a leftover from the original implementation.",
        "createdAt" : "2020-04-16T09:02:47Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1c39fcf9-a57d-4b8a-a847-b047e2f10332",
        "parentId" : "dc532e2f-edeb-434d-859e-1db414a51885",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/5541/commits/8f9aa6886333a0ebe9866428861a73a03a7efdad",
        "createdAt" : "2020-04-17T10:20:28Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2034352017063fbc2c958c5a086273e66ed0ad47",
    "line" : null,
    "diffHunk" : "@@ -3,23 +3,24 @@\n \n package com.daml.platform.store.dao.events\n \n-import anorm.{BatchSql, NamedParameter}\n-import com.daml.lf.data.Ref.LedgerString\n+import anorm.{BatchSql, NamedParameter, ToStatement}\n+import com.daml.ledger.EventId\n import com.daml.platform.store.Conversions._\n+import com.daml.platform.store.DbType\n \n /**\n   * A table storing a flattened representation of a [[WitnessRelation]]\n   */\n-private[events] sealed abstract class WitnessesTable(\n-    tableName: String,\n-    idColumn: String,\n-    witnessColumn: String,\n+private[events] sealed abstract class WitnessesTable[Id: ToStatement](\n+    protected val tableName: String,\n+    protected val idColumn: String,\n+    protected val witnessColumn: String,\n ) {\n \n-  private val insert =\n+  protected val insert ="
  },
  {
    "id" : "0ddef172-ec93-4f46-b55a-def3da4a8cd8",
    "prId" : 5029,
    "comments" : [
      {
        "id" : "89f56142-46cb-46b0-9272-cfb20696276e",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Not convinced `sys.error` is the most pleasant way to handle errors here. What does this even mean, and can we do something with it? Perhaps make it clear that things can error with an `Either` or a `Try`?",
        "createdAt" : "2020-03-16T17:23:50Z",
        "updatedAt" : "2020-03-17T08:13:39Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9cda6ced-9934-479c-a140-5269ce1f0bad",
        "parentId" : "89f56142-46cb-46b0-9272-cfb20696276e",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Another leftover from debugging, sorry for the sloppy PR.",
        "createdAt" : "2020-03-16T17:27:16Z",
        "updatedAt" : "2020-03-17T08:13:39Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "705c6bd0-c898-44ad-8b3d-5e8b0230bbfb",
        "parentId" : "89f56142-46cb-46b0-9272-cfb20696276e",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/5029/commits/54ec136a17bf594b201a8fb6bd8c082e1d755f34",
        "createdAt" : "2020-03-16T17:39:40Z",
        "updatedAt" : "2020-03-17T08:13:39Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "580296f46e11bdbf48ffee6d6071962630781dae",
    "line" : null,
    "diffHunk" : "@@ -31,11 +31,14 @@ sealed abstract class WitnessesTable(tableName: String) {\n       transactionId: TransactionId,\n       witnesses: DisclosureRelation,\n   ): Option[BatchSql] = {\n-    if (witnesses.nonEmpty) {\n-      val ws = DisclosureRelation\n-        .flatten(witnesses)\n-        .map { case (nodeId, party) => parameters(transactionId)(nodeId, party) }\n-        .toSeq\n+    val flattenedWitnesses = DisclosureRelation.flatten(witnesses)\n+    if (flattenedWitnesses.nonEmpty) {\n+      val ws = flattenedWitnesses.map {\n+        case (nodeId, party) => parameters(transactionId)(nodeId, party)\n+      }.toSeq\n+      if (ws.isEmpty) {\n+        sys.error(witnesses.toString)"
  }
]