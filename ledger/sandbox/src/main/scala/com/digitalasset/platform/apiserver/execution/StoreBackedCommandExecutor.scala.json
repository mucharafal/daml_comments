[
  {
    "id" : "7933bfce-dab3-454f-9664-3f4bcbcfefa5",
    "prId" : 6515,
    "comments" : [
      {
        "id" : "edb4d9af-eabd-4497-b562-3b7cf5937645",
        "parentId" : null,
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "I don't think you're measuring the interpretation time here. `engine.submit` returns a continuation that the `consume` call below will actually fill. I'd stop the timing after `Blinding.checkAuthorizationAndBlind`.",
        "createdAt" : "2020-06-29T15:29:10Z",
        "updatedAt" : "2020-06-30T08:52:03Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ceecfa45-3c72-49a3-a49c-d030f6d4ab47",
        "parentId" : "edb4d9af-eabd-4497-b562-3b7cf5937645",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Good point -- changed accordingly.",
        "createdAt" : "2020-06-30T08:52:12Z",
        "updatedAt" : "2020-06-30T08:52:13Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5b5d17d48af638f059d785c2d530c2f7d89eec0e",
    "line" : null,
    "diffHunk" : "@@ -45,8 +45,11 @@ final class StoreBackedCommandExecutor(\n   )(\n       implicit ec: ExecutionContext,\n       logCtx: LoggingContext,\n-  ): Future[Either[ErrorCause, CommandExecutionResult]] =\n-    consume(commands.submitter, engine.submit(commands.commands, participant, submissionSeed))\n+  ): Future[Either[ErrorCause, CommandExecutionResult]] = {\n+    val start = System.nanoTime()\n+    val submissionResult = engine.submit(commands.commands, participant, submissionSeed)\n+    val interpretationTimeNanos = System.nanoTime() - start"
  }
]