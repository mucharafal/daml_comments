[
  {
    "id" : "d8b164c3-bea8-4a14-8689-0d80b31f78f1",
    "prId" : 6163,
    "comments" : [
      {
        "id" : "fa3799d1-09e9-48fb-8472-7768ce5c2023",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n      val storeTransactionDbMetrics = metrics.daml.index.db.storeTransactionDbMetrics\r\n```\r\nMinor and opinion-based, feel free to not use this.",
        "createdAt" : "2020-05-29T14:12:55Z",
        "updatedAt" : "2020-05-29T14:13:17Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "588f0a6bac1c93612ef40fd096f840974699be5f",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +27,31 @@  ) {\n    def write(metrics: Metrics)(implicit connection: Connection): Unit = {\n      import metrics.daml.index.db.storeTransactionDbMetrics\n\n      Timed.value(storeTransactionDbMetrics.eventsBatch, eventBatches.foreach(_.execute()))"
  },
  {
    "id" : "a3f9f49d-53b3-4fd4-948f-3f4fe03e9ffc",
    "prId" : 5541,
    "comments" : [
      {
        "id" : "13f7f308-a3c3-41cf-bfad-e4d7a83d54bb",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I'm not sure I understand this correctly. Do you observe a difference between this `localDivulgence` and `blindingInfo.globalDivulgence`?",
        "createdAt" : "2020-04-16T08:48:37Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e3b49ef8-3818-4612-b574-82b82e81f3e9",
        "parentId" : "13f7f308-a3c3-41cf-bfad-e4d7a83d54bb",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Yes, `blindingInfo.globalDivulgence` does not include the divulgence relation between contracts that are being divulged in the current transaction. If I only use `globalDivulgence` I will not add the witnesses of contracts divulged in the current transaction.",
        "createdAt" : "2020-04-16T09:06:33Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2034352017063fbc2c958c5a086273e66ed0ad47",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +81,85 @@  ): Option[BatchSql] = {\n    val localDivulgence = divulgence(transaction, blinding.disclosure, insertions)\n    val fullDivulgence = Relation.union(\n      localDivulgence,\n      blinding.globalDivulgence.filterKeys(!deletions.contains(_))"
  }
]