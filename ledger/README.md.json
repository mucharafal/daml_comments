[
  {
    "id" : "c9ef6327-07c1-4860-b551-bb838e9567d1",
    "prId" : 3779,
    "comments" : [
      {
        "id" : "9c297d15-2e9c-4d55-99d6-e3aad20b75e8",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\nThe Indexer does not currently run a gRPC server, and so does not expose any health checks on its own.\r\n```\r\nMostly for consistency with other mentions of gRPC.",
        "createdAt" : "2019-12-09T09:46:42Z",
        "updatedAt" : "2019-12-09T10:12:25Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6856f9e8-da14-44d7-8289-97891bd7dea4",
        "parentId" : "9c297d15-2e9c-4d55-99d6-e3aad20b75e8",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Their own documentation isn't consistent, which is why I was confused. üôÅ ",
        "createdAt" : "2019-12-09T10:11:05Z",
        "updatedAt" : "2019-12-09T10:12:25Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "883f925eac6ce29871726ab279d6aa56b0832191",
    "line" : null,
    "diffHunk" : "@@ -57,6 +57,52 @@ The Sandbox automatically makes all metrics available via JMX under the JMX doma\n When building an Indexer or Ledger API Server the implementer/ledger integrator is responsible to set up \n a `MetricRegistry` and a suitable metric reporting strategy that fits their needs.\n \n+## Health Checks\n+\n+### Ledger API Server health checks\n+\n+The Ledger API Server exposes health checks over the [GRPC Health Checking Protocol][]. You can check the health of\n+the overall server by making a GRPC request to `grpc.health.v1.Health.Check`.\n+\n+You can also perform a streaming health check by making a request to `grpc.health.v1.Health.Watch`. The server will\n+immediately send the current health of the Ledger API Server, and then send a new message whenever the health changes.\n+\n+The ledger may optionally expose health checks for underlying services and connections; the names of the services are\n+ledger-dependent. For example, the Sandbox exposes two service health checks:\n+\n+- the `\"index\"` service tests the health of the connection to the index database\n+- the `\"write\"` service tests the health of the connection to the ledger database\n+\n+To use these, make a request with the `service` field set to the name of the service. An unknown service name will\n+result in a GRPC `NOT_FOUND` error.\n+\n+[GRPC Health Checking Protocol]: https://github.com/grpc/grpc/blob/master/doc/health-checking.md\n+\n+### Indexer health checks\n+\n+The Indexer does not currently run a GRPC server, and so does not expose any health checks on its own."
  },
  {
    "id" : "08bd2234-a3ca-4ca4-b76c-5ebfd18fa9b1",
    "prId" : 3779,
    "comments" : [
      {
        "id" : "d31af3de-ae0a-476d-b320-9f2a9b42e9a2",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\nThe Ledger API Server exposes health checks over the [gRPC Health Checking Protocol][]. You can check the health of\r\n```",
        "createdAt" : "2019-12-09T09:46:52Z",
        "updatedAt" : "2019-12-09T10:12:25Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "883f925eac6ce29871726ab279d6aa56b0832191",
    "line" : null,
    "diffHunk" : "@@ -57,6 +57,52 @@ The Sandbox automatically makes all metrics available via JMX under the JMX doma\n When building an Indexer or Ledger API Server the implementer/ledger integrator is responsible to set up \n a `MetricRegistry` and a suitable metric reporting strategy that fits their needs.\n \n+## Health Checks\n+\n+### Ledger API Server health checks\n+\n+The Ledger API Server exposes health checks over the [GRPC Health Checking Protocol][]. You can check the health of"
  },
  {
    "id" : "e3897fb1-e016-4127-9d90-adeab6464f2d",
    "prId" : 3779,
    "comments" : [
      {
        "id" : "83f5dbc5-6a2e-4010-b7aa-3074659711ed",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\nthe overall server by making a gRPC request to `grpc.health.v1.Health.Check`.\r\n```",
        "createdAt" : "2019-12-09T09:47:02Z",
        "updatedAt" : "2019-12-09T10:12:25Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "883f925eac6ce29871726ab279d6aa56b0832191",
    "line" : null,
    "diffHunk" : "@@ -57,6 +57,52 @@ The Sandbox automatically makes all metrics available via JMX under the JMX doma\n When building an Indexer or Ledger API Server the implementer/ledger integrator is responsible to set up \n a `MetricRegistry` and a suitable metric reporting strategy that fits their needs.\n \n+## Health Checks\n+\n+### Ledger API Server health checks\n+\n+The Ledger API Server exposes health checks over the [GRPC Health Checking Protocol][]. You can check the health of\n+the overall server by making a GRPC request to `grpc.health.v1.Health.Check`."
  },
  {
    "id" : "b3327b02-d2eb-4a84-aeee-4be3037b1123",
    "prId" : 3779,
    "comments" : [
      {
        "id" : "86a9048c-7749-4c64-a575-6291e8e35128",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n[gRPC Health Checking Protocol]: https://github.com/grpc/grpc/blob/master/doc/health-checking.md\r\n```",
        "createdAt" : "2019-12-09T09:47:14Z",
        "updatedAt" : "2019-12-09T10:12:25Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "883f925eac6ce29871726ab279d6aa56b0832191",
    "line" : null,
    "diffHunk" : "@@ -57,6 +57,52 @@ The Sandbox automatically makes all metrics available via JMX under the JMX doma\n When building an Indexer or Ledger API Server the implementer/ledger integrator is responsible to set up \n a `MetricRegistry` and a suitable metric reporting strategy that fits their needs.\n \n+## Health Checks\n+\n+### Ledger API Server health checks\n+\n+The Ledger API Server exposes health checks over the [GRPC Health Checking Protocol][]. You can check the health of\n+the overall server by making a GRPC request to `grpc.health.v1.Health.Check`.\n+\n+You can also perform a streaming health check by making a request to `grpc.health.v1.Health.Watch`. The server will\n+immediately send the current health of the Ledger API Server, and then send a new message whenever the health changes.\n+\n+The ledger may optionally expose health checks for underlying services and connections; the names of the services are\n+ledger-dependent. For example, the Sandbox exposes two service health checks:\n+\n+- the `\"index\"` service tests the health of the connection to the index database\n+- the `\"write\"` service tests the health of the connection to the ledger database\n+\n+To use these, make a request with the `service` field set to the name of the service. An unknown service name will\n+result in a GRPC `NOT_FOUND` error.\n+\n+[GRPC Health Checking Protocol]: https://github.com/grpc/grpc/blob/master/doc/health-checking.md"
  },
  {
    "id" : "0c517aae-ebb1-451e-b318-1bee35781510",
    "prId" : 3779,
    "comments" : [
      {
        "id" : "a82a4c7c-3093-4813-acb0-4d90863bf868",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "We expect production deployments to run the Indexer in a separate process from the API Server. Maybe we can use `LedgerApiServer` (it is not tied to specific services, but only talks about `List[ApiService]`, ...) to avoid duplicating the gRPC setup and start the indexer health checks on an optionally provided port.",
        "createdAt" : "2019-12-09T09:47:31Z",
        "updatedAt" : "2019-12-09T10:12:25Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "92baa562-b0a5-4abe-a4e6-92e1a950b5fa",
        "parentId" : "a82a4c7c-3093-4813-acb0-4d90863bf868",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Yup, you make sense. I will start work on adding that GRPC endpoint to the Indexer and updating this documentation once this is in.",
        "createdAt" : "2019-12-09T10:08:21Z",
        "updatedAt" : "2019-12-09T10:12:25Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "883f925eac6ce29871726ab279d6aa56b0832191",
    "line" : null,
    "diffHunk" : "@@ -57,6 +57,52 @@ The Sandbox automatically makes all metrics available via JMX under the JMX doma\n When building an Indexer or Ledger API Server the implementer/ledger integrator is responsible to set up \n a `MetricRegistry` and a suitable metric reporting strategy that fits their needs.\n \n+## Health Checks\n+\n+### Ledger API Server health checks\n+\n+The Ledger API Server exposes health checks over the [GRPC Health Checking Protocol][]. You can check the health of\n+the overall server by making a GRPC request to `grpc.health.v1.Health.Check`.\n+\n+You can also perform a streaming health check by making a request to `grpc.health.v1.Health.Watch`. The server will\n+immediately send the current health of the Ledger API Server, and then send a new message whenever the health changes.\n+\n+The ledger may optionally expose health checks for underlying services and connections; the names of the services are\n+ledger-dependent. For example, the Sandbox exposes two service health checks:\n+\n+- the `\"index\"` service tests the health of the connection to the index database\n+- the `\"write\"` service tests the health of the connection to the ledger database\n+\n+To use these, make a request with the `service` field set to the name of the service. An unknown service name will\n+result in a GRPC `NOT_FOUND` error.\n+\n+[GRPC Health Checking Protocol]: https://github.com/grpc/grpc/blob/master/doc/health-checking.md\n+\n+### Indexer health checks\n+\n+The Indexer does not currently run a GRPC server, and so does not expose any health checks on its own."
  },
  {
    "id" : "223625ef-d6c6-4c6e-8835-99d7fa4f4fb2",
    "prId" : 3779,
    "comments" : [
      {
        "id" : "00ca148d-ae97-4b1c-8502-2aba62d08a10",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "```suggestion\r\nresult in a gRPC `NOT_FOUND` error.\r\n```",
        "createdAt" : "2019-12-09T10:11:55Z",
        "updatedAt" : "2019-12-09T10:12:25Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "883f925eac6ce29871726ab279d6aa56b0832191",
    "line" : null,
    "diffHunk" : "@@ -57,6 +57,52 @@ The Sandbox automatically makes all metrics available via JMX under the JMX doma\n When building an Indexer or Ledger API Server the implementer/ledger integrator is responsible to set up \n a `MetricRegistry` and a suitable metric reporting strategy that fits their needs.\n \n+## Health Checks\n+\n+### Ledger API Server health checks\n+\n+The Ledger API Server exposes health checks over the [GRPC Health Checking Protocol][]. You can check the health of\n+the overall server by making a GRPC request to `grpc.health.v1.Health.Check`.\n+\n+You can also perform a streaming health check by making a request to `grpc.health.v1.Health.Watch`. The server will\n+immediately send the current health of the Ledger API Server, and then send a new message whenever the health changes.\n+\n+The ledger may optionally expose health checks for underlying services and connections; the names of the services are\n+ledger-dependent. For example, the Sandbox exposes two service health checks:\n+\n+- the `\"index\"` service tests the health of the connection to the index database\n+- the `\"write\"` service tests the health of the connection to the ledger database\n+\n+To use these, make a request with the `service` field set to the name of the service. An unknown service name will\n+result in a GRPC `NOT_FOUND` error."
  }
]