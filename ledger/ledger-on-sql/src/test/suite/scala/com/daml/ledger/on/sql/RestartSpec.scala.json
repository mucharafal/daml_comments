[
  {
    "id" : "7da1e023-3a2a-4814-ba1c-a5067ab62577",
    "prId" : 4266,
    "comments" : [
      {
        "id" : "1540a33b-5753-4bcb-82f6-758f187b1e9a",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "if you want you can also use `newLoggingContext` after the `in` method when defining tests. Whatever you feel makes more sense.",
        "createdAt" : "2020-01-29T16:39:27Z",
        "updatedAt" : "2020-01-30T08:46:16Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a147c90a-0049-4fcb-b710-7b637dfa2911",
        "parentId" : "1540a33b-5753-4bcb-82f6-758f187b1e9a",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "I'll leave it here for now but I'll consider it when this gets refactored into `ParticipantStateIntegrationSpecBase`.",
        "createdAt" : "2020-01-30T09:27:31Z",
        "updatedAt" : "2020-01-30T09:27:31Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "cd26d997fecd90132911e15c629bf2f5534b4465",
    "line" : 33,
    "diffHunk" : "@@ -0,0 +1,78 @@\n+// Copyright (c) 2020 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.on.sql\n+\n+import java.nio.file.Files\n+import java.util.UUID\n+\n+import akka.stream.scaladsl.Sink\n+import com.daml.ledger.participant.state.kvutils.api.KeyValueParticipantState\n+import com.daml.ledger.participant.state.v1.ParticipantId\n+import com.daml.ledger.participant.state.v1.Update.PartyAddedToParticipant\n+import com.digitalasset.daml.lf.data.Ref\n+import com.digitalasset.daml.lf.data.Ref.{LedgerString, Party}\n+import com.digitalasset.ledger.api.testing.utils.AkkaBeforeAndAfterAll\n+import com.digitalasset.logging.LoggingContext.newLoggingContext\n+import com.digitalasset.resources.Resource\n+import org.scalatest.{AsyncWordSpec, BeforeAndAfterEach, Matchers}\n+\n+import scala.compat.java8.FutureConverters._\n+import scala.concurrent.duration.DurationInt\n+import scala.util.Random\n+\n+class RestartSpec\n+    extends AsyncWordSpec\n+    with Matchers\n+    with BeforeAndAfterEach\n+    with AkkaBeforeAndAfterAll {\n+\n+  private val root = Files.createTempDirectory(getClass.getSimpleName)\n+\n+  private def start(id: String): Resource[KeyValueParticipantState] = {\n+    newLoggingContext { implicit logCtx =>"
  }
]