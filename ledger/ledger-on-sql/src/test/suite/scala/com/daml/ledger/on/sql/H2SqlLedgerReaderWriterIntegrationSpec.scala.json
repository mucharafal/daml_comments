[
  {
    "id" : "8c7b18b5-95fe-4efa-b704-be5965a7683c",
    "prId" : 4155,
    "comments" : [
      {
        "id" : "e014433a-a5a4-41d8-8d5c-a357720a4674",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n    newLoggingContext { implicit logCtx =>\r\n```",
        "createdAt" : "2020-01-22T12:55:25Z",
        "updatedAt" : "2020-01-22T15:12:07Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6d414ebd72f813c239463a48e245fc2e9fd9c0c8",
    "line" : null,
    "diffHunk" : "@@ -27,9 +28,11 @@ class H2SqlLedgerReaderWriterIntegrationSpec\n   ): ReadService with WriteService with AutoCloseable = {\n     val databaseName = s\"${getClass.getSimpleName.toLowerCase()}_${Random.nextInt()}\"\n     val jdbcUrl = s\"jdbc:h2:mem:$databaseName;db_close_delay=-1;db_close_on_exit=false\"\n-    val readerWriter =\n-      Await.result(SqlLedgerReaderWriter(ledgerId, participantId, jdbcUrl), 10.seconds)\n-    new KeyValueParticipantState(readerWriter, readerWriter)\n+    newLoggingContext { implicit loggingContext =>"
  }
]