[
  {
    "id" : "dccccb14-eaa9-4173-a11a-1ee3c996c354",
    "prId" : 7063,
    "comments" : [
      {
        "id" : "cf157fdf-35ed-4b0e-b4a4-19b4d8f59597",
        "parentId" : null,
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "If I understand correctly, this will be also used by the ledger state in direct mode. I assume it worked correctly for you with DAML-on-SQL but there were deadlocks when I attempted to do so in DAML-on-Memory so I'd test this carefully. Also, any assessment on the performance implications?",
        "createdAt" : "2020-08-10T07:33:34Z",
        "updatedAt" : "2020-08-10T07:49:53Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cebe94ce-69f9-482a-8bfd-ad08b1528012",
        "parentId" : "cf157fdf-35ed-4b0e-b4a4-19b4d8f59597",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Hmmm, not sure how to test it past running the conformance tests (which work fine).\r\n\r\nPerformance isn't impacted at all.\r\n\r\nMy understanding is that because [we only allocate a single executor for writing](https://github.com/digital-asset/daml/pull/7063/files#diff-1454db978c0fa4672d935447db837b38R77) anyway, this simply ensures the committer _also_ has a dedicated thread.\r\n",
        "createdAt" : "2020-08-10T07:52:26Z",
        "updatedAt" : "2020-08-10T07:52:27Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "18d594e5fd16fa8e21875d091137dd6808a8611b",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +119,123 @@        committerExecutionContext <- ResourceOwner\n          .forExecutorService(() =>\n            ExecutionContext.fromExecutorService(Executors.newSingleThreadExecutor()))\n          .acquire()\n      } yield"
  },
  {
    "id" : "57a5fc69-8ddc-4af2-8bad-a8e7a7b35896",
    "prId" : 4984,
    "comments" : [
      {
        "id" : "44111c55-1cb7-4ec2-8a6e-7e5d7e5117c1",
        "parentId" : null,
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "Can't it never be Unhealthy? If it can be then I'd leave the TODO.",
        "createdAt" : "2020-03-13T15:54:08Z",
        "updatedAt" : "2020-03-16T14:56:06Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1dc337f6-7fe2-4b62-9f19-6683e1575ad9",
        "parentId" : "44111c55-1cb7-4ec2-8a6e-7e5d7e5117c1",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Such TODOs should be tracked in an issue tracker. I.e., we need to introduce health checking for SQL-based ledgers which obviously depends on the backing server implementation.",
        "createdAt" : "2020-03-13T16:22:42Z",
        "updatedAt" : "2020-03-16T14:56:06Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b285b87c-e0c2-4771-98cb-8cb3ff496a7a",
        "parentId" : "44111c55-1cb7-4ec2-8a6e-7e5d7e5117c1",
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "@miklos-da Still, I don't think this TODO removal belongs here; it would be better to have a separate PR that removes all health-related TODOs, after creating the tracking issue so we don't forget.",
        "createdAt" : "2020-03-13T16:32:10Z",
        "updatedAt" : "2020-03-16T14:56:06Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b407f356-20ad-4dd8-a8d4-fff57225036b",
        "parentId" : "44111c55-1cb7-4ec2-8a6e-7e5d7e5117c1",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "@gerolf-da Do you want to create an issue to track this, please?",
        "createdAt" : "2020-03-13T18:39:17Z",
        "updatedAt" : "2020-03-16T14:56:06Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "96e29731-804b-4977-9ba8-618f1b5ce03c",
        "parentId" : "44111c55-1cb7-4ec2-8a6e-7e5d7e5117c1",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Already exists: #4224",
        "createdAt" : "2020-03-16T08:27:43Z",
        "updatedAt" : "2020-03-16T14:56:06Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b565547d-740a-402a-88eb-070b9639f2b0",
        "parentId" : "44111c55-1cb7-4ec2-8a6e-7e5d7e5117c1",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I think it's fine to remove this; didn't have to be in this PR but there's no harm.",
        "createdAt" : "2020-03-16T08:28:03Z",
        "updatedAt" : "2020-03-16T14:56:06Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "711be801-39d8-43ee-af8d-992bf1ab0d25",
        "parentId" : "44111c55-1cb7-4ec2-8a6e-7e5d7e5117c1",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Thanks for the confirmation, @SamirTalwar-DA ",
        "createdAt" : "2020-03-16T09:39:33Z",
        "updatedAt" : "2020-03-16T14:56:06Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8049c9ebb4015c70e4b3db0344c1e0bdf85699ec",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +57,61 @@  )\n\n  override def currentHealth(): HealthStatus = Healthy\n\n  override def events(offset: Option[Offset]): Source[LedgerEntry, NotUsed] ="
  },
  {
    "id" : "eed6894f-3350-4dc3-86d8-f51397ee36e6",
    "prId" : 4953,
    "comments" : [
      {
        "id" : "e2d6d7b0-626c-42ef-a331-a6dd601523b0",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Why not use `.futureSource` and wrap `queries.selectFromLog(start, end)` in a `Source` with `.map(Source _)`?",
        "createdAt" : "2020-03-17T13:37:01Z",
        "updatedAt" : "2020-03-17T19:46:55Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b9c4f33b-daa4-4096-bff8-436e2d5bd49e",
        "parentId" : "e2d6d7b0-626c-42ef-a331-a6dd601523b0",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "My mental mostly is mostly around initializing the stream and afterwards manipulating it in the way it's necessary. In this case it doesn't matter much I guess. Other than we then probably should use `DirectExecutionContext` to avoid having a thread context switch for simply turning `Seq[_]` to `Source[_]`.",
        "createdAt" : "2020-03-17T16:38:10Z",
        "updatedAt" : "2020-03-17T19:46:55Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1226e081-42c2-4dae-9387-3af862ee4885",
        "parentId" : "e2d6d7b0-626c-42ef-a331-a6dd601523b0",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Eh, leave it for now, and I'll see if I can get rid of the futures entirely at a later point. They're kind of pointless.",
        "createdAt" : "2020-03-17T16:40:47Z",
        "updatedAt" : "2020-03-17T19:46:55Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8c9c3ccf491dcebc26c083911d9714d2fa5d032f",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +58,62 @@        RangeSource((start, end) => {\n          Source\n            .future(database\n              .inReadTransaction(s\"Querying events ]$start, $end] from log\") { queries =>\n                Future.fromTry(queries.selectFromLog(start, end))"
  },
  {
    "id" : "cd196f46-8a06-4edc-b3bb-108a82251442",
    "prId" : 4177,
    "comments" : [
      {
        "id" : "a7a878c8-fac8-4297-8d6a-fdb072ea191c",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Always using `StartIndex` for `headAtInitialization` will break when starting the ledger with a non-empty non-in-memory database, but it's probably good enough for now.",
        "createdAt" : "2020-01-23T12:51:21Z",
        "updatedAt" : "2020-01-23T13:59:44Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4ee21441-9f9a-4253-b1fb-dfa9a95211ec",
        "parentId" : "a7a878c8-fac8-4297-8d6a-fdb072ea191c",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Oh, good point, this'll be me not understanding the API correctly. Will fix in a different PR.",
        "createdAt" : "2020-01-23T13:57:01Z",
        "updatedAt" : "2020-01-23T13:59:44Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e7b36ba8-48d7-437b-9cd9-e34039de0c9a",
        "parentId" : "a7a878c8-fac8-4297-8d6a-fdb072ea191c",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "I think it'd be good to have a conformance test that somehow restarts the ledger and makes sure everything is A-OK.",
        "createdAt" : "2020-01-23T13:58:25Z",
        "updatedAt" : "2020-01-23T13:59:44Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "10eaf42d-9584-409d-bca3-82fe5bd3e441",
        "parentId" : "a7a878c8-fac8-4297-8d6a-fdb072ea191c",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "That's not a conformance/ledger api test though, because we cannot remotely restart the ledger. But +1 on having such a test specifically for the KV SQL Ledger.",
        "createdAt" : "2020-01-23T15:54:06Z",
        "updatedAt" : "2020-01-23T15:54:07Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "91eef8f2-c12d-4be0-ac39-9912bd44e838",
        "parentId" : "a7a878c8-fac8-4297-8d6a-fdb072ea191c",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "The conformance test Bazel task knows how to start and stop the ledger, and therefore how to restart it. :-)",
        "createdAt" : "2020-01-23T15:58:45Z",
        "updatedAt" : "2020-01-23T15:58:46Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e8a324dd393a841e950e02d5e3e659caa3a9a9d4",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +223,227 @@            \"sql-participant-state\",\n            zeroIndex = StartIndex,\n            headAtInitialization = StartIndex,\n        ))\n      database <- Database.owner(jdbcUrl)"
  },
  {
    "id" : "ca9256ef-7fe5-4333-a20f-a2b70064e693",
    "prId" : 4155,
    "comments" : [
      {
        "id" : "ad4c36b8-feb7-4c54-8cfd-b9c81e135ab2",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Excellent solution! :+1: ",
        "createdAt" : "2020-01-22T14:22:37Z",
        "updatedAt" : "2020-01-22T15:12:07Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6d414ebd72f813c239463a48e245fc2e9fd9c0c8",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +79,83 @@        offset.getOrElse(FirstOffset).components.head,\n        RangeSource((start, end) => {\n          val result = inDatabaseReadTransaction(s\"Querying events [$start, $end[ from log\") {\n            implicit connection =>\n              queries.selectFromLog(start, end)"
  },
  {
    "id" : "f57fed3a-d023-476a-af20-51048795236c",
    "prId" : 3940,
    "comments" : [
      {
        "id" : "92f9e612-4aa1-47dd-b92d-95755e09b077",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "@dajmaki: should the `participantId` here not rather come from the submission itself? Especially if the committing process is a remote process that serves multiple participants.\r\nAnyway, it's not a problem right now, just wondering whether I am missing something.",
        "createdAt" : "2020-01-16T09:52:34Z",
        "updatedAt" : "2020-01-16T09:52:48Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "54297f1691f54ac9cff06e5a3d56297e6e32b48b",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +96,100 @@          LedgerReader.DefaultConfiguration,\n          submission,\n          participantId,\n          stateInputs,\n        )"
  }
]