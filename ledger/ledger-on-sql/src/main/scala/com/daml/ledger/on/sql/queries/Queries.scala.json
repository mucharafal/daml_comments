[
  {
    "id" : "31362e36-10f0-4fe1-b46e-16ea8efcf109",
    "prId" : 7515,
    "comments" : [
      {
        "id" : "1a258d42-fb32-4946-9193-8951cc2dd80f",
        "parentId" : null,
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "Can't it be defined as a function a `def` and inferred correctly at the usage site (and same below)?",
        "createdAt" : "2020-09-29T13:03:55Z",
        "updatedAt" : "2020-09-29T14:19:19Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f2dc1e43-7f5b-4a3e-990d-efa64854e901",
        "parentId" : "1a258d42-fb32-4946-9193-8951cc2dd80f",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I don't think so; the lambda is coerced to an implementation of `ToStatement`, not `Function1`.",
        "createdAt" : "2020-09-29T14:22:36Z",
        "updatedAt" : "2020-09-29T14:22:36Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2a03714d44102a50f8583de03c250ad3d4108d69",
    "line" : 6,
    "diffHunk" : "@@ -40,12 +40,11 @@ object Queries {\n     ()\n   }\n \n-  implicit def byteStringToStatement: ToStatement[ByteString] = new ToStatement[ByteString] {\n-    override def set(s: PreparedStatement, index: Int, v: ByteString): Unit =\n+  implicit val byteStringToStatement: ToStatement[ByteString] ="
  },
  {
    "id" : "513a43c4-e5f5-4ce7-b3c7-12d9e47c7888",
    "prId" : 4607,
    "comments" : [
      {
        "id" : "0aa895b2-a236-456d-b945-3163a5cdf11b",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "What does this mean?",
        "createdAt" : "2020-02-19T14:20:05Z",
        "updatedAt" : "2020-02-19T20:48:13Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0193acc0-51b1-4cc2-981c-5c1fe50c3397",
        "parentId" : "0aa895b2-a236-456d-b945-3163a5cdf11b",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Pushed a comment:\r\n\r\n> By explicitly writing a value to a \"table_key\" column, we ensure we only ever have one row in the meta table. An attempt to write a second row will result in a key conflict.\r\n",
        "createdAt" : "2020-02-19T15:55:33Z",
        "updatedAt" : "2020-02-19T20:48:13Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2631a6f3d08f69f84454f5b30c7ebcb7581b0e28",
    "line" : 26,
    "diffHunk" : "@@ -32,8 +37,11 @@ trait Queries {\n object Queries {\n   val TablePrefix = \"ledger\"\n   val LogTable = s\"${TablePrefix}_log\"\n+  val MetaTable = s\"${TablePrefix}_meta\"\n   val StateTable = s\"${TablePrefix}_state\"\n \n+  private[queries] val MetaTableKey = 0"
  }
]