[
  {
    "id" : "0345e52a-8611-4769-8f48-cbace0d637c8",
    "prId" : 7515,
    "comments" : [
      {
        "id" : "3a64e0b3-738c-4ad0-863d-8699444a9ba9",
        "parentId" : null,
        "author" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "body" : "Can't it be defined as a function a `def` and inferred correctly at the usage site (and same below)?",
        "createdAt" : "2020-09-29T13:03:55Z",
        "updatedAt" : "2020-09-29T14:19:19Z",
        "lastEditedBy" : {
          "login" : "fabiotudone-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/59609563?u=a3a8ac844c9aacd1d1bd319a77d1d0ac60d701a3&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0aa34ec1-29e2-4900-aa28-28f631ab1642",
        "parentId" : "3a64e0b3-738c-4ad0-863d-8699444a9ba9",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I don't think so; the lambda is coerced to an implementation of `ToStatement`, not `Function1`.",
        "createdAt" : "2020-09-29T14:22:36Z",
        "updatedAt" : "2020-09-29T14:22:36Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2a03714d44102a50f8583de03c250ad3d4108d69",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +41,45 @@  }\n\n  implicit val byteStringToStatement: ToStatement[ByteString] =\n    (s: PreparedStatement, index: Int, v: ByteString) =>\n      s.setBinaryStream(index, v.newInput(), v.size())"
  },
  {
    "id" : "de2eb4fe-b73b-43d7-84bc-b2dbb5217d5e",
    "prId" : 4607,
    "comments" : [
      {
        "id" : "78ccebc4-1a73-493b-952d-bf2a1ffd4528",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "What does this mean?",
        "createdAt" : "2020-02-19T14:20:05Z",
        "updatedAt" : "2020-02-19T20:48:13Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a670cedc-cb9a-4de7-a274-8b624f6a0102",
        "parentId" : "78ccebc4-1a73-493b-952d-bf2a1ffd4528",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Pushed a comment:\r\n\r\n> By explicitly writing a value to a \"table_key\" column, we ensure we only ever have one row in the meta table. An attempt to write a second row will result in a key conflict.\r\n",
        "createdAt" : "2020-02-19T15:55:33Z",
        "updatedAt" : "2020-02-19T20:48:13Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2631a6f3d08f69f84454f5b30c7ebcb7581b0e28",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +43,47 @@  // By explicitly writing a value to a \"table_key\" column, we ensure we only ever have one row in\n  // the meta table. An attempt to write a second row will result in a key conflict.\n  private[queries] val MetaTableKey = 0\n\n  def executeBatchSql("
  }
]