[
  {
    "id" : "939073e6-05f8-4423-81fc-93b13705fc78",
    "prId" : 3286,
    "comments" : [
      {
        "id" : "06314995-8837-443a-a165-fc72f6e4a07d",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I'd move this check either to the apply method of the companion object, or simply right before this class is used. The implementation of this class can only work with `ServerCallStreamObserver` values, so it'd make sense to make this requirement public in the constructor.",
        "createdAt" : "2019-10-31T09:05:18Z",
        "updatedAt" : "2019-10-31T15:48:18Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7bd9dd5e-e324-40b7-8a86-06ec6d2c4fc9",
        "parentId" : "06314995-8837-443a-a165-fc72f6e4a07d",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Absolutely right, thanks for the comment. :slightly_smiling_face: ",
        "createdAt" : "2019-10-31T15:17:57Z",
        "updatedAt" : "2019-10-31T15:48:18Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "59074871-6781-4c5f-9881-39429f87f04e",
        "parentId" : "06314995-8837-443a-a165-fc72f6e4a07d",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/3286/commits/20a4635add5f912c6e6c5fd78e06de61846a1171",
        "createdAt" : "2019-10-31T15:50:24Z",
        "updatedAt" : "2019-10-31T15:50:24Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "20a4635add5f912c6e6c5fd78e06de61846a1171",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,43 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.ledger.api.auth\n+\n+import io.grpc.stub.{ServerCallStreamObserver, StreamObserver}\n+\n+final class OngoingAuthorizationObserver[A](\n+    observer: StreamObserver[A],\n+    claims: Claims,\n+    authorized: Claims => Boolean,\n+    throwOnFailure: => Throwable)\n+    extends ServerCallStreamObserver[A] {\n+\n+  private[this] val wrapped = observer match {"
  }
]