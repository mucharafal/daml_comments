[
  {
    "id" : "243f895e-2b51-41c5-9abd-a7469646c3c7",
    "prId" : 6342,
    "comments" : [
      {
        "id" : "d475fabe-86f6-4c11-8695-89d61d10282a",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "This method is never used",
        "createdAt" : "2020-06-15T07:54:17Z",
        "updatedAt" : "2020-06-15T09:08:19Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cbdc69e5-929a-4ce3-b217-19e3be3cd07b",
        "parentId" : "d475fabe-86f6-4c11-8695-89d61d10282a",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/6342/commits/ff4634c0194a0406a2adbdcb5581920730307d38",
        "createdAt" : "2020-06-15T09:10:23Z",
        "updatedAt" : "2020-06-15T09:10:23Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "37e3b6c4311f180c3cce2813e7b2af5bc50501fc",
    "line" : 24,
    "diffHunk" : "@@ -91,7 +93,10 @@ final case class Claims(\n   def validForParticipant(id: String): Boolean =\n     participantId.forall(_ == id)\n \n-  /** Returns false if the expiration timestamp exists and is greather than or equal to the current time */\n+  def validForApplication(id: String): Boolean ="
  },
  {
    "id" : "9569f341-bcf6-47ab-9013-2bc463061a94",
    "prId" : 6342,
    "comments" : [
      {
        "id" : "fe28a4ed-2e58-4645-938a-46e175680258",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Shouldn't this use `exists`? I would expect that `isValidForApplication` is called when the token definitely needs to have a claim for a specific `applicationId`.",
        "createdAt" : "2020-06-15T08:36:34Z",
        "updatedAt" : "2020-06-15T09:08:19Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0acc8db5-8062-4e6c-9840-2a996a35d7be",
        "parentId" : "fe28a4ed-2e58-4645-938a-46e175680258",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "If the token (the claims) have a missing application ID, then all application IDs are authorized. This is also true for all other properties (ledger ID, participant ID).",
        "createdAt" : "2020-06-15T08:45:27Z",
        "updatedAt" : "2020-06-15T09:08:19Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d4d514ad-fa7c-491e-bdc9-a942db49c050",
        "parentId" : "fe28a4ed-2e58-4645-938a-46e175680258",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "This would mean that tokens would be forced to include an application identifier and that that token can only be used for that. `None.forall(_ => false)` returns `true`, meaning that in this way we ensure that if a token does not specify a token it can be used for any application identifier (mimicking the same semantics as the `ledgerId` and `participantId` fields checked above).",
        "createdAt" : "2020-06-15T08:53:52Z",
        "updatedAt" : "2020-06-15T09:08:19Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "37e3b6c4311f180c3cce2813e7b2af5bc50501fc",
    "line" : 25,
    "diffHunk" : "@@ -91,7 +93,10 @@ final case class Claims(\n   def validForParticipant(id: String): Boolean =\n     participantId.forall(_ == id)\n \n-  /** Returns false if the expiration timestamp exists and is greather than or equal to the current time */\n+  def validForApplication(id: String): Boolean =\n+    applicationId.forall(_ == id)"
  },
  {
    "id" : "cdc611ea-16bc-4386-bebb-1064454a02ee",
    "prId" : 3781,
    "comments" : [
      {
        "id" : "480802f6-448b-45bd-9746-c18db9a6e0d4",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "The scaladoc seems to be in the middle of the rest of the doc comments. Let's move this part to the end?",
        "createdAt" : "2019-12-09T09:54:28Z",
        "updatedAt" : "2019-12-09T14:38:30Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e5e0f692b68fd0b61e3e50e9cc341a38cdab2b7",
    "line" : null,
    "diffHunk" : "@@ -53,6 +53,11 @@ final case class ClaimReadAsParty(name: Ref.Party) extends Claim\n   * They also optionally specify an expiration epoch time that statically specifies the\n   * time on or after which the token will no longer be considered valid by the Ledger API.\n   *\n+  * @param claims         List of [[Claim]]s describing the authorization this object describes (see table below)."
  },
  {
    "id" : "9a3c3010-f6d6-47a8-8057-49a4b63f0437",
    "prId" : 3548,
    "comments" : [
      {
        "id" : "d794cc70-964e-41c0-af40-520532fa43c6",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n  * Does NOT authorize to issue commands.\r\n```\r\nNo one can ever _modify_ the ledger. :wink: :nerd_face: ",
        "createdAt" : "2019-11-20T13:19:38Z",
        "updatedAt" : "2019-11-21T10:15:56Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "080d257c-ad85-4abe-9d58-dee0b92c9de7",
        "parentId" : "d794cc70-964e-41c0-af40-520532fa43c6",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Well you can append to a ledger, which is a kind of modification? But your formulation is probably better ðŸ˜ƒ .",
        "createdAt" : "2019-11-20T13:43:39Z",
        "updatedAt" : "2019-11-21T10:15:56Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "faf1a4d4bbff4fe8a96e7c40f32b4d3237c54ca6",
    "line" : null,
    "diffHunk" : "@@ -41,6 +41,12 @@ case object ClaimActAsAnyParty extends Claim\n   */\n final case class ClaimActAsParty(name: Ref.Party) extends Claim\n \n+/** Authorized to read all data for the given party.\n+  *\n+  * Does NOT authorize to modify the ledger in any way."
  },
  {
    "id" : "ce874383-ab6b-46db-b3e7-9d5f094ef915",
    "prId" : 3286,
    "comments" : [
      {
        "id" : "58146471-d02c-466e-8e5e-d7da0bd1b2aa",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "What's the rational behind using `Long` instead of `Instant`?",
        "createdAt" : "2019-10-30T10:27:54Z",
        "updatedAt" : "2019-10-31T15:48:18Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "04d7cc12-0635-4176-90a3-0aea51d0a57c",
        "parentId" : "58146471-d02c-466e-8e5e-d7da0bd1b2aa",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Mostly my past life as a C developer. :laughing: \r\n\r\nI'll make this an `Instant`. :wink: ",
        "createdAt" : "2019-10-30T17:31:25Z",
        "updatedAt" : "2019-10-31T15:48:18Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6972b781-5999-4053-a6d8-56a77fc224ec",
        "parentId" : "58146471-d02c-466e-8e5e-d7da0bd1b2aa",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/3286/commits/0799c10dc275376fa91a59be992692f4ccaa6944",
        "createdAt" : "2019-10-30T19:09:54Z",
        "updatedAt" : "2019-10-31T15:48:18Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "20a4635add5f912c6e6c5fd78e06de61846a1171",
    "line" : null,
    "diffHunk" : "@@ -63,26 +67,33 @@ final case class ClaimActAsParty(name: Ref.Party) extends Claim\n   * | TransactionService                  | *                          | for each requested party p: canActAs(p)  |\n   * +-------------------------------------+----------------------------+------------------------------------------+\n   */\n-case class Claims(claims: Seq[Claim]) {\n-\n-  /** Returns true if the set of claims authorizes the user to use admin services */\n-  def isAdmin: Boolean = claims.exists {\n-    case ClaimAdmin => true\n-    case _ => false\n-  }\n-\n-  /** Returns true if the set of claims authorizes the user to use public services */\n-  def isPublic: Boolean = claims.exists {\n-    case ClaimPublic => true\n-    case _ => false\n-  }\n-\n-  /** Returns true if the set of claims authorizes the user to act as the given party */\n-  def canActAs(party: String): Boolean = claims.exists {\n-    case ClaimActAsAnyParty => true\n-    case ClaimActAsParty(p) => p == party\n-    case _ => false\n-  }\n+final case class Claims(claims: Seq[Claim], expiration: Option[Long] = None) {"
  },
  {
    "id" : "22b64e62-23e4-46de-bdca-8881b830e1a8",
    "prId" : 3286,
    "comments" : [
      {
        "id" : "376ca5bf-63b0-47e8-848f-60a4814d1c0a",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Could also be `claims.contains(ClaimAdmin)`.",
        "createdAt" : "2019-10-31T09:02:38Z",
        "updatedAt" : "2019-10-31T15:48:18Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8c559ff4-17e0-481c-b59d-9f92b6be0f53",
        "parentId" : "376ca5bf-63b0-47e8-848f-60a4814d1c0a",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Much cleaner, thanks!",
        "createdAt" : "2019-10-31T15:17:24Z",
        "updatedAt" : "2019-10-31T15:48:18Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9bcf4498-d8ab-44db-be67-b11bd57906af",
        "parentId" : "376ca5bf-63b0-47e8-848f-60a4814d1c0a",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/3286/commits/20a4635add5f912c6e6c5fd78e06de61846a1171",
        "createdAt" : "2019-10-31T15:50:05Z",
        "updatedAt" : "2019-10-31T15:50:05Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "20a4635add5f912c6e6c5fd78e06de61846a1171",
    "line" : null,
    "diffHunk" : "@@ -63,25 +67,33 @@ final case class ClaimActAsParty(name: Ref.Party) extends Claim\n   * | TransactionService                  | *                          | for each requested party p: canActAs(p)  |\n   * +-------------------------------------+----------------------------+------------------------------------------+\n   */\n-case class Claims(claims: Seq[Claim]) {\n+final case class Claims(claims: Seq[Claim], expiration: Option[Instant] = None) {\n \n-  /** Returns true if the set of claims authorizes the user to use admin services */\n-  def isAdmin: Boolean = claims.exists {\n-    case ClaimAdmin => true\n-    case _ => false\n-  }\n+  /** Returns false if the expiration timestamp exists and is greather than or equal to the current time */\n+  def notExpired(now: Instant): Boolean =\n+    expiration.forall(now.isBefore)\n \n-  /** Returns true if the set of claims authorizes the user to use public services */\n-  def isPublic: Boolean = claims.exists {\n-    case ClaimPublic => true\n-    case _ => false\n-  }\n+  /** Returns true if the set of claims authorizes the user to use admin services, unless the claims expired */\n+  def isAdmin(now: Instant): Boolean =\n+    notExpired(now) && claims.exists {"
  },
  {
    "id" : "3973f0a8-a15a-45de-9547-c53d7f0495df",
    "prId" : 3286,
    "comments" : [
      {
        "id" : "cd451932-2711-436e-bd39-ab551fe8f392",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Could also be `claims.contains(ClaimPublic)`.",
        "createdAt" : "2019-10-31T09:02:54Z",
        "updatedAt" : "2019-10-31T15:48:18Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5292cd51-eb7c-48a1-9efe-705da24b52ba",
        "parentId" : "cd451932-2711-436e-bd39-ab551fe8f392",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Much cleaner, thanks!",
        "createdAt" : "2019-10-31T15:17:30Z",
        "updatedAt" : "2019-10-31T15:48:18Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "21ba2c15-7ac3-4f8b-9fc1-142e1099a07a",
        "parentId" : "cd451932-2711-436e-bd39-ab551fe8f392",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/3286/commits/20a4635add5f912c6e6c5fd78e06de61846a1171",
        "createdAt" : "2019-10-31T15:50:16Z",
        "updatedAt" : "2019-10-31T15:50:16Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "20a4635add5f912c6e6c5fd78e06de61846a1171",
    "line" : null,
    "diffHunk" : "@@ -63,25 +67,33 @@ final case class ClaimActAsParty(name: Ref.Party) extends Claim\n   * | TransactionService                  | *                          | for each requested party p: canActAs(p)  |\n   * +-------------------------------------+----------------------------+------------------------------------------+\n   */\n-case class Claims(claims: Seq[Claim]) {\n+final case class Claims(claims: Seq[Claim], expiration: Option[Instant] = None) {\n \n-  /** Returns true if the set of claims authorizes the user to use admin services */\n-  def isAdmin: Boolean = claims.exists {\n-    case ClaimAdmin => true\n-    case _ => false\n-  }\n+  /** Returns false if the expiration timestamp exists and is greather than or equal to the current time */\n+  def notExpired(now: Instant): Boolean =\n+    expiration.forall(now.isBefore)\n \n-  /** Returns true if the set of claims authorizes the user to use public services */\n-  def isPublic: Boolean = claims.exists {\n-    case ClaimPublic => true\n-    case _ => false\n-  }\n+  /** Returns true if the set of claims authorizes the user to use admin services, unless the claims expired */\n+  def isAdmin(now: Instant): Boolean =\n+    notExpired(now) && claims.exists {\n+      case ClaimAdmin => true\n+      case _ => false\n+    }\n \n-  /** Returns true if the set of claims authorizes the user to act as the given party */\n-  def canActAs(party: String): Boolean = claims.exists {\n-    case ClaimActAsAnyParty => true\n-    case ClaimActAsParty(p) => p == party\n-    case _ => false\n+  /** Returns true if the set of claims authorizes the user to use public services, unless the claims expired */\n+  def isPublic(now: Instant): Boolean =\n+    notExpired(now) && claims.exists {"
  },
  {
    "id" : "b55993a5-16a9-4a53-9dac-ec6aa80a8547",
    "prId" : 3272,
    "comments" : [
      {
        "id" : "66f6a1be-9409-4a94-ad75-0d25b590b81a",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Is there any specific reason for this to be a `def`?",
        "createdAt" : "2019-10-29T13:34:15Z",
        "updatedAt" : "2019-10-29T14:29:37Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "05f5140c3fc95ab3e5a2bddb153bedc2fdd1217d",
    "line" : null,
    "diffHunk" : "@@ -88,8 +88,8 @@ case class Claims(claims: Seq[Claim]) {\n object Claims {\n \n   /** A set of [[Claims]] that does not have any authorization */\n-  def empty: Claims = Claims(List.empty[Claim])\n+  def empty = Claims(List.empty[Claim])"
  },
  {
    "id" : "c2bcde59-3bbc-46bd-9b42-ab6b2cc4e8f1",
    "prId" : 3272,
    "comments" : [
      {
        "id" : "b43204a1-60bb-4612-ad90-b318fe5b585e",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Same here, looks immutable, I believe we can safely share this.",
        "createdAt" : "2019-10-29T13:34:49Z",
        "updatedAt" : "2019-10-29T14:29:37Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "05f5140c3fc95ab3e5a2bddb153bedc2fdd1217d",
    "line" : null,
    "diffHunk" : "@@ -88,8 +88,8 @@ case class Claims(claims: Seq[Claim]) {\n object Claims {\n \n   /** A set of [[Claims]] that does not have any authorization */\n-  def empty: Claims = Claims(List.empty[Claim])\n+  def empty = Claims(List.empty[Claim])\n \n   /** A set of [[Claims]] that has all possible authorizations */\n-  def wildcard: Claims = Claims(List[Claim](ClaimPublic, ClaimAdmin, ClaimActAsAnyParty))\n+  def wildcard = Claims(List[Claim](ClaimPublic, ClaimAdmin, ClaimActAsAnyParty))"
  }
]