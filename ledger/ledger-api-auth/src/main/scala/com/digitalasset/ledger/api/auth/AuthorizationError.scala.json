[
  {
    "id" : "a2b3e457-edfc-4f4a-a693-2604c27b1fd4",
    "prId" : 6857,
    "comments" : [
      {
        "id" : "528e096a-4d89-4c97-bcbf-13655b329dba",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\ncase object AuthorizationErrorMissingPublicClaim extends AuthorizationError {\r\n  override val reason = \"Claims do not authorize the use of public services.\"\r\n}\r\n```",
        "createdAt" : "2020-07-27T05:49:42Z",
        "updatedAt" : "2020-07-27T12:10:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9872e5d13001fd1fe900cfabf9fff26f901ba05a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.auth\n+\n+import java.time.Instant\n+\n+sealed abstract class AuthorizationError {\n+  def reason: String\n+}\n+\n+final case class AuthorizationErrorExpired(authorizedUntil: Instant, currentTime: Instant)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Expired. Claims were valid until $authorizedUntil, current time is $currentTime\"\n+}\n+\n+final case class AuthorizationErrorExpiredOnStream() extends AuthorizationError {\n+  override def reason = s\"Claims have expired after the result stream has started\"\n+}\n+\n+final case class AuthorizationErrorInvalidLedger(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid ledger. Claims are only valid for ledgerId $authorized, actual ledgerId is $actual\"\n+}\n+\n+final case class AuthorizationErrorInvalidParticipant(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid participant. Claims are only valid for participantId $authorized, actual participantId is $actual\"\n+}\n+\n+final case class AuthorizationErrorInvalidApplication(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid application. Claims are only valid for applicationId $authorized, actual applicationId is $actual\"\n+}\n+\n+final case class AuthorizationErrorMissingPublicClaim() extends AuthorizationError {\n+  override def reason = s\"Missing public claim. Claims do not authorize the use of public services\"\n+}"
  },
  {
    "id" : "6b62e02c-3a29-43ce-a44e-323d7ab11b61",
    "prId" : 6857,
    "comments" : [
      {
        "id" : "ee916df6-2b7a-4339-ac0f-424fa84607be",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\ncase object AuthorizationErrorExpiredOnStream extends AuthorizationError {\r\n  override val reason = \"Claims have expired since the result stream has started.\"\r\n}\r\n```",
        "createdAt" : "2020-07-27T05:50:17Z",
        "updatedAt" : "2020-07-27T12:10:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9872e5d13001fd1fe900cfabf9fff26f901ba05a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.auth\n+\n+import java.time.Instant\n+\n+sealed abstract class AuthorizationError {\n+  def reason: String\n+}\n+\n+final case class AuthorizationErrorExpired(authorizedUntil: Instant, currentTime: Instant)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Expired. Claims were valid until $authorizedUntil, current time is $currentTime\"\n+}\n+\n+final case class AuthorizationErrorExpiredOnStream() extends AuthorizationError {\n+  override def reason = s\"Claims have expired after the result stream has started\"\n+}"
  },
  {
    "id" : "2a5cd98e-7e62-4ac5-b477-9f8792458ded",
    "prId" : 6857,
    "comments" : [
      {
        "id" : "f8dee61d-a9e9-445c-b8f2-3e565d9dbf5d",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\ncase object AuthorizationErrorMissingAdminClaim extends AuthorizationError {\r\n  override val reason =\r\n    \"Claims do not authorize the use of administrative services.\"\r\n}\r\n```",
        "createdAt" : "2020-07-27T05:51:29Z",
        "updatedAt" : "2020-07-27T12:10:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9872e5d13001fd1fe900cfabf9fff26f901ba05a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.auth\n+\n+import java.time.Instant\n+\n+sealed abstract class AuthorizationError {\n+  def reason: String\n+}\n+\n+final case class AuthorizationErrorExpired(authorizedUntil: Instant, currentTime: Instant)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Expired. Claims were valid until $authorizedUntil, current time is $currentTime\"\n+}\n+\n+final case class AuthorizationErrorExpiredOnStream() extends AuthorizationError {\n+  override def reason = s\"Claims have expired after the result stream has started\"\n+}\n+\n+final case class AuthorizationErrorInvalidLedger(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid ledger. Claims are only valid for ledgerId $authorized, actual ledgerId is $actual\"\n+}\n+\n+final case class AuthorizationErrorInvalidParticipant(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid participant. Claims are only valid for participantId $authorized, actual participantId is $actual\"\n+}\n+\n+final case class AuthorizationErrorInvalidApplication(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid application. Claims are only valid for applicationId $authorized, actual applicationId is $actual\"\n+}\n+\n+final case class AuthorizationErrorMissingPublicClaim() extends AuthorizationError {\n+  override def reason = s\"Missing public claim. Claims do not authorize the use of public services\"\n+}\n+\n+final case class AuthorizationErrorMissingAdminClaim() extends AuthorizationError {\n+  override def reason =\n+    s\"Missing admin claim. Claims do not authorize the use of administrative services\"\n+}"
  },
  {
    "id" : "ce7a7a5d-6da1-4202-bd4e-7519c90c3fd8",
    "prId" : 6857,
    "comments" : [
      {
        "id" : "d9daad8b-f177-463f-8add-c8f469afaeb8",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n  override val reason = s\"Claims do not authorize to act as party $party.\"\r\n```",
        "createdAt" : "2020-07-27T05:52:21Z",
        "updatedAt" : "2020-07-27T12:10:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9872e5d13001fd1fe900cfabf9fff26f901ba05a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.auth\n+\n+import java.time.Instant\n+\n+sealed abstract class AuthorizationError {\n+  def reason: String\n+}\n+\n+final case class AuthorizationErrorExpired(authorizedUntil: Instant, currentTime: Instant)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Expired. Claims were valid until $authorizedUntil, current time is $currentTime\"\n+}\n+\n+final case class AuthorizationErrorExpiredOnStream() extends AuthorizationError {\n+  override def reason = s\"Claims have expired after the result stream has started\"\n+}\n+\n+final case class AuthorizationErrorInvalidLedger(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid ledger. Claims are only valid for ledgerId $authorized, actual ledgerId is $actual\"\n+}\n+\n+final case class AuthorizationErrorInvalidParticipant(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid participant. Claims are only valid for participantId $authorized, actual participantId is $actual\"\n+}\n+\n+final case class AuthorizationErrorInvalidApplication(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid application. Claims are only valid for applicationId $authorized, actual applicationId is $actual\"\n+}\n+\n+final case class AuthorizationErrorMissingPublicClaim() extends AuthorizationError {\n+  override def reason = s\"Missing public claim. Claims do not authorize the use of public services\"\n+}\n+\n+final case class AuthorizationErrorMissingAdminClaim() extends AuthorizationError {\n+  override def reason =\n+    s\"Missing admin claim. Claims do not authorize the use of administrative services\"\n+}\n+\n+final case class AuthorizationErrorMissingReadClaim(party: String) extends AuthorizationError {\n+  override def reason = s\"Missing read claim. Claims do not authorize to read data for party $party\"\n+}\n+\n+final case class AuthorizationErrorMissingActClaim(party: String) extends AuthorizationError {\n+  override def reason = s\"Missing act claim. Claims do not authorize to act as party $party\""
  },
  {
    "id" : "23de7038-232b-4c5e-927a-a68056a912a0",
    "prId" : 6857,
    "comments" : [
      {
        "id" : "894f8c55-faf4-469c-82eb-2f978f958e4a",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n  override val reason = s\"Claims do not authorize to read data for party $party.\"\r\n```",
        "createdAt" : "2020-07-27T05:52:34Z",
        "updatedAt" : "2020-07-27T12:10:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9872e5d13001fd1fe900cfabf9fff26f901ba05a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.auth\n+\n+import java.time.Instant\n+\n+sealed abstract class AuthorizationError {\n+  def reason: String\n+}\n+\n+final case class AuthorizationErrorExpired(authorizedUntil: Instant, currentTime: Instant)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Expired. Claims were valid until $authorizedUntil, current time is $currentTime\"\n+}\n+\n+final case class AuthorizationErrorExpiredOnStream() extends AuthorizationError {\n+  override def reason = s\"Claims have expired after the result stream has started\"\n+}\n+\n+final case class AuthorizationErrorInvalidLedger(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid ledger. Claims are only valid for ledgerId $authorized, actual ledgerId is $actual\"\n+}\n+\n+final case class AuthorizationErrorInvalidParticipant(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid participant. Claims are only valid for participantId $authorized, actual participantId is $actual\"\n+}\n+\n+final case class AuthorizationErrorInvalidApplication(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid application. Claims are only valid for applicationId $authorized, actual applicationId is $actual\"\n+}\n+\n+final case class AuthorizationErrorMissingPublicClaim() extends AuthorizationError {\n+  override def reason = s\"Missing public claim. Claims do not authorize the use of public services\"\n+}\n+\n+final case class AuthorizationErrorMissingAdminClaim() extends AuthorizationError {\n+  override def reason =\n+    s\"Missing admin claim. Claims do not authorize the use of administrative services\"\n+}\n+\n+final case class AuthorizationErrorMissingReadClaim(party: String) extends AuthorizationError {\n+  override def reason = s\"Missing read claim. Claims do not authorize to read data for party $party\""
  },
  {
    "id" : "23029f12-2026-44ab-aa66-ca3ee24c7979",
    "prId" : 6857,
    "comments" : [
      {
        "id" : "3feb120b-5532-41ea-a0df-1e188d941987",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n    s\"Claims are only valid for applicationId $authorized, actual applicationId is $actual.\"\r\n```",
        "createdAt" : "2020-07-27T05:53:57Z",
        "updatedAt" : "2020-07-27T12:10:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9872e5d13001fd1fe900cfabf9fff26f901ba05a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.auth\n+\n+import java.time.Instant\n+\n+sealed abstract class AuthorizationError {\n+  def reason: String\n+}\n+\n+final case class AuthorizationErrorExpired(authorizedUntil: Instant, currentTime: Instant)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Expired. Claims were valid until $authorizedUntil, current time is $currentTime\"\n+}\n+\n+final case class AuthorizationErrorExpiredOnStream() extends AuthorizationError {\n+  override def reason = s\"Claims have expired after the result stream has started\"\n+}\n+\n+final case class AuthorizationErrorInvalidLedger(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid ledger. Claims are only valid for ledgerId $authorized, actual ledgerId is $actual\"\n+}\n+\n+final case class AuthorizationErrorInvalidParticipant(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid participant. Claims are only valid for participantId $authorized, actual participantId is $actual\"\n+}\n+\n+final case class AuthorizationErrorInvalidApplication(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid application. Claims are only valid for applicationId $authorized, actual applicationId is $actual\""
  },
  {
    "id" : "73d4f053-abb3-4163-b387-0a9422dcd52c",
    "prId" : 6857,
    "comments" : [
      {
        "id" : "b2854880-0750-4315-abf1-f1c69ecbc75d",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n    s\"Claims are only valid for participantId $authorized, actual participantId is $actual.\"\r\n```",
        "createdAt" : "2020-07-27T05:54:37Z",
        "updatedAt" : "2020-07-27T12:10:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9872e5d13001fd1fe900cfabf9fff26f901ba05a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.auth\n+\n+import java.time.Instant\n+\n+sealed abstract class AuthorizationError {\n+  def reason: String\n+}\n+\n+final case class AuthorizationErrorExpired(authorizedUntil: Instant, currentTime: Instant)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Expired. Claims were valid until $authorizedUntil, current time is $currentTime\"\n+}\n+\n+final case class AuthorizationErrorExpiredOnStream() extends AuthorizationError {\n+  override def reason = s\"Claims have expired after the result stream has started\"\n+}\n+\n+final case class AuthorizationErrorInvalidLedger(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid ledger. Claims are only valid for ledgerId $authorized, actual ledgerId is $actual\"\n+}\n+\n+final case class AuthorizationErrorInvalidParticipant(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid participant. Claims are only valid for participantId $authorized, actual participantId is $actual\""
  },
  {
    "id" : "d53e49fd-6792-48a2-bd55-4791e3d9f8c8",
    "prId" : 6857,
    "comments" : [
      {
        "id" : "e0d12bc8-9b71-4aed-9077-6fe009d34bb6",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n    s\"Claims are only valid for ledgerId $authorized, actual ledgerId is $actual.\"\r\n```",
        "createdAt" : "2020-07-27T05:54:58Z",
        "updatedAt" : "2020-07-27T12:10:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9872e5d13001fd1fe900cfabf9fff26f901ba05a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.auth\n+\n+import java.time.Instant\n+\n+sealed abstract class AuthorizationError {\n+  def reason: String\n+}\n+\n+final case class AuthorizationErrorExpired(authorizedUntil: Instant, currentTime: Instant)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Expired. Claims were valid until $authorizedUntil, current time is $currentTime\"\n+}\n+\n+final case class AuthorizationErrorExpiredOnStream() extends AuthorizationError {\n+  override def reason = s\"Claims have expired after the result stream has started\"\n+}\n+\n+final case class AuthorizationErrorInvalidLedger(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid ledger. Claims are only valid for ledgerId $authorized, actual ledgerId is $actual\""
  },
  {
    "id" : "2735f9ca-1c3f-40ca-bc97-b9de063f349b",
    "prId" : 6857,
    "comments" : [
      {
        "id" : "3eaa2c7c-df90-4118-9c90-608e194bd583",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n  override val reason =\r\n```",
        "createdAt" : "2020-07-27T05:55:44Z",
        "updatedAt" : "2020-07-27T12:10:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9872e5d13001fd1fe900cfabf9fff26f901ba05a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.auth\n+\n+import java.time.Instant\n+\n+sealed abstract class AuthorizationError {\n+  def reason: String\n+}\n+\n+final case class AuthorizationErrorExpired(authorizedUntil: Instant, currentTime: Instant)\n+    extends AuthorizationError {\n+  override def reason ="
  },
  {
    "id" : "e98cc09a-e570-4150-b0e6-b128b8bdc748",
    "prId" : 6857,
    "comments" : [
      {
        "id" : "c3f478f5-275d-4a51-be25-6ea08f7c25ab",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n  override val reason = s\"Claims have expired after the result stream has started\"\r\n```",
        "createdAt" : "2020-07-27T05:55:54Z",
        "updatedAt" : "2020-07-27T12:10:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9872e5d13001fd1fe900cfabf9fff26f901ba05a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.auth\n+\n+import java.time.Instant\n+\n+sealed abstract class AuthorizationError {\n+  def reason: String\n+}\n+\n+final case class AuthorizationErrorExpired(authorizedUntil: Instant, currentTime: Instant)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Expired. Claims were valid until $authorizedUntil, current time is $currentTime\"\n+}\n+\n+final case class AuthorizationErrorExpiredOnStream() extends AuthorizationError {\n+  override def reason = s\"Claims have expired after the result stream has started\""
  },
  {
    "id" : "deb37626-52e8-423c-b751-c037522b8710",
    "prId" : 6857,
    "comments" : [
      {
        "id" : "ddd66627-29ae-46c4-8887-d9318b3929f9",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n  override val reason =\r\n```",
        "createdAt" : "2020-07-27T05:56:06Z",
        "updatedAt" : "2020-07-27T12:10:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9872e5d13001fd1fe900cfabf9fff26f901ba05a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.auth\n+\n+import java.time.Instant\n+\n+sealed abstract class AuthorizationError {\n+  def reason: String\n+}\n+\n+final case class AuthorizationErrorExpired(authorizedUntil: Instant, currentTime: Instant)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Expired. Claims were valid until $authorizedUntil, current time is $currentTime\"\n+}\n+\n+final case class AuthorizationErrorExpiredOnStream() extends AuthorizationError {\n+  override def reason = s\"Claims have expired after the result stream has started\"\n+}\n+\n+final case class AuthorizationErrorInvalidLedger(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason ="
  },
  {
    "id" : "b40dcd09-fdd2-4ce1-b76c-88961e87c28a",
    "prId" : 6857,
    "comments" : [
      {
        "id" : "730e3c05-4fc6-416a-b002-87cb689acc56",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n  override val reason =\r\n```",
        "createdAt" : "2020-07-27T05:56:14Z",
        "updatedAt" : "2020-07-27T12:10:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9872e5d13001fd1fe900cfabf9fff26f901ba05a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.auth\n+\n+import java.time.Instant\n+\n+sealed abstract class AuthorizationError {\n+  def reason: String\n+}\n+\n+final case class AuthorizationErrorExpired(authorizedUntil: Instant, currentTime: Instant)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Expired. Claims were valid until $authorizedUntil, current time is $currentTime\"\n+}\n+\n+final case class AuthorizationErrorExpiredOnStream() extends AuthorizationError {\n+  override def reason = s\"Claims have expired after the result stream has started\"\n+}\n+\n+final case class AuthorizationErrorInvalidLedger(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid ledger. Claims are only valid for ledgerId $authorized, actual ledgerId is $actual\"\n+}\n+\n+final case class AuthorizationErrorInvalidParticipant(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason ="
  },
  {
    "id" : "8c562efc-4d51-46fc-897b-9a13187476c2",
    "prId" : 6857,
    "comments" : [
      {
        "id" : "8675a84d-49a7-4d96-8296-1dcdef755ea9",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n  override val reason =\r\n```",
        "createdAt" : "2020-07-27T05:56:26Z",
        "updatedAt" : "2020-07-27T12:10:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9872e5d13001fd1fe900cfabf9fff26f901ba05a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.auth\n+\n+import java.time.Instant\n+\n+sealed abstract class AuthorizationError {\n+  def reason: String\n+}\n+\n+final case class AuthorizationErrorExpired(authorizedUntil: Instant, currentTime: Instant)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Expired. Claims were valid until $authorizedUntil, current time is $currentTime\"\n+}\n+\n+final case class AuthorizationErrorExpiredOnStream() extends AuthorizationError {\n+  override def reason = s\"Claims have expired after the result stream has started\"\n+}\n+\n+final case class AuthorizationErrorInvalidLedger(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid ledger. Claims are only valid for ledgerId $authorized, actual ledgerId is $actual\"\n+}\n+\n+final case class AuthorizationErrorInvalidParticipant(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason =\n+    s\"Invalid participant. Claims are only valid for participantId $authorized, actual participantId is $actual\"\n+}\n+\n+final case class AuthorizationErrorInvalidApplication(authorized: String, actual: String)\n+    extends AuthorizationError {\n+  override def reason ="
  },
  {
    "id" : "9dbe12df-164e-4469-9ce8-c4f26ed316c1",
    "prId" : 6857,
    "comments" : [
      {
        "id" : "16987f7e-24e7-478c-bd83-8981c9a80478",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Instead of prepending each implementation with `AuthorizationError`, I would recommend putting them all in a companion object.",
        "createdAt" : "2020-07-27T06:10:59Z",
        "updatedAt" : "2020-07-27T12:10:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9872e5d13001fd1fe900cfabf9fff26f901ba05a",
    "line" : 8,
    "diffHunk" : "@@ -0,0 +1,55 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.api.auth\n+\n+import java.time.Instant\n+\n+sealed abstract class AuthorizationError {"
  }
]