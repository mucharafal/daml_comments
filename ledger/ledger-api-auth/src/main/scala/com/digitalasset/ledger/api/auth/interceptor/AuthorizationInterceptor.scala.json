[
  {
    "id" : "be843d35-9d4b-4a9b-95c8-237f06ffc009",
    "prId" : 4485,
    "comments" : [
      {
        "id" : "dba32f98-25f7-4bbc-baef-da1496f2d61f",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "This assumes that the AuthService returns empty claims if the request is not authenticated (missing/invalid token). That leaves the AuthService no way to signal that the user was authenticated, but has no authorization (not even for the public services).\r\n\r\nThis is not a big issue, but we should add a corresponding comment to the docs of `AuthService.decodeMetadata`.",
        "createdAt" : "2020-02-12T20:55:54Z",
        "updatedAt" : "2020-02-17T10:18:01Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "821283d0-20d6-48d9-bb87-f234e0f5cecc",
        "parentId" : "dba32f98-25f7-4bbc-baef-da1496f2d61f",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I thought you needed at least `ClaimPublic` to access public services.",
        "createdAt" : "2020-02-13T08:04:55Z",
        "updatedAt" : "2020-02-17T10:18:01Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a232784c-ad60-4afa-85c4-052aaf4fd55d",
        "parentId" : "dba32f98-25f7-4bbc-baef-da1496f2d61f",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "If that wasn't the case then I have no idea why the tests are green. :smile: ",
        "createdAt" : "2020-02-13T08:05:54Z",
        "updatedAt" : "2020-02-17T10:18:01Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cb9f0870-f0b7-4ee6-b5f9-b082d62c542e",
        "parentId" : "dba32f98-25f7-4bbc-baef-da1496f2d61f",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "> I thought you needed at least ClaimPublic to access public services.\r\n\r\nThat is correct. The sandbox AuthService will always include at least a `ClaimPublic` for any valid token, but this might not be the case for other AuthService implementations.\r\n\r\nThat's why I thought we should add a note at rc/main/scala/com/digitalasset/ledger/api/auth/AuthService.scala#L26, something like:\r\n\r\n```scala\r\n/**\r\nReturn empty [[Claims]] to reject requests with a UNAUTHENTICATED error status.\r\nReturn [[Claims]] with only a single [[ClaimPublic]] claim to reject all non-public requests with a PERMISSION_DENIED status.\r\nReturn a failed future to reject requests with an INTERNAL error status.\r\n*/\r\n```",
        "createdAt" : "2020-02-17T10:00:46Z",
        "updatedAt" : "2020-02-17T10:18:01Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3010bff8-f3b2-40e2-9f72-8504b2fbfee0",
        "parentId" : "dba32f98-25f7-4bbc-baef-da1496f2d61f",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Will do, thanks!",
        "createdAt" : "2020-02-17T10:16:14Z",
        "updatedAt" : "2020-02-17T10:18:01Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a8e4f847-e1f1-40cf-960f-a69556e4f88c",
        "parentId" : "dba32f98-25f7-4bbc-baef-da1496f2d61f",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/4485/commits/90490b862b1cef7095149d345f5792399fe9ce05\r\nThank you for the clarification!",
        "createdAt" : "2020-02-17T10:18:20Z",
        "updatedAt" : "2020-02-17T10:18:21Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "90490b862b1cef7095149d345f5792399fe9ce05",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +57,61 @@            logger.debug(s\"Auth metadata decoded into empty claims, returning UNAUTHENTICATED\")\n            call.close(Status.UNAUTHENTICATED, new Metadata())\n            new ServerCall.Listener[Nothing]() {}\n          case Success(claims) =>\n            val nextCtx = prevCtx.withValue(contextKeyClaim, claims)"
  }
]