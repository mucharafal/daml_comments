[
  {
    "id" : "9584e04e-de25-4ed0-b14a-8d2c61570e9a",
    "prId" : 1695,
    "comments" : [
      {
        "id" : "bf7c480f-45dd-434a-9df6-96e510b10d51",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "We could generalize this to `instance IsParties a => IsParties (Optional a)`. Not sure how sensible that would be.",
        "createdAt" : "2019-06-16T19:58:03Z",
        "updatedAt" : "2019-06-16T19:58:03Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1ff06f51-d563-4263-9097-973b518685b8",
        "parentId" : "bf7c480f-45dd-434a-9df6-96e510b10d51",
        "author" : {
          "login" : "sofus-da",
          "name" : "Sofus Mortensen",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/29126788?u=92b937e565bf9b9bf3e75a926ccc26addec5a761&v=4"
        },
        "body" : "Actually I was thinking today that I will need `[Optional Party]` too. So guess they ought to both be generalized. ",
        "createdAt" : "2019-06-16T20:06:37Z",
        "updatedAt" : "2019-06-16T20:06:37Z",
        "lastEditedBy" : {
          "login" : "sofus-da",
          "name" : "Sofus Mortensen",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/29126788?u=92b937e565bf9b9bf3e75a926ccc26addec5a761&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d78b0ebe-3641-433a-99ea-3d26eee9b014",
        "parentId" : "bf7c480f-45dd-434a-9df6-96e510b10d51",
        "author" : {
          "login" : "sofusmortensen",
          "name" : "Sofus Mortensen",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/2051286?u=7da626627cdd2284677b9d472c1de89271d8bfc5&v=4"
        },
        "body" : "@cocreature \r\nHmm - something like this, perhaps?\r\n```\r\ninstance IsParties Party where\r\n  toParties p = [p]\r\n\r\ninstance IsParties a => IsParties [a] where\r\n  toParties ps = concat $ fmap toParties ps\r\n\r\ninstance IsParties a => IsParties (Optional a) where\r\n  toParties None = []\r\n  toParties (Some p) = toParties p\r\n```",
        "createdAt" : "2019-06-16T22:24:00Z",
        "updatedAt" : "2019-06-16T22:24:00Z",
        "lastEditedBy" : {
          "login" : "sofusmortensen",
          "name" : "Sofus Mortensen",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/2051286?u=7da626627cdd2284677b9d472c1de89271d8bfc5&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "21189dca-cc32-432d-88a1-fa8b9cb2893c",
        "parentId" : "bf7c480f-45dd-434a-9df6-96e510b10d51",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Looks sensible to me but it would probably be good if someone who is more familiar with this takes a look, maybe @bame-da or @hurryabit.",
        "createdAt" : "2019-06-17T08:30:28Z",
        "updatedAt" : "2019-06-17T08:30:29Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0398d750-e28e-4d57-9464-ee10f366dba7",
        "parentId" : "bf7c480f-45dd-434a-9df6-96e510b10d51",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Generalising the list version is going to lead to worse error messages. My inclination is that we should add `Optional Party` and `[Party]`, but if @sofus-da wants `[Optional Party]` then a catMaybes (or whatever we called it) should be used.",
        "createdAt" : "2019-06-17T10:57:41Z",
        "updatedAt" : "2019-06-17T10:58:17Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "68c44b56099e591a5db723d843c06f8eff5155f1",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +180,184 @@  toParties ps = ps\n\ninstance IsParties (Optional Party) where\n  toParties None = []\n  toParties (Some p) = [p]"
  },
  {
    "id" : "a424821b-f5cf-46bf-8c74-9cb789294762",
    "prId" : 1527,
    "comments" : [
      {
        "id" : "92e8eea0-c50a-4c12-a35d-3bc3bcf74942",
        "parentId" : null,
        "author" : null,
        "body" : "Can the documentation in `//ghc-lib/template-desugaring.md` get an update please or if you prefer, you can instruct me to do it.",
        "createdAt" : "2019-06-05T12:43:55Z",
        "updatedAt" : "2019-06-05T13:46:52Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "fd45b4ae-57a3-4bb4-9f03-4b4f6ad4ce32",
        "parentId" : "92e8eea0-c50a-4c12-a35d-3bc3bcf74942",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I updated it.",
        "createdAt" : "2019-06-05T12:54:20Z",
        "updatedAt" : "2019-06-05T13:46:52Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2b75cf061a2690aa0beb68877031162e0c52644b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +185,189 @@\n    -- | The maintainers of the contract key.\n    maintainer : k -> [Party]\n\n    -- | HIDE"
  },
  {
    "id" : "8a4b222e-eacf-4ca0-a92d-a097f5ce74e6",
    "prId" : 719,
    "comments" : [
      {
        "id" : "eddbc92f-00f2-4e4d-a9e1-5b5f0248cbbb",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "@neil-da I forgot this in the beginning. I hope we can live with that.",
        "createdAt" : "2019-04-26T09:05:29Z",
        "updatedAt" : "2019-04-26T09:05:29Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b0f05b51-062e-42be-96b9-20751e75b379",
        "parentId" : "eddbc92f-00f2-4e4d-a9e1-5b5f0248cbbb",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Sure - it only impacts this one function.",
        "createdAt" : "2019-04-26T09:10:42Z",
        "updatedAt" : "2019-04-26T09:10:42Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ab895ac0eb2ea7e36f6a5af836a5c0a394f84df",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2,6 @@-- SPDX-License-Identifier: Apache-2.0\n\n{-# LANGUAGE AllowAmbiguousTypes #-}\n{-# LANGUAGE NoImplicitPrelude #-}\n"
  },
  {
    "id" : "74e7ebb7-02e7-4bac-98e6-a60cef67b848",
    "prId" : 718,
    "comments" : [
      {
        "id" : "6a92fd68-41df-4e78-8c54-361c1a652a4b",
        "parentId" : null,
        "author" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "body" : "I'd usually uppercase ID (here and below) but up to you\r\n```suggestion\r\n-- | Look up the contract ID associated with a given contract key.\r\n```",
        "createdAt" : "2019-04-26T08:52:05Z",
        "updatedAt" : "2019-04-26T11:56:01Z",
        "lastEditedBy" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2bc31b6d-0006-4bcc-b73e-2be54a585b7e",
        "parentId" : "6a92fd68-41df-4e78-8c54-361c1a652a4b",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "The surrounding documentation uses \"contract id\" rather than \"contract ID\". I'd like to blend in.",
        "createdAt" : "2019-04-26T08:57:33Z",
        "updatedAt" : "2019-04-26T11:56:01Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "416019fcc7a4029d2870b08266720999566aea06",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +53,57 @@stakeholder c = signatory c ++ observer c\n\n-- | Look up the contract id associated with a given contract key.\n--\n-- The `c` needs to be passed using an explicit type application. For"
  },
  {
    "id" : "c6ff1f6a-c19d-4e65-bb12-c0cef78fa6eb",
    "prId" : 718,
    "comments" : [
      {
        "id" : "528876d2-fa6e-45af-9e51-f5ede6b479ce",
        "parentId" : null,
        "author" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "body" : "Isn't this the one that requires lots of authorization? That feels like an important thing to put in here.",
        "createdAt" : "2019-04-26T08:52:43Z",
        "updatedAt" : "2019-04-26T11:56:01Z",
        "lastEditedBy" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "416019fcc7a4029d2870b08266720999566aea06",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +57,61 @@-- The `c` needs to be passed using an explicit type application. For\n-- instance, if you want to look up a contract of template `Account` by its\n-- key `k`, you must call `lookupByKey @Account k`.\nlookupByKey : forall c k. TemplateKey c k => k -> Update (Optional (ContractId c))\nlookupByKey = internalLookupByKey"
  },
  {
    "id" : "fbc64c09-2e7a-4d94-b66a-893916ef8748",
    "prId" : 718,
    "comments" : [
      {
        "id" : "cb94676b-9cd4-4705-bc2b-4c0598173fe6",
        "parentId" : null,
        "author" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "body" : "```suggestion\r\n-- | Fetch the contract ID and contract data associated with a given\r\n```",
        "createdAt" : "2019-04-26T08:52:55Z",
        "updatedAt" : "2019-04-26T11:56:01Z",
        "lastEditedBy" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "416019fcc7a4029d2870b08266720999566aea06",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +61,65 @@lookupByKey = internalLookupByKey\n\n-- | Fetch the contract id and contract data associated with a given\n-- contract key.\n--"
  },
  {
    "id" : "67e5d181-0a02-46af-af6c-9b3cb5f7bc62",
    "prId" : 718,
    "comments" : [
      {
        "id" : "1f53b0f8-9af7-4345-8138-918cf9aebb0a",
        "parentId" : null,
        "author" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "body" : "As above - I'd suggest adding something about authorization required. Maybe also the thing about if it fails, that doesn't mean the contract doesn't exist?",
        "createdAt" : "2019-04-26T08:53:29Z",
        "updatedAt" : "2019-04-26T11:56:01Z",
        "lastEditedBy" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "416019fcc7a4029d2870b08266720999566aea06",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +66,70 @@-- The `c` needs to be passed using an explicit type application. For\n-- instance, if you want to fetch a contract of template `Account` by its\n-- key `k`, you must call `fetchByKey @Account k`.\nfetchByKey : forall c k. TemplateKey c k => k -> Update (ContractId c, c)\nfetchByKey k = fmap unpackPair (internalFetchByKey k)"
  },
  {
    "id" : "b82bae22-bf51-48fc-b53d-11773fdd4607",
    "prId" : 718,
    "comments" : [
      {
        "id" : "387114be-b067-4d54-acfb-b2af5bd00149",
        "parentId" : null,
        "author" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "body" : "This is a bit light. Could you add something saying what a key is? Doesn't need to be much - eg allowing unique lookup, can persist across changes of the contract (unlike the id)",
        "createdAt" : "2019-04-26T08:54:11Z",
        "updatedAt" : "2019-04-26T11:56:01Z",
        "lastEditedBy" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "416019fcc7a4029d2870b08266720999566aea06",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +163,167 @@\nclass Template c => TemplateKey c k | c -> k where\n    -- | The key of a contract.\n    key : c -> k\n"
  },
  {
    "id" : "94e3bde2-dea9-4486-a508-3769023d7a96",
    "prId" : 718,
    "comments" : [
      {
        "id" : "1f86bc00-82bb-4da1-8742-cf89953c8ef2",
        "parentId" : null,
        "author" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "body" : "Also a bit light. Could you add something about what it means to be a maintainer? eg the party/parties guaranteeing that the key is unique.\r\n\r\nAlso, I worry about saying 'maintainers' by default - implies there are usually more than one, and I'm not sure that's going to be the case.",
        "createdAt" : "2019-04-26T08:55:09Z",
        "updatedAt" : "2019-04-26T11:56:01Z",
        "lastEditedBy" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "416019fcc7a4029d2870b08266720999566aea06",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +166,170 @@    key : c -> k\n\n    -- | The maintainers of the contract key.\n    maintainer : c -> [Party]\n"
  },
  {
    "id" : "3a391e50-c426-41e0-a009-bc73ce8b5cb0",
    "prId" : 574,
    "comments" : [
      {
        "id" : "da7210f0-d25b-4ecf-a2aa-6a1e3f7ffb20",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Add HIDE on this and postconsuming please",
        "createdAt" : "2019-04-17T12:27:02Z",
        "updatedAt" : "2019-04-17T18:21:58Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f8572cb5-470c-4595-9c5e-a5d991218afe",
        "parentId" : "da7210f0-d25b-4ecf-a2aa-6a1e3f7ffb20",
        "author" : null,
        "body" : "✔️ ",
        "createdAt" : "2019-04-17T14:36:20Z",
        "updatedAt" : "2019-04-17T18:21:58Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "825b9042188d04bf812ad2955222e5d8e39d33dc",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +100,104 @@\n-- | HIDE\npreconsuming : NoEvent c e -> Consuming\npreconsuming _ = PreConsuming\n"
  },
  {
    "id" : "534365e5-813b-4c62-b461-dd31387e0260",
    "prId" : 574,
    "comments" : [
      {
        "id" : "8270677b-0b8f-4e3c-9d39-8e4f3a40033a",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "What does this comment actually express? How could this not be a lambda?",
        "createdAt" : "2019-04-23T10:57:05Z",
        "updatedAt" : "2019-04-23T10:57:05Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "028b2138-ec09-472c-95df-736ce92dc03d",
        "parentId" : "8270677b-0b8f-4e3c-9d39-8e4f3a40033a",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "It could evaluate to a lambda, rather than being a lambda.",
        "createdAt" : "2019-04-23T10:59:10Z",
        "updatedAt" : "2019-04-23T10:59:10Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4f1f5683-ca80-44c1-957a-2f77f37d4e3d",
        "parentId" : "8270677b-0b8f-4e3c-9d39-8e4f3a40033a",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Oh I see, it had to be a _syntactic_ lambda. Anyway, that's no longer necessary since I re-implemented the dictionary sanitization. I've prepared a PR to remove the comment: https://github.com/digital-asset/daml/pull/628",
        "createdAt" : "2019-04-23T11:21:24Z",
        "updatedAt" : "2019-04-23T11:21:25Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6ed14e79-cfe7-4d53-bb58-66f319c6bfd6",
        "parentId" : "8270677b-0b8f-4e3c-9d39-8e4f3a40033a",
        "author" : null,
        "body" : "The comment was pre-existing. I also had doubts about it, removed it, changed the implementation to `consuming = preconsuming` and found it did indeed cause non-termination so was forced to reinstate it.",
        "createdAt" : "2019-04-23T11:43:46Z",
        "updatedAt" : "2019-04-23T11:44:00Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "e3a9f651-e05e-4ab1-bfa3-3cd977dd24b4",
        "parentId" : "8270677b-0b8f-4e3c-9d39-8e4f3a40033a",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "When I do `consuming = preconsuming`, the test suite still passes. I'll amend the other PR to use that implementation.",
        "createdAt" : "2019-04-23T11:50:55Z",
        "updatedAt" : "2019-04-23T11:50:55Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "825b9042188d04bf812ad2955222e5d8e39d33dc",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +110,114 @@    -- | HIDE\n    consuming : NoEvent c e -> Consuming\n    -- Must be a lambda since otherwise the default-dictionary method\n    -- causes a runtime loop as the method exists in the dictionary,\n    -- takes the dictionary, and can't be eta expanded."
  }
]