[
  {
    "id" : "bbcb69d6-45c8-482c-b1d8-7a786c92e355",
    "prId" : 898,
    "comments" : [
      {
        "id" : "1af530aa-2b8a-402e-859a-72eddc11af76",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "That comment doesnâ€™t really tell users anything more than the function name.",
        "createdAt" : "2019-05-03T17:42:02Z",
        "updatedAt" : "2019-05-03T17:42:25Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0611c29a20446d694de61019cd65d8f3884fa20e",
    "line" : 42,
    "diffHunk" : "@@ -81,6 +98,36 @@ insert = primitive @\"BEMapInsert\"\n union : TextMap a -> TextMap a -> TextMap a\n union m1 m2 = foldl (\\acc (k, v) -> insert k v acc) m2 (toList m1)\n \n+-- | Merge two maps."
  },
  {
    "id" : "52ed1e96-8315-4575-8564-b6eac5f09264",
    "prId" : 573,
    "comments" : [
      {
        "id" : "c3b3ec6b-b68b-493c-a95f-9cfa6e0e5d5e",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "We should add `comparing` to the stdlib.",
        "createdAt" : "2019-04-17T12:30:43Z",
        "updatedAt" : "2019-04-17T17:22:52Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0eb2b4b1-2c52-41ee-9bc0-57a74271377f",
        "parentId" : "c3b3ec6b-b68b-493c-a95f-9cfa6e0e5d5e",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "The question is where to put it. `DA.Ord`? Or do we want `on`? In `DA.Prelude` or `DA.Function`?",
        "createdAt" : "2019-04-17T12:39:41Z",
        "updatedAt" : "2019-04-17T17:22:52Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "87db368b-e85c-4805-a17a-918d8d09a009",
        "parentId" : "c3b3ec6b-b68b-493c-a95f-9cfa6e0e5d5e",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "`DA.Ord` sounds sensible.",
        "createdAt" : "2019-04-17T12:53:03Z",
        "updatedAt" : "2019-04-17T17:22:52Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1912dac2-324b-4033-8c5f-ca1992e3b574",
        "parentId" : "c3b3ec6b-b68b-493c-a95f-9cfa6e0e5d5e",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "I've not found `comparing` to be that valuable in Haskell - I actually removed the HLint hints pointing people at it.",
        "createdAt" : "2019-04-17T12:53:28Z",
        "updatedAt" : "2019-04-17T17:22:52Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f5040f5837e9e230d0ecd81daae9260f3583db09",
    "line" : 51,
    "diffHunk" : "@@ -74,15 +73,14 @@ insert = primitive @\"BEMapInsert\"\n union : TextMap a -> TextMap a -> TextMap a\n union m1 m2 = foldl (\\a b -> (uncurry insert) b a) m2 (toList m1)\n \n-instance (Show a) => Show (TextMap a) where\n-  show m = \"TextMap(\" <> show (toList m) <> \")\"\n+instance Show a => Show (TextMap a) where\n+  show m = \"TextMap \" <> show (toList m)\n \n-\n-instance (Eq a) => Eq (TextMap a) where\n+instance Eq a => Eq (TextMap a) where\n   x == y = toList x == toList y\n \n-instance (Ord a) => Ord (TextMap a) where\n-  compare = \\m1 m2 -> compare (toList m1) (toList m2)\n+instance Ord a => Ord (TextMap a) where\n+  x `compare` y = toList x `compare` toList y"
  }
]