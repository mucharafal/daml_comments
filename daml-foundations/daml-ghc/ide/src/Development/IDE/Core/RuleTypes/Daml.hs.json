[
  {
    "id" : "4a5ab17b-9b2a-4d15-9f96-7d900982520e",
    "prId" : 2021,
    "comments" : [
      {
        "id" : "242e8853-d5e0-4655-8fce-2bb845232460",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Do you know why we need both the deserialized package and the serialized bytes?",
        "createdAt" : "2019-07-05T09:14:47Z",
        "updatedAt" : "2019-07-05T09:22:23Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9b26fce1-a2f2-4652-9124-09a3e3e8f28b",
        "parentId" : "242e8853-d5e0-4655-8fce-2bb845232460",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "We need the deserialized package for things like `initWorld`. I believe the `ByteString` is only used for building the DAR. We could reencode the `Package` here but that seems somewhat silly so for now I would keep it this way.",
        "createdAt" : "2019-07-05T09:24:22Z",
        "updatedAt" : "2019-07-05T09:24:22Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2b9eed53a06802ecce5c0c041a1c7083f34c3072",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +40,44 @@    { dalfPackageId :: LF.PackageId\n    , dalfPackagePkg :: LF.Package\n    , dalfPackageBytes :: BS.ByteString\n    } deriving (Show, Eq, Generic)\n"
  }
]