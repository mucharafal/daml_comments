[
  {
    "id" : "c670f8fd-151b-4fa4-a836-9f535810b87e",
    "prId" : 265,
    "comments" : [
      {
        "id" : "376dfe6d-4a9e-4946-8722-e62b432415ce",
        "parentId" : null,
        "author" : {
          "login" : "martin-drhu-da",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/31696042?u=5fec5d8a968715bab332fcb4be485319b66a7892&v=4"
        },
        "body" : "@shayne-fletcher-da Looks like somebody has an OCaml background. Or should I spell it O_caml? :stuck_out_tongue_winking_eye:",
        "createdAt" : "2019-04-05T18:55:13Z",
        "updatedAt" : "2019-04-05T19:35:17Z",
        "lastEditedBy" : {
          "login" : "martin-drhu-da",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/31696042?u=5fec5d8a968715bab332fcb4be485319b66a7892&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e31546bd-363a-4835-aa85-167b66c2afb2",
        "parentId" : "376dfe6d-4a9e-4946-8722-e62b432415ce",
        "author" : null,
        "body" : "Yes, I thought you might pick me up here for my \"inflexibility\" ( ðŸ˜„  ). It's not my first violation in that folder (so here I stand on precedent)!\r\n\r\nOoh - have you read [this](https://caml.inria.fr/pub/papers/xleroy-modular_modules-jfp.pdf)?",
        "createdAt" : "2019-04-05T19:02:40Z",
        "updatedAt" : "2019-04-05T19:35:17Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "64cec0a7cd098c55dc9776133be735df6bb2e5fb",
    "line" : 10,
    "diffHunk" : "@@ -0,0 +1,22 @@\n+-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its\n+-- affiliates.  All rights reserved.\n+\n+-- This is a compile-time test.\n+\n+{-# LANGUAGE NoImplicitPrelude #-}\n+\n+-- Show that if the names of `Prelude` are not in scope, then there\n+-- should be no ambiguity about `concat` introduced by `DA.Foldable`.\n+\n+daml 1.2\n+module No_concat_clash where"
  },
  {
    "id" : "a459109a-bc1c-4243-9b0d-09db6e867e90",
    "prId" : 265,
    "comments" : [
      {
        "id" : "8e8a685e-17a9-4f3a-aaf5-dc8ec2611de3",
        "parentId" : null,
        "author" : {
          "login" : "martin-drhu-da",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/31696042?u=5fec5d8a968715bab332fcb4be485319b66a7892&v=4"
        },
        "body" : "It would be good to have two `signatory` clauses to make sure we actually produce a reference to `concat` during desugaring. I can envision future optimizations which omit the `concat` when there's only one `signatory` clause.",
        "createdAt" : "2019-04-05T18:56:30Z",
        "updatedAt" : "2019-04-05T19:35:17Z",
        "lastEditedBy" : {
          "login" : "martin-drhu-da",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/31696042?u=5fec5d8a968715bab332fcb4be485319b66a7892&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4f348e43-3cdd-40d9-8c3e-136b18c6f49d",
        "parentId" : "8e8a685e-17a9-4f3a-aaf5-dc8ec2611de3",
        "author" : null,
        "body" : "IIRC, we do validation checks so in fact at this time, two `signatory` clauses would be a hard error.",
        "createdAt" : "2019-04-05T19:03:34Z",
        "updatedAt" : "2019-04-05T19:35:17Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "64cec0a7cd098c55dc9776133be735df6bb2e5fb",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,22 @@\n+-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its\n+-- affiliates.  All rights reserved.\n+\n+-- This is a compile-time test.\n+\n+{-# LANGUAGE NoImplicitPrelude #-}\n+\n+-- Show that if the names of `Prelude` are not in scope, then there\n+-- should be no ambiguity about `concat` introduced by `DA.Foldable`.\n+\n+daml 1.2\n+module No_concat_clash where\n+\n+import Prelude qualified\n+import DA.Foldable  -- for `concat`.\n+\n+template T\n+  with\n+    ps : [Prelude.Party]\n+  where\n+    signatory ps"
  },
  {
    "id" : "2f1f4910-c2ef-4b6b-9eda-7ccddab37616",
    "prId" : 265,
    "comments" : [
      {
        "id" : "a701f305-a797-4a7b-8e86-2da145d6bb52",
        "parentId" : null,
        "author" : {
          "login" : "martin-drhu-da",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/31696042?u=5fec5d8a968715bab332fcb4be485319b66a7892&v=4"
        },
        "body" : "Is that pragma actually necessary? I think `import Prelude qualified` should be enough.",
        "createdAt" : "2019-04-05T18:57:58Z",
        "updatedAt" : "2019-04-05T19:35:17Z",
        "lastEditedBy" : {
          "login" : "martin-drhu-da",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/31696042?u=5fec5d8a968715bab332fcb4be485319b66a7892&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c4bb65f1-dd98-484c-86bb-a6a85a2dc013",
        "parentId" : "a701f305-a797-4a7b-8e86-2da145d6bb52",
        "author" : null,
        "body" : "It turns out that no, it's not necessary. Is that an artifact of the GHC module system?",
        "createdAt" : "2019-04-05T19:07:10Z",
        "updatedAt" : "2019-04-05T19:35:17Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9c9b4b41-1901-463d-9841-852b3fcb210e",
        "parentId" : "a701f305-a797-4a7b-8e86-2da145d6bb52",
        "author" : null,
        "body" : "martin wrote privately:\r\n\r\n> if you `import Prelude qualified`, it is no longer implicitly imported unqualified.\r\n\r\nthanks. good to know. i'll amend the test accordingly!",
        "createdAt" : "2019-04-05T19:10:30Z",
        "updatedAt" : "2019-04-05T19:35:17Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "64cec0a7cd098c55dc9776133be735df6bb2e5fb",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,22 @@\n+-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its\n+-- affiliates.  All rights reserved.\n+\n+-- This is a compile-time test.\n+\n+{-# LANGUAGE NoImplicitPrelude #-}"
  }
]