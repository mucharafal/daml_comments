[
  {
    "id" : "5886a14c-c3f3-484d-91a4-b001eb1c4ffa",
    "prId" : 1934,
    "comments" : [
      {
        "id" : "c2e13a62-876e-4c37-9ffb-7739734673f2",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "I'm starting to wonder if `runAction` should always convert `BadDependency` into a `Nothing` on its own? Or have `runActionMaybe` to encapsulate that behaviour?",
        "createdAt" : "2019-06-28T09:25:05Z",
        "updatedAt" : "2019-06-28T09:25:55Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8a9850c4-a3e6-474a-aefa-399196afaa26",
        "parentId" : "c2e13a62-876e-4c37-9ffb-7739734673f2",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Sounds reasonable but I also don’t really mind the `MaybeT` stuff now that I’ve gotten used to it.",
        "createdAt" : "2019-06-28T10:51:17Z",
        "updatedAt" : "2019-06-28T10:51:17Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "083d7bc2-d8f3-40c7-aaf6-73b861c6a7cd",
        "parentId" : "c2e13a62-876e-4c37-9ffb-7739734673f2",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "It's irking me more every day... I guess the tables have turned. If it irks me enough I'll do the needful.",
        "createdAt" : "2019-06-28T12:15:29Z",
        "updatedAt" : "2019-06-28T12:15:29Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6d72f670fc1a875254b25abf93ca03739b3dac26",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +158,162 @@        pkgName\n        sdkVersion\n    else runAction service $ runMaybeT $ do\n      pkg <- useE GeneratePackage file\n      let pkgModuleNames = S.fromList $ map T.unpack $ LF.packageModuleNames pkg"
  },
  {
    "id" : "4b76787b-dd79-4d2f-9e67-53d4ce9f339c",
    "prId" : 1793,
    "comments" : [
      {
        "id" : "2bc40930-727e-462f-aead-83c15dd44b02",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Why do we fail without any useful message here?",
        "createdAt" : "2019-06-21T12:52:56Z",
        "updatedAt" : "2019-06-21T12:53:13Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fe7951a1-90b9-4799-ae07-982fd75a105e",
        "parentId" : "2bc40930-727e-462f-aead-83c15dd44b02",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "We already emit the log message. There isn’t really any point in outputting it via diagnostics as well. And we are in MaybeT so the string here doesn’t matter either way.",
        "createdAt" : "2019-06-21T12:56:18Z",
        "updatedAt" : "2019-06-21T12:56:19Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1b2f212e-dfc2-43fb-bf08-1460e656ce39",
        "parentId" : "2bc40930-727e-462f-aead-83c15dd44b02",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "I'd have liked it if there was a function `nothing :: MaybeT m a` to make the intent clear. `fail` with no error is just odd, and in most other contexts, would be terrible.",
        "createdAt" : "2019-06-21T13:05:24Z",
        "updatedAt" : "2019-06-21T13:05:24Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1d52d950-9896-4524-b6f8-fc85f3383d39",
        "parentId" : "2bc40930-727e-462f-aead-83c15dd44b02",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I considered `MaybeT (pure Nothing)` but that looks awkward. `empty` is nice but also somewhat unclear so `fail \"\"` seemed like the best option.",
        "createdAt" : "2019-06-21T13:07:12Z",
        "updatedAt" : "2019-06-21T13:07:13Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2b38d031-d9d8-41e8-9566-2529d5768f23",
        "parentId" : "2bc40930-727e-462f-aead-83c15dd44b02",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "I was about to add a github issue for adding something to `transformers`, or even a PR, but then I saw that it's on hub.darcs.net, which is a sign the project is so unmaintained i might as well not bother.",
        "createdAt" : "2019-06-21T13:11:25Z",
        "updatedAt" : "2019-06-21T13:11:25Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "381e762a5bfe0ddf68af4408be96f3b558d472dd",
    "line" : 171,
    "diffHunk" : "@@ -1,1 +196,200 @@              \"The following modules are declared in exposed-modules but are not part of the DALF: \" <>\n              T.pack (show $ S.toList missingExposed)\n          fail \"\"\n      let dalf = encodeArchiveLazy pkg\n      -- get all dalf dependencies."
  },
  {
    "id" : "107c8373-b409-4040-831d-de3d77f04d9b",
    "prId" : 1707,
    "comments" : [
      {
        "id" : "24ceda66-1f5a-4398-b7e2-f25c4889054f",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Why go via the Ide here? Seems almost overkill for parsing a module",
        "createdAt" : "2019-06-17T11:54:03Z",
        "updatedAt" : "2019-06-17T14:05:04Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e92296f0-5a6c-4845-92ea-9179152a2f6e",
        "parentId" : "24ceda66-1f5a-4398-b7e2-f25c4889054f",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "Seemed like the most straight forward option. Can I call `parseFile` directly without repeating a lot of work to setup state for GHC?",
        "createdAt" : "2019-06-17T12:25:24Z",
        "updatedAt" : "2019-06-17T14:05:04Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "199022e9-0e31-44a9-a26b-b705f323299c",
        "parentId" : "24ceda66-1f5a-4398-b7e2-f25c4889054f",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Perhaps. Perhaps not... I'm not that sure, but if it seems hard, stick with what you have.",
        "createdAt" : "2019-06-17T12:26:23Z",
        "updatedAt" : "2019-06-17T14:05:04Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2c4e7e69876be18b89db41c246ef31aad2dcd83d",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +176,180 @@    -> NormalizedFilePath\n    -> ExceptT [FileDiagnostic] IO ParsedModule\nparseFile service fp = do\n    liftIO $ CompilerService.setFilesOfInterest service (S.singleton fp)\n    liftIO $ CompilerService.logDebug service $ \"Parsing: \" <> T.pack (fromNormalizedFilePath fp)"
  },
  {
    "id" : "86121f46-9a8e-491f-b3a1-8013ef1a12ae",
    "prId" : 1489,
    "comments" : [
      {
        "id" : "cc0ccc2d-8b2d-42fa-ae98-1a89445ae4f1",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Agreed!",
        "createdAt" : "2019-06-03T13:15:23Z",
        "updatedAt" : "2019-06-03T13:44:22Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8a46b2d8b9b426b7e201afee1fde0bfd4ba9efef",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +156,160 @@            -- we can only fully initialize the IdeState once we get the\n            -- LspFuncs in the initialize callback.\n            -- We should move away from Managed (we only use it for the scenario service)\n            -- and then refactor this.\n            -> Managed (VFSHandle -> IO IdeState)"
  },
  {
    "id" : "a9156b6d-ed04-437c-99e5-02e0c5f2ecb6",
    "prId" : 1489,
    "comments" : [
      {
        "id" : "df0e96d5-70d3-4ad3-8433-06498d1d5b28",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Would be nice to kill this Int.",
        "createdAt" : "2019-06-03T13:15:51Z",
        "updatedAt" : "2019-06-03T13:44:22Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8a46b2d8b9b426b7e201afee1fde0bfd4ba9efef",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +282,286 @@    -> Maybe T.Text\n    -> IO ()\nonFileModified service fp mbContents = do\n    CompilerService.logDebug service $ \"File modified \" <> T.pack (show fp)\n    CompilerService.setBufferModified service fp mbContents"
  },
  {
    "id" : "183b2ba8-ee58-4022-85a2-827e24917965",
    "prId" : 1375,
    "comments" : [
      {
        "id" : "804c4400-853e-4b6c-b6d5-64c98987e798",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "It looks like the scenario service only uses the event handler to log exceptions and those are also written to the logger. So we can probably change this fairly easily to have `optScenarioService` fully control whether we start the scenario service instead of this somewhat weird behavior where it can only be used to disable but not enable the scenario service. Totally fine to do that in a separate PR.",
        "createdAt" : "2019-05-24T11:24:59Z",
        "updatedAt" : "2019-05-24T11:54:56Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f4b6a283-822d-4c7d-9861-3398fe003999",
        "parentId" : "804c4400-853e-4b6c-b6d5-64c98987e798",
        "author" : null,
        "body" : ":+1:\r\n",
        "createdAt" : "2019-05-24T11:41:47Z",
        "updatedAt" : "2019-05-24T11:54:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "edffa058c14cf689cad5014010b84571f5906461",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +155,159 @@newIdeState compilerOpts mbEventHandler loggerH = do\n    mbScenarioService <-\n        for (guard (optScenarioService compilerOpts) >> mbEventHandler) $ \\eventHandler ->\n            Scenario.startScenarioService eventHandler loggerH\n"
  }
]