[
  {
    "id" : "aeae5904-c9e4-4270-8a2a-c2df96298bae",
    "prId" : 1451,
    "comments" : [
      {
        "id" : "b3d296a1-f4fd-405a-a3f6-3d9917baa5fe",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "`show m` will wrap `m` in additional quotes, is `T.unpack` not sufficient?",
        "createdAt" : "2019-05-29T14:53:41Z",
        "updatedAt" : "2019-05-29T15:34:13Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "74af6aaf-3e9a-4fdf-a436-465cc98e3e5c",
        "parentId" : "b3d296a1-f4fd-405a-a3f6-3d9917baa5fe",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I don’t think you even need `T.unpack`. `Text` should be `Hashable` so `hashText m` should do the trick.",
        "createdAt" : "2019-05-29T15:07:49Z",
        "updatedAt" : "2019-05-29T15:34:13Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e285ed95-4c90-4576-b2ff-538ba0c68809",
        "parentId" : "b3d296a1-f4fd-405a-a3f6-3d9917baa5fe",
        "author" : {
          "login" : "majcherm-da",
          "name" : "Michał Majcherski",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/43614029?u=8320ef35eb6289112c9c95df3e483f322c9aa60e&v=4"
        },
        "body" : "Thanks @aherrmann-da, yes `T.unpack` is better, especially that `Modulename` is actually a `Text` as well.\r\n\r\n@cocreature the problem is that hash of `Data.Text` is giving different results on Windows and Linux/Mac (see the PR description)",
        "createdAt" : "2019-05-29T15:14:35Z",
        "updatedAt" : "2019-05-29T15:34:13Z",
        "lastEditedBy" : {
          "login" : "majcherm-da",
          "name" : "Michał Majcherski",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/43614029?u=8320ef35eb6289112c9c95df3e483f322c9aa60e&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "bae5dac4-e395-47aa-85b5-9c72870cc060",
        "parentId" : "b3d296a1-f4fd-405a-a3f6-3d9917baa5fe",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Oh I see, sorry for the confusion.",
        "createdAt" : "2019-05-29T15:18:02Z",
        "updatedAt" : "2019-05-29T15:34:13Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ed40fe4cd656119fa955a53ea58c76d4e64403ab",
    "line" : null,
    "diffHunk" : "@@ -27,7 +27,8 @@ import qualified Data.Char as C\n type Anchor = T.Text\n \n moduleAnchor :: Modulename -> Anchor\n-moduleAnchor m = T.intercalate \"-\" [\"module\", convertModulename m, hashText m]\n+-- calculating a hash on String instead of Data.Text as hash output of the later is different on Windows than other OSes\n+moduleAnchor m = T.intercalate \"-\" [\"module\", convertModulename m, hashText $ show m]"
  },
  {
    "id" : "1412859c-fc96-4300-be76-05ca1576abb3",
    "prId" : 1451,
    "comments" : [
      {
        "id" : "1b3577e9-4d00-4ae7-984d-510e40f5c335",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\nanchor k m n v = T.intercalate \"-\" [k, convertModulename m, expandOps n, hashText (k, m, n, v)]\r\n```\r\nNo need to convert to `String` here, the types should already be `Hashable`.",
        "createdAt" : "2019-05-29T15:08:25Z",
        "updatedAt" : "2019-05-29T15:34:13Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ed40fe4cd656119fa955a53ea58c76d4e64403ab",
    "line" : null,
    "diffHunk" : "@@ -48,7 +49,8 @@ functionAnchor     = anchor \"function\"\n \n \n anchor :: Hashable v => T.Text -> Modulename -> T.Text -> v -> Anchor\n-anchor k m n v = T.intercalate \"-\" [k, convertModulename m, expandOps n, hashText (k,m,n,v)]\n+-- calculating a hash on String instead of Data.Text as hash output of the later is different on Windows than other OSes\n+anchor k m n v = T.intercalate \"-\" [k, convertModulename m, expandOps n, hashText (show k, show m, show n, v)]"
  }
]