[
  {
    "id" : "2c657eee-879b-4219-8d4b-e0e081d77eac",
    "prId" : 2013,
    "comments" : [
      {
        "id" : "260fe9ca-3f69-48bb-b599-055d81d2c7fd",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Might be nice to add newtypes around `Typename` for `TemplateName` and `ChoiceName`.",
        "createdAt" : "2019-07-04T17:19:49Z",
        "updatedAt" : "2019-07-09T14:09:26Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "8f8278423b236247b46b363205baf3d78563216e",
    "line" : null,
    "diffHunk" : "@@ -109,37 +116,61 @@ collectDocs = go Nothing []\n     go Nothing docs (d:ds) = go (Just d) docs ds\n     go (Just prev) docs (d:ds) = finished prev docs (go (Just d) [] ds)\n \n-    finished decl docs rest = (unLoc decl, reverse docs) : rest\n+    finished decl docs rest = (decl, toDocText . map unDocText . reverse $ docs) : rest\n+\n+-- | Context in which to extract a module's docs. This is created from\n+-- 'TypecheckedModule' by 'buildDocCtx'.\n+data DocCtx = DocCtx\n+    { dc_mod :: Modulename\n+    , dc_tcmod :: TypecheckedModule\n+    , dc_decls :: [DeclData]\n+    , dc_templates :: Set.Set Typename"
  },
  {
    "id" : "97882a0a-239a-47e3-8d7e-b77fe90d58d2",
    "prId" : 2013,
    "comments" : [
      {
        "id" : "06cf3b17-27d8-4ae9-8867-56e12109ba85",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "`DocCtx` seems slightly weird since the `dc_tcmod` field basically seems to make all other fields redundant. Perfectly happy to have this as an intermediate state but maybe add a comment on what you expect the final state to look like.",
        "createdAt" : "2019-07-04T17:21:32Z",
        "updatedAt" : "2019-07-09T14:09:26Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f12862db-4f26-4bed-8d3b-2694f832c0ad",
        "parentId" : "06cf3b17-27d8-4ae9-8867-56e12109ba85",
        "author" : null,
        "body" : "Yep ... this certainly isn't finished yet. Ultimately DocCtx will still be derivable from TypecheckedModule, but I'm thinking a little bit ahead to when I will add a map from function name / field name to type sig, so we can use it while processing function / field docs later.",
        "createdAt" : "2019-07-04T17:39:01Z",
        "updatedAt" : "2019-07-09T14:09:26Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "8f8278423b236247b46b363205baf3d78563216e",
    "line" : null,
    "diffHunk" : "@@ -109,37 +116,61 @@ collectDocs = go Nothing []\n     go Nothing docs (d:ds) = go (Just d) docs ds\n     go (Just prev) docs (d:ds) = finished prev docs (go (Just d) [] ds)\n \n-    finished decl docs rest = (unLoc decl, reverse docs) : rest\n+    finished decl docs rest = (decl, toDocText . map unDocText . reverse $ docs) : rest\n+\n+-- | Context in which to extract a module's docs. This is created from\n+-- 'TypecheckedModule' by 'buildDocCtx'.\n+data DocCtx = DocCtx\n+    { dc_mod :: Modulename"
  }
]