[
  {
    "id" : "e50f6961-6b28-4390-855d-6332ffb91ede",
    "prId" : 1776,
    "comments" : [
      {
        "id" : "b8f4f04e-c036-46b7-bda6-65d0efa9272b",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Is there no `Uri` type better than `string`?",
        "createdAt" : "2019-06-20T20:17:42Z",
        "updatedAt" : "2019-06-20T20:18:16Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f8b203ce-6a73-4ae0-bdb6-5d08495da9a8",
        "parentId" : "b8f4f04e-c036-46b7-bda6-65d0efa9272b",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I actually tried to use `Map<Uri, …>` initially and spend over an hour trying to figure out why it didn’t work until I figured out that this uses reference equality with no way to override it as far as I can tell.",
        "createdAt" : "2019-06-20T21:54:12Z",
        "updatedAt" : "2019-06-20T21:54:13Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "03d813bf-e730-4292-880c-870106479c1b",
        "parentId" : "b8f4f04e-c036-46b7-bda6-65d0efa9272b",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I’ll add a comment when I touch this again.",
        "createdAt" : "2019-06-20T21:57:08Z",
        "updatedAt" : "2019-06-20T21:57:08Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4decfb47-d8d0-4148-a379-45612a1dbfcb",
        "parentId" : "b8f4f04e-c036-46b7-bda6-65d0efa9272b",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "I forgot that some languages are completely broken and not fit for purpose...",
        "createdAt" : "2019-06-21T07:21:43Z",
        "updatedAt" : "2019-06-21T07:21:43Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3ed9a2e4c72dedd4789c4d17a901bc4dcbac0aee",
    "line" : 7,
    "diffHunk" : "@@ -266,8 +266,12 @@ namespace DamlWorkspaceValidationsNotification {\n }\n \n class VirtualResourceManager {\n+    // Mapping from URIs to the web view panel\n     private _panels: Map<string, vscode.WebviewPanel> = new Map<string, vscode.WebviewPanel>();\n+    // Mapping from URIs to the HTML content of the webview\n     private _panelContents: Map<string, string> = new Map<string, string>();"
  },
  {
    "id" : "012bda29-2c95-4d8f-baa3-6789dad27dbc",
    "prId" : 1776,
    "comments" : [
      {
        "id" : "a4adad27-b097-44db-9fe5-558e13d047fb",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Selected view as a `string` is also a bit sad.",
        "createdAt" : "2019-06-20T20:18:04Z",
        "updatedAt" : "2019-06-20T20:18:16Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4190c631-c445-4452-98eb-807febec06d2",
        "parentId" : "a4adad27-b097-44db-9fe5-558e13d047fb",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Given that we treat it as an opaque value, i.e., we just take what the client gave us and send it back I don’t think it makes sense to actually parse this value in particular given the backwards compat constraints on the IDE. In Haskell i would have used a newtype but searching for newtypes in typescript didn’t bring up anything that looked reasonably nice.",
        "createdAt" : "2019-06-20T21:57:24Z",
        "updatedAt" : "2019-06-20T21:57:24Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a0ba99c4-1140-42ba-9f26-458b52e46020",
        "parentId" : "a4adad27-b097-44db-9fe5-558e13d047fb",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "I think type aliases for uri and html would go a long way to making the comments part of the code, even if they aren't statically checked",
        "createdAt" : "2019-06-21T07:21:19Z",
        "updatedAt" : "2019-06-21T07:21:20Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3ed9a2e4c72dedd4789c4d17a901bc4dcbac0aee",
    "line" : 9,
    "diffHunk" : "@@ -266,8 +266,12 @@ namespace DamlWorkspaceValidationsNotification {\n }\n \n class VirtualResourceManager {\n+    // Mapping from URIs to the web view panel\n     private _panels: Map<string, vscode.WebviewPanel> = new Map<string, vscode.WebviewPanel>();\n+    // Mapping from URIs to the HTML content of the webview\n     private _panelContents: Map<string, string> = new Map<string, string>();\n+    // Mapping from URIs to selected view\n+    private _panelStates: Map<string, string> = new Map<string, string>();"
  },
  {
    "id" : "2ebe3431-fd1c-479f-9471-52e1339c9025",
    "prId" : 1055,
    "comments" : [
      {
        "id" : "b3970903-0206-41e3-b5ef-be135d977470",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "The date hasn’t passed but we already require VSCode `1.32.0` explitly in `package.json` so there is no point in keeping this around.",
        "createdAt" : "2019-05-09T15:29:03Z",
        "updatedAt" : "2019-05-09T20:10:13Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "86f28a6dc54eb803a5a782b06dfbd2c75d82cc15",
    "line" : 28,
    "diffHunk" : "@@ -453,26 +441,6 @@ const telemetryConsentKey = 'telemetry-consent'\n const privacyPolicy = 'https://www.digitalasset.com/privacy-policy'\n \n \n-// remove this once env.openExternal has been around for 6 months (1st July 2019)"
  }
]