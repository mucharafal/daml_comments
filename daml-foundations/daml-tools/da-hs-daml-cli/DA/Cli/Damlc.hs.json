[
  {
    "id" : "96ae64cf-d6a1-49fa-ac07-22d6cadf166e",
    "prId" : 1517,
    "comments" : [
      {
        "id" : "fcfeb90e-3fec-45e5-a576-77a13d80b4be",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Do you mean if we should be able to pass `--target` when running the IDE?",
        "createdAt" : "2019-06-04T17:41:40Z",
        "updatedAt" : "2019-06-04T17:42:54Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d7dc8785-e750-42b5-80f2-e25b13c4450c",
        "parentId" : "fcfeb90e-3fec-45e5-a576-77a13d80b4be",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "That would be a first step but given that users don’t start the IDE process manually, it doesn’t help much. We probably want to consider adding an option in `daml.yaml` for the target LF versions so that this can be picked up automatically and all commands agree on the LF version.",
        "createdAt" : "2019-06-04T17:48:22Z",
        "updatedAt" : "2019-06-04T17:48:22Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9364331e-23fe-4ebb-a416-c4ce1cf5507a",
        "parentId" : "fcfeb90e-3fec-45e5-a576-77a13d80b4be",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Or we only support one LF version, and say that if you want to use an old LF version, we demand you use an old SDK. I'm not inclined to complicate everything to allow people to downgrade just one aspect of the tool. The one exception is perhaps --lf=dev, to test the next version, but having that not work in the IDE is no big deal.",
        "createdAt" : "2019-06-04T18:45:01Z",
        "updatedAt" : "2019-06-04T18:45:01Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f8f91bd3-ecfc-4147-a27e-8f694472593b",
        "parentId" : "fcfeb90e-3fec-45e5-a576-77a13d80b4be",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Making it a hidden flag and only supporting `dev` would be fine with me as well. What I don’t like is having it be a user-facing option (and given that this PR was the result of a bug report, one that users do use) that is not supported when using the IDE.",
        "createdAt" : "2019-06-04T18:50:22Z",
        "updatedAt" : "2019-06-04T18:50:22Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ff8253d4-6f3e-4f5b-ac7a-305cdbf652f2",
        "parentId" : "fcfeb90e-3fec-45e5-a576-77a13d80b4be",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Agreed - the current state is not right. Simplifying the user experience seems better, since I think telling the user to downgrade would have been fine.",
        "createdAt" : "2019-06-04T18:53:30Z",
        "updatedAt" : "2019-06-04T18:53:30Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "bb9de400cd2be5b72febfeca8f60d0b6c6d7a873",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +226,230 @@    withLogger $ \\loggerH ->\n        withScenarioService loggerH $ \\scenarioService -> do\n            -- TODO we should allow different LF versions in the IDE.\n            execInit LF.versionDefault (ProjectOpts Nothing (ProjectCheck \"\" False)) (InitPkgDb True)\n            Daml.LanguageServer.runLanguageServer loggerH"
  },
  {
    "id" : "136f6e34-1f65-4fac-b678-cd9ba0799388",
    "prId" : 1508,
    "comments" : [
      {
        "id" : "fd500b16-018c-44eb-8881-590f2b24dc50",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Are we removing the option for the user to disable the scenario service? I think that's a useful option to have - e.g. on big projects it takes at extra 3Gb memory for things that are already very close to machine limits.",
        "createdAt" : "2019-06-04T12:52:26Z",
        "updatedAt" : "2019-06-04T14:03:55Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ddcaddb5-756c-4e2f-ac1d-2147578d8297",
        "parentId" : "fd500b16-018c-44eb-8881-590f2b24dc50",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "No, the option was mostly a gross hack so that we could disable the scenario service even if we had an event logger, e.g., in `damlc build`. For almost all commands this option doesn’t make sense, e.g., there is no reason to enable the scenario service in `damlc build` and there is no reason to disable the scenario service in `damlc test`. The only exception to that is `damlc ide` but that one actually doesn’t use `optionsParser` so it wasn’t possible to disable the scenario service before either. I do plan to add that option (it would also allow us to run LSP tests on CI even before we have figured out why grpc sometimes breaks) but there is no reason to do it in this PR.",
        "createdAt" : "2019-06-04T13:06:30Z",
        "updatedAt" : "2019-06-04T14:03:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9f4b5c2b-91ff-4595-be14-bc239bb6d42a",
        "parentId" : "fd500b16-018c-44eb-8881-590f2b24dc50",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Ack, that makes a lot of sense!",
        "createdAt" : "2019-06-04T13:13:44Z",
        "updatedAt" : "2019-06-04T14:03:55Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "17411959141284526399ee9f2ef5735ad2a26033",
    "line" : 167,
    "diffHunk" : "@@ -1,1 +586,590 @@    <*> optDebugLog\n    <*> (concat <$> many optGhcCustomOptions)\n    <*> pure enableScenarioService\n  where\n    optImportPath :: Parser [FilePath]"
  },
  {
    "id" : "92fcf18f-de13-449c-a18c-d28fece08f90",
    "prId" : 1375,
    "comments" : [
      {
        "id" : "ca804ab1-9f55-4cbb-9e65-739435783753",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Have you checked what happens if we get an error instead of a warning? My understanding is that those are already displayed without your PR so I would expect that they are now displayed twice?",
        "createdAt" : "2019-05-24T11:26:57Z",
        "updatedAt" : "2019-05-24T11:54:56Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d386bca1-e51b-4d10-b97d-6616f4c44b32",
        "parentId" : "ca804ab1-9f55-4cbb-9e65-739435783753",
        "author" : null,
        "body" : "You're right, it now displays errors twice! Time to fix that.",
        "createdAt" : "2019-05-24T11:37:22Z",
        "updatedAt" : "2019-05-24T11:54:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "edffa058c14cf689cad5014010b84571f5906461",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +351,355 @@                    pExposedModules\n                    pDependencies\n        let eventLogger (EventFileDiagnostics (fp, diags)) = printDiagnostics $ map (fp,) diags\n            eventLogger _ = return ()\n        Managed.with (Compiler.newIdeState opts (Just eventLogger) loggerH) $ \\compilerH -> do"
  },
  {
    "id" : "be11d95a-97b4-43f8-ad77-55599e4b7cc5",
    "prId" : 1214,
    "comments" : [
      {
        "id" : "2214acb5-8cbd-4641-b67d-c6062dc73b8f",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "That is a slightly misleading way to break lines. Can we please do\r\n```\r\nfunc\r\n  <$> arg1\r\n  <*> arg2\r\n```\r\nSame below.",
        "createdAt" : "2019-05-17T11:26:04Z",
        "updatedAt" : "2019-05-17T11:27:00Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2d79b33c-4c1c-41d7-b096-672d111d84f6",
        "parentId" : "2214acb5-8cbd-4641-b67d-c6062dc73b8f",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "it's autoformatted by hindent.",
        "createdAt" : "2019-05-17T12:33:10Z",
        "updatedAt" : "2019-05-17T12:33:10Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b67864c7450e6985517971f7688b70b373d79920",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +135,139 @@    cmd =\n        execBuild <$> optionsParser numProcessors (pure Nothing) <*>\n        optionalOutputFileOpt\n\ncmdPackageNew :: Int -> Mod CommandFields Command"
  },
  {
    "id" : "afc8728c-7d84-4f78-933e-90a0cd46f4c4",
    "prId" : 967,
    "comments" : [
      {
        "id" : "117f9e82-e6b4-4188-92d1-02fc728d3984",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n    sdkVersion <- getSdkVersion\r\n```",
        "createdAt" : "2019-05-07T12:20:38Z",
        "updatedAt" : "2019-05-07T12:20:45Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "fd354abca9905bbf6afe15e21e89dd90727c3fcb",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +244,248 @@    dependencies <-\n        queryProjectConfigRequired [\"dependencies\"] project\n    sdkVersion <- queryProjectConfigRequired [\"sdk-version\"] project\n    Right $ PackageConfigFields name main exposedModules version dependencies sdkVersion\n"
  },
  {
    "id" : "2090b3f3-783b-4db2-9878-50b3e7dc6c0f",
    "prId" : 618,
    "comments" : [
      {
        "id" : "eb50ae0d-ee3b-43f0-aaaa-db8a54b7ccfc",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n      <*> fmap ColorTestResults colorOutput\r\n```",
        "createdAt" : "2019-04-25T13:52:46Z",
        "updatedAt" : "2019-04-25T13:56:52Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "efadb4b0bbd45eb2c125c101449937c4ab0174b3",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +99,103 @@    cmd = execTest\n      <$> many inputFileOpt\n      <*> fmap (\\x -> ColorTestResults x) colorOutput\n      <*> junitOutput\n      <*> optionsParser numProcessors optPackageName"
  },
  {
    "id" : "936dfe99-559f-4ddc-8161-55cc8420c5a9",
    "prId" : 618,
    "comments" : [
      {
        "id" : "feb148b4-9e47-4b89-8de7-50287689be94",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Why did you reformat this?",
        "createdAt" : "2019-04-25T13:53:10Z",
        "updatedAt" : "2019-04-25T13:56:53Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4dfabb8b-9569-4349-8ae8-edb7342ff8da",
        "parentId" : "feb148b4-9e47-4b89-8de7-50287689be94",
        "author" : {
          "login" : "akalburgi",
          "name" : "Anup Kalburgi",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/42743833?v=4"
        },
        "body" : "Felt it was more readable in a line vs having it in multi line  ",
        "createdAt" : "2019-04-25T14:00:56Z",
        "updatedAt" : "2019-04-25T14:00:57Z",
        "lastEditedBy" : {
          "login" : "akalburgi",
          "name" : "Anup Kalburgi",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/42743833?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "efadb4b0bbd45eb2c125c101449937c4ab0174b3",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +102,106 @@      <*> junitOutput\n      <*> optionsParser numProcessors optPackageName\n    junitOutput = optional $ strOption $ long \"junit\" <> metavar \"FILENAME\" <> help \"Filename of JUnit output file\"\n    colorOutput = switch $ long \"color\" <> help \"Colored test results\"\n"
  },
  {
    "id" : "5e8b3814-1572-4081-8684-b386933ae957",
    "prId" : 618,
    "comments" : [
      {
        "id" : "5219d8d6-1c05-40b7-9afd-19370aec2252",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "\"color\" without the \"u\" looks so weird. ;)",
        "createdAt" : "2019-04-25T13:54:16Z",
        "updatedAt" : "2019-04-25T13:56:53Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "efadb4b0bbd45eb2c125c101449937c4ab0174b3",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +103,107 @@      <*> optionsParser numProcessors optPackageName\n    junitOutput = optional $ strOption $ long \"junit\" <> metavar \"FILENAME\" <> help \"Filename of JUnit output file\"\n    colorOutput = switch $ long \"color\" <> help \"Colored test results\"\n\ncmdInspect :: Mod CommandFields Command"
  },
  {
    "id" : "9e2ed325-20ea-4b0d-8f5d-da1e80faa230",
    "prId" : 395,
    "comments" : [
      {
        "id" : "67e73097-7e46-418e-85ac-6403b64dd22d",
        "parentId" : null,
        "author" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "body" : "So I guess this means we’ll use Maven to distribute packages initially?",
        "createdAt" : "2019-04-12T12:22:23Z",
        "updatedAt" : "2019-04-15T15:31:59Z",
        "lastEditedBy" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6920ea09-c3c0-49fb-b366-ab80190a5d8e",
        "parentId" : "67e73097-7e46-418e-85ac-6403b64dd22d",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "This is from the old packaging command, I would not change it for now.",
        "createdAt" : "2019-04-12T13:18:05Z",
        "updatedAt" : "2019-04-15T15:31:59Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "fb8ecebc471a1b5ee865e291496690c3167b5aee",
    "line" : 176,
    "diffHunk" : "@@ -1,1 +333,337 @@                  unwords [dropExtension $ takeFileName dep | dep <- deps]\n                ]\n    -- The default output filename is based on Maven coordinates if\n    -- the package name is specified via them, otherwise we use the\n    -- name."
  },
  {
    "id" : "c248d99c-4cd0-4998-8c50-d4fe50a0d907",
    "prId" : 395,
    "comments" : [
      {
        "id" : "294aebd1-d0c5-4634-bd13-cb945be1e812",
        "parentId" : null,
        "author" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "body" : "This should probably use `locateRunfiles` instead so it works with `bazel run`, ghci and the final distribution.",
        "createdAt" : "2019-04-12T12:28:37Z",
        "updatedAt" : "2019-04-15T15:31:59Z",
        "lastEditedBy" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "618a5858-e220-4b35-a9ac-7ade4959ec22",
        "parentId" : "294aebd1-d0c5-4634-bd13-cb945be1e812",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "ah good idea!",
        "createdAt" : "2019-04-12T13:19:36Z",
        "updatedAt" : "2019-04-15T15:31:59Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "fb8ecebc471a1b5ee865e291496690c3167b5aee",
    "line" : 232,
    "diffHunk" : "@@ -1,1 +389,393 @@    callCommand $\n        unwords\n            [ sdkRoot </> \"damlc/resources/ghc-pkg\"\n            , \"recache\"\n            , \"--package-db=\" ++ dbPath"
  },
  {
    "id" : "a6b1b5ba-2f44-4d4a-b2b0-bf74587c6c5b",
    "prId" : 394,
    "comments" : [
      {
        "id" : "acc1c640-b456-4822-97bf-8bf8c06f8d69",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Yep, like this - I find this version of the code more readable. Your call which, but I'd prefer the two pieces next to each other follow the same pattern.",
        "createdAt" : "2019-04-11T12:59:58Z",
        "updatedAt" : "2019-04-11T18:07:00Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5dae689b-e295-467a-af25-f4becd7d3188",
        "parentId" : "acc1c640-b456-4822-97bf-8bf8c06f8d69",
        "author" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "body" : "Agreed, I’ve moved the `or`.",
        "createdAt" : "2019-04-11T13:06:20Z",
        "updatedAt" : "2019-04-11T18:07:00Z",
        "lastEditedBy" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e26f180ff25c499c2cb72651454c5d2f22572e67",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +369,373 @@            createDirectoryIfMissing True $ takeDirectory junitOutput\n            writeFile junitOutput $ XML.showTopElement $ toJUnit results\n        pure (any (any (isJust . snd) . snd) results)\n    when failed exitFailure\n"
  },
  {
    "id" : "1b8fa3b9-3f23-427d-ae31-56eb9679813c",
    "prId" : 194,
    "comments" : [
      {
        "id" : "9cce0f61-7f53-4ba8-9d5b-ed3720eafc1d",
        "parentId" : null,
        "author" : {
          "login" : "martin-drhu-da",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/31696042?u=5fec5d8a968715bab332fcb4be485319b66a7892&v=4"
        },
        "body" : "I think we need to use the version we get from the `--target` flag here.",
        "createdAt" : "2019-04-04T13:02:06Z",
        "updatedAt" : "2019-04-04T16:13:32Z",
        "lastEditedBy" : {
          "login" : "martin-drhu-da",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/31696042?u=5fec5d8a968715bab332fcb4be485319b66a7892&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "12655120-fa60-4fe0-a49a-e8210a9424db",
        "parentId" : "9cce0f61-7f53-4ba8-9d5b-ed3720eafc1d",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "I fix this in a separate PR, thanks!",
        "createdAt" : "2019-04-04T13:06:30Z",
        "updatedAt" : "2019-04-04T16:13:32Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "fcdd0d5ea6d7e7d84c9ede0d15fc07a48afca499",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +182,186 @@      else pure loggerH\n\n    opts <- liftIO $ defaultOptionsIO Nothing\n\n    Managed.liftIO $"
  }
]