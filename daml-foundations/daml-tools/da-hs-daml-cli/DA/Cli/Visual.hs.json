[
  {
    "id" : "f5e4c9b0-b5dc-4a8e-9bcc-d1b09aeea32b",
    "prId" : 1826,
    "comments" : [
      {
        "id" : "ee85bba6-4cbf-4958-865e-a3a6d47a38f0",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Is this case really necessary?",
        "createdAt" : "2019-06-25T12:01:40Z",
        "updatedAt" : "2019-06-25T12:01:47Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8ebe6755019f1a8df2c6be993222a7b7b1590119",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +47,51 @@            | otherwise -> startFromExpr (Set.insert ref seen)  world dvalBody\n        Left _ -> error \"This should not happen\"\n    LF.EUpdate upd -> startFromUpdate seen world upd\n    LF.ETmApp (LF.ETyApp (LF.EVal (LF.Qualified _ (LF.ModuleName [\"DA\",\"Internal\",\"Template\"]) (LF.ExprValName \"fetch\"))) _) _ -> Set.empty\n    LF.ETmApp (LF.ETyApp (LF.EVal (LF.Qualified _  (LF.ModuleName [\"DA\",\"Internal\",\"Template\"])  (LF.ExprValName \"archive\"))) _) _ -> Set.empty"
  },
  {
    "id" : "d0798688-e436-464c-8f80-297b65db1fc0",
    "prId" : 1727,
    "comments" : [
      {
        "id" : "284f63b8-065a-4a41-af18-fadbbbae51bf",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Can we get a comment above these two?",
        "createdAt" : "2019-06-21T07:53:15Z",
        "updatedAt" : "2019-06-21T11:47:50Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "01a59a57d14e901916e81ef1eabf16d6bc8e1244",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +61,65 @@    -- Special cases to handle internal calls which do not add an edge to the graph.\n    LF.ERecUpd _ _ recExpr recUpdate -> startFromExpr seen world recExpr `Set.union` startFromExpr seen world recUpdate\n    LF.ETmApp (LF.ETyApp (LF.EVal (LF.Qualified _ (LF.ModuleName [\"DA\",\"Internal\",\"Template\"]) (LF.ExprValName \"fetch\"))) _) _ -> Set.empty\n    LF.ETmApp (LF.ETyApp (LF.EVal (LF.Qualified _  (LF.ModuleName [\"DA\",\"Internal\",\"Template\"])  (LF.ExprValName \"archive\"))) _) _ -> Set.empty\n    LF.ETmApp tmExpr tmpArg -> startFromExpr seen world tmExpr `Set.union` startFromExpr seen world tmpArg"
  },
  {
    "id" : "d7e95951-73ee-4dfd-bf05-a91a90dc6878",
    "prId" : 1589,
    "comments" : [
      {
        "id" : "6dd4c562-0a35-404f-80e4-5a764c410654",
        "parentId" : null,
        "author" : {
          "login" : "ndmitchell",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1651197?u=2a7f401a0bc6c1e722d5fbecc923715861c4567c&v=4"
        },
        "body" : "Usually imported as BS",
        "createdAt" : "2019-06-11T22:25:56Z",
        "updatedAt" : "2019-06-11T22:31:06Z",
        "lastEditedBy" : {
          "login" : "ndmitchell",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1651197?u=2a7f401a0bc6c1e722d5fbecc923715861c4567c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "082c68d7a67a3de59912b2908dd799b28708c7af",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +26,30 @@import Data.Word\nimport qualified Data.HashMap.Strict as DHM\nimport qualified Data.ByteString.Char8 as CH\nimport qualified Data.List.Split as DLS\nimport qualified Data.List as DL"
  },
  {
    "id" : "d46ea225-d650-4f52-bc20-1d794107a99f",
    "prId" : 1589,
    "comments" : [
      {
        "id" : "a42ebb49-7137-48d6-a6f9-d847e60b68bf",
        "parentId" : null,
        "author" : {
          "login" : "ndmitchell",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1651197?u=2a7f401a0bc6c1e722d5fbecc923715861c4567c&v=4"
        },
        "body" : "Usually imported as Map or HMS",
        "createdAt" : "2019-06-11T22:26:15Z",
        "updatedAt" : "2019-06-11T22:31:06Z",
        "lastEditedBy" : {
          "login" : "ndmitchell",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1651197?u=2a7f401a0bc6c1e722d5fbecc923715861c4567c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "082c68d7a67a3de59912b2908dd799b28708c7af",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +25,29 @@import qualified Data.Map as M\nimport Data.Word\nimport qualified Data.HashMap.Strict as DHM\nimport qualified Data.ByteString.Char8 as CH\nimport qualified Data.List.Split as DLS"
  },
  {
    "id" : "2bff50ba-07fe-4991-8ac7-270171fa71e6",
    "prId" : 1589,
    "comments" : [
      {
        "id" : "273f9dd2-6d8c-4e77-b4d3-b456c5856ff1",
        "parentId" : null,
        "author" : {
          "login" : "ndmitchell",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1651197?u=2a7f401a0bc6c1e722d5fbecc923715861c4567c&v=4"
        },
        "body" : "Why not versionDev? I don't want another place to change on each upgrade",
        "createdAt" : "2019-06-11T22:27:04Z",
        "updatedAt" : "2019-06-11T22:31:06Z",
        "lastEditedBy" : {
          "login" : "ndmitchell",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1651197?u=2a7f401a0bc6c1e722d5fbecc923715861c4567c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cae9e30d-2940-4410-97f3-c7126fb31dd9",
        "parentId" : "273f9dd2-6d8c-4e77-b4d3-b456c5856ff1",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "The version parameter should have never been there in the first place https://github.com/digital-asset/daml/pull/1601 will remove it.",
        "createdAt" : "2019-06-12T11:11:36Z",
        "updatedAt" : "2019-06-12T11:11:36Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "082c68d7a67a3de59912b2908dd799b28708c7af",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +99,103 @@\ndarToWorld :: ManifestData -> LF.Package -> LF.World\ndarToWorld manifest pkg = AST.initWorldSelf pkgs version1_4 pkg\n    where \n        pkgs = map dalfBytesToPakage (dalfsCotent manifest)"
  },
  {
    "id" : "3eff3aaa-43f2-43df-ad55-f340be9c2795",
    "prId" : 1589,
    "comments" : [
      {
        "id" : "735a1e08-badd-47e8-a889-fd820d6466f2",
        "parentId" : null,
        "author" : {
          "login" : "ndmitchell",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1651197?u=2a7f401a0bc6c1e722d5fbecc923715861c4567c&v=4"
        },
        "body" : "Just use extra library splitOn",
        "createdAt" : "2019-06-11T22:27:54Z",
        "updatedAt" : "2019-06-11T22:31:06Z",
        "lastEditedBy" : {
          "login" : "ndmitchell",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1651197?u=2a7f401a0bc6c1e722d5fbecc923715861c4567c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "082c68d7a67a3de59912b2908dd799b28708c7af",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +158,162 @@\nlineToKeyValue :: String -> (String, String)\nlineToKeyValue line = case DLS.splitOn \":\" line of\n    [l, r] -> (cleanString l , cleanString r)\n    _ -> (\"malformed\", \"malformed\")            "
  },
  {
    "id" : "55b6808a-e258-4ecc-bad0-d05bf623f210",
    "prId" : 1589,
    "comments" : [
      {
        "id" : "bd24c73b-1d82-459e-bcca-5272cb3d26b3",
        "parentId" : null,
        "author" : {
          "login" : "ndmitchell",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1651197?u=2a7f401a0bc6c1e722d5fbecc923715861c4567c&v=4"
        },
        "body" : "THis is just trim in the extra library. ",
        "createdAt" : "2019-06-11T22:28:35Z",
        "updatedAt" : "2019-06-11T22:31:06Z",
        "lastEditedBy" : {
          "login" : "ndmitchell",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1651197?u=2a7f401a0bc6c1e722d5fbecc923715861c4567c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "082c68d7a67a3de59912b2908dd799b28708c7af",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +155,159 @@\ncleanString :: String -> String\ncleanString str = T.unpack (T.strip $ T.pack str)\n\nlineToKeyValue :: String -> (String, String)"
  },
  {
    "id" : "21f0cc7b-e34b-4261-af9b-a97076faf8bb",
    "prId" : 1589,
    "comments" : [
      {
        "id" : "a94b18f5-d152-4c4f-8a99-3baa785f3df1",
        "parentId" : null,
        "author" : {
          "login" : "ndmitchell",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1651197?u=2a7f401a0bc6c1e722d5fbecc923715861c4567c&v=4"
        },
        "body" : "Set your editor to remove trailing white space on save. ",
        "createdAt" : "2019-06-11T22:29:25Z",
        "updatedAt" : "2019-06-11T22:31:06Z",
        "lastEditedBy" : {
          "login" : "ndmitchell",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1651197?u=2a7f401a0bc6c1e722d5fbecc923715861c4567c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a689f6f8-edc5-44cc-87cd-56b42043f0c4",
        "parentId" : "a94b18f5-d152-4c4f-8a99-3baa785f3df1",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Yes, please.",
        "createdAt" : "2019-06-12T11:08:34Z",
        "updatedAt" : "2019-06-12T11:08:34Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "91b4fe27-e250-4058-98c1-bd9260fab308",
        "parentId" : "a94b18f5-d152-4c4f-8a99-3baa785f3df1",
        "author" : {
          "login" : "akalburgi",
          "name" : "Anup Kalburgi",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/42743833?v=4"
        },
        "body" : "Sorry, Will do",
        "createdAt" : "2019-06-12T14:12:20Z",
        "updatedAt" : "2019-06-12T14:12:20Z",
        "lastEditedBy" : {
          "login" : "akalburgi",
          "name" : "Anup Kalburgi",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/42743833?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "082c68d7a67a3de59912b2908dd799b28708c7af",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +193,197 @@        world = darToWorld manifestData lfPkg\n        res = concatMap (moduleAndTemplates world) modules\n        actionEdges = map templatePairs res        \n    putStrLn $ showDot $ do \n        netlistGraph' srcLabel actionsForTemplate actionEdges"
  },
  {
    "id" : "fb6b2385-769e-43a3-bbfd-97ab882e2db6",
    "prId" : 1589,
    "comments" : [
      {
        "id" : "c8960a49-f0b2-450a-8b91-0e9a370df16c",
        "parentId" : null,
        "author" : {
          "login" : "ndmitchell",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1651197?u=2a7f401a0bc6c1e722d5fbecc923715861c4567c&v=4"
        },
        "body" : "Use Data.ByteString.Char8 to avoid having to convert at all. Also use the ByteString lines function. ",
        "createdAt" : "2019-06-11T22:30:54Z",
        "updatedAt" : "2019-06-11T22:31:06Z",
        "lastEditedBy" : {
          "login" : "ndmitchell",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1651197?u=2a7f401a0bc6c1e722d5fbecc923715861c4567c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "082c68d7a67a3de59912b2908dd799b28708c7af",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +182,186 @@        lines = BSL.split (charToWord8 '\\n') manifestEntry\n        linesStr = map (CH.unpack . BSL.toStrict) lines\n        manifest = manifestMapToManifest $ DHM.fromList $ map lineToKeyValue (filter (\\a -> a /= \"\" ) linesStr)\n\n"
  },
  {
    "id" : "0a867baf-2b88-4efb-94ce-f15c9d1ceaee",
    "prId" : 1552,
    "comments" : [
      {
        "id" : "00ddc2cb-52a6-44e5-af8a-f345af54f1ec",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Why not make this an instance of the `Pretty` class?",
        "createdAt" : "2019-06-07T14:59:43Z",
        "updatedAt" : "2019-06-07T21:57:42Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3ec3bf9852acf408563efda9362b6ebf167c3b86",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +101,105 @@\n\nprettyAction :: Action -> String\nprettyAction (ACreate  (LF.Qualified _ _ tpl) )  = DAP.renderPretty tpl \nprettyAction (AExercise  (LF.Qualified _ _ tpl) _ ) = DAP.renderPretty tpl"
  },
  {
    "id" : "f3d780fe-8528-499f-a8fb-5c3379461e34",
    "prId" : 1552,
    "comments" : [
      {
        "id" : "d490f99d-cdbd-43da-8516-c3d2362bb988",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "These `startFromX` functions should get proper names. Maybe `actionsFromX`?",
        "createdAt" : "2019-06-07T15:01:44Z",
        "updatedAt" : "2019-06-07T21:57:42Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3ec3bf9852acf408563efda9362b6ebf167c3b86",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +30,34 @@\n\nstartFromUpdate :: Set.Set (LF.Qualified LF.ExprValName) -> LF.World -> LF.Update -> Set.Set Action\nstartFromUpdate seen world update = case update of \n    LF.UPure _ e -> startFromExpr seen world e"
  },
  {
    "id" : "a2d47395-a230-4d12-b476-fd8e349ce5b8",
    "prId" : 1552,
    "comments" : [
      {
        "id" : "ea8216d3-e9ae-4a2f-9878-3dd7d7d37590",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "We might have this function somewhere else already. Have you checked that?",
        "createdAt" : "2019-06-07T15:03:02Z",
        "updatedAt" : "2019-06-07T21:57:42Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3ec3bf9852acf408563efda9362b6ebf167c3b86",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +125,129 @@    a .->. n2\n\nerrorOnLeft :: Show a => String -> Either a b -> IO b\nerrorOnLeft desc = \\case\n  Left err -> ioError $ userError $ unlines [ desc, show err ]"
  }
]