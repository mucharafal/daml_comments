[
  {
    "id" : "602d4be3-62e8-4ac2-83be-723822d9639a",
    "prId" : 1939,
    "comments" : [
      {
        "id" : "17abaaca-2f4e-4dcc-ac49-c9e278d5a42c",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Half wonder if this should be `getDamlIdeState`.",
        "createdAt" : "2019-06-28T12:30:54Z",
        "updatedAt" : "2019-06-28T12:35:49Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "91986b25-5f71-46eb-8adb-93414a1b3c79",
        "parentId" : "17abaaca-2f4e-4dcc-ac49-c9e278d5a42c",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Good idea! Changed",
        "createdAt" : "2019-06-28T12:35:51Z",
        "updatedAt" : "2019-06-28T12:35:51Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "cde0555ec6d25d7ee1738d02dc2fff6fcda22be6",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,56 @@\n+-- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+-- SPDX-License-Identifier: Apache-2.0\n+\n+module DA.Cli.Damlc.IdeState\n+    ( IdeState\n+    , getIdeState\n+    , withIdeState\n+    ) where\n+\n+import qualified Language.Haskell.LSP.Messages as LSP\n+\n+import DA.Daml.GHC.Compiler.Options\n+import qualified DA.Service.Logger as Logger\n+import qualified DA.Service.Daml.Compiler.Impl.Scenario as Scenario\n+import Development.IDE.Core.Rules.Daml\n+import qualified Development.IDE.Core.Shake as Shake\n+import Development.IDE.State.API\n+import qualified Development.IDE.Types.Logger as IdeLogger\n+\n+getIdeState"
  }
]