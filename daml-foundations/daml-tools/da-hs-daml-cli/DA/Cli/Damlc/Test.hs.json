[
  {
    "id" : "661c62ff-0841-4deb-8f7b-306475848bce",
    "prId" : 813,
    "comments" : [
      {
        "id" : "d584cb55-7a6b-4a95-a098-3d14622bdd30",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Why inline this here?",
        "createdAt" : "2019-05-02T07:10:00Z",
        "updatedAt" : "2019-05-02T07:10:24Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "074087b5-6562-429b-96cc-1c82b98b591c",
        "parentId" : "d584cb55-7a6b-4a95-a098-3d14622bdd30",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "`emptyWorld` wasn't used anywhere else, and it has to be equivalent to `initWorld []`, so I figured reduction in API surface made up for it. A judgement call. Happy to go back if you want.",
        "createdAt" : "2019-05-02T07:32:06Z",
        "updatedAt" : "2019-05-02T07:32:06Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2e31b50c-9ad3-4e32-a26c-43aa871ffac2",
        "parentId" : "d584cb55-7a6b-4a95-a098-3d14622bdd30",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Makes sense too. Thanks for explaining.",
        "createdAt" : "2019-05-02T08:12:23Z",
        "updatedAt" : "2019-05-02T08:12:24Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3042b1c94bea7b1bbc9d62ca608942ed9262d517",
    "line" : 5,
    "diffHunk" : "@@ -102,7 +102,7 @@ prettyErr lfVersion err = case err of\n         DA.Pretty.string (show berr)\n     SSC.ScenarioError serr ->\n         SS.prettyBriefScenarioError\n-          (LF.emptyWorld lfVersion)\n+          (LF.initWorld [] lfVersion)"
  },
  {
    "id" : "a9eafaad-eecd-47d9-9d49-e186dcffa8f0",
    "prId" : 799,
    "comments" : [
      {
        "id" : "c3885759-8db5-4297-9a94-008e57949efc",
        "parentId" : null,
        "author" : {
          "login" : "DavidM-D",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/11191170?u=3edc6e08b7c7f0d980a6dc81e5a2ce49dd1ef0f0&v=4"
        },
        "body" : "```suggestion\r\n        testRun h inFiles lfVersion color mbJUnitOutput\r\n```",
        "createdAt" : "2019-04-30T15:31:57Z",
        "updatedAt" : "2019-04-30T17:21:55Z",
        "lastEditedBy" : {
          "login" : "DavidM-D",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/11191170?u=3edc6e08b7c7f0d980a6dc81e5a2ce49dd1ef0f0&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "77beab36-3164-4809-bc79-fe8377d2be7b",
        "parentId" : "c3885759-8db5-4297-9a94-008e57949efc",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Thanks! This worked this way at one point in time, and I forgot to update",
        "createdAt" : "2019-04-30T15:32:55Z",
        "updatedAt" : "2019-04-30T17:21:55Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "01f9edb380980b9ddcd23c3c6d2fce948c41bfb8",
    "line" : null,
    "diffHunk" : "@@ -35,62 +35,65 @@ import System.FilePath\n import qualified Text.XML.Light as XML\n \n \n-newtype ColorTestResults = ColorTestResults{getColorTestResults :: Bool}\n+newtype UseColor = UseColor {getUseColor :: Bool}\n \n -- | Test a DAML file.\n-execTest :: [FilePath] -> ColorTestResults -> Maybe FilePath -> Compiler.Options -> IO ()\n-execTest inFiles colorTestResults mbJUnitOutput cliOptions = do\n+execTest :: [FilePath] -> UseColor -> Maybe FilePath -> Compiler.Options -> IO ()\n+execTest inFiles color mbJUnitOutput cliOptions = do\n     loggerH <- getLogger cliOptions \"test\"\n     opts <- Compiler.mkOptions cliOptions\n-    -- TODO (MK): For now the scenario service is only started if we have an event logger\n-    -- so we insert a dummy event logger.\n-    let eventLogger _ = pure ()\n-    Managed.with (Compiler.newIdeState opts (Just eventLogger) loggerH) $ \\hDamlGhc -> do\n-        liftIO $ Compiler.setFilesOfInterest hDamlGhc inFiles\n-        mbDeps <- liftIO $ CompilerService.runAction hDamlGhc $ fmap sequence $ mapM CompilerService.getDependencies inFiles\n-        depFiles <- maybe (reportDiagnostics hDamlGhc \"Failed get dependencies\") pure mbDeps\n-        let files = Set.toList $ Set.fromList inFiles `Set.union`  Set.fromList (concat depFiles)\n+    let eventLogger (EventFileDiagnostics diag) = printDiagnostics $ fdDiagnostics diag\n+        eventLogger _ = return ()\n+    Managed.with (Compiler.newIdeState opts (Just eventLogger) loggerH) $ \\h -> do\n         let lfVersion = Compiler.optDamlLfVersion cliOptions\n-        case mbJUnitOutput of\n-            Nothing -> testStdio lfVersion hDamlGhc files colorTestResults\n-            Just junitOutput -> testJUnit lfVersion hDamlGhc files junitOutput\n+        _ <- testRun h inFiles lfVersion color mbJUnitOutput"
  },
  {
    "id" : "244839f4-4ba9-42a2-9099-bf253f2371af",
    "prId" : 618,
    "comments" : [
      {
        "id" : "45690513-45ea-4485-89a0-8fbcc455b447",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "We try and avoid `Bool` arguments. See elsewhere for where we've lifted these into a type.",
        "createdAt" : "2019-04-23T15:09:40Z",
        "updatedAt" : "2019-04-23T19:35:30Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f9600ab9-880c-497d-85f6-40892e02cfb7",
        "parentId" : "45690513-45ea-4485-89a0-8fbcc455b447",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "@akalburgi That's the thing because of which I once put you on a PR out of the blue. If you grep for a line containing both `newtype` and `Bool`, you'll find a good way to deal with this.",
        "createdAt" : "2019-04-23T15:21:58Z",
        "updatedAt" : "2019-04-23T19:35:30Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c65be46b-f3c4-4260-8ae6-090f27359524",
        "parentId" : "45690513-45ea-4485-89a0-8fbcc455b447",
        "author" : {
          "login" : "akalburgi",
          "name" : "Anup Kalburgi",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/42743833?v=4"
        },
        "body" : "@martin-drhu-da / @hurryabit   i think it is `type Var = Bool ` no ? ",
        "createdAt" : "2019-04-23T15:31:01Z",
        "updatedAt" : "2019-04-23T19:35:30Z",
        "lastEditedBy" : {
          "login" : "akalburgi",
          "name" : "Anup Kalburgi",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/42743833?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "dceb9b81-4c30-416d-a7c7-5b2c67646372",
        "parentId" : "45690513-45ea-4485-89a0-8fbcc455b447",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "@akalburgi I meant something along\r\nhttps://github.com/digital-asset/daml/blob/0b87c4ceaec14809fb0de37e1af950dd74540717/daml-foundations/daml-tools/da-hs-daml-cli/DA/Cli/Damlc.hs#L224",
        "createdAt" : "2019-04-23T16:17:43Z",
        "updatedAt" : "2019-04-23T19:35:30Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5b09ff3b-2dde-4d8a-99f1-0b6ccc07fcc6",
        "parentId" : "45690513-45ea-4485-89a0-8fbcc455b447",
        "author" : {
          "login" : "akalburgi",
          "name" : "Anup Kalburgi",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/42743833?v=4"
        },
        "body" : "Ok that makes sense after reading a little bit about newtype vs type keywords",
        "createdAt" : "2019-04-23T16:46:14Z",
        "updatedAt" : "2019-04-23T19:35:30Z",
        "lastEditedBy" : {
          "login" : "akalburgi",
          "name" : "Anup Kalburgi",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/42743833?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "efadb4b0bbd45eb2c125c101449937c4ab0174b3",
    "line" : null,
    "diffHunk" : "@@ -33,8 +33,8 @@ import qualified Text.XML.Light as XML\n \n \n -- | Test a DAML file.\n-execTest :: [FilePath] -> Maybe FilePath -> Compiler.Options -> IO ()\n-execTest inFiles mbJUnitOutput cliOptions = do\n+execTest :: [FilePath] -> Bool -> Maybe FilePath -> Compiler.Options -> IO ()"
  },
  {
    "id" : "91d5b35c-5670-4f3f-bb2c-ba8672b82fe9",
    "prId" : 618,
    "comments" : [
      {
        "id" : "f7e812f0-a49f-49e5-bbe0-2b333a167d3f",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I'd prefer if the field was called `getColorTestResults` or `unColorTestResults`.",
        "createdAt" : "2019-04-25T13:55:17Z",
        "updatedAt" : "2019-04-25T13:56:53Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8f70f05d-b2e3-4776-8934-5614644ceb16",
        "parentId" : "f7e812f0-a49f-49e5-bbe0-2b333a167d3f",
        "author" : {
          "login" : "akalburgi",
          "name" : "Anup Kalburgi",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/42743833?v=4"
        },
        "body" : "Cool looks good to me too, will make the change ",
        "createdAt" : "2019-04-25T14:30:01Z",
        "updatedAt" : "2019-04-25T14:30:01Z",
        "lastEditedBy" : {
          "login" : "akalburgi",
          "name" : "Anup Kalburgi",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/42743833?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "efadb4b0bbd45eb2c125c101449937c4ab0174b3",
    "line" : 16,
    "diffHunk" : "@@ -32,9 +35,11 @@ import System.FilePath\n import qualified Text.XML.Light as XML\n \n \n+newtype ColorTestResults = ColorTestResults{color :: Bool}"
  }
]