[
  {
    "id" : "a508ed41-540d-43d1-80ca-d1a8af107570",
    "prId" : 421,
    "comments" : [
      {
        "id" : "bb61c494-41d7-4e43-83c4-dd3fb2d5af8b",
        "parentId" : null,
        "author" : {
          "login" : "bolek-wisniewski",
          "name" : "Bolek@DigitalAsset",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/25302921?u=0ebe382413a7e394adf0aa30927d2c94e4882778&v=4"
        },
        "body" : "TODO - give these entries a type",
        "createdAt" : "2019-04-12T14:09:45Z",
        "updatedAt" : "2019-04-12T14:09:45Z",
        "lastEditedBy" : {
          "login" : "bolek-wisniewski",
          "name" : "Bolek@DigitalAsset",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/25302921?u=0ebe382413a7e394adf0aa30927d2c94e4882778&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "815007d55251f76450228ad5c512729bb36cbef2",
    "line" : 62,
    "diffHunk" : "@@ -1,50 +1,46 @@\n // Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n // SPDX-License-Identifier: Apache-2.0\n \n-const signature = require('cookie-signature'),\n-      cookie = require('cookie'),\n-      uid = require('uid-safe').sync,\n-      NodeCache = require( \"node-cache\" ),\n-      config = require('./config.json'),\n-\n-      store = new NodeCache({ stdTTL: config.session.inactiveTimeout, checkperiod: 120, useClones: false })\n-\n-\n-module.exports = {\n-  allSessionIds: allSessionIds,\n-  allSessionEntries: allSessionEntries,\n-  close: close,\n-  remove: remove,\n-  keepActive: keepActive,\n-  session: session,\n-  readSession: readSession,\n-  onTimeout: onTimeout\n-} \n+import * as signature from \"cookie-signature\"\n+import * as cookie from \"cookie\"\n+import NodeCache from \"node-cache\"\n+import * as uid from \"uid-safe\"\n+import { Request, Response } from \"express\";\n+\n+const conf = require('./config').read(),\n+      debug = require('debug')('webide-session'),\n+      store = new NodeCache({ stdTTL: conf.session.inactiveTimeout, checkperiod: 120, useClones: false })\n+\n+type Callback<T> = (error?: any, result?: T) => void;\n+export type SaveSession = (state :any) => boolean;\n+type ReadSessionCallback = (err :any, result: any, sessionId :string) => void;\n+type SaveSessionCallback = (err :any, result: any, sessionId :string, save :SaveSession) => void;\n+\n \n /**\n  * callback: function( value ) where value is the state of the session\n  * is called when a session inactivetimeout occurs. This could be due to inactivity or cookie expiration\n  */\n-function onTimeout(callback) {\n-  store.on( \"del\", function( key, value ){\n-    console.log(\"session removed: %s\", key)\n+export function onTimeout(callback: Callback<any>) {\n+  store.on( \"del\", ( key :string, value :any) => {\n+    debug(\"session removed: %s\", key)\n     callback(value || {})\n   });\n }\n \n-function remove(sessionId) {\n+function remove(sessionId :string) {\n   store.del(sessionId)\n }\n \n /**\n  * returns promise resolved to array of session entries :: [sessionId, state]\n  */\n-function allSessionEntries() {\n+export function allSessionEntries() {"
  },
  {
    "id" : "bc1bc5eb-ac76-4115-b161-5c950ac31e26",
    "prId" : 421,
    "comments" : [
      {
        "id" : "e7353fa0-d385-4bd8-aa10-3b43e4b294b9",
        "parentId" : null,
        "author" : {
          "login" : "bolek-wisniewski",
          "name" : "Bolek@DigitalAsset",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/25302921?u=0ebe382413a7e394adf0aa30927d2c94e4882778&v=4"
        },
        "body" : "TODO give type",
        "createdAt" : "2019-04-12T14:09:59Z",
        "updatedAt" : "2019-04-12T14:09:59Z",
        "lastEditedBy" : {
          "login" : "bolek-wisniewski",
          "name" : "Bolek@DigitalAsset",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/25302921?u=0ebe382413a7e394adf0aa30927d2c94e4882778&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "815007d55251f76450228ad5c512729bb36cbef2",
    "line" : 77,
    "diffHunk" : "@@ -62,7 +58,7 @@ function allSessionEntries() {\n /**\n  * returns promise resolved to array of sessionIds\n  */\n-function allSessionIds() {\n+export function allSessionIds() {"
  }
]