[
  {
    "id" : "ca31ec89-b8af-4b3e-ad8d-c644aeb10ffc",
    "prId" : 6273,
    "comments" : [
      {
        "id" : "93d2807a-6f5c-4a92-8812-d905c024cc27",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I don’t see an advantage of including it here given that caching only works in CI anyway (and even there it mostly doesn’t work :cry:) and having it duplicated creeps me out a bit.",
        "createdAt" : "2020-06-09T09:29:22Z",
        "updatedAt" : "2020-06-09T09:29:23Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3a46c2182aae21b6ab190cd5df04598c4394d6fe",
    "line" : 4,
    "diffHunk" : "@@ -2,7 +2,6 @@\n # flag: --noremote_accept_cached\n build:darwin --remote_http_cache=https://bazel-cache.da-ext.net\n build:linux --remote_http_cache=https://bazel-cache.da-ext.net\n-build:windows-ci --remote_http_cache=https://bazel-cache.da-ext.net/v1"
  },
  {
    "id" : "b5eea645-7f3e-480c-8f81-4a619cae6dc9",
    "prId" : 6265,
    "comments" : [
      {
        "id" : "04d6b948-e0a1-42ed-8b04-3fe514c1994d",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "There's a corresponding line in `ci/configure-bazel.sh`. I think that needs to be updated too.",
        "createdAt" : "2020-06-08T14:24:32Z",
        "updatedAt" : "2020-06-08T14:27:23Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "32fb0cfd-320e-4bae-af59-6125161fc529",
        "parentId" : "04d6b948-e0a1-42ed-8b04-3fe514c1994d",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Thanks, updated.",
        "createdAt" : "2020-06-08T14:27:24Z",
        "updatedAt" : "2020-06-08T14:27:27Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5c630893c1ed2d032d562ba337cb8b9ccce1f6e9",
    "line" : 5,
    "diffHunk" : "@@ -2,7 +2,7 @@\n # flag: --noremote_accept_cached\n build:darwin --remote_http_cache=https://bazel-cache.da-ext.net\n build:linux --remote_http_cache=https://bazel-cache.da-ext.net\n-build:windows-ci --remote_http_cache=https://bazel-cache.da-ext.net\n+build:windows-ci --remote_http_cache=https://bazel-cache.da-ext.net/v1"
  },
  {
    "id" : "063293cc-a159-467b-8aa2-741bdb169e71",
    "prId" : 3249,
    "comments" : [
      {
        "id" : "807559b7-5ba3-4669-87d2-fa0d811f061d",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Not for this PR but could we work around this by having some wrapper binary that then calls bash internally?",
        "createdAt" : "2019-11-11T08:53:45Z",
        "updatedAt" : "2019-11-11T08:58:07Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9d9cadef-b84f-41e9-8302-3d0bbdc137c8",
        "parentId" : "807559b7-5ba3-4669-87d2-fa0d811f061d",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "One way to address this is turn things like `client_server_test` into a macro that generates a script file and then calls `sh_test|binary` on that. Another is to use `cc_toolchain.link|compile` to generate a binary that calls the shell script. I think the former is the better approach. I've experimented with both and the latter caused some issues with the test-environment not matching what the test-cases expected.",
        "createdAt" : "2019-11-11T09:05:13Z",
        "updatedAt" : "2019-11-11T09:05:13Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "78eb25d9-1dd7-4b0b-a266-78cce38f748a",
        "parentId" : "807559b7-5ba3-4669-87d2-fa0d811f061d",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Sounds good, thanks for the explanation!",
        "createdAt" : "2019-11-11T09:06:26Z",
        "updatedAt" : "2019-11-11T09:06:26Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c1e1d1b081e07514992ef7569f6e5247d142c05c",
    "line" : 6,
    "diffHunk" : "@@ -67,6 +67,10 @@ build:darwin --host_platform=@rules_haskell//haskell/platforms:darwin_x86_64_nix\n # and GHC's gcc on Windows\n build:windows --crosstool_top=@rules_haskell_ghc_windows_amd64//:cc_toolchain\n \n+# Bazel 1.0 disabled the bash test-runner on Windows. However, some of our\n+# test-cases are implemented as bash scripts and rely on the bash test-runner.\n+build:windows --noincompatible_windows_native_test_wrapper"
  }
]