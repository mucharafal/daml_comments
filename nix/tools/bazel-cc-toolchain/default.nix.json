[
  {
    "id" : "c14fbfd2-7d15-4cf5-9265-7ada6bbc21d3",
    "prId" : 5976,
    "comments" : [
      {
        "id" : "6d0fe6de-3a08-4447-a998-dcd0dc4e31a4",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Is `clang` a symlink to `cc` or the other way around? If `cc` is a symlink to `clang` this seems worse. If `clang` is a symlink to `cc` this seems sensible. If there is no relationship should we patch both? This patch clearly did something before so Iâ€™m slightly scared that we now end up not picking up this patch in some cases.",
        "createdAt" : "2020-05-18T06:44:59Z",
        "updatedAt" : "2020-05-18T15:01:30Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "39351e7f-809a-4dd6-8841-d55f6199c190",
        "parentId" : "6d0fe6de-3a08-4447-a998-dcd0dc4e31a4",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "`cc` is a symlink to `clang` in nixpkgs's `clang-wrapper`. For the purposes of this toolchain, `nixpkgs_configure_cc_hermetic` only looks at `cc` and `clang` is ignored. Nixpkgs provides these `cc` links consistently across platforms, so it seems more stable to use those.\r\n\r\nThough having `clang` around as well might lead to confusion. Maybe it's best to just remove `clang(++)` from this derivation.",
        "createdAt" : "2020-05-18T08:45:06Z",
        "updatedAt" : "2020-05-18T15:01:30Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "bcdb916c0d94aead04759fa80443d95e751d3c95",
    "line" : null,
    "diffHunk" : "@@ -27,10 +27,10 @@ let cc-darwin =\n       ln -sf $i $out/bin\n     done\n \n-    # Override clang\n-    rm $out/bin/clang\n+    # Override cc\n+    rm $out/bin/cc"
  },
  {
    "id" : "590cd6fe-2d68-4aea-8e5b-0a568e73443b",
    "prId" : 5976,
    "comments" : [
      {
        "id" : "31eb9342-0982-4294-9ce8-7ded98cc6793",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Is this necessary now? For what?",
        "createdAt" : "2020-05-18T06:45:18Z",
        "updatedAt" : "2020-05-18T15:01:30Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9d5d7d13-b4ff-45aa-a0be-5e7aa8aa8676",
        "parentId" : "31eb9342-0982-4294-9ce8-7ded98cc6793",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Yes, the old toolchain just picked `/usr/bin/strip` and friends. To make these parts hermetic as well, we want to use nixpkgs provided tools. On MacOS one use to use `darwin.binutils` instead of `binutils`. The latter includes a `bin/strip` that chokes on MACH-O binaries. See https://github.com/NixOS/nixpkgs-channels/blob/10100a97c8964e82b30f180fda41ade8e6f69e41/pkgs/os-specific/darwin/binutils/default.nix#L32",
        "createdAt" : "2020-05-18T08:49:37Z",
        "updatedAt" : "2020-05-18T15:01:30Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "bcdb916c0d94aead04759fa80443d95e751d3c95",
    "line" : 33,
    "diffHunk" : "@@ -70,5 +70,5 @@ let cc-darwin =\n in\n buildEnv {\n   name = \"bazel-cc-toolchain\";\n-  paths = [ customStdenv.cc ] ++ (if stdenv.isDarwin then [ ] else [ binutils ]);\n+  paths = [ customStdenv.cc ] ++ (if stdenv.isDarwin then [ darwin.binutils ] else [ binutils ]);"
  }
]