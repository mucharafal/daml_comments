[
  {
    "id" : "849f7779-7e1b-4cbe-8b4f-2a3cbd18c48d",
    "prId" : 1460,
    "comments" : [
      {
        "id" : "bbc9f87d-e849-437b-a970-72d767b0763c",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Is this the right API? Should you be returning the ClientCall?",
        "createdAt" : "2019-05-30T08:28:35Z",
        "updatedAt" : "2019-05-30T10:10:13Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9626112d-6775-494d-8f13-120e1747cb71",
        "parentId" : "bbc9f87d-e849-437b-a970-72d767b0763c",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "What do you suggest?",
        "createdAt" : "2019-05-30T08:32:43Z",
        "updatedAt" : "2019-05-30T10:10:13Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "de22ec3d-b190-4da6-ab3c-d16752bbf2cd",
        "parentId" : "bbc9f87d-e849-437b-a970-72d767b0763c",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Maybe we make a new type which only allow cancel to be called.\r\nBut returning the LL.ClientCall is more general.\r\nAnd the user only gets the ClientCall if they explicitly ask for it.\r\n",
        "createdAt" : "2019-05-30T08:35:06Z",
        "updatedAt" : "2019-05-30T10:10:13Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d0f6b535-76d5-4142-9450-c82ad7bf02e2",
        "parentId" : "bbc9f87d-e849-437b-a970-72d767b0763c",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Returning the pair of ClientCall and the value would have been my approach, if it fits. If the only sensible thing you can do is cancel it then return a pair of `IO ()` (the cancel function) and the value. FWIW at a previous company I defined `newtype Cancel = Cancel (IO ())` and it was quite a successful abstraction.",
        "createdAt" : "2019-05-30T08:50:06Z",
        "updatedAt" : "2019-05-30T10:10:13Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a5667c0f-0e21-4603-886b-9c33628be917",
        "parentId" : "bbc9f87d-e849-437b-a970-72d767b0763c",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "We can't return a pair because the interface is set up in a with-resource style, the `ClientCall` value being obtained from `withClientCall`.\r\n\r\nI was about to introduce the `Cancel` abstraction you suggested, when I noticed that `ClientCall` and `clientCallCancel` were already exposed in the `HighLevel` interface. (The only thing missing was how to obtain a `ClientCall` value.)\r\n\r\nSince the type of `ClientCall` is abstract, the only thing to be done is call `clientCallCancel` on it. And so it seems to fulfill the role of the suggested newtype.\r\n\r\nSo I the end, didn't add it.",
        "createdAt" : "2019-05-30T10:49:01Z",
        "updatedAt" : "2019-05-30T10:50:05Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "04e83ebc-2da3-4d50-b493-ed017611af18",
        "parentId" : "bbc9f87d-e849-437b-a970-72d767b0763c",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Fair enough on all points.",
        "createdAt" : "2019-05-30T11:36:40Z",
        "updatedAt" : "2019-05-30T11:36:41Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "267b50c00a5975392540a29d99c1dd64acadd0c1",
    "line" : null,
    "diffHunk" : "@@ -258,12 +258,14 @@ clientReader :: Client\n              -> TimeoutSeconds\n              -> ByteString -- ^ The body of the request\n              -> MetadataMap -- ^ Metadata to send with the request\n+             -> (ClientCall -> IO ())"
  }
]