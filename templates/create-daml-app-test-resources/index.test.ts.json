[
  {
    "id" : "83da8812-f0e9-4f54-a541-92ab83f616ca",
    "prId" : 6253,
    "comments" : [
      {
        "id" : "88902fb8-a2fc-4317-a7c2-ba62f9abc344",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "> waitForSelector returns immediately if the selector is already present (which is documented). ...\r\n\r\n`page2` is a separate result of `newUiPage` than `page1`. Do I understand correctly that the presence of `.test-select-following` on `page1` influences the query on `page2`? How is that happening?",
        "createdAt" : "2020-06-08T08:24:40Z",
        "updatedAt" : "2020-06-08T08:24:43Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a0efb7a8-d762-409c-a04d-13c805998b18",
        "parentId" : "88902fb8-a2fc-4317-a7c2-ba62f9abc344",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Iâ€™m not following, we waited on `page2` before, we wait on `page2` now.",
        "createdAt" : "2020-06-08T08:27:40Z",
        "updatedAt" : "2020-06-08T08:27:41Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "169b46d8-7c68-4e92-b8c9-20d20571b87c",
        "parentId" : "88902fb8-a2fc-4317-a7c2-ba62f9abc344",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Hmm, nevermind, I misread the description of the issue.",
        "createdAt" : "2020-06-08T09:24:12Z",
        "updatedAt" : "2020-06-08T09:24:13Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ad80e8649a1a526a90fa41ed5b164da222a14997",
    "line" : 18,
    "diffHunk" : "@@ -266,7 +268,9 @@ test('log in as three different users and start following each other', async ()\n   await follow(page2, party3);\n \n   // Check the following list is updated correctly.\n-  await page2.waitForSelector('.test-select-following');\n+  await page2.waitForFunction(\n+    () => document.querySelectorAll(\".test-select-following\").length == 2\n+  );"
  },
  {
    "id" : "1faf52fb-c4ae-4180-a3ae-3755a716667e",
    "prId" : 5637,
    "comments" : [
      {
        "id" : "60f99b99-0074-4c4c-9e45-fbc1dee976f3",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "If we don't also make the JSON API port dynamic, this doesn't by us much. I would just remove it together with the explanatory comment for what port 0 means.",
        "createdAt" : "2020-04-20T19:39:01Z",
        "updatedAt" : "2020-04-20T20:14:48Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "01b6d744264f5b86f09b6cb059dfa7c7c58224e4",
    "line" : null,
    "diffHunk" : "@@ -62,49 +54,35 @@ const removeFile = async (path: string) => {\n // Start the DAML and UI processes before the tests begin.\n // To reduce test times, we reuse the same processes between all the tests.\n // This means we need to use a different set of parties and a new browser page for each test.\n-//\n-// We run the sandbox and JSON API server separately, as opposed to using\n-// `daml start` as we instruct users to do in the Getting Started Guide.\n-// This is so that we have more control of the ports used and hopefully avoid\n-// hardcoding port numbers (which can cause clashes in CI runs).\n beforeAll(async () => {\n-  // If the sandbox or JSON API processes were previously shut down\n-  // abruptly then their port files may not have been deleted.\n-  // Since we use these files to know when the servers are up, we remove them\n-  // first (if they exist) to be sure.\n-  await removeFile(SANDBOX_PORT_FILE_PATH);\n-  await removeFile(JSON_API_PORT_FILE_PATH);\n-\n-  // Run the `daml` commands from the project root (where the `daml.yaml` is located).\n+  // If the JSON API server was previously shut down abruptly then the port file\n+  // may not have been removed.\n+  // Since we use this file to know when the server is up, we remove it first\n+  // (if it exists) to be sure.\n+  const jsonApiPortFilePath = `../${JSON_API_PORT_FILE_NAME}`; // relative to ui folder\n+  await removeFile(jsonApiPortFilePath);\n+\n+  // Run `daml start` from the project root (where the `daml.yaml` is located).\n   // The path should include '.daml/bin' in the environment where this is run,\n   // which contains the `daml` assistant executable.\n   const startOpts: SpawnOptions = { cwd: '..', stdio: 'inherit' };\n \n-  // Port number 0 instructs the sandbox to find an available port and write the\n-  // real port number to the port file.\n-  const sandboxOptions = [\n-    'sandbox',\n-    '--wall-clock-time',\n-    `--ledgerid=${SANDBOX_LEDGER_ID}`,\n-    '--port=0',\n-    `--port-file=${SANDBOX_PORT_FILE_NAME}`,\n-    DAR_PATH\n+  // Arguments for `daml start` (besides those in the `daml.yaml`).\n+  // `--sandbox-port=0` instructs the sandbox to find an available port which is\n+  // then used as the `--ledger-port` for the JSON API.\n+  // The JSON API `--port-file` gives us a file we can check to know that both\n+  // the sandbox and JSON API server are up and running.\n+  // The JSON API port is hardcoded for now.\n+  const startArgs = [\n+    'start',\n+    '--sandbox-port=0',"
  },
  {
    "id" : "e0713b91-c6bd-4347-979a-4939d5d52f46",
    "prId" : 5637,
    "comments" : [
      {
        "id" : "c4e793df-e488-4b20-a116-5853d2cf034b",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I suggest we don't specify this port explicitly since the GSG uses the default. If we don't do the same here we're kind of blind against the GSG breaking because somebody changes the default port of JSON API and our tests don't break.",
        "createdAt" : "2020-04-20T19:41:15Z",
        "updatedAt" : "2020-04-20T20:14:48Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "01b6d744264f5b86f09b6cb059dfa7c7c58224e4",
    "line" : null,
    "diffHunk" : "@@ -62,49 +54,35 @@ const removeFile = async (path: string) => {\n // Start the DAML and UI processes before the tests begin.\n // To reduce test times, we reuse the same processes between all the tests.\n // This means we need to use a different set of parties and a new browser page for each test.\n-//\n-// We run the sandbox and JSON API server separately, as opposed to using\n-// `daml start` as we instruct users to do in the Getting Started Guide.\n-// This is so that we have more control of the ports used and hopefully avoid\n-// hardcoding port numbers (which can cause clashes in CI runs).\n beforeAll(async () => {\n-  // If the sandbox or JSON API processes were previously shut down\n-  // abruptly then their port files may not have been deleted.\n-  // Since we use these files to know when the servers are up, we remove them\n-  // first (if they exist) to be sure.\n-  await removeFile(SANDBOX_PORT_FILE_PATH);\n-  await removeFile(JSON_API_PORT_FILE_PATH);\n-\n-  // Run the `daml` commands from the project root (where the `daml.yaml` is located).\n+  // If the JSON API server was previously shut down abruptly then the port file\n+  // may not have been removed.\n+  // Since we use this file to know when the server is up, we remove it first\n+  // (if it exists) to be sure.\n+  const jsonApiPortFilePath = `../${JSON_API_PORT_FILE_NAME}`; // relative to ui folder\n+  await removeFile(jsonApiPortFilePath);\n+\n+  // Run `daml start` from the project root (where the `daml.yaml` is located).\n   // The path should include '.daml/bin' in the environment where this is run,\n   // which contains the `daml` assistant executable.\n   const startOpts: SpawnOptions = { cwd: '..', stdio: 'inherit' };\n \n-  // Port number 0 instructs the sandbox to find an available port and write the\n-  // real port number to the port file.\n-  const sandboxOptions = [\n-    'sandbox',\n-    '--wall-clock-time',\n-    `--ledgerid=${SANDBOX_LEDGER_ID}`,\n-    '--port=0',\n-    `--port-file=${SANDBOX_PORT_FILE_NAME}`,\n-    DAR_PATH\n+  // Arguments for `daml start` (besides those in the `daml.yaml`).\n+  // `--sandbox-port=0` instructs the sandbox to find an available port which is\n+  // then used as the `--ledger-port` for the JSON API.\n+  // The JSON API `--port-file` gives us a file we can check to know that both\n+  // the sandbox and JSON API server are up and running.\n+  // The JSON API port is hardcoded for now.\n+  const startArgs = [\n+    'start',\n+    '--sandbox-port=0',\n+    `--json-api-port=${JSON_API_PORT}`,"
  },
  {
    "id" : "9c8f9984-3336-41e6-83af-73af4b1b3222",
    "prId" : 5637,
    "comments" : [
      {
        "id" : "67a583d3-9df8-4729-8e43-4951ba957773",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Shouldn't we now remove the port file for the JSON API? Maybe doing it immediately after we finished waiting for it is the right moment.",
        "createdAt" : "2020-04-20T19:42:13Z",
        "updatedAt" : "2020-04-20T20:14:48Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b168b73b-e7e9-41ac-8837-67b6333990ff",
        "parentId" : "67a583d3-9df8-4729-8e43-4951ba957773",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "The JSON API server should remove it if it's shut down gracefully (which it should be at this point in the code). I added the removal at the start in case it was previously killed abruptly.",
        "createdAt" : "2020-04-20T20:00:26Z",
        "updatedAt" : "2020-04-20T20:14:48Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fa451975-eef3-4085-baa3-103733547dd8",
        "parentId" : "67a583d3-9df8-4729-8e43-4951ba957773",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Ah, I didn't know the JSON API server will remove the file. That's great. Thanks for pointing that out!",
        "createdAt" : "2020-04-21T12:21:31Z",
        "updatedAt" : "2020-04-21T12:21:32Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "01b6d744264f5b86f09b6cb059dfa7c7c58224e4",
    "line" : 132,
    "diffHunk" : "@@ -118,26 +96,19 @@ beforeAll(async () => {\n   // Ensure the UI server is ready by checking that the port is available.\n   await waitOn({resources: [`tcp:localhost:${UI_PORT}`]});\n \n-  // Launch a browser once for all tests.\n+  // Launch a single browser for all tests.\n   browser = await puppeteer.launch();\n }, 40_000);\n \n afterAll(async () => {\n-  // Kill the sandbox and JSON API processes.\n-  // Note that `kill()` sends the `SIGTERM` signal but the actual processes may\n-  // not die immediately.\n+  // Kill the `daml start` process, allowing the sandbox and JSON API server to\n+  // shut down gracefully.\n+  // The latter process should also remove the JSON API port file.\n   // TODO: Test this on Windows.\n-  if (sandbox) {\n-    sandbox.kill();\n-  }\n-  if (jsonApiServer) {\n-    jsonApiServer.kill();\n+  if (startProc) {\n+    startProc.kill('SIGTERM');\n   }\n \n-  // The sandbox does not clean up its port file on termination so we take care\n-  // of that. (The JSON API server takes care of this for us.)\n-  await removeFile(SANDBOX_PORT_FILE_PATH);"
  },
  {
    "id" : "75f2cc18-e13a-4b65-abe5-186781f389be",
    "prId" : 5637,
    "comments" : [
      {
        "id" : "5fcc3acb-c7d8-441f-9309-c8e0e3c75baa",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "That link appears slightly random to me. Do we really need it?",
        "createdAt" : "2020-04-20T19:45:10Z",
        "updatedAt" : "2020-04-20T20:14:48Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "01b6d744264f5b86f09b6cb059dfa7c7c58224e4",
    "line" : null,
    "diffHunk" : "@@ -10,30 +10,22 @@ import Ledger from '@daml/ledger';\n import { User } from '@daml.js/create-daml-app';\n import { computeCredentials } from './Credentials';\n \n-const DAR_PATH = '.daml/dist/create-daml-app-0.1.0.dar';\n-const SANDBOX_LEDGER_ID = 'create-daml-app-sandbox';\n-\n-// Base names of port files\n-const SANDBOX_PORT_FILE_NAME = 'sandbox.port';\n const JSON_API_PORT_FILE_NAME = 'json-api.port';\n-// Relative paths from the ui directory\n-const SANDBOX_PORT_FILE_PATH = `../${SANDBOX_PORT_FILE_NAME}`;\n-const JSON_API_PORT_FILE_PATH = `../${JSON_API_PORT_FILE_NAME}`;\n \n-// We still hardcode the JSON API port as it also appears in test and proxy\n-// settings in the ui/package.json.\n+// We hardcode the JSON API port as it also appears in test and proxy settings\n+// in ui/package.json.\n const JSON_API_PORT = 7575;\n const UI_PORT = 3000;\n \n-// DAML processes\n-let sandbox: ChildProcess | undefined = undefined;\n-let jsonApiServer: ChildProcess | undefined = undefined;\n+// `daml start` process\n+let startProc: ChildProcess | undefined = undefined;\n \n-// UI processes\n+// `yarn start` process\n let uiProc: ChildProcess | undefined = undefined;\n+\n+// Headless Chrome browser\n+// (see https://developers.google.com/web/updates/2017/04/headless-chrome)"
  },
  {
    "id" : "de165fdf-2b76-484c-bc3e-d810e3552979",
    "prId" : 5540,
    "comments" : [
      {
        "id" : "b4baa4af-7948-4d00-be7b-fb2cacd7b4bd",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Letâ€™s not change this in this PR but the party management service is exposed now.",
        "createdAt" : "2020-04-17T03:43:54Z",
        "updatedAt" : "2020-04-17T16:24:22Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "022f7a09b19657608748dce2c6402328ae375078",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,305 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+import { ChildProcess, spawn, SpawnOptions } from 'child_process';\n+import waitOn from 'wait-on';\n+\n+import Ledger from '@daml/ledger';\n+import { User } from '@daml.js/create-daml-app';\n+import { computeCredentials } from './Credentials';\n+\n+import puppeteer, { Browser, Page } from 'puppeteer';\n+\n+const SANDBOX_PORT = 6865;\n+const JSON_API_PORT = 7575;\n+const UI_PORT = 3000;\n+\n+// `daml start` process (which spawns a sandbox and JSON API server)\n+let startProc: ChildProcess | undefined = undefined;\n+\n+// Headless Chrome browser:\n+// https://developers.google.com/web/updates/2017/04/headless-chrome\n+let browser: Browser | undefined = undefined;\n+\n+let uiProc: ChildProcess | undefined = undefined;\n+\n+// Function to generate unique party names for us.\n+// This should be replaced by the party management service once that is exposed"
  },
  {
    "id" : "0e2d00ed-ae64-48e3-9bd3-0be1ad3624de",
    "prId" : 5540,
    "comments" : [
      {
        "id" : "471a72a7-86ee-4ca5-801c-a36d0b6e27c1",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "In a follow-up PR, let's wait for the `--port-file` to be created for sandbox and the JSON API instead of waiting for the ports, which has been less reliable, at least on MacOS, in the past. Let's do this regardless of whether we switch to dynamic port allocation.",
        "createdAt" : "2020-04-17T09:45:41Z",
        "updatedAt" : "2020-04-17T16:24:22Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "022f7a09b19657608748dce2c6402328ae375078",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,305 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+import { ChildProcess, spawn, SpawnOptions } from 'child_process';\n+import waitOn from 'wait-on';\n+\n+import Ledger from '@daml/ledger';\n+import { User } from '@daml.js/create-daml-app';\n+import { computeCredentials } from './Credentials';\n+\n+import puppeteer, { Browser, Page } from 'puppeteer';\n+\n+const SANDBOX_PORT = 6865;\n+const JSON_API_PORT = 7575;\n+const UI_PORT = 3000;\n+\n+// `daml start` process (which spawns a sandbox and JSON API server)\n+let startProc: ChildProcess | undefined = undefined;\n+\n+// Headless Chrome browser:\n+// https://developers.google.com/web/updates/2017/04/headless-chrome\n+let browser: Browser | undefined = undefined;\n+\n+let uiProc: ChildProcess | undefined = undefined;\n+\n+// Function to generate unique party names for us.\n+// This should be replaced by the party management service once that is exposed\n+// in the HTTP JSON API.\n+let nextPartyId = 1;\n+function getParty(): string {\n+  const party = `P${nextPartyId}`;\n+  nextPartyId++;\n+  return party;\n+}\n+\n+test('Party names are unique', async () => {\n+  const parties = new Set(Array(10).fill({}).map(() => getParty()));\n+  expect(parties.size).toEqual(10);\n+});\n+\n+// Use a single sandbox, JSON API server and browser for all tests for speed.\n+// This means we need to use a different set of parties and a new browser page for each test.\n+beforeAll(async () => {\n+  // Run `daml start` to start up the sandbox and json api server.\n+  // Run it from the repository root, where the `daml.yaml` lives.\n+  // The path should already include '.daml/bin' in the environment where this is run.\n+  const startOpts: SpawnOptions = { cwd: '..', stdio: 'inherit' };\n+  startProc = spawn('daml', ['start'], startOpts);\n+\n+  // Run `yarn start` in another shell.\n+  // Disable automatically opening a browser using the env var described here:\n+  // https://github.com/facebook/create-react-app/issues/873#issuecomment-266318338\n+  const env = {...process.env, BROWSER: 'none'};\n+  uiProc = spawn('yarn', ['start'], { env, stdio: 'inherit', detached: true});\n+  // Note(kill-yarn-start): The `detached` flag starts the process in a new process group.\n+  // This allows us to kill the process with all its descendents after the tests finish,\n+  // following https://azimi.me/2014/12/31/kill-child_process-node-js.html.\n+\n+  // We know the `daml start` and `yarn start` servers are ready once the relevant ports become available.\n+  await waitOn({resources: [\n+    `tcp:localhost:${SANDBOX_PORT}`,\n+    `tcp:localhost:${JSON_API_PORT}`,\n+    `tcp:localhost:${UI_PORT}`"
  }
]