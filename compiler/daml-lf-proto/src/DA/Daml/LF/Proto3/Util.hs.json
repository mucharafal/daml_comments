[
  {
    "id" : "3cfe078c-3db3-4c0b-b7cf-278e0188aa5e",
    "prId" : 3067,
    "comments" : [
      {
        "id" : "6e2486c1-26a9-4d70-8ff2-7d133c8bd697",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : ":cry:",
        "createdAt" : "2019-10-02T14:36:43Z",
        "updatedAt" : "2019-10-04T10:37:43Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "eb8a3c63a39ce4715734e5fd8e994ef0f0490499",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,25 @@\n+-- Copyright (c) 2019 The DAML Authors. All rights reserved.\n+-- SPDX-License-Identifier: Apache-2.0\n+\n+{-# LANGUAGE ConstraintKinds #-}\n+{-# LANGUAGE TypeFamilies #-}\n+{-# LANGUAGE TypeOperators #-}\n+module DA.Daml.LF.Proto3.Util (\n+    EitherLike,\n+    toEither,\n+    fromEither,\n+    ) where\n+\n+import GHC.Generics\n+\n+type EitherLike m1 m2 m3 m4 m5 a b e ="
  }
]