[
  {
    "id" : "74779211-8883-4cef-a21d-dc6ccb02fe49",
    "prId" : 4810,
    "comments" : [
      {
        "id" : "2e7fdce1-4061-4327-969f-a1daf780bad0",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Do we really need this restriction? What happens if we make the decoder more lenient? This would allow us to avoid the check above and fully rely on `T.hexadecimal`.",
        "createdAt" : "2020-03-04T17:23:36Z",
        "updatedAt" : "2020-03-04T17:46:25Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d98119da-e2ed-4d48-a186-c5f8316c6621",
        "parentId" : "2e7fdce1-4061-4327-969f-a1daf780bad0",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Should be fine but I don’t want to add more things to this PR than necessary. I also don’t really expect it to make a difference.",
        "createdAt" : "2020-03-04T17:49:29Z",
        "updatedAt" : "2020-03-04T17:50:38Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "91ceae53309ae1bbb54b7b6ef69df5b7cb90cdb3",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +145,149 @@          Right (toEnum (fst $ fromRight (error $ \"Internal error in unmangleIdentifier: \" <> show escaped) $ T.hexadecimal escaped), chs)\n\n    -- only lowercase, as per printf\n    isEscapeSequenceChars c = isDigit c || c >= 'a' && c <= 'f'"
  },
  {
    "id" : "52f8c5b9-6fd4-403d-8ab8-654d2b397303",
    "prId" : 2350,
    "comments" : [
      {
        "id" : "c726ab15-eaa5-4de8-a9eb-aee7781ada09",
        "parentId" : null,
        "author" : null,
        "body" : "Nice explanation! :+1: ",
        "createdAt" : "2019-07-31T10:35:14Z",
        "updatedAt" : "2019-07-31T13:20:19Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "fbde3f500aaaccb86c12bf249730d56aefc891c7",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +64,68 @@-- can avoid allocating new `Text`s and we optimize the case where we do have to\n-- mangle by preallocating the array of the right size and writing the characters\n-- directly to that.\nmangleIdentifier :: T.Text -> Either String TL.Text\nmangleIdentifier txt = case T.foldl' f (MangledSize 0 0) txt of"
  }
]