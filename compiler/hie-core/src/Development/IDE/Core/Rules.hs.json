[
  {
    "id" : "0994fdc3-2935-4ee3-a8ea-afa57f11d603",
    "prId" : 2291,
    "comments" : [
      {
        "id" : "afe9725b-3348-49bf-9cf3-6a92bb20478f",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This could do with a separate ADT for the return type and a comment on that ADT what the filepath is.",
        "createdAt" : "2019-07-25T17:49:29Z",
        "updatedAt" : "2019-07-26T11:33:56Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e5a9ba4b5b29946bade90058e5d3ed453b249320",
    "line" : null,
    "diffHunk" : "@@ -119,6 +120,20 @@ getDefinition file pos = fmap join $ runMaybeT $ do\n getParsedModule :: NormalizedFilePath -> Action (Maybe ParsedModule)\n getParsedModule file = use GetParsedModule file\n \n+-- | Get module interfaces.\n+getModIfaces ::\n+       NormalizedFilePath -> Action (Maybe [(FilePath, ModIface, HieFile)])"
  },
  {
    "id" : "74f38df6-c9db-41d9-851c-5a2e3d84a153",
    "prId" : 1839,
    "comments" : [
      {
        "id" : "6ada273c-6c36-4677-a85c-d1564bd662d3",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Slightly worried that putting this in a separate definition encourages that people use it directly instead of going via the rule but I donâ€™t feel strongly about this so your choice.",
        "createdAt" : "2019-06-24T10:03:55Z",
        "updatedAt" : "2019-06-24T10:43:12Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d5763cdf-3476-481e-ac66-daf88aff9d17",
        "parentId" : "6ada273c-6c36-4677-a85c-d1564bd662d3",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Yeah, I was going to centralise the ofInterest rule in a future patch - but I'll do it now. I want it to be fully abstract.",
        "createdAt" : "2019-06-24T10:09:30Z",
        "updatedAt" : "2019-06-24T10:43:12Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0465e398-b0b0-4ae2-9fa3-601dc2b5d82c",
        "parentId" : "6ada273c-6c36-4677-a85c-d1564bd662d3",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Done now",
        "createdAt" : "2019-06-24T10:43:26Z",
        "updatedAt" : "2019-06-24T10:43:26Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b2788db6-3a00-443a-ae71-bc0cd6219051",
        "parentId" : "6ada273c-6c36-4677-a85c-d1564bd662d3",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Thanks!",
        "createdAt" : "2019-06-24T11:21:10Z",
        "updatedAt" : "2019-06-24T11:21:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6d26f6deb389677450cd2cc0ae6504e470c57e5b",
    "line" : 18,
    "diffHunk" : "@@ -82,8 +81,7 @@ getFilesOfInterestRule :: Rules ()\n getFilesOfInterestRule = do\n     defineEarlyCutoff $ \\GetFilesOfInterest _file -> assert (null $ fromNormalizedFilePath _file) $ do\n         alwaysRerun\n-        Env{..} <- getServiceEnv"
  }
]