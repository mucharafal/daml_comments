[
  {
    "id" : "6d65611a-7de8-4903-b75a-e6f0f2014be9",
    "prId" : 1903,
    "comments" : [
      {
        "id" : "1dcd2485-cf95-490f-8a0d-5743bedba676",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "`FileVersion` already has a case for files that are read from disk where we use the modification time instead of the LSP version. Should we make a new type here so that we only have two cases, i.e., modification time + no content and LSP version + content, instead of four?",
        "createdAt" : "2019-06-27T07:14:43Z",
        "updatedAt" : "2019-06-27T21:43:56Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6264254a-46f6-46ed-9f39-fcbd60b9ef09",
        "parentId" : "1dcd2485-cf95-490f-8a0d-5743bedba676",
        "author" : {
          "login" : "ndmitchell",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1651197?u=2a7f401a0bc6c1e722d5fbecc923715861c4567c&v=4"
        },
        "body" : "We generally do very different things with the modtime vs the content, so I'm inclined to keep them very separate.",
        "createdAt" : "2019-06-27T07:52:19Z",
        "updatedAt" : "2019-06-27T21:43:56Z",
        "lastEditedBy" : {
          "login" : "ndmitchell",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1651197?u=2a7f401a0bc6c1e722d5fbecc923715861c4567c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "961a774b69885b8de3edbed8762fcdc4f19ce99f",
    "line" : 23,
    "diffHunk" : "@@ -74,8 +74,8 @@ makeLSPVFSHandle lspFuncs = VFSHandle\n    }\n \n \n--- | Get the contents of a file, either dirty (if the buffer is modified) or from disk.\n-type instance RuleResult GetFileContents = (FileVersion, StringBuffer)\n+-- | Get the contents of a file, either dirty (if the buffer is modified) or Nothing to mean use from disk.\n+type instance RuleResult GetFileContents = (FileVersion, Maybe StringBuffer)"
  },
  {
    "id" : "2d1708b8-db5e-44e9-9650-7ca6bf8ed2a0",
    "prId" : 1903,
    "comments" : [
      {
        "id" : "32a7c9e0-692e-433f-81be-ed2267755318",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This looks like it is just `pure $ fmap (\\(VirtualFile _ rope _) -> textToStringBuffer $ Rope.toText rope) mbVirtual`",
        "createdAt" : "2019-06-27T07:15:41Z",
        "updatedAt" : "2019-06-27T21:43:56Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "08e5c751-4366-4e1e-b6a3-790a48a524cb",
        "parentId" : "32a7c9e0-692e-433f-81be-ed2267755318",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Done",
        "createdAt" : "2019-06-27T21:43:30Z",
        "updatedAt" : "2019-06-27T21:43:56Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "961a774b69885b8de3edbed8762fcdc4f19ce99f",
    "line" : null,
    "diffHunk" : "@@ -129,8 +129,8 @@ getFileContentsRule vfs =\n         res <- liftIO $ ideTryIOException file $ do\n             mbVirtual <- getVirtualFile vfs $ filePathToUri' file\n             case mbVirtual of\n-                Just (VirtualFile _ rope _) -> return $ textToStringBuffer $ Rope.toText rope\n-                Nothing -> hGetStringBuffer (fromNormalizedFilePath file)\n+                Just (VirtualFile _ rope _) -> return $ Just $ textToStringBuffer $ Rope.toText rope"
  },
  {
    "id" : "ae9849de-b9da-4057-9c66-0a60f8dd34ae",
    "prId" : 1873,
    "comments" : [
      {
        "id" : "9da861de-fa34-4324-bc9a-11fd0e244b46",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Not quite convinced this is a better API. It seems like we have turned a single API call `setBufferModified` that handled the switch internally into two API calls `setBufferModified`, `setSomethingModified` the latter of which is partial and now the caller needs to figure out which one they want to use. If we go for this, we probably want to at least have a comment here explaining the difference.",
        "createdAt" : "2019-06-26T06:58:06Z",
        "updatedAt" : "2019-06-26T07:36:57Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7886f991-c12a-471e-9a0f-ed2b57ae35d8",
        "parentId" : "9da861de-fa34-4324-bc9a-11fd0e244b46",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Before we had a call setBufferModified where we did some somewhat complex and expensive computation to produce a value that was later silently discarded. I think this approach is more truthful - but yeah, I'll add a huge comment.",
        "createdAt" : "2019-06-26T07:31:19Z",
        "updatedAt" : "2019-06-26T07:36:57Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "eb0359afdc4acb55e9f56e734006e26ddfed3ea2",
    "line" : 60,
    "diffHunk" : "@@ -162,7 +165,15 @@ fileStoreRules vfs = do\n setBufferModified :: IdeState -> NormalizedFilePath -> Maybe T.Text -> IO ()\n setBufferModified state absFile contents = do\n     VFSHandle{..} <- getIdeGlobalState state\n-    setVirtualFileContents (filePathToUri' absFile) contents\n+    whenJust setVirtualFileContents $ \\set ->\n+        set (filePathToUri' absFile) contents\n+    void $ shakeRun state [] (const $ pure ())\n+\n+setSomethingModified :: IdeState -> IO ()"
  }
]