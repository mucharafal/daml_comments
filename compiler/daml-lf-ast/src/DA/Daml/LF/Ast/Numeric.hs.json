[
  {
    "id" : "22525b7b-393f-48cb-9357-55356d125c16",
    "prId" : 5472,
    "comments" : [
      {
        "id" : "342262d5-a09e-4e16-a63e-939bbd29db69",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I don't think this is a good idea. Why did you change this?",
        "createdAt" : "2020-05-19T16:00:26Z",
        "updatedAt" : "2020-05-19T20:39:29Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e0ae1f24-c6a2-4264-956a-e405604113c3",
        "parentId" : "342262d5-a09e-4e16-a63e-939bbd29db69",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Actually, this is fine. I cannot read and thought we were changing a DAML file here, which we obviously aren't. So it's all good. Apologies for the confusion I caused.",
        "createdAt" : "2020-05-19T16:17:32Z",
        "updatedAt" : "2020-05-19T20:39:29Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2d7c840ec94d841cd4a9d3f0bd85eabff75e5d3a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +4,8 @@-- | DAML-LF Numeric literals, with scale attached.\nmodule DA.Daml.LF.Ast.Numeric\n    ( Numeric (..)\n    , NumericError (..)\n    , E10"
  },
  {
    "id" : "874052eb-a85e-420d-95d9-3ae9caea0762",
    "prId" : 2706,
    "comments" : [
      {
        "id" : "92e29e1c-4e4b-48a1-b747-9b1d8b28b82f",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Thanks for the great explanations!",
        "createdAt" : "2019-08-30T07:08:03Z",
        "updatedAt" : "2019-08-30T08:05:59Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "513c13d565752ab84a0a5966b81080401d488452",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +30,34 @@--\n-- * we perform bounds checks with smart constructor 'numeric'\n-- * for scale 0, we have to handle the decimal point in the Show\n--   and Read instances manually\n-- * when reading, we check numeric bounds for scale and mantissa"
  },
  {
    "id" : "d61ed95f-7da6-4ba0-86bd-93059d25db91",
    "prId" : 2706,
    "comments" : [
      {
        "id" : "032d72db-2219-40fd-8169-574a4a6448ee",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Maybe this is a silly question but does DAML compilation rely on the `Show` and `Read` instances or is this just for tests/experimentation?",
        "createdAt" : "2019-08-30T07:09:40Z",
        "updatedAt" : "2019-08-30T08:05:59Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "dabf9e63-9d65-4186-99ad-9b548f4d08ca",
        "parentId" : "032d72db-2219-40fd-8169-574a4a6448ee",
        "author" : null,
        "body" : "They're used in the encoding and decoding of decimal/numeric literals in daml-lf-proto, and in the Pretty instance. Not sure how critical, but I don't want to be introducing weird behavior there :-) ",
        "createdAt" : "2019-08-30T07:57:40Z",
        "updatedAt" : "2019-08-30T08:05:59Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "d72a8d7a-c47b-450b-8ccb-bdd77959f795",
        "parentId" : "032d72db-2219-40fd-8169-574a4a6448ee",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Ah I see, totally agree that we should get this right.",
        "createdAt" : "2019-08-30T07:58:51Z",
        "updatedAt" : "2019-08-30T08:05:59Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "513c13d565752ab84a0a5966b81080401d488452",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +72,76 @@        | otherwise = showsPrec p (numericDecimal n)\n\ninstance Read Numeric where\n    readsPrec p = mapMaybe postProcess . readsPrec p\n      where"
  },
  {
    "id" : "d85711b4-b73d-48c5-9de2-8fc80eb9399b",
    "prId" : 2706,
    "comments" : [
      {
        "id" : "42c94765-dab9-4927-9b2f-f4e4edff2476",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Might be reasonable to propose the instance upstream.",
        "createdAt" : "2019-08-30T07:18:28Z",
        "updatedAt" : "2019-08-30T08:05:59Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "365eab23-5602-4f48-83fb-3f6712ba2252",
        "parentId" : "42c94765-dab9-4927-9b2f-f4e4edff2476",
        "author" : null,
        "body" : "Yes, that's a good idea :)",
        "createdAt" : "2019-08-30T08:14:39Z",
        "updatedAt" : "2019-08-30T08:14:39Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "513c13d565752ab84a0a5966b81080401d488452",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +91,95 @@            && numericMantissa n <= numericMaxMantissa\n\ninstance Data Numeric where\n    gfoldl k z n = z numeric `k` numericScale n `k` numericMantissa n\n    gunfold k z _ = k (k (z numeric))"
  }
]