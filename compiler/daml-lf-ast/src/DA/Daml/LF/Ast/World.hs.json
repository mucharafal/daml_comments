[
  {
    "id" : "8e70fc75-d77a-41ff-8586-5b67f862a1c5",
    "prId" : 3668,
    "comments" : [
      {
        "id" : "5b789131-cfd4-4609-9d9f-8a98f8923647",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This check caught a couple of bugs for me in the past. What changed to force us to remove this?",
        "createdAt" : "2019-12-05T09:10:43Z",
        "updatedAt" : "2019-12-05T10:32:51Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "23a8dc62-acce-4b62-945a-43d0423a33aa",
        "parentId" : "5b789131-cfd4-4609-9d9f-8a98f8923647",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "We now have several ghc-prims in different directories, but that have the same package id. This fails in here if this check is on.",
        "createdAt" : "2019-12-05T10:08:39Z",
        "updatedAt" : "2019-12-05T10:32:51Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7464a8a7-0cdd-4b24-974c-ab2d8adc7f04",
        "parentId" : "5b789131-cfd4-4609-9d9f-8a98f8923647",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Can we deduplicate at the call site instead of removing this check?",
        "createdAt" : "2019-12-05T10:11:08Z",
        "updatedAt" : "2019-12-05T10:32:51Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "071efbbf7da1fd4656f32dd81f50f0ee5bfa4e5f",
    "line" : 4,
    "diffHunk" : "@@ -62,16 +62,14 @@ data DalfPackage = DalfPackage\n instance NFData DalfPackage\n \n -- | Construct the 'World' from only the imported packages.\n+-- TODO (drsk) : hurraybit: please check that the duplicate package id check here is not needed."
  },
  {
    "id" : "8f751fd8-9ea8-4704-845b-b0c6278c5ce1",
    "prId" : 2673,
    "comments" : [
      {
        "id" : "98893122-c87a-439f-b96e-e5b458a005cd",
        "parentId" : null,
        "author" : {
          "login" : "akalburgi",
          "name" : "Anup Kalburgi",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/42743833?v=4"
        },
        "body" : "Had to move it to `DA.Daml.LF.Ast.World` instead of Util as it was creating a circular dependency on Pretty.hs module. and also this module has most of the functions which have `Qualified TypeConName -> World ` but return type of this sees out of place ",
        "createdAt" : "2019-08-28T20:26:10Z",
        "updatedAt" : "2019-09-05T14:29:06Z",
        "lastEditedBy" : {
          "login" : "akalburgi",
          "name" : "Anup Kalburgi",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/42743833?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f132fa8499359d43acb8be985d25f7293c76ce03",
    "line" : null,
    "diffHunk" : "@@ -127,6 +130,22 @@ lookupChoice (tplRef, chName) world = do\n     Nothing -> Left (LEChoice tplRef chName)\n     Just choice -> Right choice\n \n+labledField :: T.Text -> T.Text -> T.Text"
  },
  {
    "id" : "ba1164c0-533d-4274-ac2f-ba1e475456ef",
    "prId" : 813,
    "comments" : [
      {
        "id" : "717061f0-cc12-4db1-bae2-256cb2be6c1d",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Why prefix them with an underscore? I'm not a big fan of this. IIRC, all the other field names in the DAML-LF don't start with an underscore but the lenses do instead. I think we should keep this convention.",
        "createdAt" : "2019-05-02T07:06:59Z",
        "updatedAt" : "2019-05-02T07:10:24Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "48fc62eb-b703-494c-a60b-258fa4c4fe6e",
        "parentId" : "717061f0-cc12-4db1-bae2-256cb2be6c1d",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Because you never refer to `worldImported` which makes it an unused top-level definition. Ugly, and I think a flaw in GHC's warnings personally, but this was the most practical way of solving it.\r\n\r\nFWIW I hate both underscore prefixing of fields _and_ lenses...",
        "createdAt" : "2019-05-02T07:31:16Z",
        "updatedAt" : "2019-05-02T07:31:16Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3042b1c94bea7b1bbc9d62ca608942ed9262d517",
    "line" : 30,
    "diffHunk" : "@@ -21,14 +32,11 @@ import DA.Daml.LF.Ast.Version\n -- the modules of the current package. The latter shall always be closed under\n -- module dependencies but we don't enforce this here.\n data World = World\n-  { worldImported :: HMS.HashMap PackageId Package\n-  , worldSelf :: Package\n+  { _worldImported :: HMS.HashMap PackageId Package\n+  , _worldSelf :: Package"
  }
]