[
  {
    "id" : "ebeeb669-91ae-4b5d-8358-59495b367fbd",
    "prId" : 3959,
    "comments" : [
      {
        "id" : "542dddc8-95ca-47b5-8380-6f4740271b86",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "It would be great if you could add one slightly bigger testcase that tests code a module that is more of the form that we will want to generate, e.g., a single module that defines type synonyms for `Functor` and `Applicative`, instances for one type and a definition that has an `Applicative` constraint. Don’t worry about exactly capturing how the generated code will look like.",
        "createdAt" : "2020-01-09T19:16:49Z",
        "updatedAt" : "2020-01-10T16:41:51Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e0984c11-3c92-4e4c-a536-00b02bb6dce8",
        "parentId" : "542dddc8-95ca-47b5-8380-6f4740271b86",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Not sure exactly what you want to see in this bigger example.\r\nAnd what are we attempting to test, that isn't already tested?\r\n",
        "createdAt" : "2020-01-10T09:25:30Z",
        "updatedAt" : "2020-01-10T16:41:51Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e68648ec-6e79-4429-854e-be4d3923a1c8",
        "parentId" : "542dddc8-95ca-47b5-8380-6f4740271b86",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "something like the following (in pseudocode)\r\n\r\n```\r\ntype Functor f = [(\"fmap\", forall a b. (a -> b) -> f a -> f b)]\r\ntype Applicative f = [(\"super\", Functor f), (\"pure\", forall a. a -> f a), (\"<*>\", forall a b. f (a -> b) -> f b -> f a)]\r\noptFunctor : Functor Optional\r\noptFunctor = …\r\noptApplicative : Applicative Optional\r\noptApplicative = …\r\nf : Applicative f -> a -> f a\r\nf apDict = structProj \"pure\" apDict\r\n```\r\n\r\nWe probably do test the individual pieces already but having a test that puts it altogether is helpful both for documentation purposes and to make sure that we didn’t forget anything.",
        "createdAt" : "2020-01-10T09:33:01Z",
        "updatedAt" : "2020-01-10T16:41:51Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7b28332c-1688-4fe6-9f85-41b966d8a4f7",
        "parentId" : "542dddc8-95ca-47b5-8380-6f4740271b86",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "bigger example added",
        "createdAt" : "2020-01-10T16:10:25Z",
        "updatedAt" : "2020-01-10T16:41:51Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "95a142a0-26c5-4f5f-82ab-e2e13c85f226",
        "parentId" : "542dddc8-95ca-47b5-8380-6f4740271b86",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "it found two bugs, so thanks for asking for it",
        "createdAt" : "2020-01-10T16:10:58Z",
        "updatedAt" : "2020-01-10T16:41:51Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fb4694cc-443e-4317-81f9-4885583bd1a9",
        "parentId" : "542dddc8-95ca-47b5-8380-6f4740271b86",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Thanks a lot for adding it! It would be great if you could expand it to include the superclass case, i.e., `Applicative` (or `Pointed` or whatever) just to make sure there are no unforeseen issues there either.",
        "createdAt" : "2020-01-10T16:18:14Z",
        "updatedAt" : "2020-01-10T16:41:51Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "481c60ff-864c-4f4b-b411-571a5700d47e",
        "parentId" : "542dddc8-95ca-47b5-8380-6f4740271b86",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "ok, done",
        "createdAt" : "2020-01-10T16:43:17Z",
        "updatedAt" : "2020-01-10T16:43:18Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6a9feaae0a6921e3c04c93a65e754eca04cc83df",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +72,76 @@\n\ntypeSynTests :: TestTree\ntypeSynTests =\n  testGroup \"type synonyms\""
  }
]