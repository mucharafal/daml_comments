[
  {
    "id" : "4d17f582-49f0-4609-8131-2ce40f3de8b7",
    "prId" : 7437,
    "comments" : [
      {
        "id" : "0d04ca59-de11-444e-a395-f9f34da84882",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "```suggestion\r\n      fa: FailedAuthorization,\r\n    ): proto.FailedAuthorizations = {\r\n```",
        "createdAt" : "2020-09-18T13:24:29Z",
        "updatedAt" : "2020-09-18T16:01:59Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d2d0de2d68e8b984633eefb02b8cadbe21e6d4dc",
    "line" : null,
    "diffHunk" : "@@ -217,110 +222,106 @@ final class Conversions(\n     builder.setMessage(msgAndLoc._1).build\n   }\n \n-  def convertFailedAuthorizations(fas: FailedAuthorizations): proto.FailedAuthorizations = {\n+  def convertFailedAuthorization(\n+      nodeId: NodeId,\n+      fa: FailedAuthorization): proto.FailedAuthorizations = {"
  },
  {
    "id" : "93b27f06-598e-4564-8536-196c46393c03",
    "prId" : 7241,
    "comments" : [
      {
        "id" : "950242e7-4ba8-4a2f-a8a0-d902f316b74c",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Good!",
        "createdAt" : "2020-08-26T12:32:23Z",
        "updatedAt" : "2020-09-04T15:15:53Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "cb7af8a7663f08908d413d5964f55cb37e10d89b",
    "line" : 10,
    "diffHunk" : "@@ -621,12 +621,15 @@ final class Conversions(\n         builder.setTuple(\n           proto.Tuple.newBuilder\n             .addAllFields(\n-              fields.toSeq.map { field =>\n-                proto.Field.newBuilder\n-                  .setLabel(field._1)\n-                  .setValue(convertValue(field._2))\n-                  .build\n-              }.asJava,\n+              fields.iterator"
  },
  {
    "id" : "e442c5bf-5c31-4bc4-9598-7b5d13fff11e",
    "prId" : 6229,
    "comments" : [
      {
        "id" : "223a255d-a974-4e99-bdb2-98a4a4aa9ca3",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "(Follows up #206, #643.) Perhaps the definition of `Transaction.Value` should change, instead? Or,\r\n\r\n```suggestion\r\n      case (nodeId, node: N.NodeCreate[V.ContractId, _]) =>\r\n```",
        "createdAt" : "2020-06-04T21:34:18Z",
        "updatedAt" : "2020-06-05T07:52:05Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "019fefc7-9e42-413a-bcb3-33c98ae8d91c",
        "parentId" : "223a255d-a974-4e99-bdb2-98a4a4aa9ca3",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "In the current state we should have to add a `PartialTransaction.Value1 and some `WithPartialTransactionValue` types. \r\nI will see later if it is worthwhile to add it. ",
        "createdAt" : "2020-06-05T07:40:17Z",
        "updatedAt" : "2020-06-05T07:52:05Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a9f6ec15365fd75ce595be1c6d63e106be3dc994",
    "line" : null,
    "diffHunk" : "@@ -28,7 +28,7 @@ final class Conversions(\n   // We need the mapping for converting error message so we manually add it here.\n   private val ptxCoidToNodeId = machine.ptx.nodes\n     .collect {\n-      case (nodeId, node: N.NodeCreate.WithTxValue[V.ContractId]) =>\n+      case (nodeId, node @ N.NodeCreate(_, _, _, _, _, _)) =>"
  },
  {
    "id" : "91a86c05-242b-48f9-8755-b715434c1883",
    "prId" : 6229,
    "comments" : [
      {
        "id" : "e07e6ce8-642e-4ff6-abfd-10a20afde1fd",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "More like `coYonedanvertKeyWithMaintainers`? :trollface: ",
        "createdAt" : "2020-06-04T21:35:29Z",
        "updatedAt" : "2020-06-05T07:52:05Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a9f6ec15365fd75ce595be1c6d63e106be3dc994",
    "line" : 53,
    "diffHunk" : "@@ -471,46 +471,51 @@ final class Conversions(\n         lbk.optLocation.foreach(loc => builder.setLocation(convertLocation(loc)))\n         val lbkBuilder = Node.LookupByKey.newBuilder\n           .setTemplateId(convertIdentifier(lbk.templateId))\n-          .setKeyWithMaintainers(convertKeyWithMaintainers(lbk.key))\n+          .setKeyWithMaintainers(convertKeyWithMaintainers(convertVersionnedValue, lbk.key))\n         lbk.result.foreach(cid => lbkBuilder.setContractId(coidToNodeId(cid)))\n         builder.setLookupByKey(lbkBuilder)\n \n     }\n     builder.build\n   }\n \n-  def convertKeyWithMaintainers(\n-      key: N.KeyWithMaintainers[V.VersionedValue[V.ContractId]],\n+  def convertKeyWithMaintainers[Val](\n+      convertValue: Val => Value,\n+      key: N.KeyWithMaintainers[Val],"
  },
  {
    "id" : "4a4545fc-8fed-4517-8d1b-77ea946ef00e",
    "prId" : 6229,
    "comments" : [
      {
        "id" : "34e9a125-6b99-47b9-a46b-85c9990ec395",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n  private def convertVersionedValue(value: V.VersionedValue[V.ContractId]): Value =\r\n```",
        "createdAt" : "2020-06-04T21:38:07Z",
        "updatedAt" : "2020-06-05T07:52:05Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a9f6ec15365fd75ce595be1c6d63e106be3dc994",
    "line" : null,
    "diffHunk" : "@@ -580,6 +585,9 @@ final class Conversions(\n \n   }\n \n+  private def convertVersionnedValue(value: V.VersionedValue[V.ContractId]): Value ="
  },
  {
    "id" : "adcc16bb-08ce-4324-8fe5-1b39c0a13b3a",
    "prId" : 5577,
    "comments" : [
      {
        "id" : "7d5d5e10-ca49-4b1e-be64-ac750e92075f",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "```suggestion\r\n            acoid -> ledger.ptxNodeId(nodeId)\r\n```",
        "createdAt" : "2020-04-16T08:38:56Z",
        "updatedAt" : "2020-04-16T08:47:13Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b392dd62-ac3f-413d-84f8-2fd2450c0710",
        "parentId" : "7d5d5e10-ca49-4b1e-be64-ac750e92075f",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : ":facepalm:, forgot to change this once I switched to a case statement. Thanks!",
        "createdAt" : "2020-04-16T08:46:40Z",
        "updatedAt" : "2020-04-16T08:47:13Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1637d23562080176d2c492d2330431d14e8ff1a7",
    "line" : null,
    "diffHunk" : "@@ -24,7 +24,21 @@ final class Conversions(\n   private val packageIdSelf: PackageIdentifier =\n     PackageIdentifier.newBuilder.setSelf(empty).build\n \n-  private val coidToNodeId = ledger.ledgerData.coidToNodeId\n+  // The ledger data will not contain information from the partial transaction at this point.\n+  // We need the mapping for converting error message so we manually add it here.\n+  private val ptxCoidToNodeId = machine.ptx.nodes.toList\n+    .collect({\n+      case (nodeId, node: N.NodeCreate.WithTxValue[V.ContractId]) =>\n+        node.coid match {\n+          case acoid: V.AbsoluteContractId =>\n+            (node.coid.asInstanceOf[V.AbsoluteContractId], ledger.ptxNodeId(nodeId))"
  },
  {
    "id" : "a8be5c9d-3eb7-4b9f-a4ba-03d675bf1bea",
    "prId" : 5577,
    "comments" : [
      {
        "id" : "10cfeb6f-9b01-4526-ac97-9620842ec3e9",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "```suggestion\r\n  private val ptxCoidToNodeId = machine.ptx.nodes\r\n```",
        "createdAt" : "2020-04-16T08:39:38Z",
        "updatedAt" : "2020-04-16T08:47:13Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1637d23562080176d2c492d2330431d14e8ff1a7",
    "line" : null,
    "diffHunk" : "@@ -24,7 +24,21 @@ final class Conversions(\n   private val packageIdSelf: PackageIdentifier =\n     PackageIdentifier.newBuilder.setSelf(empty).build\n \n-  private val coidToNodeId = ledger.ledgerData.coidToNodeId\n+  // The ledger data will not contain information from the partial transaction at this point.\n+  // We need the mapping for converting error message so we manually add it here.\n+  private val ptxCoidToNodeId = machine.ptx.nodes.toList"
  },
  {
    "id" : "03dc7ed0-5e38-4e60-8c33-77160ad9e7ea",
    "prId" : 5577,
    "comments" : [
      {
        "id" : "27a59d6b-46e4-436d-8449-edf4a1158b89",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "```suggestion\r\n    .collect {\r\n```",
        "createdAt" : "2020-04-16T08:39:49Z",
        "updatedAt" : "2020-04-16T08:47:13Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1637d23562080176d2c492d2330431d14e8ff1a7",
    "line" : null,
    "diffHunk" : "@@ -24,7 +24,21 @@ final class Conversions(\n   private val packageIdSelf: PackageIdentifier =\n     PackageIdentifier.newBuilder.setSelf(empty).build\n \n-  private val coidToNodeId = ledger.ledgerData.coidToNodeId\n+  // The ledger data will not contain information from the partial transaction at this point.\n+  // We need the mapping for converting error message so we manually add it here.\n+  private val ptxCoidToNodeId = machine.ptx.nodes.toList\n+    .collect({"
  },
  {
    "id" : "ccb74a8e-48d1-477d-b098-2f7ed8528ef4",
    "prId" : 5577,
    "comments" : [
      {
        "id" : "518641b4-12f7-4a86-b633-6c3c36051ace",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "```suggestion\r\n    }\r\n```",
        "createdAt" : "2020-04-16T08:40:01Z",
        "updatedAt" : "2020-04-16T08:47:13Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1637d23562080176d2c492d2330431d14e8ff1a7",
    "line" : null,
    "diffHunk" : "@@ -24,7 +24,21 @@ final class Conversions(\n   private val packageIdSelf: PackageIdentifier =\n     PackageIdentifier.newBuilder.setSelf(empty).build\n \n-  private val coidToNodeId = ledger.ledgerData.coidToNodeId\n+  // The ledger data will not contain information from the partial transaction at this point.\n+  // We need the mapping for converting error message so we manually add it here.\n+  private val ptxCoidToNodeId = machine.ptx.nodes.toList\n+    .collect({\n+      case (nodeId, node: N.NodeCreate.WithTxValue[V.ContractId]) =>\n+        node.coid match {\n+          case acoid: V.AbsoluteContractId =>\n+            (node.coid.asInstanceOf[V.AbsoluteContractId], ledger.ptxNodeId(nodeId))\n+          case V.RelativeContractId(_) =>\n+            throw new IllegalArgumentException(\"unexpected relative contract id\")\n+        }\n+    })"
  },
  {
    "id" : "4f92a4b8-6613-41dc-ad6c-135e8d357543",
    "prId" : 5577,
    "comments" : [
      {
        "id" : "e1335554-6442-47b1-bb23-ff00192906b6",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "```suggestion\r\n```",
        "createdAt" : "2020-04-16T08:40:20Z",
        "updatedAt" : "2020-04-16T08:47:13Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1637d23562080176d2c492d2330431d14e8ff1a7",
    "line" : null,
    "diffHunk" : "@@ -24,7 +24,21 @@ final class Conversions(\n   private val packageIdSelf: PackageIdentifier =\n     PackageIdentifier.newBuilder.setSelf(empty).build\n \n-  private val coidToNodeId = ledger.ledgerData.coidToNodeId\n+  // The ledger data will not contain information from the partial transaction at this point.\n+  // We need the mapping for converting error message so we manually add it here.\n+  private val ptxCoidToNodeId = machine.ptx.nodes.toList\n+    .collect({\n+      case (nodeId, node: N.NodeCreate.WithTxValue[V.ContractId]) =>\n+        node.coid match {\n+          case acoid: V.AbsoluteContractId =>\n+            (node.coid.asInstanceOf[V.AbsoluteContractId], ledger.ptxNodeId(nodeId))\n+          case V.RelativeContractId(_) =>\n+            throw new IllegalArgumentException(\"unexpected relative contract id\")\n+        }\n+    })\n+    .toMap"
  },
  {
    "id" : "4e3f9997-1edf-447f-9975-2615641d5c44",
    "prId" : 5577,
    "comments" : [
      {
        "id" : "4f6850e4-404d-4f2e-98ee-b501fba60d28",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : ":+1: ",
        "createdAt" : "2020-04-16T08:40:36Z",
        "updatedAt" : "2020-04-16T08:47:13Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1637d23562080176d2c492d2330431d14e8ff1a7",
    "line" : 27,
    "diffHunk" : "@@ -308,7 +322,7 @@ final class Conversions(\n       case acoid: V.AbsoluteContractId =>\n         coidToNodeId(acoid)\n       case V.RelativeContractId(_) =>\n-        throw new IllegalArgumentException(\"unexpected relative cotnract id\")\n+        throw new IllegalArgumentException(\"unexpected relative contract id\")"
  },
  {
    "id" : "13379595-c9e2-425f-99a5-cf7468778023",
    "prId" : 5296,
    "comments" : [
      {
        "id" : "ec7640ad-9c4e-4d70-9b43-a5ed6e17b46a",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Another `remy.catcha` :joy: ",
        "createdAt" : "2020-03-31T10:37:23Z",
        "updatedAt" : "2020-03-31T10:58:11Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4db86a92-4aea-4ced-abac-c86a72d465b3",
        "parentId" : "ec7640ad-9c4e-4d70-9b43-a5ed6e17b46a",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed. ",
        "createdAt" : "2020-03-31T10:50:46Z",
        "updatedAt" : "2020-03-31T10:58:11Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "82ad165fe963f3750aa68238a25e26ec5aa3fde5",
    "line" : null,
    "diffHunk" : "@@ -303,31 +302,25 @@ case class Conversions(homePackageId: Ref.PackageId) {\n   }\n \n   def mkContractRef(coid: V.ContractId, templateId: Ref.Identifier): ContractRef =\n-    coid match {\n-      case acoid: V.AbsoluteContractId =>\n-        ContractRef.newBuilder\n-          .setRelative(false)\n-          .setContractId(acoid.coid)\n-          .setTemplateId(convertIdentifier(templateId))\n-          .build\n-      case V.RelativeContractId(txnid) =>\n-        ContractRef.newBuilder\n-          .setRelative(true)\n-          .setContractId(txnid.index.toString)\n-          .setTemplateId(convertIdentifier(templateId))\n-          .build\n-    }\n+    ContractRef.newBuilder\n+      .setRelative(false)\n+      .setContractId(convertContractId(coid))\n+      .setTemplateId(convertIdentifier(templateId))\n+      .build\n \n   def convertContractId(coid: V.ContractId): String =\n     coid match {\n-      case acoid: V.AbsoluteContractId => acoid.coid\n-      case V.RelativeContractId(txnid) => txnid.index.toString\n+      case acoid: V.AbsoluteContractId =>\n+        coidToNodeId(acoid)\n+      case V.RelativeContractId(_) =>\n+        remy.catcha("
  },
  {
    "id" : "6e890651-4365-4d38-a6c3-de3f21f9505f",
    "prId" : 5186,
    "comments" : [
      {
        "id" : "df3d3ddf-f1a4-4155-832b-7264c9cbf1a5",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "```suggestion\r\n      case fetch: N.NodeFetch.WithTxValue[AbsoluteContractId] =>\r\n```",
        "createdAt" : "2020-03-26T09:21:06Z",
        "updatedAt" : "2020-03-26T11:00:44Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "66d880bfd3506c1d95fc2e0178dcfd79755b55b9",
    "line" : null,
    "diffHunk" : "@@ -447,7 +447,7 @@ case class Conversions(homePackageId: Ref.PackageId) {\n \n         create.optLocation.map(loc => builder.setLocation(convertLocation(loc)))\n         builder.setCreate(createBuilder.build)\n-      case fetch: N.NodeFetch[V.AbsoluteContractId] =>\n+      case fetch: N.NodeFetch[V.AbsoluteContractId, Tx.Value[V.AbsoluteContractId]] =>"
  },
  {
    "id" : "a8287023-6c05-45a7-8c4c-ba13925dfcb8",
    "prId" : 643,
    "comments" : [
      {
        "id" : "4d419265-ce0b-40be-905b-53ed50711d2b",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "This part of the code doesn't quite seem to entail the \"transaction value-ness\" of most other code in this PR, so I've left it a little more independent than you might expect given `WithTxValue`, because I'd expect it to vary more easily.",
        "createdAt" : "2019-04-23T20:52:46Z",
        "updatedAt" : "2019-04-24T12:56:17Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3fb04e2966f071e3c9ce810232c205fa8bc35f0e",
    "line" : 14,
    "diffHunk" : "@@ -401,7 +401,7 @@ case class Conversions(homePackageId: Ref.PackageId) {\n       case ex: N.NodeExercises[\n             Ledger.NodeId,\n             V.AbsoluteContractId,\n-            V.VersionedValue[V.AbsoluteContractId]] =>\n+            Tx.Value[V.AbsoluteContractId]] =>"
  }
]