[
  {
    "id" : "77357462-19c0-44a3-a32a-321f54982b45",
    "prId" : 1423,
    "comments" : [
      {
        "id" : "c9c928bf-6042-44f4-aa2b-f6c50e1fa27c",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "I really like this style of code.",
        "createdAt" : "2019-05-30T11:41:21Z",
        "updatedAt" : "2019-05-30T11:50:11Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "55ff51b7e3b25657762ac2910822bd5ab50d66d2",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +216,220 @@          -> IO IdeState\nshakeOpen eventer logger opts rules = do\n    shakeExtras <- do\n        globals <- newVar Map.empty\n        state <- newVar Map.empty"
  },
  {
    "id" : "88e92e30-f315-41b9-8688-948e8866fe8b",
    "prId" : 1423,
    "comments" : [
      {
        "id" : "1153aed8-dffd-43ef-bb67-db8ba0a7cf9d",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "I'd have put the do on the same line as the `liftIO`. I find the below indentation a bit weird.",
        "createdAt" : "2019-05-30T11:42:07Z",
        "updatedAt" : "2019-05-30T11:50:11Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "55ff51b7e3b25657762ac2910822bd5ab50d66d2",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +272,276 @@garbageCollect keep = do\n    ShakeExtras{state, diagnostics} <- getShakeExtras\n    liftIO $\n        do modifyVar_ state $ return . Map.filterWithKey (\\(file, _) _ -> keep file)\n           modifyVar_ diagnostics $ return . filterDiagnostics keep"
  },
  {
    "id" : "6f241b9f-de28-4f02-89fe-c5b0372aaa1d",
    "prId" : 724,
    "comments" : [
      {
        "id" : "3bfc8d7e-1c7b-42b9-b018-4ed7209bbb1f",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "👍 ",
        "createdAt" : "2019-04-26T10:43:11Z",
        "updatedAt" : "2019-04-26T11:19:10Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "214e30babe5d470b67534d40584c7716be75c15f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +204,208 @@-- | The outer Maybe is Nothing if this function hasn't been computed before\n--   the inner Maybe is Nothing if the result of the previous computation failed to produce\n--   a value\ngetValues :: forall k v. IdeRule k v => Var Values -> k -> FilePath -> IO (Maybe (Maybe v))\ngetValues state key file = do"
  },
  {
    "id" : "108d4594-ecf4-4f34-9d6a-330640b21a3e",
    "prId" : 708,
    "comments" : [
      {
        "id" : "6daf9bd1-0bc5-45b6-a1af-002746dc089c",
        "parentId" : null,
        "author" : {
          "login" : "DavidM-D",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/11191170?u=3edc6e08b7c7f0d980a6dc81e5a2ce49dd1ef0f0&v=4"
        },
        "body" : "What does the Maybe (Maybe v) mean? For example what does Just Nothing tell me?",
        "createdAt" : "2019-04-26T09:55:39Z",
        "updatedAt" : "2019-04-26T09:55:39Z",
        "lastEditedBy" : {
          "login" : "DavidM-D",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/11191170?u=3edc6e08b7c7f0d980a6dc81e5a2ce49dd1ef0f0&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "693616d0-3370-458a-9586-9f3d8d98c3e4",
        "parentId" : "6daf9bd1-0bc5-45b6-a1af-002746dc089c",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Just Nothing tells you that it has been computed, but that last time it computed, it failed to produce a value. There's no point rerunning it because it has working dependencies, so it will fail again. In contrast, Nothing means it hasn't ever been computed.",
        "createdAt" : "2019-04-26T10:01:05Z",
        "updatedAt" : "2019-04-26T10:01:06Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6c53a20bb97387e1da28312292f457da6ca1522f",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +202,206 @@    return (outVal, (f <$> Map.lookup file inVal, f $ outVal Map.! file))\n\ngetValues :: forall k v. IdeRule k v => Var Values -> k -> FilePath -> IO (Maybe (Maybe v))\ngetValues state key file = do\n    vs <- readVar state"
  }
]