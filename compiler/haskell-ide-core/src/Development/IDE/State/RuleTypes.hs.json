[
  {
    "id" : "1b5cb277-4d50-4f08-8d32-341a8269b6b8",
    "prId" : 1331,
    "comments" : [
      {
        "id" : "6c3ffb73-48c9-4327-9115-16b1c1c28a60",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Should this be in haskell-ide-core?",
        "createdAt" : "2019-05-23T08:48:01Z",
        "updatedAt" : "2019-05-23T09:59:52Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f7856c13f1fa4b5b7074122c6ae3d4bcc1b15b5e",
    "line" : null,
    "diffHunk" : "@@ -36,6 +36,10 @@ import           Development.IDE.Types.SpanInfo\n -- | Kick off things\n type instance RuleResult OfInterest = ()\n \n+-- | This rule is used to initialize the global map of scenario contexts\n+-- based on the files of interest.\n+type instance RuleResult SetScenarioRoots = ()"
  },
  {
    "id" : "ba44e0f4-da4e-48bb-a408-2edf792f7cb4",
    "prId" : 1331,
    "comments" : [
      {
        "id" : "8f66d317-55ab-49a0-a84f-da316ca2b0ab",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Move out of haskell-ide-core.",
        "createdAt" : "2019-05-23T09:52:40Z",
        "updatedAt" : "2019-05-23T09:59:52Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "14784efc-af5e-44a1-bd3e-3994e08b404a",
        "parentId" : "8f66d317-55ab-49a0-a84f-da316ca2b0ab",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Moved to the `.Daml` version of this module.",
        "createdAt" : "2019-05-23T10:00:25Z",
        "updatedAt" : "2019-05-23T10:00:25Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f7856c13f1fa4b5b7074122c6ae3d4bcc1b15b5e",
    "line" : null,
    "diffHunk" : "@@ -36,6 +37,17 @@ import           Development.IDE.Types.SpanInfo\n -- | Kick off things\n type instance RuleResult OfInterest = ()\n \n+-- ^ A map from a file A to a file B whose scenario context should be\n+-- used for executing scenarios in A. We use this when running the scenarios\n+-- in transitive dependencies of the files of interest so that we only need\n+-- one scenario context per file of interest.\n+type instance RuleResult GetScenarioRoots = Map FilePath FilePath"
  }
]