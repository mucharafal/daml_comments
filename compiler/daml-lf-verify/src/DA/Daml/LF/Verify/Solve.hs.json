[
  {
    "id" : "49a3db1e-cee8-48ad-b51c-5d9b89e4fab5",
    "prId" : 5472,
    "comments" : [
      {
        "id" : "2b49be98-76ba-4225-b164-d57e7fcac47d",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "You could `uniplate` this if you want. Makes it a bit easier to see what’s going on and it’s more robust to changes to the ADT.",
        "createdAt" : "2020-05-11T07:40:35Z",
        "updatedAt" : "2020-05-19T20:39:29Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2d7c840ec94d841cd4a9d3f0bd85eabff75e5d3a",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +122,126 @@  -- ^ The constraint expression to traverse.\n  -> [ExprVarName]\ngatherFreeVars (CBool _) = []\ngatherFreeVars (CInt _) = []\ngatherFreeVars (CReal _) = []"
  },
  {
    "id" : "41895e43-3708-4b81-8a12-1af7424f36d3",
    "prId" : 5472,
    "comments" : [
      {
        "id" : "8990c03e-6311-4951-9f6a-ea1b4398fb97",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Any reason why we use lists instead of `Set`?",
        "createdAt" : "2020-05-11T07:50:34Z",
        "updatedAt" : "2020-05-19T20:39:29Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2d7c840ec94d841cd4a9d3f0bd85eabff75e5d3a",
    "line" : 211,
    "diffHunk" : "@@ -1,1 +209,213 @@filterVars vars cexprs =\n  let freevars = foldl' (\\fv e -> fv `union` gatherFreeVars e) [] cexprs\n  in freevars `intersect` vars\n\n-- | Construct a list of all contract name synonyms, along with their current"
  },
  {
    "id" : "d8755b27-078d-467b-8d63-3835e1cecdd3",
    "prId" : 5472,
    "comments" : [
      {
        "id" : "ba4da1ac-c45a-4b0f-a45f-bed53a654cb9",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Can we come up with slightly clearer variable names, e.g. `choiceName` `templateName` (or `tpl` which we use in other places so it’s clear enough) and `field` or `fieldName`?",
        "createdAt" : "2020-05-11T08:06:09Z",
        "updatedAt" : "2020-05-19T20:39:29Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2d7c840ec94d841cd4a9d3f0bd85eabff75e5d3a",
    "line" : 237,
    "diffHunk" : "@@ -1,1 +235,239 @@  -- ^ The field name to be verified.\n  -> ConstraintSet\nconstructConstr env chtem ch ftem f =\n  case HM.lookup (UpdChoice chtem ch) (_envschs env) of\n    Just ChoiceData{..} ->"
  }
]