[
  {
    "id" : "125fb132-d219-4101-8163-f67b3b4855d0",
    "prId" : 6516,
    "comments" : [
      {
        "id" : "5ebba0a2-003b-4f5a-a867-ab2a18039e5c",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Maybe pass in tuples of `ModuleName` and the thing it belongs to? Or even better use `Qualified` (although I donâ€™t know how well packages are handled atm so fine to not do that for now).",
        "createdAt" : "2020-06-29T07:27:52Z",
        "updatedAt" : "2020-06-30T18:06:09Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4d749e2c-1d38-4033-9e9e-1500da7ece3a",
        "parentId" : "5ebba0a2-003b-4f5a-a867-ab2a18039e5c",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Actually looking at it that would make the whole `findTemplate` stuff a lot easier/almost redundant.",
        "createdAt" : "2020-06-29T07:31:57Z",
        "updatedAt" : "2020-06-30T18:06:09Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8c9efc7a1908f7441b41b0d2ca49c22490f8c777",
    "line" : 40,
    "diffHunk" : "@@ -53,32 +50,34 @@ verify :: FilePath\n   -- ^ The DAR file to load.\n   -> (String -> IO ())\n   -- ^ Function for debugging printouts.\n+  -> ModuleName"
  },
  {
    "id" : "61faeb98-1f3f-4797-97ec-0c0f756486c7",
    "prId" : 5472,
    "comments" : [
      {
        "id" : "11a7db0a-891e-4d5b-a3a6-e65fff77dd44",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Why do you reexport `LF` if this is `main`?",
        "createdAt" : "2020-04-07T16:44:11Z",
        "updatedAt" : "2020-05-19T20:39:29Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2d7c840ec94d841cd4a9d3f0bd85eabff75e5d3a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,22 @@\n+-- Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+-- SPDX-License-Identifier: Apache-2.0\n+\n+-- | Static verification of DAML packages.\n+module DA.Daml.LF.Verify\n+  ( module LF"
  },
  {
    "id" : "7bd701b1-dadb-48d6-b3cb-2ee702a41af4",
    "prId" : 5472,
    "comments" : [
      {
        "id" : "bd1cd609-38df-4d34-8bf2-0cc5e3ee9074",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "We need to deeply force `_delta` here, otherwise nothing will really happen in the test runs. Maybe just print it?",
        "createdAt" : "2020-04-09T07:42:01Z",
        "updatedAt" : "2020-05-19T20:39:29Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2d7c840ec94d841cd4a9d3f0bd85eabff75e5d3a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,19 @@\n+-- Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+-- SPDX-License-Identifier: Apache-2.0\n+\n+-- | Static verification of DAML packages.\n+module DA.Daml.LF.Verify ( main ) where\n+\n+import Options.Applicative\n+\n+import DA.Daml.LF.Verify.Generate\n+import DA.Daml.LF.Verify.Read\n+import DA.Daml.LF.Verify.Context\n+\n+main :: IO ()\n+main = do\n+  Options{..} <- execParser optionsParserInfo\n+  pkgs <- readPackages optInputDars\n+  let _delta = runDelta $ genPackages pkgs\n+  putStrLn \"Constraints generated.\""
  },
  {
    "id" : "12901b02-5de2-4913-8f8d-3618fd172abf",
    "prId" : 5472,
    "comments" : [
      {
        "id" : "12e9170a-a67a-41c2-83bc-e68d3444a42a",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n  putStrLn \"Start value phase\"\r\n  case runEnv (genPackages ValuePhase pkgs) emptyEnv of\r\n```",
        "createdAt" : "2020-04-29T08:30:14Z",
        "updatedAt" : "2020-05-19T20:39:29Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2d7c840ec94d841cd4a9d3f0bd85eabff75e5d3a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,44 @@\n+-- Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+-- SPDX-License-Identifier: Apache-2.0\n+\n+-- | Static verification of DAML packages.\n+module DA.Daml.LF.Verify ( main ) where\n+\n+import Options.Applicative\n+\n+import DA.Daml.LF.Ast.Base\n+import DA.Daml.LF.Verify.Generate\n+import DA.Daml.LF.Verify.Solve\n+import DA.Daml.LF.Verify.Read\n+import DA.Daml.LF.Verify.Context\n+import DA.Bazel.Runfiles\n+\n+-- TODO: temporarily hardcoded\n+templName :: TypeConName\n+templName = TypeConName [\"Iou\"]\n+\n+choiceName :: ChoiceName\n+choiceName = ChoiceName \"Iou_Merge\"\n+\n+fieldName :: FieldName\n+fieldName = FieldName \"amount\"\n+\n+main :: IO ()\n+main = do\n+  Options{..} <- execParser optionsParserInfo\n+  solver <- locateRunfiles \"z3_nix/bin/z3\"\n+  pkgs <- readPackages optInputDars\n+  putStrLn \"Start value phase\" >> case runEnv (genPackages ValuePhase pkgs) emptyEnv of"
  },
  {
    "id" : "a9d9d9fa-dbd6-4d7d-81c2-1f80f42ef9dc",
    "prId" : 5472,
    "comments" : [
      {
        "id" : "6eb9794d-36d4-414e-b30a-9235cf6f16f9",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Note that this only works in our Bazel setup. We need to figure out what we do if we ship things to users. Not sure if we want to ship an SMT solver so a reasonable option might be to let users pass a path to the SMT solver they want to use.",
        "createdAt" : "2020-05-07T19:29:20Z",
        "updatedAt" : "2020-05-19T20:39:29Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2d7c840ec94d841cd4a9d3f0bd85eabff75e5d3a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,44 @@\n+-- Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+-- SPDX-License-Identifier: Apache-2.0\n+\n+{-# LANGUAGE DataKinds #-}\n+\n+-- | Static verification of DAML packages.\n+module DA.Daml.LF.Verify ( main ) where\n+\n+import Data.Text\n+import Options.Applicative\n+\n+import DA.Daml.LF.Ast.Base\n+import DA.Daml.LF.Verify.Generate\n+import DA.Daml.LF.Verify.Solve\n+import DA.Daml.LF.Verify.Read\n+import DA.Daml.LF.Verify.Context\n+import DA.Bazel.Runfiles\n+\n+main :: IO ()\n+main = do\n+  Options{..} <- execParser optionsParserInfo\n+  let choiceTmpl = TypeConName [pack optChoiceTmpl]\n+      choiceName = ChoiceName (pack optChoiceName)\n+      fieldTmpl = TypeConName [pack optFieldTmpl]\n+      fieldName = FieldName (pack optFieldName)\n+  solver <- locateRunfiles \"z3_nix/bin/z3\""
  },
  {
    "id" : "710ac38a-b366-4a20-94ba-7c1b10a4348d",
    "prId" : 5472,
    "comments" : [
      {
        "id" : "e0e493fb-6b12-4b17-a37d-7b699be9c508",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Errors should go to stderr and you should exit with a non-zero exitcode, i.e., `exitFailure`.",
        "createdAt" : "2020-05-07T19:29:47Z",
        "updatedAt" : "2020-05-19T20:39:29Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2d7c840ec94d841cd4a9d3f0bd85eabff75e5d3a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,44 @@\n+-- Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+-- SPDX-License-Identifier: Apache-2.0\n+\n+{-# LANGUAGE DataKinds #-}\n+\n+-- | Static verification of DAML packages.\n+module DA.Daml.LF.Verify ( main ) where\n+\n+import Data.Text\n+import Options.Applicative\n+\n+import DA.Daml.LF.Ast.Base\n+import DA.Daml.LF.Verify.Generate\n+import DA.Daml.LF.Verify.Solve\n+import DA.Daml.LF.Verify.Read\n+import DA.Daml.LF.Verify.Context\n+import DA.Bazel.Runfiles\n+\n+main :: IO ()\n+main = do\n+  Options{..} <- execParser optionsParserInfo\n+  let choiceTmpl = TypeConName [pack optChoiceTmpl]\n+      choiceName = ChoiceName (pack optChoiceName)\n+      fieldTmpl = TypeConName [pack optFieldTmpl]\n+      fieldName = FieldName (pack optFieldName)\n+  solver <- locateRunfiles \"z3_nix/bin/z3\"\n+  pkgs <- readPackages [optInputDar]\n+  putStrLn \"Start value gathering\"\n+  case runEnv (genPackages pkgs) (emptyEnv :: Env 'ValueGathering) of\n+    Left err-> putStrLn \"Value phase finished with error: \" >> print err"
  },
  {
    "id" : "ef1d8379-5e77-4a9f-bffd-d23a78865836",
    "prId" : 5472,
    "comments" : [
      {
        "id" : "b34c92e3-12d9-4982-a9b1-432aa02def24",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I think some comments here that explain the steps would be useful.",
        "createdAt" : "2020-05-07T19:35:09Z",
        "updatedAt" : "2020-05-19T20:39:29Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2d7c840ec94d841cd4a9d3f0bd85eabff75e5d3a",
    "line" : 75,
    "diffHunk" : "@@ -0,0 +1,44 @@\n+-- Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+-- SPDX-License-Identifier: Apache-2.0\n+\n+{-# LANGUAGE DataKinds #-}\n+\n+-- | Static verification of DAML packages.\n+module DA.Daml.LF.Verify ( main ) where\n+\n+import Data.Text\n+import Options.Applicative\n+\n+import DA.Daml.LF.Ast.Base\n+import DA.Daml.LF.Verify.Generate\n+import DA.Daml.LF.Verify.Solve\n+import DA.Daml.LF.Verify.Read\n+import DA.Daml.LF.Verify.Context\n+import DA.Bazel.Runfiles\n+\n+main :: IO ()\n+main = do\n+  Options{..} <- execParser optionsParserInfo\n+  let choiceTmpl = TypeConName [pack optChoiceTmpl]\n+      choiceName = ChoiceName (pack optChoiceName)\n+      fieldTmpl = TypeConName [pack optFieldTmpl]\n+      fieldName = FieldName (pack optFieldName)\n+  solver <- locateRunfiles \"z3_nix/bin/z3\"\n+  pkgs <- readPackages [optInputDar]\n+  putStrLn \"Start value gathering\"\n+  case runEnv (genPackages pkgs) (emptyEnv :: Env 'ValueGathering) of"
  },
  {
    "id" : "1f847402-e414-483d-a1de-d4a750ebaee8",
    "prId" : 5472,
    "comments" : [
      {
        "id" : "fee8c5a4-6e64-4681-b524-c3cc2c9822b2",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Maybe it's easier to pass a `debug :: String -> IO ()` function rather than `verbose`. In normal mode you pass `\\_ -> pure ()` and in debug mode `putStrLn`.",
        "createdAt" : "2020-05-11T08:08:54Z",
        "updatedAt" : "2020-05-19T20:39:29Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2d7c840ec94d841cd4a9d3f0bd85eabff75e5d3a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,75 @@\n+-- Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+-- SPDX-License-Identifier: Apache-2.0\n+\n+{-# LANGUAGE DataKinds #-}\n+\n+-- | Static verification of DAML packages.\n+module DA.Daml.LF.Verify\n+  ( main\n+  , verify\n+  ) where\n+\n+import Control.Monad (when)\n+import Data.Text\n+import Options.Applicative\n+\n+import DA.Daml.LF.Ast.Base\n+import DA.Daml.LF.Verify.Generate\n+import DA.Daml.LF.Verify.Solve\n+import DA.Daml.LF.Verify.Read\n+import DA.Daml.LF.Verify.Context\n+import DA.Bazel.Runfiles\n+\n+getSolver :: IO FilePath\n+getSolver = locateRunfiles \"z3_nix/bin/z3\"\n+\n+main :: IO ()\n+main = do\n+  Options{..} <- execParser optionsParserInfo\n+  let choiceTmpl = TypeConName [pack optChoiceTmpl]\n+      choiceName = ChoiceName (pack optChoiceName)\n+      fieldTmpl = TypeConName [pack optFieldTmpl]\n+      fieldName = FieldName (pack optFieldName)\n+  result <- verify optInputDar True choiceTmpl choiceName fieldTmpl fieldName\n+  print result\n+\n+-- | Execute the full verification pipeline.\n+verify :: FilePath\n+  -- ^ The DAR file to load.\n+  -> Bool\n+  -- ^ Enable print outs.\n+  -> TypeConName\n+  -- ^ The template in which the given choice is defined.\n+  -> ChoiceName\n+  -- ^ The choice to be verified.\n+  -> TypeConName\n+  -- ^ The template in which the given field is defined.\n+  -> FieldName\n+  -- ^ The field to be verified.\n+  -> IO Result\n+verify dar verbose choiceTmpl choiceName fieldTmpl fieldName = do\n+  pkgs <- readPackages [dar]\n+  solver <- getSolver\n+  when verbose $ putStrLn \"Start value gathering\"\n+  case runEnv (genPackages pkgs) (emptyEnv :: Env 'ValueGathering) of\n+    Left err-> do\n+      putStrLn \"Value phase finished with error: \"\n+      print err\n+      return Unknown\n+    Right env1 -> do\n+      when verbose $ putStrLn \"Start value solving\""
  }
]