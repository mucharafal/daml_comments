[
  {
    "id" : "f37f83c1-8c0b-4af8-aec7-f836fdffb3fc",
    "prId" : 6516,
    "comments" : [
      {
        "id" : "14c33096-a782-4862-b3de-a8365b95e83e",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Could we just use a single DAR for all tests and split them up into different modules? Seems a bit simpler.",
        "createdAt" : "2020-06-29T07:09:05Z",
        "updatedAt" : "2020-06-30T18:06:09Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8c9efc7a1908f7441b41b0d2ca49c22490f8c777",
    "line" : 4,
    "diffHunk" : "@@ -98,18 +98,32 @@ daml_compile(\n     version = \"1.0.0\",\n )\n \n+daml_compile("
  },
  {
    "id" : "9f08fdbe-7e8f-44ae-b7b4-2aa4a7520647",
    "prId" : 5472,
    "comments" : [
      {
        "id" : "418b1ff3-d54f-47b6-a2b9-efd903c1a730",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "We should not check in the DAR files directly but rather the DAML source. You can use the `daml_compile` rule to produce the DARs then. You can find an example at https://github.com/digital-asset/daml/blob/9b476416b8b16ee936e10cc97f11dd1461f8b173/language-support/ts/codegen/tests/BUILD.bazel#L12.",
        "createdAt" : "2020-05-11T08:06:52Z",
        "updatedAt" : "2020-05-19T20:39:29Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2d7c840ec94d841cd4a9d3f0bd85eabff75e5d3a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,113 @@\n+# Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+load(\"//bazel_tools:haskell.bzl\", \"da_haskell_binary\", \"da_haskell_library\", \"da_haskell_test\")\n+\n+da_haskell_binary(\n+    name = \"daml-lf-verify\",\n+    srcs = glob([\"src/**/*.hs\"]),\n+    data = [\n+        \"@z3_nix//:bin/z3\",\n+    ],\n+    hackage_deps = [\n+        \"aeson\",\n+        \"base\",\n+        \"bytestring\",\n+        \"containers\",\n+        \"deepseq\",\n+        \"Decimal\",\n+        \"extra\",\n+        \"filepath\",\n+        \"ghc-lib-parser\",\n+        \"hashable\",\n+        \"lens\",\n+        \"mtl\",\n+        \"optparse-applicative\",\n+        \"recursion-schemes\",\n+        \"safe\",\n+        \"scientific\",\n+        \"simple-smt\",\n+        \"template-haskell\",\n+        \"text\",\n+        \"time\",\n+        \"unordered-containers\",\n+        \"zip-archive\",\n+    ],\n+    main_function = \"DA.Daml.LF.Verify.main\",\n+    src_strip_prefix = \"src\",\n+    visibility = [\"//visibility:public\"],\n+    deps = [\n+        \"//compiler/daml-lf-ast\",\n+        \"//compiler/daml-lf-proto\",\n+        \"//compiler/daml-lf-reader\",\n+        \"//compiler/daml-lf-tools\",\n+        \"//libs-haskell/bazel-runfiles\",\n+        \"//libs-haskell/da-hs-base\",\n+    ],\n+)\n+\n+da_haskell_library(\n+    name = \"daml-lf-verify-lib\",\n+    srcs = glob([\"src/**/*.hs\"]),\n+    data = [\n+        \"@z3_nix//:bin/z3\",\n+    ],\n+    hackage_deps = [\n+        \"aeson\",\n+        \"base\",\n+        \"bytestring\",\n+        \"containers\",\n+        \"deepseq\",\n+        \"Decimal\",\n+        \"extra\",\n+        \"filepath\",\n+        \"ghc-lib-parser\",\n+        \"hashable\",\n+        \"lens\",\n+        \"mtl\",\n+        \"optparse-applicative\",\n+        \"recursion-schemes\",\n+        \"safe\",\n+        \"scientific\",\n+        \"simple-smt\",\n+        \"template-haskell\",\n+        \"text\",\n+        \"time\",\n+        \"unordered-containers\",\n+        \"zip-archive\",\n+    ],\n+    src_strip_prefix = \"src\",\n+    visibility = [\"//visibility:public\"],\n+    deps = [\n+        \"//compiler/daml-lf-ast\",\n+        \"//compiler/daml-lf-proto\",\n+        \"//compiler/daml-lf-reader\",\n+        \"//compiler/daml-lf-tools\",\n+        \"//libs-haskell/bazel-runfiles\",\n+        \"//libs-haskell/da-hs-base\",\n+    ],\n+)\n+\n+da_haskell_test(\n+    name = \"verify-tests\",\n+    srcs = glob([\"tests/**/*.hs\"]),\n+    data = glob([\"data/*.dar\"]),"
  }
]