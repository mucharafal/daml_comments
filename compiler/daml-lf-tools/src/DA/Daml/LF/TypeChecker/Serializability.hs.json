[
  {
    "id" : "2846226a-e47b-4a80-b90e-315347520d59",
    "prId" : 3589,
    "comments" : [
      {
        "id" : "792c1aeb-1bec-42b1-a7f1-2fae875bf57c",
        "parentId" : null,
        "author" : null,
        "body" : "```suggestion\r\n        BTTextMap -> Left URMap  -- 'TextMap' is used as a higher-kinded type constructor.\r\n```",
        "createdAt" : "2019-11-22T15:07:52Z",
        "updatedAt" : "2019-11-25T11:44:14Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a84f590b351ebece449308a443df333eb4b8de57",
    "line" : null,
    "diffHunk" : "@@ -91,7 +91,7 @@ serializabilityConditionsType world0 _version mbModNameTpls vars = go\n         BTBool -> noConditions\n         BTList -> Left URList  -- 'List' is used as a higher-kinded type constructor.\n         BTOptional -> Left UROptional  -- 'Optional' is used as a higher-kinded type constructor.\n-        BTMap -> Left URMap  -- 'Map' is used as a higher-kinded type constructor.\n+        BTTextMap -> Left URMap  -- 'Map' is used as a higher-kinded type constructor."
  },
  {
    "id" : "ad11b476-1a13-4f41-8b4d-08eb79c30cda",
    "prId" : 2723,
    "comments" : [
      {
        "id" : "aebfa695-4d40-45fd-a1c1-9fcdc72e9803",
        "parentId" : null,
        "author" : null,
        "body" : "This is an unrelated fix caught by @hurryabit ",
        "createdAt" : "2019-09-02T14:10:29Z",
        "updatedAt" : "2019-09-02T16:21:42Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "758d58d82eb96a48809b4a76e777e227a5c4138e",
    "line" : 5,
    "diffHunk" : "@@ -62,7 +62,7 @@ serializabilityConditionsType world0 _version mbModNameTpls vars = go\n           -- requiring 0 <= n <= 'numericMaxScale' for the argument\n           -- to Numeric. If the argument isn't given explicitly, we\n           -- can't guarantee serializability.\n-      TNat _ -> noConditions\n+      TNat _ -> Left URTypeLevelNat"
  },
  {
    "id" : "f4337bae-48a5-42cf-8ff2-4ea88021bda8",
    "prId" : 2706,
    "comments" : [
      {
        "id" : "6bfd7775-8504-4c76-9cea-60ac98b12e08",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "`TNat` should not be serializable at all. Most client languages can't express this. The only place where it's allowed in serializable types is immediately under `TNumeric`. I must have missed this in the previous PR.",
        "createdAt" : "2019-09-02T10:47:53Z",
        "updatedAt" : "2019-09-02T10:49:46Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a1bfecd2-8ce6-4244-a0b9-6e32f006473f",
        "parentId" : "6bfd7775-8504-4c76-9cea-60ac98b12e08",
        "author" : null,
        "body" : "That makes sense. I'll update it, thanks!",
        "createdAt" : "2019-09-02T10:51:07Z",
        "updatedAt" : "2019-09-02T10:51:07Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "513c13d565752ab84a0a5966b81080401d488452",
    "line" : 23,
    "diffHunk" : "@@ -54,13 +55,13 @@ serializabilityConditionsType world0 _version mbModNameTpls vars = go\n       TOptional typ -> go typ\n       TMap typ -> go typ\n       TNumeric (TNat n)\n-          | n <= 38 -> noConditions\n+          | n <= numericMaxScale -> noConditions\n           | otherwise -> Left (URNumericOutOfRange n)\n       TNumeric _ -> Left URNumericNotFixed\n           -- We statically enforce bounds check for Numeric type,\n-          -- requiring 0 <= n <= 38 for the argument to Numeric.\n-          -- If the argument isn't given explicitly, we can't\n-          -- guarantee serializability.\n+          -- requiring 0 <= n <= 'numericMaxScale' for the argument\n+          -- to Numeric. If the argument isn't given explicitly, we\n+          -- can't guarantee serializability.\n       TNat _ -> noConditions"
  },
  {
    "id" : "8c436bc3-d92d-4861-b02d-7f52ed23ea54",
    "prId" : 2670,
    "comments" : [
      {
        "id" : "e42c2a23-78d2-41c2-92f8-1d20b0ab93b2",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "In the first delivered version, we will require the `Numeric` to be applied to a static `nat`. \r\nThis simplified a lot of work on the runtime side. \r\nFor instance, dealing with type variables in java/scala codegen is not trivial at all.  \r\nWe may relax this restriction in the future if required. ",
        "createdAt" : "2019-08-27T18:05:52Z",
        "updatedAt" : "2019-08-28T11:30:58Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "885b4911-4e4b-4736-a388-d5d67baf0a8b",
        "parentId" : "e42c2a23-78d2-41c2-92f8-1d20b0ab93b2",
        "author" : null,
        "body" : "This seems like a good idea, and lets us check the bound here explicitly.",
        "createdAt" : "2019-08-27T19:51:48Z",
        "updatedAt" : "2019-08-28T11:30:58Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "180fce9e-f0b3-4af8-a926-4b30f65bac48",
        "parentId" : "e42c2a23-78d2-41c2-92f8-1d20b0ab93b2",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I agree. Let's keep it tight at the beginning and loosen it when there's demand.",
        "createdAt" : "2019-08-28T09:42:13Z",
        "updatedAt" : "2019-08-28T11:30:58Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "92d764f1-179f-4194-9d52-6dca95417c39",
        "parentId" : "e42c2a23-78d2-41c2-92f8-1d20b0ab93b2",
        "author" : null,
        "body" : "Ok! I added a check to make this fixed number between 0 and 38 for now.",
        "createdAt" : "2019-08-28T11:35:30Z",
        "updatedAt" : "2019-08-28T11:35:30Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2c2900d7cd2fd33fbf5de9881afed0fec07bff1f",
    "line" : null,
    "diffHunk" : "@@ -53,6 +53,10 @@ serializabilityConditionsType world0 _version mbModNameTpls vars = go\n       TList typ -> go typ\n       TOptional typ -> go typ\n       TMap typ -> go typ\n+      TNumeric n -> go n\n+        -- TODO (#2289): decide if n should be forced to be a static nat\n+        -- literal within LF's bounds for the numeric type (0 <= n <= 38)."
  }
]