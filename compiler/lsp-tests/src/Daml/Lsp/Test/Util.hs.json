[
  {
    "id" : "17d89dba-3dcf-4ba8-a133-26b6940f8374",
    "prId" : 1603,
    "comments" : [
      {
        "id" : "1c3e70fa-f0cb-4ddc-8d76-876ed2c4e5ca",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This has been upstreamed.",
        "createdAt" : "2019-06-12T11:47:50Z",
        "updatedAt" : "2019-06-12T11:47:50Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1df81c7cf7a639f8bff3128f10e4d78625ada37c",
    "line" : 72,
    "diffHunk" : "@@ -97,28 +92,6 @@ openDoc' file languageId contents = do\n     sendNotification TextDocumentDidOpen (DidOpenTextDocumentParams item)\n     pure $ TextDocumentIdentifier uri\n \n-getDocUri :: FilePath -> Session Uri\n-getDocUri file = do\n-    -- We have our own version of getDocUri to ensure that it uses filePathToUri'\n-    uri <- LspTest.getDocUri file\n-    Just fp <- pure $ uriToFilePath uri\n-    pure $ filePathToUri' fp\n-\n-getCodeLenses :: TextDocumentIdentifier -> Session [CodeLens]"
  },
  {
    "id" : "779e3a2e-ffad-49f8-b2b3-355d1f86c4ca",
    "prId" : 1603,
    "comments" : [
      {
        "id" : "5c727ce0-14ba-4a79-9baa-f9a6f279f926",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This has been upstreamed.",
        "createdAt" : "2019-06-12T11:48:01Z",
        "updatedAt" : "2019-06-12T11:48:01Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1df81c7cf7a639f8bff3128f10e4d78625ada37c",
    "line" : 79,
    "diffHunk" : "@@ -97,28 +92,6 @@ openDoc' file languageId contents = do\n     sendNotification TextDocumentDidOpen (DidOpenTextDocumentParams item)\n     pure $ TextDocumentIdentifier uri\n \n-getDocUri :: FilePath -> Session Uri\n-getDocUri file = do\n-    -- We have our own version of getDocUri to ensure that it uses filePathToUri'\n-    uri <- LspTest.getDocUri file\n-    Just fp <- pure $ uriToFilePath uri\n-    pure $ filePathToUri' fp\n-\n-getCodeLenses :: TextDocumentIdentifier -> Session [CodeLens]\n-getCodeLenses tId = do\n-    rsp <- request TextDocumentCodeLens (CodeLensParams tId) :: Session CodeLensResponse\n-    case rsp ^. result of\n-        Nothing -> liftIO $ throwIO (UnexpectedResponseError (rsp ^. Lsp.id) (fromJust $ rsp ^. Lsp.error))\n-        Just (List res) -> pure res\n-\n-getDefinitions :: TextDocumentIdentifier -> Position -> Session [Location]"
  },
  {
    "id" : "e32904dc-ae4c-4c33-9f51-5428e858d66c",
    "prId" : 1516,
    "comments" : [
      {
        "id" : "06b6e4d0-64e4-4950-9e69-3011c6505605",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "This comment does not reflect the actual type since there's no file path.",
        "createdAt" : "2019-06-04T17:36:13Z",
        "updatedAt" : "2019-06-04T17:44:44Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7a3d7121-3f15-4f0e-9761-92b3c4777ea5",
        "parentId" : "06b6e4d0-64e4-4950-9e69-3011c6505605",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Good catch, removed. Also just to give some context: We definitely do want file paths here but `lsp-test` doesn’t expose them in a convenient way so for the initial attempt I’m not checking file paths and I’ll try to get this changed upstream.",
        "createdAt" : "2019-06-04T17:46:36Z",
        "updatedAt" : "2019-06-04T17:46:37Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "01c6223d9eda18a3bb535e620ebea04d9988ba9b",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,64 @@\n+-- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+-- SPDX-License-Identifier: Apache-2.0\n+\n+{-# LANGUAGE OverloadedStrings #-}\n+module Daml.Lsp.Test.Util\n+    ( Cursor\n+    , cursorPosition\n+    , expectDiagnostics\n+    , damlId\n+    , replaceDoc\n+    ) where\n+\n+import Control.Applicative.Combinators\n+import Control.Lens\n+import Control.Monad\n+import Control.Monad.IO.Class\n+import qualified Data.Text as T\n+import Language.Haskell.LSP.Test hiding (message)\n+import qualified Language.Haskell.LSP.Test as LspTest\n+import Language.Haskell.LSP.Types\n+import Language.Haskell.LSP.Types.Lens\n+import Test.Tasty.HUnit\n+\n+import DA.Test.Util\n+\n+-- | Convenient grouping of file path, 0-based line number, 0-based column number."
  },
  {
    "id" : "181903b4-dd98-429f-bc6c-23baf7b5ab45",
    "prId" : 1516,
    "comments" : [
      {
        "id" : "05aadbdc-20a1-4393-83f8-03b0f90300ae",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Why not Daml.LSP, with capital LSP, like the upstream module names.",
        "createdAt" : "2019-06-04T18:46:29Z",
        "updatedAt" : "2019-06-04T18:51:17Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "eb59fb24-76ad-4387-b805-01d56bd97dac",
        "parentId" : "05aadbdc-20a1-4393-83f8-03b0f90300ae",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I first went with `DAML.LSP` which looked somewhat ugly and using `Daml.LSP` seemed somewhat inconsistent (side note: It looks like we are already inconsistent, we use `DAML` in the assistant modules but `DA.Daml` in other places) so I went with `Daml.Lsp` which seemed like the most consistent option. Upstream does seem to consistently use `LSP` in module names but for other identifiers they aren’t consistent either, e.g., there is `LSPVersion` and `LspFuncs` so all options are inconsistent in some way.\r\n\r\nI don’t really care about the module name here so feel free to change it :slightly_smiling_face: ",
        "createdAt" : "2019-06-04T19:02:15Z",
        "updatedAt" : "2019-06-04T19:02:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3aee88df-9bc8-49e5-b28f-314858def01c",
        "parentId" : "05aadbdc-20a1-4393-83f8-03b0f90300ae",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "It is indeed a bomb shell. I'm sure someone will unify everything one day.",
        "createdAt" : "2019-06-04T19:05:36Z",
        "updatedAt" : "2019-06-04T19:05:37Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "01c6223d9eda18a3bb535e620ebea04d9988ba9b",
    "line" : 5,
    "diffHunk" : "@@ -0,0 +1,62 @@\n+-- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+-- SPDX-License-Identifier: Apache-2.0\n+\n+{-# LANGUAGE OverloadedStrings #-}\n+module Daml.Lsp.Test.Util"
  },
  {
    "id" : "1ab4e97d-7b18-4b7c-9204-1e214bb534a6",
    "prId" : 1516,
    "comments" : [
      {
        "id" : "bd28717f-5c64-4a51-9d5d-f47d7ada9aa0",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "I'd call this requireDiagnostic, it's not really a \"search\" in a meaningful way.",
        "createdAt" : "2019-06-04T18:47:28Z",
        "updatedAt" : "2019-06-04T18:51:17Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a5571666-43f3-405d-8073-a8c4ab7f9281",
        "parentId" : "bd28717f-5c64-4a51-9d5d-f47d7ada9aa0",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I just copied the name from `daml-ghc-shake-test-ci`, happy to change it but I expect that this will probably change quite a bit anyway so this whole function might disappear.",
        "createdAt" : "2019-06-04T18:55:10Z",
        "updatedAt" : "2019-06-04T18:55:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "01c6223d9eda18a3bb535e620ebea04d9988ba9b",
    "line" : 32,
    "diffHunk" : "@@ -0,0 +1,62 @@\n+-- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+-- SPDX-License-Identifier: Apache-2.0\n+\n+{-# LANGUAGE OverloadedStrings #-}\n+module Daml.Lsp.Test.Util\n+    ( Cursor\n+    , cursorPosition\n+    , expectDiagnostics\n+    , damlId\n+    , replaceDoc\n+    ) where\n+\n+import Control.Applicative.Combinators\n+import Control.Lens\n+import Control.Monad\n+import Control.Monad.IO.Class\n+import qualified Data.Text as T\n+import Language.Haskell.LSP.Test hiding (message)\n+import qualified Language.Haskell.LSP.Test as LspTest\n+import Language.Haskell.LSP.Types\n+import Language.Haskell.LSP.Types.Lens\n+import Test.Tasty.HUnit\n+\n+import DA.Test.Util\n+\n+-- | Convenient grouping of 0-based line number, 0-based column number.\n+type Cursor = (Int, Int)\n+\n+cursorPosition :: Cursor -> Position\n+cursorPosition (line,  col) = Position line col\n+\n+searchDiagnostics :: (DiagnosticSeverity, Cursor, T.Text) -> PublishDiagnosticsParams -> Assertion"
  }
]