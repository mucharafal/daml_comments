[
  {
    "id" : "bc2a5991-fa0c-494a-9c6b-1fbe43a1f397",
    "prId" : 2871,
    "comments" : [
      {
        "id" : "0da44a6a-0e62-4a09-bfda-03df19ce85e8",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "It might be good to test a contract key look up here as well.",
        "createdAt" : "2019-09-10T19:53:23Z",
        "updatedAt" : "2019-09-11T08:58:14Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c53ca1a8-48af-4399-94d2-10e1d3c27d7b",
        "parentId" : "0da44a6a-0e62-4a09-bfda-03df19ce85e8",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Good idea. Done.",
        "createdAt" : "2019-09-11T08:58:16Z",
        "updatedAt" : "2019-09-11T08:58:17Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "40382b239dcd82ff6195ff55027641feacaa396f",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,29 @@\n+-- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+-- SPDX-License-Identifier: Apache-2.0\n+\n+-- Check that choices on generic templates can be exercised in generic contexts.\n+daml 1.2\n+module GenericChoice where\n+\n+template Foo c with\n+    p : Party\n+    a : c\n+  where\n+    signatory p\n+\n+    choice Delete: ()\n+      controller p\n+      do pure ()\n+\n+template Template (Foo c) => FooTrigger c with\n+    p : Party\n+  where\n+    signatory p\n+\n+    choice Trigger: () with\n+        fooCid: ContractId (Foo c)\n+      controller p\n+      do exercise fooCid Delete\n+\n+exerciseDelete : Template (Foo c) => ContractId (Foo c) -> Update ()\n+exerciseDelete fooCid = exercise fooCid Delete"
  }
]