[
  {
    "id" : "05b98a4d-164c-47ef-a85d-2d941fd95e1e",
    "prId" : 3013,
    "comments" : [
      {
        "id" : "4db7b9ae-d4a0-4a79-820e-427fe31ab9b6",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n-- in its desugared form.\r\n```",
        "createdAt" : "2019-09-26T17:26:47Z",
        "updatedAt" : "2019-09-26T17:28:01Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "41b53d977e904db034d8dd8bb2cb16222a269486",
    "line" : 3,
    "diffHunk" : "@@ -177,7 +177,7 @@ instance IouInstance where\n \n -- The instantiation of the generic `Proposal a` template for `a = Iou`\n -- in its deugared form."
  },
  {
    "id" : "bf2988e8-ad3a-43f3-8239-42bb779a1323",
    "prId" : 2947,
    "comments" : [
      {
        "id" : "b0081762-0fab-4482-acb8-0b2ac6e47bdc",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "We might also want to update the desugaring documentation in `ghc-lib/template-desugaring.md` (which is slightly out of date now - missing the leading underscores at least).",
        "createdAt" : "2019-09-18T18:58:39Z",
        "updatedAt" : "2019-09-19T07:30:10Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "083171ce-84f0-487f-8a23-dcb3cef52f4b",
        "parentId" : "b0081762-0fab-4482-acb8-0b2ac6e47bdc",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Good point, Iâ€™ll see if I can get around to updating it next week in a separate PR.",
        "createdAt" : "2019-09-18T19:29:37Z",
        "updatedAt" : "2019-09-19T07:30:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "582b7a9e5bba8740afbdd5171b2adc4d1d7d6f35",
    "line" : 26,
    "diffHunk" : "@@ -64,6 +67,10 @@ class Template t => ProposalInstance t where\n     _fetchProposal = error \"code will be injected by the compiler\"\n     _archiveProposal : ContractId (Proposal t) -> Update ()\n     _archiveProposal cid = _exerciseProposalArchive cid Archive\n+    _toAnyTemplateProposal : Proposal t -> AnyTemplate\n+    _toAnyTemplateProposal = error \"code will be injected by the compiler\"\n+    _fromAnyTemplateProposal : AnyTemplate -> Optional (Proposal t)\n+    _fromAnyTemplateProposal = error \"code will be injected by the compiler\""
  },
  {
    "id" : "8ac53fe6-b5a4-4dfb-8c35-e05cb716f75a",
    "prId" : 2947,
    "comments" : [
      {
        "id" : "e7718609-dadf-40ac-9737-f4a7724739a2",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n-- @SINCE-LF 1.7\r\n```\r\nOtherwise we might forget to test it for DAML-LF 1.7 after we froze it. If we decide to not roll this into 1.7 the test will fail, but that's fine.",
        "createdAt" : "2019-09-23T16:16:32Z",
        "updatedAt" : "2019-09-23T16:17:14Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "582b7a9e5bba8740afbdd5171b2adc4d1d7d6f35",
    "line" : 6,
    "diffHunk" : "@@ -3,7 +3,8 @@\n \n -- This test demonstrates how the desugared form of the generical proposal\n -- workflow and its instantiation for an IOU look like.\n--- @SINCE-LF 1.5\n+-- Limited to 1.dev since we do not expose toAnyTemplate/fromAnyTemplate for older LF versions\n+-- @SINCE-LF 1.dev"
  },
  {
    "id" : "397253ea-8d95-44b5-b967-18e6a8d1d47d",
    "prId" : 2779,
    "comments" : [
      {
        "id" : "3fe7798d-8b27-4e6e-8e6d-b7769c04b582",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "This did not actually match the desugaring before.",
        "createdAt" : "2019-09-05T15:55:24Z",
        "updatedAt" : "2019-09-10T11:14:25Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1ad2528d6a9763bf396a1c03fb414d73fa20ebee",
    "line" : 5,
    "diffHunk" : "@@ -164,7 +164,7 @@ instance IouInstance where\n \n -- The instantiation of the generic `Proposal a` template for `a = Iou`\n -- in its deugared form.\n-newtype ProposalIou = MkProposalIou with unProposalIou : Proposal Iou -- ^ TEMPLATE_INSTANCE\n+newtype ProposalIou = ProposalIou (Proposal Iou) -- ^ TEMPLATE_INSTANCE"
  }
]