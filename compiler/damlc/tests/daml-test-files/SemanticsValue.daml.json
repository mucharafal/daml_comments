[
  {
    "id" : "46d397b7-9685-4cb2-9837-e644558a7227",
    "prId" : 6598,
    "comments" : [
      {
        "id" : "46689252-c9a0-4834-a9de-9c64250806c4",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I’m a bit surprised to not see a case that checks that type lambdas don’t turn things into values. Did you intentionally omit this?",
        "createdAt" : "2020-07-21T10:57:14Z",
        "updatedAt" : "2020-07-21T15:04:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "05921dad-04a6-4f48-b0f8-313a962fc2ee",
        "parentId" : "46689252-c9a0-4834-a9de-9c64250806c4",
        "author" : {
          "login" : "sofiafaro-da",
          "name" : "Sofia Faro",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/63245722?u=b440e86239cc6cb4a8b4aacdc19fff8f1b61068d&v=4"
        },
        "body" : "It's hard to test in DAML because of Damas–Milner. :-/\r\n\r\nIt's also a bit out of scope for this module, which tests that things *are* values, not that they *aren't* values. (Ok, I know that's a weak argument...)\r\n\r\nI think we should definitely test this in the DAML-LF version of the spec tests.",
        "createdAt" : "2020-07-21T11:35:34Z",
        "updatedAt" : "2020-07-21T15:04:55Z",
        "lastEditedBy" : {
          "login" : "sofiafaro-da",
          "name" : "Sofia Faro",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/63245722?u=b440e86239cc6cb4a8b4aacdc19fff8f1b61068d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e50ea214-8425-44bd-ba33-6c25a2a4204e",
        "parentId" : "46689252-c9a0-4834-a9de-9c64250806c4",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I had an example in https://github.com/digital-asset/daml/pull/5547#issuecomment-616565362 that exhibits the issue.",
        "createdAt" : "2020-07-21T11:39:23Z",
        "updatedAt" : "2020-07-21T15:04:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bf282a5f-3dff-4eb1-9a91-967e202cc0ef",
        "parentId" : "46689252-c9a0-4834-a9de-9c64250806c4",
        "author" : {
          "login" : "sofiafaro-da",
          "name" : "Sofia Faro",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/63245722?u=b440e86239cc6cb4a8b4aacdc19fff8f1b61068d&v=4"
        },
        "body" : "I added this as test in the other file. Thanks!",
        "createdAt" : "2020-07-21T12:02:09Z",
        "updatedAt" : "2020-07-21T15:04:55Z",
        "lastEditedBy" : {
          "login" : "sofiafaro-da",
          "name" : "Sofia Faro",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/63245722?u=b440e86239cc6cb4a8b4aacdc19fff8f1b61068d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "534fb3ee-62bb-46bb-b7af-aa6e8bb9138d",
        "parentId" : "46689252-c9a0-4834-a9de-9c64250806c4",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Thanks for adding it!",
        "createdAt" : "2020-07-21T12:03:28Z",
        "updatedAt" : "2020-07-21T15:04:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0b5b8d6f9826b681bfc839a684099b92c822db82",
    "line" : 27,
    "diffHunk" : "@@ -0,0 +1,45 @@\n+\n+-- | This module checks that what is considered a value in\n+-- the operational semantics of DAML-LF matches what is\n+-- treated as a value in DAML.\n+--\n+-- According to the spec, a value is \"an expression which does not\n+-- need to be evaluated further\". Any unevaluated subexpressions\n+-- in a value should remain unevaluated. In particular, this\n+-- includes:\n+--\n+-- * term lambdas\n+-- * type lambdas where the parameter has kind 'nat'\n+-- * updates with 'bind' or 'embed_expr'\n+-- * scenarios with 'sbind' or 'sembed_expr'\n+--\n+-- Where we can, we test this from DAML by using values with\n+-- embedded error expressions. The value should evaluate without\n+-- raising an error.\n+--\n+-- Any errors here are tagged with the name of the rule in\n+-- the semantics that they violate.\n+\n+module SemanticsValue where\n+\n+main = scenario do"
  }
]