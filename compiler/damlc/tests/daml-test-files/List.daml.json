[
  {
    "id" : "d68b2c76-bb26-4c6a-9a31-8aa603083a5e",
    "prId" : 5656,
    "comments" : [
      {
        "id" : "c875b988-d2b1-4aa3-9b9f-45af51a5c843",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "The test even has `dedupBy` in the name so we should use it.",
        "createdAt" : "2020-04-21T17:10:11Z",
        "updatedAt" : "2020-04-21T18:14:08Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7c4319ab-efc5-462d-b3f5-ecd69ee9f1b7",
        "parentId" : "c875b988-d2b1-4aa3-9b9f-45af51a5c843",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Yes, but `dedup = dedupBy compare` hence it is being used.",
        "createdAt" : "2020-04-21T17:35:55Z",
        "updatedAt" : "2020-04-21T18:14:08Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e013a9cd-55f5-4e65-accc-751012660416",
        "parentId" : "c875b988-d2b1-4aa3-9b9f-45af51a5c843",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "we have separate tests for `dedup` above. `dedup = dedupBy compare` is how we implemented it now but if we change that this test should still test that `dedupBy compare` works properly.",
        "createdAt" : "2020-04-21T17:40:59Z",
        "updatedAt" : "2020-04-21T18:14:08Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1942ff59-df41-45b8-9fb9-74776a8bb127",
        "parentId" : "c875b988-d2b1-4aa3-9b9f-45af51a5c843",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "fine",
        "createdAt" : "2020-04-21T17:48:48Z",
        "updatedAt" : "2020-04-21T18:14:08Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a0d7e5d5b4afec86858b49bf1a04163911aaa154",
    "line" : null,
    "diffHunk" : "@@ -115,7 +111,7 @@ testDedupSort = scenario do\n     assert $ m == [1,2,3,4,5,7]\n \n testDedupBy = scenario do\n-  [2, 1, 3] === dedupBy compare [2, 1, 3, 2, 1]\n+  [2, 1, 3] === dedup [2, 1, 3, 2, 1]"
  },
  {
    "id" : "318b0d8e-d158-440f-a137-17c9c78c00ef",
    "prId" : 5656,
    "comments" : [
      {
        "id" : "e90dbe23-9a37-4880-a640-2d09b712477a",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "`flip snd` is completely unreadable and infix notation does not make it better. Just use a lambda.\r\n```suggestion\r\n    let o = map (\\(_, f) -> f ()) m\r\n```",
        "createdAt" : "2020-04-21T17:15:31Z",
        "updatedAt" : "2020-04-21T18:14:08Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2a3de151-83dc-4937-a549-13266dcbf196",
        "parentId" : "e90dbe23-9a37-4880-a640-2d09b712477a",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "As you wish",
        "createdAt" : "2020-04-21T17:37:49Z",
        "updatedAt" : "2020-04-21T18:14:08Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a0d7e5d5b4afec86858b49bf1a04163911aaa154",
    "line" : null,
    "diffHunk" : "@@ -33,7 +29,7 @@ testSort6 = scenario do\n -- Utility called on by 'testSort4' and 'testSort5'\n check45 n m = do\n     assert $ n == [1, 1, 1, 2, 3]\n-    let o = map (flip snd ()) m\n+    let o = map (`snd` ()) m"
  },
  {
    "id" : "0e836bae-b10d-4226-a618-a4c0869e08bc",
    "prId" : 3795,
    "comments" : [
      {
        "id" : "eb0969ee-da80-44df-b988-41912e0a173a",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "You might need to add explicit location annotations to make this work. IIRC, something about them feels like being off by one.",
        "createdAt" : "2019-12-09T21:10:43Z",
        "updatedAt" : "2019-12-10T11:48:31Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "61c8c79f-9210-4b43-94fb-a8ef2b7b9c18",
        "parentId" : "eb0969ee-da80-44df-b988-41912e0a173a",
        "author" : null,
        "body" : "I avoided the off by one problem by not adding ranges. Doing the minimum possible to get the tests through. That is, it's tested :)",
        "createdAt" : "2019-12-09T21:16:22Z",
        "updatedAt" : "2019-12-10T11:48:31Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "94eaa0caa2c659b5aabcea0d36a851681ce58f93",
    "line" : 6,
    "diffHunk" : "@@ -1,6 +1,15 @@\n -- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates.\n -- All rights reserved.\n \n+-- @INFO Use null\n+-- @INFO Evaluate\n+-- @INFO Use sum"
  }
]