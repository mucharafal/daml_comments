[
  {
    "id" : "8b677459-00ae-4e80-b934-2cd93adb629d",
    "prId" : 5123,
    "comments" : [
      {
        "id" : "c04aa607-d04a-4c04-9d31-ba1c161bab84",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Similar comment as for the eta reduce rule. I donâ€™t think encouraging point-free style is helpful for beginner DAML programmers.",
        "createdAt" : "2020-03-22T15:06:45Z",
        "updatedAt" : "2020-03-22T16:01:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4969267f-9fb0-4c0d-8dc7-1e7c098ed825",
        "parentId" : "c04aa607-d04a-4c04-9d31-ba1c161bab84",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Globally disabled",
        "createdAt" : "2020-03-22T15:24:58Z",
        "updatedAt" : "2020-03-22T16:01:39Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3783805a-45ec-4875-9124-0c36fdc3fe3a",
        "parentId" : "c04aa607-d04a-4c04-9d31-ba1c161bab84",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I think point-free style is almost never good. ðŸ˜¸",
        "createdAt" : "2020-03-23T12:27:49Z",
        "updatedAt" : "2020-03-23T12:27:50Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ef219f1763d7684a1ed673985f1f6409a04531a8",
    "line" : null,
    "diffHunk" : "@@ -6,7 +6,7 @@\n -- @INFO Use /=\n -- @INFO Use /=\n -- @INFO Use /=\n-\n+-- @INFO Avoid lambda"
  },
  {
    "id" : "1947e21e-f5f7-48a2-afe5-d3c3f6b741c1",
    "prId" : 2837,
    "comments" : [
      {
        "id" : "ee49b2e1-c56b-4a06-8927-d2838bdbd9a2",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "The fact that our own tests have tons of redundant parentheses seems to confirm my comment that parentheses might be easier than remembering precedences :slightly_smiling_face: ",
        "createdAt" : "2019-09-10T12:12:38Z",
        "updatedAt" : "2019-09-10T13:03:50Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7b3c2231-5c0b-4d68-92ff-6eae10b4ee71",
        "parentId" : "ee49b2e1-c56b-4a06-8927-d2838bdbd9a2",
        "author" : null,
        "body" : "Less than I might have anticipated. I hadn't thought about it that way but thinking back, the advice when learning most new programming languages is when in doubt, use brackets to be sure. ",
        "createdAt" : "2019-09-10T12:17:19Z",
        "updatedAt" : "2019-09-10T13:03:50Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "0b34c10e1ae990cb13ac8b9489af567d40020ee9",
    "line" : 9,
    "diffHunk" : "@@ -46,26 +46,26 @@ testNull = scenario do\n \n testEq = scenario do\n   (TM.empty : TextMap Int) === (TM.empty : TextMap Int)\n-  assert (not (TM.empty == (TM.fromList [(\"1\", 1)])))\n-  (TM.fromList [(\"1\", 1), (\"2\", 2), (\"3\", 3)]) === (TM.fromList [(\"1\", 1), (\"2\", 2), (\"3\", 3)])\n-  assert (not ((TM.fromList [(\"1\", 1), (\"2\", 2), (\"3\", 3)]) == (TM.fromList [(\"1\", 2), (\"2\", 2)])))\n-  assert (not ((TM.fromList [(\"1\", 1), (\"2\", 2), (\"3\", 3)]) == (TM.fromList [(\"1\", 2), (\"2\", 2), (\"3\", 4)])))\n-  assert (not ((TM.fromList [(\"1\", 1), (\"2\", 2), (\"3\", 3)]) == (TM.fromList [(\"1\", 2), (\"2\", 2), (\"4\", 3)])))\n+  assert (not (TM.empty == TM.fromList [(\"1\", 1)]))"
  }
]