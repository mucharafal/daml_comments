[
  {
    "id" : "fef7671f-5074-4826-852c-3479326614c6",
    "prId" : 2640,
    "comments" : [
      {
        "id" : "38e61cf2-a7c1-4c35-8c6e-059ae5cddc2c",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "I was surprised that I needed the `TransferProposalInstance` constraint. Need to think about this",
        "createdAt" : "2019-08-22T19:36:52Z",
        "updatedAt" : "2019-08-29T15:41:06Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "daa79edf9b455e507d745a038692245dbfc3abdf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,97 @@\n+{-# LANGUAGE UndecidableSuperClasses #-}\n+{-# LANGUAGE FlexibleContexts #-}\n+\n+daml 1.2\n+module Transferrable where\n+\n+import DA.Record\n+\n+class (Template t, Eq t, HasField \"issuer\" t Party, HasField \"owner\" t Party) => Issuable t\n+\n+template Issuable t => Issuance t with\n+    assetToIssue: t\n+  where\n+    signatory assetToIssue.issuer\n+\n+    controller assetToIssue.owner can\n+      AcceptIssuance: ContractId t\n+        do create assetToIssue\n+\n+template (Issuable t, TransferProposalInstance t) => Transferrable t"
  },
  {
    "id" : "41ed7cf2-9347-496b-90aa-ad05252a03a1",
    "prId" : 2640,
    "comments" : [
      {
        "id" : "4578e165-7333-4b6b-8ba5-1322e1c45427",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "This extension is not needed.",
        "createdAt" : "2019-08-26T16:11:18Z",
        "updatedAt" : "2019-08-29T15:41:06Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "daa79edf9b455e507d745a038692245dbfc3abdf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,75 @@\n+{-# LANGUAGE UndecidableSuperClasses #-}"
  },
  {
    "id" : "37071e71-0a55-487a-91a3-74c29702ccbd",
    "prId" : 2640,
    "comments" : [
      {
        "id" : "48bc92ed-74d0-41b8-a896-7fee643c1445",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\nclass (Template t, Eq t, HasField \"issuer\" t Party, HasField \"owner\" t Party) => Transferable t\r\n```\r\nI think this class captures the essence of being transferable.",
        "createdAt" : "2019-08-26T16:12:27Z",
        "updatedAt" : "2019-08-29T15:41:06Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "60321046-6f7d-4922-9e7a-52831afda072",
        "parentId" : "48bc92ed-74d0-41b8-a896-7fee643c1445",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "I'm not sure about that - it just says that there are `issuer` and `owner` fields. The fact that it is transferrable is reflected in the choices in the `Transferrable` template, no?",
        "createdAt" : "2019-08-28T18:53:43Z",
        "updatedAt" : "2019-08-29T15:41:06Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "daa79edf9b455e507d745a038692245dbfc3abdf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,75 @@\n+{-# LANGUAGE UndecidableSuperClasses #-}\n+{-# LANGUAGE FlexibleContexts #-}\n+\n+daml 1.2\n+module Transferrable where\n+\n+import DA.Record\n+\n+class (Template t, Eq t, HasField \"issuer\" t Party, HasField \"owner\" t Party) => Asset t"
  },
  {
    "id" : "5b0a025c-346e-4692-8439-33d072bbb6bb",
    "prId" : 2640,
    "comments" : [
      {
        "id" : "37d5cb4b-f3f0-4a6a-9b4a-50ddd4d5cd1b",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\ntemplate (Asset t, Template (TransferProposal t)) => Transferrable t\r\n```",
        "createdAt" : "2019-08-26T16:12:42Z",
        "updatedAt" : "2019-08-29T15:41:06Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ab161e92-6152-48e8-ba24-3e8a00ccdd33",
        "parentId" : "37d5cb4b-f3f0-4a6a-9b4a-50ddd4d5cd1b",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "We should also rename this template to `Transfer`.",
        "createdAt" : "2019-08-26T16:12:54Z",
        "updatedAt" : "2019-08-29T15:41:06Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ca7f85e2-e182-49bc-a098-b74a7373679d",
        "parentId" : "37d5cb4b-f3f0-4a6a-9b4a-50ddd4d5cd1b",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "To me this template describes an asset and an operation you can perform on it (the transfer), not a transfer contract itself. Hence the name `Transferrable`. The `TransferProposal` template seems closer in meaning to a `Transfer` contract. Unless there's another way to think about it?",
        "createdAt" : "2019-08-28T19:01:24Z",
        "updatedAt" : "2019-08-29T15:41:06Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "daa79edf9b455e507d745a038692245dbfc3abdf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,75 @@\n+{-# LANGUAGE UndecidableSuperClasses #-}\n+{-# LANGUAGE FlexibleContexts #-}\n+\n+daml 1.2\n+module Transferrable where\n+\n+import DA.Record\n+\n+class (Template t, Eq t, HasField \"issuer\" t Party, HasField \"owner\" t Party) => Asset t\n+-- ^ Would like to write this as a constraint synonym but DAML doesn't allow it currently\n+\n+template (Asset t, TransferProposalInstance t) => Transferrable t"
  },
  {
    "id" : "65f517b7-de37-415b-a9a6-9287bdf226d6",
    "prId" : 2640,
    "comments" : [
      {
        "id" : "8ade3e71-8081-465d-b8c8-83cf700e4523",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n    asset: t\r\n```",
        "createdAt" : "2019-08-26T16:13:01Z",
        "updatedAt" : "2019-08-29T15:41:06Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "daa79edf9b455e507d745a038692245dbfc3abdf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,75 @@\n+{-# LANGUAGE UndecidableSuperClasses #-}\n+{-# LANGUAGE FlexibleContexts #-}\n+\n+daml 1.2\n+module Transferrable where\n+\n+import DA.Record\n+\n+class (Template t, Eq t, HasField \"issuer\" t Party, HasField \"owner\" t Party) => Asset t\n+-- ^ Would like to write this as a constraint synonym but DAML doesn't allow it currently\n+\n+template (Asset t, TransferProposalInstance t) => Transferrable t\n+  with\n+    transferrableAsset: t"
  },
  {
    "id" : "90065b28-935b-40e0-ba4b-1acdc3f5214a",
    "prId" : 2640,
    "comments" : [
      {
        "id" : "98c98943-9abd-41c7-b40f-298a840f9261",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\ntemplate (Asset t, Template (Transferrable t)) => TransferProposal t\r\n```",
        "createdAt" : "2019-08-26T16:13:31Z",
        "updatedAt" : "2019-08-29T15:41:06Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "daa79edf9b455e507d745a038692245dbfc3abdf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,75 @@\n+{-# LANGUAGE UndecidableSuperClasses #-}\n+{-# LANGUAGE FlexibleContexts #-}\n+\n+daml 1.2\n+module Transferrable where\n+\n+import DA.Record\n+\n+class (Template t, Eq t, HasField \"issuer\" t Party, HasField \"owner\" t Party) => Asset t\n+-- ^ Would like to write this as a constraint synonym but DAML doesn't allow it currently\n+\n+template (Asset t, TransferProposalInstance t) => Transferrable t\n+  with\n+    transferrableAsset: t\n+  where\n+    let owner = transferrableAsset.owner\n+\n+    signatory transferrableAsset.issuer, owner\n+\n+    controller owner can\n+      ProposeTransfer: ContractId (TransferProposal t)\n+        with newOwner: Party\n+        do create TransferProposal with\n+            assetToTransfer = this\n+            newOwner\n+\n+template (Asset t, TransferrableInstance t) => TransferProposal t"
  }
]