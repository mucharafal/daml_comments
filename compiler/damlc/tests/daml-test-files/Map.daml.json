[
  {
    "id" : "48fd48ae-06c3-45e8-9450-33474e02d478",
    "prId" : 6423,
    "comments" : [
      {
        "id" : "f481ab65-4655-416c-ba07-d8992c1b67d6",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "For the sake of readability, it might have been better to prefix the existing variable names with underscores here rather than replace them completely. Let's consider this next time we do something similar.",
        "createdAt" : "2020-06-22T08:31:48Z",
        "updatedAt" : "2020-06-22T08:36:35Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8d1d4fdf697ac5c029167f8d8e4fd28d3f308c8f",
    "line" : 13,
    "diffHunk" : "@@ -59,8 +59,8 @@ testMerge = scenario do\n   let m1 = fromList [(1, \"bb\"), (2, \"dd\"), (3, \"aa\"), (4, \"cc\"), (6, \"ee\")]\n   let m2 = fromList [(1, \"a\"), (2, \"c\"), (3, \"b\"), (5, \"d\"), (0, \"e\")]\n \n-  [] === toList (merge (\\k v -> Some v) (\\k v -> Some v) (\\k v w -> Some v) M.empty (M.empty : Map Int Text))\n-  [] === toList (merge (\\k v -> Some v) (\\k v -> Some v) (\\k v w -> None) m1 m1)\n-  [(1, \"bb\"), (3, \"aa\")] === toList (merge (\\k v -> if v <= \"bb\" then Some v else None) (\\k v -> Some v) (\\k v w -> None) m1 M.empty)\n-  [(1, \"a\"), (3, \"b\")] === toList (merge (\\k v -> Some v) (\\k v -> if v <= \"bb\" then Some v else None) (\\k v w -> None) M.empty m2)\n-  [(1,\"bb\"), (2,\"dd\"), (3,\"aa\")] === toList (merge (\\k v -> None) (\\k v -> None) (\\k v w -> Some v) m1 m2)\n+  [] === toList (merge (\\_ v -> Some v) (\\_ v -> Some v) (\\_ v _ -> Some v) M.empty (M.empty : Map Int Text))\n+  [] === toList (merge (\\_ v -> Some v) (\\_ v -> Some v) (\\_ _ _ -> None) m1 m1)\n+  [(1, \"bb\"), (3, \"aa\")] === toList (merge (\\_ v -> if v <= \"bb\" then Some v else None) (\\_ v -> Some v) (\\_ _ _ -> None) m1 M.empty)\n+  [(1, \"a\"), (3, \"b\")] === toList (merge (\\_ v -> Some v) (\\_ v -> if v <= \"bb\" then Some v else None) (\\_ _ _ -> None) M.empty m2)\n+  [(1,\"bb\"), (2,\"dd\"), (3,\"aa\")] === toList (merge (\\_ _ -> None) (\\_ _ -> None) (\\_ v _ -> Some v) m1 m2)"
  }
]