[
  {
    "id" : "9f1fc142-2a27-4a29-94c5-61c5c7c2ae30",
    "prId" : 7662,
    "comments" : [
      {
        "id" : "99bfa07d-e69d-4809-8b63-6f4a730c5b04",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "huh, I didnâ€™t know we support this and now Iâ€™m not sure we should.",
        "createdAt" : "2020-10-15T16:43:06Z",
        "updatedAt" : "2020-10-15T17:00:53Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3b8dbbcc-9f64-4573-956d-eb2f956f899c",
        "parentId" : "99bfa07d-e69d-4809-8b63-6f4a730c5b04",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "The type `Foo` below is not an existential type but to define it you need `ExistentialQuantification` or `GADTs` nevertheless. I think such a definition makes no sense at all but for some reason we decided to support. I agree that we should deprecate it. I'll have a look how it interacts with data-dependencies.",
        "createdAt" : "2020-10-15T17:00:15Z",
        "updatedAt" : "2020-10-15T17:00:59Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ebd18816-b0c8-41fd-acf5-9bfaae68eafe",
        "parentId" : "99bfa07d-e69d-4809-8b63-6f4a730c5b04",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "In fact, we even have a check that the type looks like a record type since we need to inject more fields for the dictionaries: https://github.com/digital-asset/daml/blob/ac4fef2d44541687dfdba140cecf91519391e429/compiler/damlc/daml-preprocessor/src/DA/Daml/Preprocessor.hs#L223\r\nI really don't remember why we support this. But it makes zero sense to me. I don't see any reason why you would want to stuff the dictionary into the record rather than inject it whenever you call a typeclass method given that the `a` is universally quantified and not existential. ðŸ¤”",
        "createdAt" : "2020-10-15T17:06:56Z",
        "updatedAt" : "2020-10-15T17:06:57Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fa8e137a-2fed-4287-a908-d5e643acec9e",
        "parentId" : "99bfa07d-e69d-4809-8b63-6f4a730c5b04",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Surprise! This does not work with data-dependencies. The error message I get is\r\n```\r\n  error:\r\n  parse error on input â€˜$â€™\r\n  Perhaps you intended to use TemplateHaskell\r\nFailed to compile interface for data-dependency: foo-0.0.1\r\n```\r\nTo me, this looks like we're trying to put an identifier starting with a dollar symbol somewhere in the DAML file we're using to reconstruct the interface. Given that this feature is gated by either `ExistentialQuantification` or `GADTs`, which will both cause warnings about incompatibility with data-dependencies in the next SDK, I suggest we do exactly nothing about this. cc @sofiafaro-da",
        "createdAt" : "2020-10-15T17:41:23Z",
        "updatedAt" : "2020-10-15T17:41:23Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e3f23b1d5318f31cad2e008d6d135042c951a898",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +2,6 @@-- All rights reserved.\n\n{-# LANGUAGE ExistentialQuantification #-}\n-- @WARN Modules compiled with the ExistentialQuantification language extension might not work properly with data-dependencies.\n"
  }
]