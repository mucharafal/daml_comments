[
  {
    "id" : "1b42784b-b327-44b6-bee3-b8732805d0e5",
    "prId" : 4673,
    "comments" : [
      {
        "id" : "5ad368de-d21f-4d53-87d8-fd811b0e4cbb",
        "parentId" : null,
        "author" : null,
        "body" : "I think it would be more intuitive if a raw, pure expression did not result in a type error, but instead caused a `debug` to be inserted automatically, turning it into a `Script _` expression. I think we should try to reserve \"type errors\" in the repl for non-pure expressions (e.g. tried to use Update monad instead of Script monad), or for pure expressions that have type errors in them (e.g. passed an argument of the wrong type). This is way more work than should be in this PR, though.",
        "createdAt" : "2020-02-24T16:16:46Z",
        "updatedAt" : "2020-02-24T16:46:34Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "384dc5ca-7dfa-43ca-8ed9-744480eb470e",
        "parentId" : "5ad368de-d21f-4d53-87d8-fd811b0e4cbb",
        "author" : null,
        "body" : "(As for how to implement that, we could catch type errors with \"expected Script\", add a `debug`, and try again. Maybe that's kinda messy, but I think it would make the interface more accessible.)",
        "createdAt" : "2020-02-24T16:33:37Z",
        "updatedAt" : "2020-02-24T16:46:34Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "3ab30a1d-6a49-4a46-b5f5-27b357e03f2c",
        "parentId" : "5ad368de-d21f-4d53-87d8-fd811b0e4cbb",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I fully agree that this would be a nicer UX! GHCi also prints the result if you have something of type `IO a` where `a` is an instance of `Show` (and not `()) which would be nice to have. It also has some magic defaulting to `IO` which makes things like `pure 1` work automagically (that’s the main reason why I currently have the type annotation to `Script _`. Not sure how much more clever that is than typechecking twice and if it’s possible to adapt this for our usecase.",
        "createdAt" : "2020-02-24T16:41:47Z",
        "updatedAt" : "2020-02-24T16:46:34Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "524a66b6c50a462424e5d97ecc4ca5c53392d516",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +76,80 @@                  ]\n            , testInteraction' \"type error\"\n                  [ input \"1\"\n                  -- TODO Make this less noisy\n                  , matchOutput \"^File:.*$\""
  }
]