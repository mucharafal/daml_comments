[
  {
    "id" : "836ff312-4aee-4839-bb47-a823e4c95588",
    "prId" : 6853,
    "comments" : [
      {
        "id" : "61e03527-abf6-42a1-9932-2be9a2caff13",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Should those stay non-silent or is this a debug left-over?",
        "createdAt" : "2020-07-24T13:45:24Z",
        "updatedAt" : "2020-07-24T14:03:42Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2183e558-39d7-4e05-a72f-1d4e67f01365",
        "parentId" : "61e03527-abf6-42a1-9932-2be9a2caff13",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "good catch! fixed",
        "createdAt" : "2020-07-24T13:47:40Z",
        "updatedAt" : "2020-07-24T14:03:42Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a446b203c14398784ec7087ee64586e76c84c2cf",
    "line" : null,
    "diffHunk" : "@@ -148,7 +149,7 @@ tests damlc repl = testGroup \"Incremental builds\"\n               createDirectoryIfMissing True (takeDirectory $ dir </> file)\n               writeFileUTF8 (dir </> file) content\n           let dar = dir </> \"out.dar\"\n-          callProcessSilent damlc [\"build\", \"--project-root\", dir, \"-o\", dar, \"--incremental=yes\"]"
  },
  {
    "id" : "95672e67-1fec-4aee-9174-64cf1c73ee37",
    "prId" : 5323,
    "comments" : [
      {
        "id" : "6adb4e1e-cebe-4ffc-a911-94185b650582",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I think it would make more sense to just have `callProcessSilentError` and not expose `callProcessSilent'`.",
        "createdAt" : "2020-04-01T10:57:10Z",
        "updatedAt" : "2020-04-01T11:02:41Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "264d14d4-fc41-45e9-8cd7-a0fdad68e5be",
        "parentId" : "6adb4e1e-cebe-4ffc-a911-94185b650582",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Ok. I shall take care of it. Stand by.",
        "createdAt" : "2020-04-01T10:57:47Z",
        "updatedAt" : "2020-04-01T11:02:41Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "33f2d1a9-5395-492e-a794-4e5e89613703",
        "parentId" : "6adb4e1e-cebe-4ffc-a911-94185b650582",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "@cocreature (very exellent),\r\n![done](https://user-images.githubusercontent.com/1500167/78130173-c865ab80-73e6-11ea-835d-4ca607e820ac.jpg)\r\n",
        "createdAt" : "2020-04-01T11:02:59Z",
        "updatedAt" : "2020-04-01T11:02:59Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "910d8cde2a20dfa2ec955c1f660b07062bec4b51",
    "line" : null,
    "diffHunk" : "@@ -149,42 +148,30 @@ tests damlc repl = testGroup \"Incremental builds\"\n               createDirectoryIfMissing True (takeDirectory $ dir </> file)\n               writeFileUTF8 (dir </> file) content\n           let dar = dir </> \"out.dar\"\n-          callProcessSilent (ShouldSucceed True) damlc [\"build\", \"--project-root\", dir, \"-o\", dar, \"--incremental=yes\"]\n-          callProcessSilent (ShouldSucceed True) repl [\"testAll\", dar]\n+          callProcessSilent damlc [\"build\", \"--project-root\", dir, \"-o\", dar, \"--incremental=yes\"]\n+          callProcessSilent repl [\"testAll\", dar]\n           dalfFiles <- getDalfFiles $ dir </> \".daml/build\"\n           dalfModTimes <- for dalfFiles $ \\f -> do\n               modTime <- getModificationTime f\n               pure (f, modTime)\n           for_ modification $ \\(file, content) -> do\n               createDirectoryIfMissing True (takeDirectory $ dir </> file)\n               writeFileUTF8 (dir </> file) content\n-          callProcessSilent (ShouldSucceed True) damlc [\"build\", \"--project-root\", dir, \"-o\", dar, \"--incremental=yes\"]\n+          callProcessSilent damlc [\"build\", \"--project-root\", dir, \"-o\", dar, \"--incremental=yes\"]\n           rebuilds <- forMaybeM dalfModTimes $ \\(f, oldModTime) -> do\n               newModTime <- getModificationTime f\n               pure $ if newModTime == oldModTime\n                   then Nothing\n                   else Just (makeRelative (dir </> \".daml/build\") f -<.> \".daml\")\n           assertEqual \"Expected rebuilds\" (Set.fromList $ map normalise expectedRebuilds) (Set.fromList $ map normalise rebuilds)\n-          callProcessSilent (ShouldSucceed True) repl [\"validate\", dar]\n-          callProcessSilent shouldSucceed repl [\"testAll\", dar]\n+          callProcessSilent repl [\"validate\", dar]\n+          callProcessSilent' shouldSucceed repl [\"testAll\", dar]"
  }
]