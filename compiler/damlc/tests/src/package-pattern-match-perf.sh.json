[
  {
    "id" : "3350c070-d93d-4173-8360-e7fb5fe6cfa4",
    "prId" : 6101,
    "comments" : [
      {
        "id" : "b39e37f8-b37d-4e7a-9111-c396df89f867",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "For other reviewers: We’ve discussed this and this should be fine. The bound was pretty tight and 150M isn’t that unreasonable for this test.",
        "createdAt" : "2020-06-17T13:09:55Z",
        "updatedAt" : "2020-06-18T13:06:33Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f6e65688b4d24eb95403a47fa037c0377875f13e",
    "line" : 5,
    "diffHunk" : "@@ -28,4 +28,4 @@ $DAMLC build --project-root $DIR/dep\n # does not come with larger memomry or stack usage.  However, the slow\n # down is so big that this times out the 300s Bazel timeout whereas\n # the fixed version runs in about 30s.\n-$DAMLC build --project-root $DIR/main +RTS -s -M100M -K1M -N1\n+$DAMLC build --project-root $DIR/main +RTS -s -M150M -K1M -N1"
  }
]