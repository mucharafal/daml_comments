[
  {
    "id" : "f8501c4d-aa5e-4a73-aada-839fbb262bde",
    "prId" : 2203,
    "comments" : [
      {
        "id" : "0c34b353-0550-4820-9549-e0698fa1d252",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n-- | Prepends a single space to the front of the string.\r\n```",
        "createdAt" : "2019-07-17T14:44:40Z",
        "updatedAt" : "2019-07-17T15:41:35Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2aebf000215a856fb6744cfa41948bb17074da55",
    "line" : null,
    "diffHunk" : "@@ -77,29 +77,34 @@ class  Show a  where\n \n shows x = showsPrec (I# 0#) x\n \n+-- hiding because the function signatures aren't even showing up in the docs.\n+-- | HIDE\n showList__ : (a -> ShowS) ->  [a] -> ShowS\n showList__ _     []     s = \"[]\" ++ s\n showList__ showx (x::xs) s = \"[\" ++ showx x (showl showx xs s)\n \n+-- | HIDE\n showl : (a -> ShowS) -> [a] -> ShowS\n showl showx []      s = \"]\" ++ s\n showl showx (y::ys) s = \",\" ++ showx y (showl showx ys s)\n \n \n--- | utility function that surrounds the inner show function with\n+-- | Utility function that surrounds the inner show function with\n -- parentheses when the 'Bool' parameter is 'True'.\n showParen       : Bool -> ShowS -> ShowS\n showParen b p   =  if b then showString \"(\" . p . showString \")\" else p\n \n \n--- | utility function converting a 'String' to a show function that\n+-- | Utility function converting a 'String' to a show function that\n -- simply prepends the string unchanged.\n showString      : Text -> ShowS\n showString = (++)\n \n+-- | Using showString, prepends a space to the front of the string."
  },
  {
    "id" : "e12221cf-c827-412d-9de5-72a3dd1a301a",
    "prId" : 2203,
    "comments" : [
      {
        "id" : "f171607c-cd23-4772-939d-5760cf8c4178",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n-- | Prepends a comma and a single space to the front of the string.\r\n```",
        "createdAt" : "2019-07-17T14:44:56Z",
        "updatedAt" : "2019-07-17T15:41:35Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2aebf000215a856fb6744cfa41948bb17074da55",
    "line" : null,
    "diffHunk" : "@@ -77,29 +77,34 @@ class  Show a  where\n \n shows x = showsPrec (I# 0#) x\n \n+-- hiding because the function signatures aren't even showing up in the docs.\n+-- | HIDE\n showList__ : (a -> ShowS) ->  [a] -> ShowS\n showList__ _     []     s = \"[]\" ++ s\n showList__ showx (x::xs) s = \"[\" ++ showx x (showl showx xs s)\n \n+-- | HIDE\n showl : (a -> ShowS) -> [a] -> ShowS\n showl showx []      s = \"]\" ++ s\n showl showx (y::ys) s = \",\" ++ showx y (showl showx ys s)\n \n \n--- | utility function that surrounds the inner show function with\n+-- | Utility function that surrounds the inner show function with\n -- parentheses when the 'Bool' parameter is 'True'.\n showParen       : Bool -> ShowS -> ShowS\n showParen b p   =  if b then showString \"(\" . p . showString \")\" else p\n \n \n--- | utility function converting a 'String' to a show function that\n+-- | Utility function converting a 'String' to a show function that\n -- simply prepends the string unchanged.\n showString      : Text -> ShowS\n showString = (++)\n \n+-- | Using showString, prepends a space to the front of the string.\n showSpace : ShowS\n showSpace = showString \" \"\n \n+-- | Using showString, prepends a comma and a space to the front of the string."
  }
]