[
  {
    "id" : "b5656e9f-c3ef-4427-92d2-27bc6dc5fe1c",
    "prId" : 3667,
    "comments" : [
      {
        "id" : "46d217ef-0822-4f18-a464-d486222ea6fc",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Help, I want to unsee this!",
        "createdAt" : "2019-11-28T16:14:49Z",
        "updatedAt" : "2019-11-28T16:35:51Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5e7e947c49297bdbff942b9e807224650ca4f775",
    "line" : 314,
    "diffHunk" : "@@ -438,3 +438,323 @@ instance NumericScale 35 where numericScale _ = 35; numericScalePrivate _ = ()\n instance NumericScale 36 where numericScale _ = 36; numericScalePrivate _ = ()\n instance NumericScale 37 where numericScale _ = 37; numericScalePrivate _ = ()\n #endif\n+\n+\n+-- Constraint tuples\n+\n+class ()\n+class (c1, c2)     => (c1, c2)\n+class (c1, c2, c3) => (c1, c2, c3)\n+class (c1, c2, c3, c4) => (c1, c2, c3, c4)\n+class (c1, c2, c3, c4, c5) => (c1, c2, c3, c4, c5)\n+class (c1, c2, c3, c4, c5, c6) => (c1, c2, c3, c4, c5, c6)\n+class (c1, c2, c3, c4, c5, c6, c7) => (c1, c2, c3, c4, c5, c6, c7)\n+class (c1, c2, c3, c4, c5, c6, c7, c8) => (c1, c2, c3, c4, c5, c6, c7, c8)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17,c18)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52, c53)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52, c53)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52, c53, c54)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52, c53, c54)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58,\n+       c59)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58,\n+       c59)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58,\n+       c59, c60)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58,\n+       c59, c60)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58,\n+       c59, c60, c61)\n+   => (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,\n+       c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30,\n+       c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44,\n+       c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58,\n+       c59, c60, c61)\n+class (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16,"
  },
  {
    "id" : "5fe33d28-f45c-46d7-95c5-f91cc9290515",
    "prId" : 3505,
    "comments" : [
      {
        "id" : "34ed84ba-3e59-4baf-bae5-3920279d87dd",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "We could generate this with CPP :trollface: ",
        "createdAt" : "2019-11-18T13:07:42Z",
        "updatedAt" : "2019-11-18T13:29:19Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "54eb0f86-b51b-4184-a187-4706cdce7d70",
        "parentId" : "34ed84ba-3e59-4baf-bae5-3920279d87dd",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Looks like somebody is \"growth hacking\" on his contribution stats. :wink: ",
        "createdAt" : "2019-11-18T17:41:32Z",
        "updatedAt" : "2019-11-18T17:41:38Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "eaa3dcd4f25268609b9fddf4f0510cf963f639df",
    "line" : 52,
    "diffHunk" : "@@ -365,3 +370,71 @@ False || x              =  x\n not                     : Bool -> Bool\n not True                =  False\n not False               =  True\n+\n+\n+#ifdef DAML_NUMERIC\n+\n+-- | Is this a valid scale for the `Numeric` type?\n+--\n+-- This typeclass is used to prevent the creation of Numeric values\n+-- with too large a scale. The scale controls the number of digits available\n+-- after the decimal point, and it must be between 0 and 37 inclusive.\n+--\n+-- Thus the only available instances of this typeclass are `NumericScale 0`\n+-- through `NumericScale 37`. This cannot be extended without additional\n+-- compiler and runtime support. You cannot implement a custom instance\n+-- of this typeclass.\n+--\n+-- If you have an error message in your code of the form \"No instance for\n+-- `(NumericScale n)`\", this is probably caused by having a numeric literal\n+-- whose scale cannot be inferred by the compiler. You can usually fix this\n+-- by adding a type signature to the definition, or annotating the numeric\n+-- literal directly (for example, instead of writing `3.14159` you can write\n+-- `(3.14159 : Numeric 5)`).\n+class NumericScale (n : Nat) where\n+    -- | Get the scale of a `Numeric` as an integer. For example,\n+    -- `numericScale (3.14159 : Numeric 5)` equals `5`.\n+    numericScale : proxy n -> Int\n+\n+    -- | HIDE\n+    numericScalePrivate : proxy n -> ()\n+\n+instance NumericScale 0 where numericScale _ = 0; numericScalePrivate _ = ()"
  },
  {
    "id" : "e56e28f6-43ca-4b22-988e-7e829e0c98e9",
    "prId" : 2333,
    "comments" : [
      {
        "id" : "36897403-5ff2-4caa-b9a0-8a278e67f52f",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Good call!",
        "createdAt" : "2019-07-30T12:07:22Z",
        "updatedAt" : "2019-07-30T12:07:28Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3489bd859605c1aa7ad464a4a932f88c2274a0e3",
    "line" : 14,
    "diffHunk" : "@@ -66,7 +66,7 @@ infixr 2  ||\n \n default ()              -- Double isn't available yet\n \n--- | The syntax `?x :: a` is desugared into `IP \"x\" a`\n+-- | HIDE The syntax `?x :: a` is desugared into `IP \"x\" a`"
  }
]