[
  {
    "id" : "2027144b-6061-4de5-8786-aa982652eb95",
    "prId" : 7662,
    "comments" : [
      {
        "id" : "34efa75f-1318-4ee3-ace5-4a99f3c7d35f",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "The `Ord` instance for `Extension` has been added to GHC after we forked off. Thus, I use `EnumSet` instead of a regular `Data.Set` here.",
        "createdAt" : "2020-10-15T16:37:45Z",
        "updatedAt" : "2020-10-15T17:00:53Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "594c86e7-bc89-45e9-99a3-ca60523694ba",
        "parentId" : "34efa75f-1318-4ee3-ace5-4a99f3c7d35f",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Seems reasonable although you could also just throw an orphan instance somewhere.",
        "createdAt" : "2020-10-15T16:40:19Z",
        "updatedAt" : "2020-10-15T17:00:53Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4eea60ef-28e6-42b9-af58-a6ec6b49f947",
        "parentId" : "34efa75f-1318-4ee3-ace5-4a99f3c7d35f",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "After spending so much time thinking about typeclass issues, I strongly dislike orphan instances. ðŸ˜°",
        "createdAt" : "2020-10-15T16:52:56Z",
        "updatedAt" : "2020-10-15T17:00:59Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e3f23b1d5318f31cad2e008d6d135042c951a898",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +274,278 @@\n-- | Extensions which we support with data-dependencies.\ndataDependableExtensions :: ES.EnumSet Extension\ndataDependableExtensions = ES.fromList $ xExtensionsSet ++\n  [ -- useful for beginners to learn about type inference"
  },
  {
    "id" : "904d63cc-e239-4bab-90da-d555a192d295",
    "prId" : 7318,
    "comments" : [
      {
        "id" : "1f3ab1d5-e227-437f-bd47-804bfc72bd99",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "If we put the DALF for DAML Script into the DAR for DAML Triggers, wouldn't that solve the problem as well? If so, I would prefer that approach over having this custom hook here.",
        "createdAt" : "2020-09-04T11:33:23Z",
        "updatedAt" : "2020-09-04T11:33:35Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3c313a49-05f9-4dfa-b4a6-127e06755dff",
        "parentId" : "1f3ab1d5-e227-437f-bd47-804bfc72bd99",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "No it doesnâ€™t. We need the GHC interface files.",
        "createdAt" : "2020-09-04T11:38:42Z",
        "updatedAt" : "2020-09-04T11:38:43Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "fb3ec2e69f03603a52bca3208b99778dd56cb0d6",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +471,475 @@            Nothing -> fail $ \"Cannot resolve SDK dependency '\" ++ fp ++ \"'. Use daml assistant.\"\n      | otherwise = pure fp\n    -- For `dependencies` you need to specify all transitive dependencies.\n    -- However, for the packages in the SDK that is an implementation detail\n    -- so we automagically insert `daml-script` if youâ€™ve specified `daml-trigger`."
  },
  {
    "id" : "d330e332-ae2b-4a4d-a759-9f97f5456e1d",
    "prId" : 6467,
    "comments" : [
      {
        "id" : "0a60e7dc-818d-44c8-a930-8f649f91261f",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Not sure we want to. It might cause a fair amount of noise for some projects that havenâ€™t payed attention to this so far and itâ€™s purely a stylistic thing not a bug.",
        "createdAt" : "2020-06-23T15:39:58Z",
        "updatedAt" : "2020-06-23T15:41:01Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c4765c8c-2342-4cf3-88e0-3a3c5297c9e4",
        "parentId" : "0a60e7dc-818d-44c8-a930-8f649f91261f",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Well, of course, I am biased ðŸ¤£ ",
        "createdAt" : "2020-06-23T15:42:22Z",
        "updatedAt" : "2020-06-23T15:42:22Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "91bb3eaa-d9f2-4584-92dc-46620fd5817d",
        "parentId" : "0a60e7dc-818d-44c8-a930-8f649f91261f",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I would enable it on _my_ projects but thatâ€™s different from throwing potentially thousands of warnings at our users :slightly_smiling_face: ",
        "createdAt" : "2020-06-23T15:44:07Z",
        "updatedAt" : "2020-06-23T15:59:44Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "06ccce06-1bd4-4b4d-8c7e-cab91dd5b4bc",
        "parentId" : "0a60e7dc-818d-44c8-a930-8f649f91261f",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Oh wow! We almost never agree on these sorts of things! ðŸ¤£ ",
        "createdAt" : "2020-06-23T16:01:40Z",
        "updatedAt" : "2020-06-23T16:01:41Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "567deb06e19c8c134cfcd488ee6df7d410b0a1ba",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +285,289 @@wOptsSet =\n  [ Opt_WarnUnusedImports\n-- Can enable when we are on GHC >= 8.10 (we should, after all we\n-- upstreamed it :) ).\n--  , Opt_WarnPrepositiveQualifiedModule"
  },
  {
    "id" : "7b3356e0-5458-454f-80db-f5e5d152092b",
    "prId" : 2878,
    "comments" : [
      {
        "id" : "a00dee76-203c-46dc-bdc7-ee02d63bbb59",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "What is the relationship between this and https://github.com/digital-asset/ghcide/blob/44b11667d8593ae84c48ca88e96f4f227deec096/src/Development/IDE/GHC/Util.hs#L95?",
        "createdAt" : "2019-09-11T11:22:42Z",
        "updatedAt" : "2019-09-11T14:44:31Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "62efd189-3d9b-4448-9d06-6b6e19c72bad",
        "parentId" : "a00dee76-203c-46dc-bdc7-ee02d63bbb59",
        "author" : null,
        "body" : "Ah, I didn't see that. Maybe I should try to copy those platform values and see if that is defined enough for CPP. (I don't think it will be, because CPP exposes platform info as `-D` flags.)",
        "createdAt" : "2019-09-11T11:37:57Z",
        "updatedAt" : "2019-09-11T14:44:31Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "e1569034-9bf6-4dbc-9bfc-44c0224a2733",
        "parentId" : "a00dee76-203c-46dc-bdc7-ee02d63bbb59",
        "author" : null,
        "body" : "The `fakeDynFlags` platform settings does not work for `CPP`! It's missing required fields.\r\n\r\nI changed `platformUnregisterised` to `True` to match `fakeDynflags` though. Thanks :-)",
        "createdAt" : "2019-09-11T14:46:12Z",
        "updatedAt" : "2019-09-11T14:46:12Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "4b4ee9add38694378a528445e0e9b48ef1ab7dec",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +259,263 @@    -- for everyone even if they don't use CPP.\n    addPlatformFlags = alterSettings $ \\s -> s\n        { sTargetPlatform = P.Platform\n            { platformArch = P.ArchUnknown\n            , platformOS = P.OSUnknown"
  },
  {
    "id" : "ff1d2ac0-729a-487a-8711-791a299dbc82",
    "prId" : 2871,
    "comments" : [
      {
        "id" : "75f5471f-482a-4f03-8134-2b10bf09b9d5",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : ":ghost:",
        "createdAt" : "2019-09-11T08:15:49Z",
        "updatedAt" : "2019-09-11T08:58:14Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "40382b239dcd82ff6195ff55027641feacaa396f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +150,154 @@    -- type classes\n  , MultiParamTypeClasses, FlexibleContexts, FlexibleInstances, GeneralizedNewtypeDeriving, TypeSynonymInstances\n  , DefaultSignatures, StandaloneDeriving, FunctionalDependencies, DeriveFunctor, UndecidableSuperClasses\n    -- let generalization\n  , MonoLocalBinds"
  }
]