[
  {
    "id" : "a665e667-8927-4886-b423-ec26ed2d1f14",
    "prId" : 2629,
    "comments" : [
      {
        "id" : "9f66f5da-d60f-4044-8a7f-ed20d4791228",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Bike shedding alarm: should this be called something like `splitInfix`?",
        "createdAt" : "2019-08-22T09:38:51Z",
        "updatedAt" : "2019-08-22T12:39:39Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "40b67730-4f1d-493f-b310-3a257d8c48ad",
        "parentId" : "9f66f5da-d60f-4044-8a7f-ed20d4791228",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I prefer `stripInfix` since it matches `stripPrefix` and `stripSuffix` (and thatâ€™s also what the `extra` lib in Haskell land calls this).",
        "createdAt" : "2019-08-22T09:42:49Z",
        "updatedAt" : "2019-08-22T12:39:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6d57a126-5570-4720-9b28-0579d618d672",
        "parentId" : "9f66f5da-d60f-4044-8a7f-ed20d4791228",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Sounds reasonable. Let's go with `stripInfix` then.",
        "createdAt" : "2019-08-22T09:44:24Z",
        "updatedAt" : "2019-08-22T12:39:39Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7103266c3942f479ba4739f42007eef9dd83d308",
    "line" : 22,
    "diffHunk" : "@@ -255,6 +256,22 @@ stripPrefix _ _ = None\n stripSuffix : Eq a => [a] -> [a] -> Optional [a]\n stripSuffix a b = reverse <$> stripPrefix (reverse a) (reverse b)\n \n+-- | Return the string before and after the search string or `None`\n+-- if the search string is not found.\n+--\n+-- ```\n+-- >>> stripInfix [0,0] [1,0,0,2,0,0,3]\n+-- Some ([1], [2,0,0,3])\n+--\n+-- >>> stripInfix [0,0] [1,2,0,4,5]\n+-- None\n+-- ```\n+stripInfix : Eq a => [a] -> [a] -> Optional ([a], [a])"
  }
]