[
  {
    "id" : "2de22d0d-68fb-4894-96e4-e88da6d810c5",
    "prId" : 3318,
    "comments" : [
      {
        "id" : "d3b2b829-1703-403e-96e6-43b746213c1a",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "You changed the error message here from `=/=` to `/=` which broke the doctests that assert on the expected output.",
        "createdAt" : "2019-11-04T08:34:02Z",
        "updatedAt" : "2019-11-04T21:55:11Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d7e7bda69b4a9f2403778e5e7dfd6b55ec9a877e",
    "line" : 27,
    "diffHunk" : "@@ -15,19 +15,27 @@ infix 4 =/=\n \n -- | Check two values for equality. If they're not equal,\n -- fail with a message.\n-(===) : (CanAbort m, Show a, Eq a) => a -> a -> m ()\n--- NOTE(MH): We do not define `(===)` in terms of `assertMsg` to avoid\n+assertEq : (CanAbort m, Show a, Eq a) => a -> a -> m ()\n+-- NOTE(MH): We do not define `assertEq` in terms of `assertMsg` to avoid\n -- constructing the error message in the successful case.\n-(===) x y\n+assertEq x y\n   | x == y = return ()\n-  | otherwise = abort (\"Failure, expected \" <> show x <> \" === \" <> show y)\n+  | otherwise = abort (\"Failure, expected \" <> show x <> \" == \" <> show y)\n+\n+-- | Infix version of `assertEq`.\n+(===) : (CanAbort m, Show a, Eq a) => a -> a -> m ()\n+(===) = assertEq\n \n -- | Check two values for inequality. If they're equal,\n -- fail with a message.\n-(=/=) : (CanAbort m, Show a, Eq a) => a -> a -> m ()\n-(=/=) x y\n+assertNotEq : (CanAbort m, Show a, Eq a) => a -> a -> m ()\n+assertNotEq x y\n   | x /= y = return ()\n-  | otherwise = abort (\"Failure, expected \" <> show x <> \" =/= \" <> show y)\n+  | otherwise = abort (\"Failure, expected \" <> show x <> \" /= \" <> show y)"
  },
  {
    "id" : "cca2ec29-827e-460b-ac74-3a36ad708638",
    "prId" : 2203,
    "comments" : [
      {
        "id" : "ed5e0d7b-61c5-4988-83bb-16029407b509",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n-- | Check two values for equality. If they're not equal,\r\n```",
        "createdAt" : "2019-07-17T14:45:33Z",
        "updatedAt" : "2019-07-17T15:41:35Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2aebf000215a856fb6744cfa41948bb17074da55",
    "line" : null,
    "diffHunk" : "@@ -13,24 +12,26 @@ module DA.Assert\n \n infix 4 ===\n \n--- | Check two values for equivalence and fail with a message if they\n--- are not.\n+-- | Check two values for equivalence. If they're not equivalent,"
  }
]