[
  {
    "id" : "13f24913-501f-4c24-a2a2-b309d23a81b9",
    "prId" : 7252,
    "comments" : [
      {
        "id" : "8c2d290b-93a3-484f-bdf4-c6a06e973157",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Probably not the right place to comment on this but I would like to also display source locations on failed submits when running against an actual ledger. Definitely something for a separate PR not this one.",
        "createdAt" : "2020-08-27T15:44:44Z",
        "updatedAt" : "2020-08-28T11:39:11Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5cd8cd54f886d4b5d729f46c48c70c22c49f3082",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +214,218 @@  --\n  -- If the transaction fails, `submit` also fails.\n  submit : HasCallStack => Party -> cmds a -> m a\n\n  -- | `submitMustFail p cmds` submits the commands `cmds` as a single transaction"
  },
  {
    "id" : "7c1db8f0-8ee7-4c19-a2a7-24ed787f7f3a",
    "prId" : 4233,
    "comments" : [
      {
        "id" : "b6d9c58c-b187-4555-8eb8-4706034fa57a",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : ":+1:",
        "createdAt" : "2020-01-28T08:21:03Z",
        "updatedAt" : "2020-01-28T10:56:40Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7f33fdace1c0823e750c7ff0b6ad930c0031ffd2",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +180,184 @@    abort = fail\n\ninstance CanAbort (Either Text) where\n    abort = fail\n"
  },
  {
    "id" : "26617774-8ae5-4280-8e88-0693e5100116",
    "prId" : 3816,
    "comments" : [
      {
        "id" : "2a46565d-c429-4dbe-88de-b4073555fd30",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Why does `AnyTemplate` not contain any form of type representation in contrast to the other `Any*` types?",
        "createdAt" : "2019-12-11T13:49:38Z",
        "updatedAt" : "2019-12-11T14:20:46Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ff7f74f3-957b-4e8f-92a1-92535d292f1f",
        "parentId" : "2a46565d-c429-4dbe-88de-b4073555fd30",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Because there is no need for it. The reason why we have it in `AnyChoice` is because we want `toAnyChoice @T1 Archive` to be different from `toAnyChoice @T2 Archive`. For the template that type parameter is represented by the template itself.",
        "createdAt" : "2019-12-11T13:59:49Z",
        "updatedAt" : "2019-12-11T14:20:46Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7fae38125bd17aedd898f8fa5b05a8313e62b64e",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +255,259 @@\ninstance Eq AnyTemplate where\n  AnyTemplate a == AnyTemplate b = eqAny a b\n\ninstance Eq AnyChoice where"
  },
  {
    "id" : "d6b7285a-e351-4764-bab9-60e743373a9c",
    "prId" : 3816,
    "comments" : [
      {
        "id" : "3bf8f1a6-0d2e-4b7d-a0d2-59cc9993a8bd",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n    aRep == bRep && eqAny aAny bAny\r\n```\r\nSomehow comparing the type reps after the values _feels_ wrong to me. Same below.",
        "createdAt" : "2019-12-11T13:51:30Z",
        "updatedAt" : "2019-12-11T14:20:46Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9b699718-c02b-4058-b50c-11bb0a77a85b",
        "parentId" : "3bf8f1a6-0d2e-4b7d-a0d2-59cc9993a8bd",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I disagree, this is not the type of the choice but the type of the template the choice belongs to. Having the same choice type on two different templates is an edge case so it make sense to test for that only if the other test isn’t conclusive.",
        "createdAt" : "2019-12-11T14:00:48Z",
        "updatedAt" : "2019-12-11T14:20:46Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7fae38125bd17aedd898f8fa5b05a8313e62b64e",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +259,263 @@instance Eq AnyChoice where\n  AnyChoice aAny aRep == AnyChoice bAny bRep =\n    eqAny aAny bAny && aRep == bRep\n\ninstance Eq AnyContractKey where"
  },
  {
    "id" : "5fe6e884-9e47-45a1-b82b-9f37ac4a25c3",
    "prId" : 2973,
    "comments" : [
      {
        "id" : "0278156a-2594-4e88-844a-767decdb6281",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Let's follow the common pattern in this module:\r\n```suggestion\r\ndata AnyTemplate =\r\n    -- | HIDE\r\n    AnyTemplate Opaque\r\n```",
        "createdAt" : "2019-09-23T16:44:25Z",
        "updatedAt" : "2019-09-23T16:44:43Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "311c9cdd-b0e2-4a73-88a8-df8bef45c41d",
        "parentId" : "0278156a-2594-4e88-844a-767decdb6281",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "What’s the point of adding a field to this constructor?",
        "createdAt" : "2019-09-23T16:54:14Z",
        "updatedAt" : "2019-09-23T16:54:14Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "435768f4-8683-4e83-9e7d-f017cb928232",
        "parentId" : "0278156a-2594-4e88-844a-767decdb6281",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "ah nvm, got it.",
        "createdAt" : "2019-09-23T16:56:04Z",
        "updatedAt" : "2019-09-23T16:56:04Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f08a36ba-ccaa-4877-9ed0-a18b62ddf781",
        "parentId" : "0278156a-2594-4e88-844a-767decdb6281",
        "author" : null,
        "body" : "Semi-related, we shouldn't need the HIDEs in this module any more since the constructors are not exported, so damldocs now hides them automatically.",
        "createdAt" : "2019-09-23T17:06:25Z",
        "updatedAt" : "2019-09-23T17:06:25Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "256118b7f2894aaab5f49184e0422475cb64d3dd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +208,212 @@\n-- | Existential template type that can wrap an arbitrary template.\ndata AnyTemplate = AnyTemplate\n-- We need the constructor to avoid GHC warning about impossible pattern matches."
  }
]