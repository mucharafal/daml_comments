[
  {
    "id" : "06cd1d54-c9ca-46cf-b8fe-e38d7e7780c7",
    "prId" : 6832,
    "comments" : [
      {
        "id" : "22e29a58-2b0f-4004-a634-ed7a6528f9f0",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Welcome to another episode of \"Why strict languages are tricky (at least for the Haskell minded)\":\r\n\r\nI'm a bit worried about unconditionally computing the error message even if we don't need it. Some functions like `toList` call `keyFromText` on all keys of a map, which I'm tempted to call a \"hot loop\". Since we only need to change three instances of `keyFromText`, I'm inclined to manually inline `fromSomeNote` everywhere, like so: \r\n```suggestion\r\n    case partyFromText t of\r\n      None -> keyFromTextNote \"Party\" t\r\n      Some p -> p\r\n```",
        "createdAt" : "2020-07-22T21:49:44Z",
        "updatedAt" : "2020-07-22T22:50:42Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "cf009c86-94cb-42ce-8034-7af004721204",
        "parentId" : "22e29a58-2b0f-4004-a634-ed7a6528f9f0",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2020-07-22T23:04:05Z",
        "updatedAt" : "2020-07-22T23:04:05Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d52f3899-baa5-4f4d-a651-db68452a8109",
        "parentId" : "22e29a58-2b0f-4004-a634-ed7a6528f9f0",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Thank you.",
        "createdAt" : "2020-07-23T08:07:55Z",
        "updatedAt" : "2020-07-23T08:07:55Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "fd32eac06d2dcd464b3cdf21017ee6e8b23eca4a",
    "line" : null,
    "diffHunk" : "@@ -55,17 +55,30 @@ instance MapKey Text where\n   keyToText x = x\n   keyFromText x = x\n \n+keyFromTextNote : Text -> Text -> Text\n+keyFromTextNote target t =\n+  \"keyFromText: could not parse \" <> show t <> \" as '\" <> target <> \"'\"\n+\n instance MapKey Party where\n   keyToText = partyToText\n-  keyFromText = fromSome . partyFromText\n+  keyFromText t =\n+    fromSomeNote\n+      (keyFromTextNote \"Party\" t)\n+      (partyFromText t)"
  }
]