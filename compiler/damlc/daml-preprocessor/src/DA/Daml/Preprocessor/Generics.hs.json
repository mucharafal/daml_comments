[
  {
    "id" : "f5512720-8f98-4486-9157-0e677cad3923",
    "prId" : 3342,
    "comments" : [
      {
        "id" : "08d0b891-9f5f-441a-b4e0-5add6ad6134c",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "What changed here to require this now but not before?",
        "createdAt" : "2019-11-05T14:32:51Z",
        "updatedAt" : "2019-11-05T18:46:21Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8ac627ad-35c1-412d-876a-518eb03f21a4",
        "parentId" : "08d0b891-9f5f-441a-b4e0-5add6ad6134c",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "we now fully qualify everything in the generated generics instances. but this will now also print out qualified names in the pattern, which isn't allowed.",
        "createdAt" : "2019-11-05T15:28:48Z",
        "updatedAt" : "2019-11-05T18:46:21Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "272818c92a48fbaf19707d743912199fcaf709f7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +156,160 @@_unComp1_RDR = varQual_RDR gHC_GENERICS (fsLit \"unComp1\")\n\nfrom_RDR  = mkRdrUnqual $ mkOccName varName \"from\" -- from/to appears as pattern and can not be qualified.\n_from1_RDR = varQual_RDR gHC_GENERICS (fsLit \"from1\")\nto_RDR    = mkRdrUnqual $ mkOccName varName \"to\" -- from/to appears as pattern and can not be qualified."
  }
]