[
  {
    "id" : "3b325bf0-6877-4fab-8c4d-7ed0163f439d",
    "prId" : 2351,
    "comments" : [
      {
        "id" : "d00bc913-ffb6-419b-8303-5be820438d8b",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Oh I guess it might be because `length \"Field\" = 5`? In that case, maybe just use `maximum $ length \"Field\" : length \"Type\" : …`.",
        "createdAt" : "2019-07-31T11:17:07Z",
        "updatedAt" : "2019-07-31T16:47:11Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ff6f86c9-9669-4ab4-9ab4-7a26f5a57e8d",
        "parentId" : "d00bc913-ffb6-419b-8303-5be820438d8b",
        "author" : null,
        "body" : "Yes, that's right!",
        "createdAt" : "2019-07-31T12:08:15Z",
        "updatedAt" : "2019-07-31T16:47:11Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "43cf20febd7fb63e1a575296280a2c3177148144",
    "line" : 327,
    "diffHunk" : "@@ -1,1 +112,116 @@        [ T.concat\n            [ \"| \"\n            , adjust fLen \"Field\"\n            , \" | \"\n            , adjust fLen \"Type\""
  },
  {
    "id" : "075dfa43-077a-47a2-b39e-b5d26315e572",
    "prId" : 2351,
    "comments" : [
      {
        "id" : "136700de-fb08-4e00-8b64-01c41d633ae5",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Is there any reason why you’re using `mconcatMap` instead of `foldMap` which is even in `base`? This PR does not introduce this but I would generally prefer `foldMap` since I had to check if `mconcatMap` actually does what I thought since I usually don’t use it.",
        "createdAt" : "2019-07-31T11:28:16Z",
        "updatedAt" : "2019-07-31T16:47:11Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b8f7ac6e-7d22-4ebf-bf85-5e6afb5c113b",
        "parentId" : "136700de-fb08-4e00-8b64-01c41d633ae5",
        "author" : null,
        "body" : "I must be weird because I find `mconcatMap` more intuitive as a generalized  `concatMap`. It also has a more specific type than `foldMap`.",
        "createdAt" : "2019-07-31T12:13:12Z",
        "updatedAt" : "2019-07-31T16:47:11Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "43cf20febd7fb63e1a575296280a2c3177148144",
    "line" : 238,
    "diffHunk" : "@@ -1,1 +45,49 @@renderMdText :: RenderEnv -> RenderText -> T.Text\nrenderMdText env = \\case\n    RenderConcat ts -> mconcatMap (renderMdText env) ts\n    RenderPlain text -> escapeMd text\n    RenderStrong text -> T.concat [\"**\", escapeMd text, \"**\"]"
  },
  {
    "id" : "fd1deb6f-2ed5-455a-9f62-f1d78763bd89",
    "prId" : 2269,
    "comments" : [
      {
        "id" : "484e27a8-46e0-4e19-a8cf-374b4c03df6c",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "When do we expect `fct_type` to be `Nothing`? For partial type signatures?",
        "createdAt" : "2019-07-24T06:51:03Z",
        "updatedAt" : "2019-07-24T06:53:50Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2c71ee00-ae4f-4747-bfb5-a0bc6d119966",
        "parentId" : "484e27a8-46e0-4e19-a8cf-374b4c03df6c",
        "author" : null,
        "body" : "Whenever we can't find the function's type info based on the name for some reason. Actually the only time this happens in the standard library is with the GHC.Enum functions (`eftInt`, `efdInt`, etc) and I'm not sure *why*. ",
        "createdAt" : "2019-07-24T08:03:17Z",
        "updatedAt" : "2019-07-24T08:03:17Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "f4fd1348-32a1-49a4-a7ef-8a7d1d4de729",
        "parentId" : "484e27a8-46e0-4e19-a8cf-374b4c03df6c",
        "author" : null,
        "body" : "On further investigation, it seems this only happens when functions are not exported. (Does GHC change the names of non-exported functions, or get rid of the definitions altogether in some cases?) Since we shouldn't be showing these in the docs anyway, I think it'll be easy to make the type a mandatory part of the FunctionDocs.",
        "createdAt" : "2019-07-24T08:17:22Z",
        "updatedAt" : "2019-07-24T08:17:22Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "4ff143ad6ff625aa8af6139a6c99374609e55f00",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +215,219 @@        [ \"&nbsp; : \"\n        , maybe \"\" ((<> \" => \") . type2md env) fct_context\n        , maybe \"\\\\_\"  (type2md env) fct_type\n        ]\n    , renderDocText fct_descr"
  },
  {
    "id" : "2edc15e1-fb47-4f85-a804-131cfc004e9c",
    "prId" : 2269,
    "comments" : [
      {
        "id" : "1695d7cf-0d54-47ac-b8d4-a61945aa900e",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "What is the rational for having a `&nbsp;` followed by a regular space? This seems odd to me.",
        "createdAt" : "2019-07-24T08:45:26Z",
        "updatedAt" : "2019-07-24T08:47:14Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "36746ab9-1f5a-4392-af41-5ed2d5a97fdf",
        "parentId" : "1695d7cf-0d54-47ac-b8d4-a61945aa900e",
        "author" : null,
        "body" : "Markdown would interpret two spaces in a weird way, and `&nbsp; ` is enough to get HTML to accept this as a significant whitespace (although `&nbsp;&nbsp;` would work just as well).\r\n\r\n(But in my new PR I get rid of this anyway and start using blockquotes everywhere.)",
        "createdAt" : "2019-07-24T08:52:12Z",
        "updatedAt" : "2019-07-24T08:52:12Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "582f86de-5b6e-44ab-a72b-99b77cacbcc5",
        "parentId" : "1695d7cf-0d54-47ac-b8d4-a61945aa900e",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "That makes sense. Thanks for the explanation.",
        "createdAt" : "2019-07-24T08:53:33Z",
        "updatedAt" : "2019-07-24T08:53:41Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4ff143ad6ff625aa8af6139a6c99374609e55f00",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +213,217 @@        [ \"**\", escapeMd $ unFieldname fct_name, \"**  \" ]\n    , renderLineDep $ \\env -> T.concat\n        [ \"&nbsp; : \"\n        , maybe \"\" ((<> \" => \") . type2md env) fct_context\n        , maybe \"\\\\_\"  (type2md env) fct_type"
  },
  {
    "id" : "d789e12f-e757-4970-a52c-695ad75702a8",
    "prId" : 2259,
    "comments" : [
      {
        "id" : "18baf0a8-7160-4177-9a3e-fba8e8087d11",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Maybe add `braces` and `parens` helpers?",
        "createdAt" : "2019-07-23T11:03:34Z",
        "updatedAt" : "2019-07-23T16:24:56Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1c6ffbd7-399d-4cd0-93f3-b72a4f6aa193",
        "parentId" : "18baf0a8-7160-4177-9a3e-fba8e8087d11",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Or a `link` helper.",
        "createdAt" : "2019-07-23T12:23:15Z",
        "updatedAt" : "2019-07-23T16:24:56Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2ed4fda9eea075172b450f1f9bef15880ed2a82c",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +201,205 @@            Nothing -> escapeMd $ unTypename n\n            Just anchorLoc -> T.concat\n                [ \"[\"\n                , escapeMd $ unTypename n\n                , \"](\""
  },
  {
    "id" : "68cb00fc-2fab-4e00-acc3-f1881bc0996f",
    "prId" : 2240,
    "comments" : [
      {
        "id" : "1c24cbef-1250-4c4a-bd7d-d745ed4f27e4",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Might be a good idea to add a `bold x = \"**\" <> x <> \"**\"` helper.",
        "createdAt" : "2019-07-22T11:25:46Z",
        "updatedAt" : "2019-07-22T12:09:30Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc5011d7625b29e31ecc1842db80d8f6c47d650",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +93,97 @@renderTemplateInstanceDocAsMarkdown :: TemplateInstanceDoc -> RenderOut\nrenderTemplateInstanceDocAsMarkdown TemplateInstanceDoc{..} = mconcat\n    [ renderAnchorInfix \"**template instance \" ti_anchor $\n        escapeMd (unTypename ti_name) <> \"**  \"\n    , renderLineDep $ \\env -> T.concat [\"&nbsp; = \", type2md env ti_rhs]"
  },
  {
    "id" : "288b3b2e-e71a-4038-a4ea-ae665dc0ef89",
    "prId" : 2156,
    "comments" : [
      {
        "id" : "6836d250-c729-4396-ad24-7731c5c06550",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "That explanation sounds like we're rendering a paragraph. Is that correct? If so, we should reflect it in the name.",
        "createdAt" : "2019-07-16T11:43:38Z",
        "updatedAt" : "2019-07-16T11:54:08Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "016bc982aaab1c6f6d2c1e7da4db8600400ec927",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +31,35 @@\n-- | Render doc text. If Nothing, renders an empty line. If Just, renders\n-- doc text block between two empty lines.\nrenderDocText :: Maybe DocText -> RenderOut\nrenderDocText Nothing = renderLine \"\""
  },
  {
    "id" : "a3ca653f-446d-4e12-93cc-632d3534a30e",
    "prId" : 2156,
    "comments" : [
      {
        "id" : "1d3afafe-e561-4ee6-aad8-5dc5062d8b42",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I'm not the biggest fan of abbreviations when the actual name is not much longer. It makes it harder for new people to dive into the code base. Nothing to change now but probably worth consider in the future.",
        "createdAt" : "2019-07-16T11:46:05Z",
        "updatedAt" : "2019-07-16T11:54:08Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "016bc982aaab1c6f6d2c1e7da4db8600400ec927",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +62,66 @@\n\ntmpl2md :: TemplateDoc -> RenderOut\ntmpl2md TemplateDoc{..} = mconcat\n    [ renderAnchorInfix \"### \" td_anchor (\"Template \" <> escapeMd (unTypename td_name))"
  },
  {
    "id" : "876b779a-d2a6-45a1-b9c7-b8691922609d",
    "prId" : 2156,
    "comments" : [
      {
        "id" : "950f389e-f8c8-4e0f-8446-12f412c7358e",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Maybe rename `i` to `prec` to make it's meaning clear.",
        "createdAt" : "2019-07-16T11:48:45Z",
        "updatedAt" : "2019-07-16T11:54:08Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "016bc982aaab1c6f6d2c1e7da4db8600400ec927",
    "line" : 272,
    "diffHunk" : "@@ -1,1 +173,177 @@    f :: Int -> Type -> T.Text\n    f _ (TypeApp a n []) = link a n\n    f i (TypeApp a n as) = (if i >= 2 then inParens else id) $\n        T.unwords (link a n : map (f 2) as)\n    f i (TypeFun ts) = (if i >= 1 then inParens else id) $"
  }
]