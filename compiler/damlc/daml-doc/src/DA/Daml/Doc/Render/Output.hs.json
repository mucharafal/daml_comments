[
  {
    "id" : "85aa97c7-a7f5-45de-a9e1-cdc7e3dbcc94",
    "prId" : 2487,
    "comments" : [
      {
        "id" : "9091cd95-c211-47bb-957b-52a9bee50449",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Should we make the title `Orphan Typeclass Instances`? Otherwise it seems somewhat confusing that only those are show here.",
        "createdAt" : "2019-08-12T12:14:27Z",
        "updatedAt" : "2019-08-12T12:42:13Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "532d020d-c511-4af4-91ab-854ad7699624",
        "parentId" : "9091cd95-c211-47bb-957b-52a9bee50449",
        "author" : null,
        "body" : "👍  sounds good\r\n",
        "createdAt" : "2019-08-12T12:24:49Z",
        "updatedAt" : "2019-08-12T12:42:13Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e788b2a993c57598623ba9cd06bff1615ac6bb39",
    "line" : null,
    "diffHunk" : "@@ -43,6 +43,7 @@ instance RenderDoc ModuleDoc where\n         , section \"Templates\" md_templates\n         , section \"Template Instances\" md_templateInstances\n         , section \"Typeclasses\" md_classes\n+        , section \"Typeclass Instances\" (filter id_isOrphan md_instances)"
  },
  {
    "id" : "6d20aea7-7d85-413d-b615-931bc4237946",
    "prId" : 2351,
    "comments" : [
      {
        "id" : "741d0c0e-5cab-4fff-a69b-6c940b146413",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "`Template Instances` vs `Data types` seems weird. I would either capitalize the second word in both or neither.",
        "createdAt" : "2019-07-31T11:31:02Z",
        "updatedAt" : "2019-07-31T16:47:11Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6420cb77-7b4a-4bcf-9756-60ad8247dc14",
        "parentId" : "741d0c0e-5cab-4fff-a69b-6c940b146413",
        "author" : {
          "login" : "jberthold-da",
          "name" : "Jost Berthold",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/28879196?u=41dee6fb7ab2761a566b324e2f4e5ad9b577ae0e&v=4"
        },
        "body" : "`Data Types`, as it is a title?",
        "createdAt" : "2019-07-31T12:00:06Z",
        "updatedAt" : "2019-07-31T16:47:11Z",
        "lastEditedBy" : {
          "login" : "jberthold-da",
          "name" : "Jost Berthold",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/28879196?u=41dee6fb7ab2761a566b324e2f4e5ad9b577ae0e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fac12ef0-3f23-496b-8f81-0d2488ab6fda",
        "parentId" : "741d0c0e-5cab-4fff-a69b-6c940b146413",
        "author" : null,
        "body" : "👍 ",
        "createdAt" : "2019-07-31T12:10:44Z",
        "updatedAt" : "2019-07-31T16:47:11Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "43cf20febd7fb63e1a575296280a2c3177148144",
    "line" : 44,
    "diffHunk" : "@@ -0,0 +1,232 @@\n+-- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+-- SPDX-License-Identifier: Apache-2.0\n+\n+{-# LANGUAGE DerivingStrategies #-}\n+\n+module DA.Daml.Doc.Render.Output\n+  ( renderModule\n+  ) where\n+\n+import DA.Daml.Doc.Types\n+import DA.Daml.Doc.Render.Util (wrapOp)\n+import DA.Daml.Doc.Render.Monoid\n+\n+import Data.List.Extra\n+import Data.Maybe\n+import qualified Data.Text as T\n+\n+renderModule :: ModuleDoc -> RenderOut\n+renderModule = renderDoc\n+\n+class RenderDoc t where\n+    renderDoc :: t -> RenderOut\n+\n+instance RenderDoc Anchor where renderDoc = RenderAnchor\n+instance RenderDoc DocText where renderDoc = RenderDocs\n+instance RenderDoc t => RenderDoc (Maybe t) where\n+    renderDoc = maybe mempty renderDoc\n+instance RenderDoc t => RenderDoc [t] where\n+    renderDoc = mconcatMap renderDoc\n+\n+isModuleEmpty :: ModuleDoc -> Bool\n+isModuleEmpty ModuleDoc{..} =\n+    null md_templates && null md_classes &&\n+    null md_adts && null md_functions &&\n+    isNothing md_descr\n+\n+instance RenderDoc ModuleDoc where\n+    renderDoc m | isModuleEmpty m = mempty\n+    renderDoc ModuleDoc{..} = mconcat\n+        [ renderDoc md_anchor\n+        , RenderModuleHeader (\"Module \" <> unModulename md_name)\n+        , renderDoc md_descr\n+        , section \"Templates\" md_templates\n+        , section \"Template Instances\" md_templateInstances"
  }
]