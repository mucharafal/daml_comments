[
  {
    "id" : "bb6bed80-73e7-4ea0-b527-f3ee70f8c4ed",
    "prId" : 2240,
    "comments" : [
      {
        "id" : "7c06f1f0-7a5e-4a14-9edf-336ad7ff976c",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "`without`? This looks more like it only has `dc_templates` and `dc_choices`.",
        "createdAt" : "2019-07-22T11:21:32Z",
        "updatedAt" : "2019-07-22T12:09:30Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "63be31ba-96c3-4f96-ba76-50d706e7202a",
        "parentId" : "7c06f1f0-7a5e-4a14-9edf-336ad7ff976c",
        "author" : null,
        "body" : "It is without :-) that's what `withoutKeys` does",
        "createdAt" : "2019-07-22T11:58:14Z",
        "updatedAt" : "2019-07-22T12:09:30Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "ff1c4b07-0b1b-46f8-9ec1-8db14d6307c0",
        "parentId" : "7c06f1f0-7a5e-4a14-9edf-336ad7ff976c",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Apparently I canâ€™t read :slightly_smiling_face: ",
        "createdAt" : "2019-07-22T12:02:08Z",
        "updatedAt" : "2019-07-22T12:09:30Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc5011d7625b29e31ecc1842db80d8f6c47d650",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +76,80 @@            md_functions = mapMaybe (getFctDocs ctx) dc_decls\n\n            filteredAdts -- all ADT docs without templates or choices\n                = MS.elems . MS.withoutKeys typeMap . Set.unions\n                $ dc_templates : MS.elems dc_choices"
  },
  {
    "id" : "18447ce9-469f-483e-b18a-25ba45ce2b1c",
    "prId" : 2240,
    "comments" : [
      {
        "id" : "08b6ac2f-ff2f-49cd-a5c8-c5c2ebf47e86",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "`md_adts` does not contain all ADTs right? It looks like it only contains template and choice ADTs that are not template instances?",
        "createdAt" : "2019-07-22T11:23:00Z",
        "updatedAt" : "2019-07-22T12:09:30Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc5011d7625b29e31ecc1842db80d8f6c47d650",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +80,84 @@                $ dc_templates : MS.elems dc_choices\n\n            (md_adts, md_templateInstances) =\n                partitionEithers . flip map filteredAdts $ \\adt ->\n                    case getTemplateInstanceDoc adt of"
  },
  {
    "id" : "aae74519-9112-455b-98d4-be89836322a8",
    "prId" : 2240,
    "comments" : [
      {
        "id" : "0c3af222-cc1e-4b18-86cc-c0745e6a5506",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Might be a good idea to add a comment here that this marker does not exist so far.",
        "createdAt" : "2019-07-22T11:23:58Z",
        "updatedAt" : "2019-07-22T12:09:30Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "71dc40db-f513-41fc-887d-55b58a93afa3",
        "parentId" : "0c3af222-cc1e-4b18-86cc-c0745e6a5506",
        "author" : null,
        "body" : "Good idea :-) thanks",
        "createdAt" : "2019-07-22T12:01:04Z",
        "updatedAt" : "2019-07-22T12:09:30Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc5011d7625b29e31ecc1842db80d8f6c47d650",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +411,415 @@    , [RecordC{..}] <- ad_constrs\n    , [FieldDoc{..}] <- ac_fields\n    , Just (DocText \"TEMPLATE_INSTANCE\") <- fd_descr\n    = Just TemplateInstanceDoc\n        { ti_name = ad_name"
  },
  {
    "id" : "8cc20e89-dffb-4e49-a56b-5587f70bdf12",
    "prId" : 2202,
    "comments" : [
      {
        "id" : "d400c0f2-c618-482d-880e-312a606f212e",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Do we have an example where this is used?",
        "createdAt" : "2019-07-18T08:29:55Z",
        "updatedAt" : "2019-07-18T08:30:27Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4a2d3b18-fc41-4ae2-b0b3-1127f095fce7",
        "parentId" : "d400c0f2-c618-482d-880e-312a606f212e",
        "author" : null,
        "body" : "Not really. It's used in the `adt2rst` function to make it more robust against missing type information. AFAIK this happens only with `Bool` and `[]` in `GHC.Types` right now. The former doesn't actually use `_`. The latter does use it for the cons constructor, but it's something to fix later or never.",
        "createdAt" : "2019-07-18T12:53:55Z",
        "updatedAt" : "2019-07-18T12:53:55Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "c096fe32-3a08-491c-9d3b-fcdad064209f",
        "parentId" : "d400c0f2-c618-482d-880e-312a606f212e",
        "author" : null,
        "body" : "So, I guess the answer isn't \"Not really\" but \"only in cases where the type information is missing because of weirdness with primitives\".",
        "createdAt" : "2019-07-18T12:55:35Z",
        "updatedAt" : "2019-07-18T12:55:35Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "a2956089b450045bb72dc7eec73756649ed31638",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +270,274 @@getClsDocs _ _ = Nothing\n\nunknownType :: DDoc.Type\nunknownType = TypeApp Nothing (Typename \"_\") []\n"
  },
  {
    "id" : "97b6b5d7-918f-4d47-b420-42845c3473c8",
    "prId" : 2179,
    "comments" : [
      {
        "id" : "39e3c4e1-7ed7-4cb1-a911-08c99ddfe3c0",
        "parentId" : null,
        "author" : {
          "login" : "jberthold-da",
          "name" : "Jost Berthold",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/28879196?u=41dee6fb7ab2761a566b324e2f4e5ad9b577ae0e&v=4"
        },
        "body" : "`<nit-pick>` haddock description is not correct any more",
        "createdAt" : "2019-07-17T01:25:24Z",
        "updatedAt" : "2019-07-17T07:02:56Z",
        "lastEditedBy" : {
          "login" : "jberthold-da",
          "name" : "Jost Berthold",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/28879196?u=41dee6fb7ab2761a566b324e2f4e5ad9b577ae0e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8d2fd662-38bd-492a-8e63-801583983298",
        "parentId" : "39e3c4e1-7ed7-4cb1-a911-08c99ddfe3c0",
        "author" : null,
        "body" : "that's a good point :-)",
        "createdAt" : "2019-07-17T06:53:18Z",
        "updatedAt" : "2019-07-17T07:02:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "52d24307-bfd5-4865-a941-10507724191f",
        "parentId" : "39e3c4e1-7ed7-4cb1-a911-08c99ddfe3c0",
        "author" : null,
        "body" : "Fixed!",
        "createdAt" : "2019-07-17T07:04:25Z",
        "updatedAt" : "2019-07-17T07:04:25Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "70b96b2af6e6f59b1d104e2919e842c33d9904e4",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +376,380 @@-- names for all template instances defined in the module (note, the generic template\n-- need not be defined in the same module).\ngetTemplateData :: ParsedModule ->\n    ( Set.Set Typename\n    , MS.Map Typename (Set.Set Typename)"
  }
]