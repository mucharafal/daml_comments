[
  {
    "id" : "5df8c37e-aeb5-46f2-8878-7b4ad234ba35",
    "prId" : 2429,
    "comments" : [
      {
        "id" : "00c40ae8-cabc-430a-af8c-6e5cfd150a19",
        "parentId" : null,
        "author" : null,
        "body" : "Could you fix the indentation here? This is a bit much.",
        "createdAt" : "2019-08-06T14:54:42Z",
        "updatedAt" : "2019-08-06T17:22:48Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "69e831be-14fe-40f3-80e9-101776434f2b",
        "parentId" : "00c40ae8-cabc-430a-af8c-6e5cfd150a19",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I inherited that but I'm happy to change it.",
        "createdAt" : "2019-08-06T14:58:35Z",
        "updatedAt" : "2019-08-06T17:22:48Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ecdc071b-9544-428d-b703-5b3277fa145f",
        "parentId" : "00c40ae8-cabc-430a-af8c-6e5cfd150a19",
        "author" : null,
        "body" : "Thank you :-) ",
        "createdAt" : "2019-08-06T14:59:31Z",
        "updatedAt" : "2019-08-06T17:22:48Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e507119ab7d064bbcf5f4bfe12403b0dcb24179a",
    "line" : null,
    "diffHunk" : "@@ -259,11 +262,10 @@ damldocExpect importPathM testname input check =\n \n     case mbResult of\n       Left err -> assertFailure $ unlines\n-                  [\"Parse error(s) for test file \" <> testname, show err]\n-\n-      -- first module is the root we started from, so is the one that must satisfy the invariants\n-      Right ms -> check $ head ms\n+                  [\"Parse error(s) for test file \" <> testfile, show err]"
  },
  {
    "id" : "c128fd5b-bf82-4f70-a546-b347e2566207",
    "prId" : 2429,
    "comments" : [
      {
        "id" : "f33d8581-638a-4a3e-8a25-0c8255312f9e",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Does the diff in the case of a failure look reasonable? IIRC this was rather confusing at some point when the difference was only whitespace. We ‚Äúfixed‚Äù that by throwing a bunch of `show` at it but it would be nice to at least not regress here.",
        "createdAt" : "2019-08-06T14:57:14Z",
        "updatedAt" : "2019-08-06T17:22:48Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9e39cbc9-6042-4f93-a446-6b3270bbd243",
        "parentId" : "f33d8581-638a-4a3e-8a25-0c8255312f9e",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I changed it to use `goldenVsStringDiff`. Now the output looks like\r\n```\r\n      1c1\r\n      < # <a name=\"module-ioudsl-47944\"></a>Module IouDSL\r\n      ---\r\n      > # <a name=\"module-proposaliou-96142\"></a>Module ProposalIou\r\n      5c5\r\n      < <a name=\"type-ioudsl-iou-73876\"></a>**template** [Iou](#type-ioudsl-iou-73876)\r\n      ---\r\n      > <a name=\"type-proposaliou-iou-51326\"></a>**template** [Iou](#type-proposaliou-iou-51326)\r\n      23c23\r\n      < <a name=\"type-ioudsl-proposaliou-92778\"></a>**template instance** [ProposalIou](#type-ioudsl-proposaliou-92778)\r\n      ---\r\n      > <a name=\"type-proposaliou-proposaliou-81988\"></a>**template instance** [ProposalIou](#type-proposaliou-proposaliou-81988)\r\n      25c25\r\n      < > = Proposal [Iou](#type-ioudsl-iou-73876)\r\n      ---\r\n      > > = Proposal [Iou](#type-proposaliou-iou-51326)\r\n```\r\nI think that's good enough.",
        "createdAt" : "2019-08-06T15:04:32Z",
        "updatedAt" : "2019-08-06T17:22:48Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "bde3b38d-f3ec-4fc4-8703-e4a0c5ea0245",
        "parentId" : "f33d8581-638a-4a3e-8a25-0c8255312f9e",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Thanks!",
        "createdAt" : "2019-08-06T15:05:18Z",
        "updatedAt" : "2019-08-06T17:22:48Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e6928c68-993d-46d1-91a4-6a9910bf4b92",
        "parentId" : "f33d8581-638a-4a3e-8a25-0c8255312f9e",
        "author" : null,
        "body" : "> ```\r\n>       1c1\r\n>       < # <a name=\"module-ioudsl-47944\"></a>Module IouDSL\r\n>       ---\r\n>       > # <a name=\"module-proposaliou-96142\"></a>Module ProposalIou\r\n>       5c5\r\n>       < <a name=\"type-ioudsl-iou-73876\"></a>**template** [Iou](#type-ioudsl-iou-73876)\r\n>       ---\r\n>       > <a name=\"type-proposaliou-iou-51326\"></a>**template** [Iou](#type-proposaliou-iou-51326)\r\n>       23c23\r\n>       < <a name=\"type-ioudsl-proposaliou-92778\"></a>**template instance** [ProposalIou](#type-ioudsl-proposaliou-92778)\r\n>       ---\r\n>       > <a name=\"type-proposaliou-proposaliou-81988\"></a>**template instance** [ProposalIou](#type-proposaliou-proposaliou-81988)\r\n>       25c25\r\n>       < > = Proposal [Iou](#type-ioudsl-iou-73876)\r\n>       ---\r\n>       > > = Proposal [Iou](#type-proposaliou-iou-51326)\r\n> ```\r\n\r\nüòç ",
        "createdAt" : "2019-08-06T15:12:09Z",
        "updatedAt" : "2019-08-06T17:22:48Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e507119ab7d064bbcf5f4bfe12403b0dcb24179a",
    "line" : null,
    "diffHunk" : "@@ -280,35 +282,12 @@ fileTest damlFile = do\n \n   if null expectations\n     then pure []\n-    else do input <- T.readFileUtf8 damlFile\n-            mapM (goldenTest input) expectations\n-\n-  where goldenTest :: T.Text -> FilePath -> IO Tasty.TestTree\n-        goldenTest input expectation =\n-          let check docs = do\n-                let extension = takeExtension expectation\n-                ref <- T.readFileUtf8 expectation\n-                case extension of\n-                  \".rst\"  -> expectEqual extension ref $ renderPage renderRst $ renderModule docs\n-                  \".md\"   -> expectEqual extension ref $ renderPage renderMd $ renderModule docs\n-                  \".json\" -> expectEqual extension ref\n-                             (T.decodeUtf8 . BS.toStrict $\n-                               AP.encodePretty' jsonConf docs)\n-                  other  -> error $ \"Unsupported file extension \" <> other\n-\n-              expectEqual :: String -> T.Text -> T.Text -> Assertion\n-              expectEqual extension ref actual\n-                | standardizeEoL ref == standardizeEoL actual = pure ()\n-                | otherwise = do\n-                    let actualFile = replaceExtensions expectation (\"ACTUAL\" <> extension)\n-                        asLines = lines . T.unpack\n-                        diff = ppDiff $ getGroupedDiff (asLines ref) (asLines actual)\n-\n-                    T.writeFileUtf8 actualFile actual\n-                    assertFailure $\n-                      \"Unexpected difference between \" <> expectation <>\n-                      \" and actual output.\\n\" <>\n-                      \"Unexpected output has been written to \" <> actualFile <> \"\\n\" <>\n-                      \"Differences:\\n\" <> diff\n-\n-          in pure $  damldocExpect (Just $ takeDirectory damlFile) (\"File: \" <> expectation) [input] check\n+    else do\n+      doc <- runDamldoc damlFile (Just $ takeDirectory damlFile)\n+      pure $ flip map expectations $ \\expectation ->\n+        goldenVsString (\"File: \" <> expectation) expectation $ pure $"
  },
  {
    "id" : "6e0ad9ea-9c09-4658-9457-97521d686269",
    "prId" : 2178,
    "comments" : [
      {
        "id" : "4f9102d0-85cb-4e40-9dbe-c2312cd573c6",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "@associahedron Are you ok with changing it like this?",
        "createdAt" : "2019-07-23T14:25:46Z",
        "updatedAt" : "2019-07-30T22:55:02Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "64e98e31-f27d-464a-8051-d8cf026f87c0",
        "parentId" : "4f9102d0-85cb-4e40-9dbe-c2312cd573c6",
        "author" : null,
        "body" : "This is fine, but perhaps the filter should be done when calculating `td_choices` instead? I feel like we don't generally want to show the `External:Archive` choice anyway.",
        "createdAt" : "2019-07-23T16:12:32Z",
        "updatedAt" : "2019-07-30T22:55:02Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "248e2427-cbe4-4a8b-838b-2c02245838c9",
        "parentId" : "4f9102d0-85cb-4e40-9dbe-c2312cd573c6",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Opinions on whether we should show the `Archive` choice in the generated docs are a bit split. They show up in the transactions, e.g., in the scenario view in VS Code. But in some sense they are also an implementation detail covering up that we got our basic building blocks in the ledger model slightly wrong.\r\n@bame-da You wanna weigh in?",
        "createdAt" : "2019-07-23T17:07:38Z",
        "updatedAt" : "2019-07-30T22:55:02Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c53cbba6-f905-4bf2-aa79-6f79bfe335aa",
        "parentId" : "4f9102d0-85cb-4e40-9dbe-c2312cd573c6",
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "I think that until we make `Archive` its own node in the transaction graph, we should treat it just like any other choice, with the single exception that it's added to every template implicitly. ",
        "createdAt" : "2019-07-24T07:00:34Z",
        "updatedAt" : "2019-07-30T22:55:02Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "750cff6b-42b5-44be-acc7-5031c66bba19",
        "parentId" : "4f9102d0-85cb-4e40-9dbe-c2312cd573c6",
        "author" : null,
        "body" : ":+1: I don't have a strong opinion either way. The damldoc changes here are fine. ",
        "createdAt" : "2019-07-24T19:39:26Z",
        "updatedAt" : "2019-07-30T22:55:02Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "ca591f5890a7d9487d0b2351de3d08b4592a1a87",
    "line" : 5,
    "diffHunk" : "@@ -154,7 +154,7 @@ unitTests =\n                                 check $ isNothing $ td_descr t\n                                 f1 <- getSingle $ td_payload t\n                                 check $ isNothing $ fd_descr f1\n-                                ch <- getSingle $ td_choices t\n+                                ch <- getSingle $ td_choicesWithoutArchive t"
  }
]