[
  {
    "id" : "4785e361-78ea-4b67-b087-70248c27a3de",
    "prId" : 2772,
    "comments" : [
      {
        "id" : "9a4bc12b-d863-49bb-b874-82649719d0bc",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Looks like this is leftover from debugging?",
        "createdAt" : "2019-09-05T14:00:03Z",
        "updatedAt" : "2019-09-10T14:38:02Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d3d6c6d9-3ec0-49e7-97d9-36c48d3ca7fc",
        "parentId" : "9a4bc12b-d863-49bb-b874-82649719d0bc",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "It is, thanks for spotting. Removed.",
        "createdAt" : "2019-09-05T15:32:56Z",
        "updatedAt" : "2019-09-10T14:38:02Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ccad67cf98292f7fae9420c08748172e68348f0e",
    "line" : null,
    "diffHunk" : "@@ -12,22 +12,18 @@ import Options.Applicative hiding (customExecParser, execParser)\n import Options.Applicative.Internal\n import Options.Applicative.BashCompletion\n import Options.Applicative.Common\n-import System.Environment\n import System.IO\n \n -- | Runs the argument parser in a normal way unless the first argument is \"lax\"\n --   In this case it discards invalid flags and continues\n-execParserLax :: Op.ParserInfo a -> IO a\n-execParserLax = customExecParser Op.defaultPrefs\n-\n-customExecParser :: Op.ParserPrefs -> Op.ParserInfo a -> IO a\n-customExecParser pprefs pinfo = do\n-  args <- getArgs\n+execParserLax :: [String] -> Op.ParserInfo a -> IO a\n+execParserLax args pinfo = do\n+  putStrLn $ \"trace: \" <> show args"
  }
]