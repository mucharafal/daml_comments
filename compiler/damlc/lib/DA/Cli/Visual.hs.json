[
  {
    "id" : "9351c3a6-2689-48a6-bfaf-bbcfe7e44c71",
    "prId" : 2278,
    "comments" : [
      {
        "id" : "4ef937e8-bde7-4604-b12b-d7aae7ec9677",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "`archive c = exercise c Archive` in DA.Internal.Template. So won't the `exercise` case be sufficient?",
        "createdAt" : "2019-07-24T19:27:36Z",
        "updatedAt" : "2019-07-24T19:33:53Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a2a804ae-ee9f-4b98-bbca-e43685d34c7d",
        "parentId" : "4ef937e8-bde7-4604-b12b-d7aae7ec9677",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "That does not work right now because `archive` is polymorphic. Once we do the substitution at the type level, this should work. I'll leave a comment to this effect.",
        "createdAt" : "2019-07-24T19:32:15Z",
        "updatedAt" : "2019-07-24T19:33:53Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d1c704ff-6281-45c1-bb3e-bb06f7f4a7c8",
        "parentId" : "4ef937e8-bde7-4604-b12b-d7aae7ec9677",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Ah right, thanks",
        "createdAt" : "2019-07-24T19:34:19Z",
        "updatedAt" : "2019-07-24T19:34:19Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9b2077e3eeec96348b37961d057e91ddec5904f7",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +88,92 @@    -- handle polymorphic calls to `exercise` like this one.\n    EInternalTemplateVal \"archive\" `LF.ETyApp` LF.TCon tpl `LF.ETmApp` _dict ->\n        Set.singleton (AExercise tpl (LF.ChoiceName \"Archive\"))\n    expr -> Set.unions $ map (startFromExpr seen world) $ children expr\n"
  },
  {
    "id" : "06b2704e-abc6-429a-9767-9c746f0317bd",
    "prId" : 2178,
    "comments" : [
      {
        "id" : "79140bb4-c6ed-4da1-a432-beeea0226519",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Has anything actually changed here?",
        "createdAt" : "2019-07-29T14:58:40Z",
        "updatedAt" : "2019-07-30T22:55:02Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "50b46118-c0b9-4e03-9d96-73475249b24d",
        "parentId" : "79140bb4-c6ed-4da1-a432-beeea0226519",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Don't think so. I guess I was just pointing out in the comments that `create` and `archive` come from a `Template` instance and `exercise` comes from a `Choice` instance.",
        "createdAt" : "2019-07-29T15:09:34Z",
        "updatedAt" : "2019-07-30T22:55:02Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ca591f5890a7d9487d0b2351de3d08b4592a1a87",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +86,90 @@    EInternalTemplateVal \"archive\" `LF.ETyApp` LF.TCon tpl `LF.ETmApp` _dict ->\n        Set.singleton (AExercise tpl (LF.ChoiceName \"Archive\"))\n    -- NOTE(RJR): Look for calls to the `exercise` method from a `Choice`\n    -- instance and produce the corresponding edge in the graph.\n    EInternalTemplateVal \"exercise\" `LF.ETyApp` LF.TCon tpl `LF.ETyApp` LF.TCon (LF.Qualified _ _ (LF.TypeConName [chc])) `LF.ETyApp` _ret `LF.ETmApp` _dict ->"
  },
  {
    "id" : "c3fca2c3-a3f7-4e5d-87cd-48c121416b76",
    "prId" : 2116,
    "comments" : [
      {
        "id" : "f7667b0f-17f8-4d55-9b0b-ff4645192127",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "`ChoiceAndActions` (plural)?",
        "createdAt" : "2019-07-12T13:45:07Z",
        "updatedAt" : "2019-07-12T14:46:46Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "02aebbe3458fcf83dfc3b16ff7d3af76a9e53b09",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +26,30 @@            | AExercise (LF.Qualified LF.TypeConName) LF.ChoiceName deriving (Eq, Ord, Show )\n\ndata ChoiceAndAction = ChoiceAndAction\n    { choiceName :: LF.ChoiceName\n    , choiceConsuming :: IsConsuming"
  },
  {
    "id" : "c0253535-62cf-4f05-8e34-06997b8d6b24",
    "prId" : 2116,
    "comments" : [
      {
        "id" : "3a5b31e8-3472-48a2-b380-15f5e44c3223",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "You're really unqualifying the name right? So maybe `tplNameUnqual`?",
        "createdAt" : "2019-07-12T13:49:33Z",
        "updatedAt" : "2019-07-12T14:46:46Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d34db380-3c34-4672-b951-bac149400a07",
        "parentId" : "3a5b31e8-3472-48a2-b380-15f5e44c3223",
        "author" : {
          "login" : "akalburgi",
          "name" : "Anup Kalburgi",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/42743833?v=4"
        },
        "body" : "that sounds a lot better. Done ",
        "createdAt" : "2019-07-12T14:29:39Z",
        "updatedAt" : "2019-07-12T14:46:46Z",
        "lastEditedBy" : {
          "login" : "akalburgi",
          "name" : "Anup Kalburgi",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/42743833?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "02aebbe3458fcf83dfc3b16ff7d3af76a9e53b09",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +128,132 @@        nodesWithCreate = nodes ++ [addCreateChoice tpla lookupData]\n\ntplNamet :: LF.TypeConName -> T.Text\ntplNamet tplConName = head (LF.unTypeConName tplConName)\n"
  },
  {
    "id" : "f83bf374-b259-41c4-9607-bdf131414745",
    "prId" : 2116,
    "comments" : [
      {
        "id" : "777d3cb1-2e6e-4b88-b2e7-7d91eec151c9",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Don't think you need the `where` clause if this is the entire implementation",
        "createdAt" : "2019-07-12T13:51:43Z",
        "updatedAt" : "2019-07-12T14:46:46Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0cc03fba-16f2-40f9-900e-fc0dad48d003",
        "parentId" : "777d3cb1-2e6e-4b88-b2e7-7d91eec151c9",
        "author" : {
          "login" : "akalburgi",
          "name" : "Anup Kalburgi",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/42743833?v=4"
        },
        "body" : "Done ",
        "createdAt" : "2019-07-12T14:46:30Z",
        "updatedAt" : "2019-07-12T14:46:46Z",
        "lastEditedBy" : {
          "login" : "akalburgi",
          "name" : "Anup Kalburgi",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/42743833?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "02aebbe3458fcf83dfc3b16ff7d3af76a9e53b09",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +138,142 @@choiceActionToChoicePairs :: ChoiceAndAction -> [(LF.ChoiceName, LF.ChoiceName)]\nchoiceActionToChoicePairs cha@ChoiceAndAction {..} = pairs\n    where pairs = map (\\ac -> (fst $ extractChoiceData cha, actionToChoice ac)) (Set.elems actions)\n\ngraphEdges :: Map.Map LF.ChoiceName ChoiceDetails -> [TemplateChoices] -> [(ChoiceDetails, ChoiceDetails)]"
  }
]