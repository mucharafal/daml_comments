[
  {
    "id" : "3a78d52a-55c7-4293-95c0-6de3cfcd6727",
    "prId" : 2827,
    "comments" : [
      {
        "id" : "b797c232-1b2a-4c2e-9c8a-82ccdf9b74b4",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This code is also used for `DAML` which uses `.daml` as the file extension. We currently track file extensions in https://github.com/digital-asset/daml/blob/master/compiler/ghcide/src/Development/IDE/Types/Options.hs#L27. We don’t have `lhs` or `hs-boot` file equivalents for DAML so it’s fine to not support DAML-specific versions of those. Haven’t thought too deeply about this but it looks like replacing the first two cases by ``ext `elem` optExtensions`` might do the trick.",
        "createdAt" : "2019-09-10T07:29:51Z",
        "updatedAt" : "2019-09-10T08:27:25Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2fb17bc7-0b2d-407a-811b-3c0a2a64a3e4",
        "parentId" : "b797c232-1b2a-4c2e-9c8a-82ccdf9b74b4",
        "author" : {
          "login" : "hsenag",
          "name" : "Ganesh Sittampalam",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/451141?v=4"
        },
        "body" : "Sure - I think I'll need to thread in the list of extensions from somewhere as it's not already a parameter and presumably not in `GhcMonad`.  Let me know if I've missed something otherwise I'll do that.",
        "createdAt" : "2019-09-10T07:52:18Z",
        "updatedAt" : "2019-09-10T08:27:25Z",
        "lastEditedBy" : {
          "login" : "hsenag",
          "name" : "Ganesh Sittampalam",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/451141?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "86929363-b74c-4b48-ab5b-f7587bdb83e4",
        "parentId" : "b797c232-1b2a-4c2e-9c8a-82ccdf9b74b4",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Yeah you’re right that you have to thread the options. You can use `getIdeOptions` within `Action` to get the options.",
        "createdAt" : "2019-09-10T07:55:04Z",
        "updatedAt" : "2019-09-10T08:27:25Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "57269286-5b28-4f29-a963-d3e033c63559",
        "parentId" : "b797c232-1b2a-4c2e-9c8a-82ccdf9b74b4",
        "author" : {
          "login" : "hsenag",
          "name" : "Ganesh Sittampalam",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/451141?v=4"
        },
        "body" : "Would you prefer to thread the whole options record or just the list of extensions?\r\n\r\nAlternatively, I could change the logic to just look for `\"-boot\"`, and not care about the specific extensions. That might be more robust for the future, e.g. if the [`-x` flag](https://downloads.haskell.org/~ghc/8.8.1/docs/html/users_guide/using.html#overriding-the-default-behaviour-for-a-file) is ever supported.",
        "createdAt" : "2019-09-10T08:04:15Z",
        "updatedAt" : "2019-09-10T08:27:25Z",
        "lastEditedBy" : {
          "login" : "hsenag",
          "name" : "Ganesh Sittampalam",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/451141?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "24e3b15a-13c0-4df8-bf47-09f0f561573c",
        "parentId" : "b797c232-1b2a-4c2e-9c8a-82ccdf9b74b4",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Good point, I think just looking for `-boot` might be the best option here.",
        "createdAt" : "2019-09-10T08:07:34Z",
        "updatedAt" : "2019-09-10T08:27:25Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "cb1a8e49-4f5f-4a07-bd1b-29c88f7a7c0e",
        "parentId" : "b797c232-1b2a-4c2e-9c8a-82ccdf9b74b4",
        "author" : {
          "login" : "hsenag",
          "name" : "Ganesh Sittampalam",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/451141?v=4"
        },
        "body" : "I updated the PR.",
        "createdAt" : "2019-09-10T08:28:15Z",
        "updatedAt" : "2019-09-10T08:28:15Z",
        "lastEditedBy" : {
          "login" : "hsenag",
          "name" : "Ganesh Sittampalam",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/451141?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "82da2cc79054238f8eee377065597d1507fce2bf",
    "line" : null,
    "diffHunk" : "@@ -245,21 +245,30 @@ getModSummaryFromBuffer fp contents dflags parsed = do\n         -- To avoid silent issues where something is not processed because the date\n         -- has not changed, we make sure that things blow up if they depend on the\n         -- date.\n-    , ms_textual_imps = imports\n+    , ms_textual_imps = [imp | (False, imp) <- imports]\n     , ms_hspp_file    = fp\n     , ms_hspp_opts    = dflags\n     , ms_hspp_buf     = Just contents\n \n     -- defaults:\n-    , ms_hsc_src      = HsSrcFile\n+    , ms_hsc_src      = sourceType\n     , ms_obj_date     = Nothing\n     , ms_iface_date   = Nothing\n #ifndef GHC_STABLE\n     , ms_hie_date     = Nothing\n #endif\n-    , ms_srcimps      = []        -- source imports are not allowed\n+    , ms_srcimps      = [imp | (True, imp) <- imports]\n     , ms_parsed_mod   = Nothing\n     }\n+    where\n+      (sourceType, derivedFile) =\n+          let (stem, ext) = splitExtension fp in\n+          case ext of\n+          \".hs\"       -> (HsSrcFile, \\newExt -> stem <.> newExt)"
  }
]