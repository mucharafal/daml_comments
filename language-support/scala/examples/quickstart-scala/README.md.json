[
  {
    "id" : "02623eb0-8f7d-4802-8ba0-3b17bf31ab3c",
    "prId" : 2901,
    "comments" : [
      {
        "id" : "581f0874-8e6b-4f69-91d7-4d9c8667102f",
        "parentId" : null,
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "```suggestion\r\nAll instructions below assume that you have DAML SDK installed. If you have not installed it yet, please follow these instructions: https://docs.daml.com/getting-started/installation.html\r\n```",
        "createdAt" : "2019-09-16T09:02:33Z",
        "updatedAt" : "2019-09-16T12:17:08Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "431b467ffcf9a9f0591a049b5ad5cfad072d7182",
    "line" : 11,
    "diffHunk" : "@@ -1,22 +1,73 @@\n # quickstart-scala example\n \n This example demonstrates how to:\n-- set up and configure Scala codegen\n+- set up and configure Scala codegen (see `codegen` configuration in the `./daml.yaml`)\n - instantiate a contract and send a corresponding create command to the ledger\n - how to exercise a choice and send a corresponding exercise command  \n - subscribe to receive ledger events and decode them into generated Scala ADTs\n \n-This examples requires a running sandbox. To start a sandbox, run the following command from within a DAML Assistant project directory: \n+All instructions below assume that you have DAML SDK installed. If you have not installed it yet, please follow these instructions: https://docs.daml.com/getting-started/installation.html"
  },
  {
    "id" : "4220c2ac-0e14-4126-9302-319ffc872fd0",
    "prId" : 2901,
    "comments" : [
      {
        "id" : "5ce476fd-6e32-46c5-adab-9d0394464875",
        "parentId" : null,
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "```suggestion\r\n## Create a quickstart-scala project\r\n```",
        "createdAt" : "2019-09-16T09:03:04Z",
        "updatedAt" : "2019-09-16T12:17:08Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "431b467ffcf9a9f0591a049b5ad5cfad072d7182",
    "line" : null,
    "diffHunk" : "@@ -1,22 +1,73 @@\n # quickstart-scala example\n \n This example demonstrates how to:\n-- set up and configure Scala codegen\n+- set up and configure Scala codegen (see `codegen` configuration in the `./daml.yaml`)\n - instantiate a contract and send a corresponding create command to the ledger\n - how to exercise a choice and send a corresponding exercise command  \n - subscribe to receive ledger events and decode them into generated Scala ADTs\n \n-This examples requires a running sandbox. To start a sandbox, run the following command from within a DAML Assistant project directory: \n+All instructions below assume that you have DAML SDK installed. If you have not installed it yet, please follow these instructions: https://docs.daml.com/getting-started/installation.html\n+\n+## Create quickstart-scala project"
  },
  {
    "id" : "b620c296-c49f-44b9-a62d-d55a8257a2e0",
    "prId" : 2901,
    "comments" : [
      {
        "id" : "2be18b0c-89f0-4d32-827c-e3fc42d936aa",
        "parentId" : null,
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "```suggestion\r\n## Compile the DAML project\r\n```",
        "createdAt" : "2019-09-16T09:03:20Z",
        "updatedAt" : "2019-09-16T12:17:08Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "431b467ffcf9a9f0591a049b5ad5cfad072d7182",
    "line" : null,
    "diffHunk" : "@@ -1,22 +1,73 @@\n # quickstart-scala example\n \n This example demonstrates how to:\n-- set up and configure Scala codegen\n+- set up and configure Scala codegen (see `codegen` configuration in the `./daml.yaml`)\n - instantiate a contract and send a corresponding create command to the ledger\n - how to exercise a choice and send a corresponding exercise command  \n - subscribe to receive ledger events and decode them into generated Scala ADTs\n \n-This examples requires a running sandbox. To start a sandbox, run the following command from within a DAML Assistant project directory: \n+All instructions below assume that you have DAML SDK installed. If you have not installed it yet, please follow these instructions: https://docs.daml.com/getting-started/installation.html\n+\n+## Create quickstart-scala project\n+```\n+daml new ./quickstart-scala quickstart-scala\n+```\n+This should output:\n+```\n+Created a new project in \"./quickstart-scala\" based on the template \"quickstart-scala\".\n+```\n+Where:\n+- `./quickstart-scala` is a project directory name\n+- `quickstart-scala` is a project template name, to see the entire list of available templates, run: `daml new --list`\n+\n+## Compile DAML project"
  },
  {
    "id" : "9e2d09c3-25c8-4e7e-a155-1654500913f7",
    "prId" : 2901,
    "comments" : [
      {
        "id" : "cd7aa3cf-5166-49a6-b7e7-dd0051683c57",
        "parentId" : null,
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "```suggestion\r\n## Start Sandbox\r\n```",
        "createdAt" : "2019-09-16T09:03:46Z",
        "updatedAt" : "2019-09-16T12:17:08Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "431b467ffcf9a9f0591a049b5ad5cfad072d7182",
    "line" : null,
    "diffHunk" : "@@ -1,22 +1,73 @@\n # quickstart-scala example\n \n This example demonstrates how to:\n-- set up and configure Scala codegen\n+- set up and configure Scala codegen (see `codegen` configuration in the `./daml.yaml`)\n - instantiate a contract and send a corresponding create command to the ledger\n - how to exercise a choice and send a corresponding exercise command  \n - subscribe to receive ledger events and decode them into generated Scala ADTs\n \n-This examples requires a running sandbox. To start a sandbox, run the following command from within a DAML Assistant project directory: \n+All instructions below assume that you have DAML SDK installed. If you have not installed it yet, please follow these instructions: https://docs.daml.com/getting-started/installation.html\n+\n+## Create quickstart-scala project\n+```\n+daml new ./quickstart-scala quickstart-scala\n+```\n+This should output:\n+```\n+Created a new project in \"./quickstart-scala\" based on the template \"quickstart-scala\".\n+```\n+Where:\n+- `./quickstart-scala` is a project directory name\n+- `quickstart-scala` is a project template name, to see the entire list of available templates, run: `daml new --list`\n+\n+## Compile DAML project\n+The DAML code for the IOU example is located in the `./daml` folder. Run the following command to build it:\n+```\n+$ cd ./quickstart-scala\n+$ daml buld\n+```\n+this should output:\n+```\n+Compiling quickstart to a DAR.\n+Created .daml/dist/quickstart-0.0.1.dar.\n ```\n-$ daml start\n+\n+## Generate Scala classes representing DAML contract templates\n+```\n+$ daml codegen scala\n+```\n+This should generate scala classes in the `./scala-codegen/src/main/scala` directory. See `codegen` configuration in the `daml.yaml` file:\n+```\n+...\n+codegen:\n+  scala:\n+    package-prefix: com.digitalasset.quickstart.iou.model\n+    output-directory: scala-codegen/src/main/scala\n+    verbosity: 2\n ```\n \n-To run the quickstart-scala example as part of a DAML Assistant project:\n+## Start sandbox"
  },
  {
    "id" : "6fe97c26-cf7e-4366-be0a-1dbb2eed6990",
    "prId" : 2901,
    "comments" : [
      {
        "id" : "06d36534-cac3-4bf3-9eee-dac3db9cce82",
        "parentId" : null,
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "```suggestion\r\nwhere `./.daml/dist/quickstart-0.0.1.dar` is the DAR file created in the previous step.\r\n```",
        "createdAt" : "2019-09-16T09:04:21Z",
        "updatedAt" : "2019-09-16T12:17:08Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "431b467ffcf9a9f0591a049b5ad5cfad072d7182",
    "line" : null,
    "diffHunk" : "@@ -1,22 +1,73 @@\n # quickstart-scala example\n \n This example demonstrates how to:\n-- set up and configure Scala codegen\n+- set up and configure Scala codegen (see `codegen` configuration in the `./daml.yaml`)\n - instantiate a contract and send a corresponding create command to the ledger\n - how to exercise a choice and send a corresponding exercise command  \n - subscribe to receive ledger events and decode them into generated Scala ADTs\n \n-This examples requires a running sandbox. To start a sandbox, run the following command from within a DAML Assistant project directory: \n+All instructions below assume that you have DAML SDK installed. If you have not installed it yet, please follow these instructions: https://docs.daml.com/getting-started/installation.html\n+\n+## Create quickstart-scala project\n+```\n+daml new ./quickstart-scala quickstart-scala\n+```\n+This should output:\n+```\n+Created a new project in \"./quickstart-scala\" based on the template \"quickstart-scala\".\n+```\n+Where:\n+- `./quickstart-scala` is a project directory name\n+- `quickstart-scala` is a project template name, to see the entire list of available templates, run: `daml new --list`\n+\n+## Compile DAML project\n+The DAML code for the IOU example is located in the `./daml` folder. Run the following command to build it:\n+```\n+$ cd ./quickstart-scala\n+$ daml buld\n+```\n+this should output:\n+```\n+Compiling quickstart to a DAR.\n+Created .daml/dist/quickstart-0.0.1.dar.\n ```\n-$ daml start\n+\n+## Generate Scala classes representing DAML contract templates\n+```\n+$ daml codegen scala\n+```\n+This should generate scala classes in the `./scala-codegen/src/main/scala` directory. See `codegen` configuration in the `daml.yaml` file:\n+```\n+...\n+codegen:\n+  scala:\n+    package-prefix: com.digitalasset.quickstart.iou.model\n+    output-directory: scala-codegen/src/main/scala\n+    verbosity: 2\n ```\n \n-To run the quickstart-scala example as part of a DAML Assistant project:\n+## Start sandbox\n+This examples requires a running sandbox. To start it, run the following command:\n+```\n+$ daml sandbox ./.daml/dist/quickstart-0.0.1.dar\n+```\n+Where `./.daml/dist/quickstart-0.0.1.dar` is the DAR file created in the previous step."
  },
  {
    "id" : "95c654a3-2a2d-4e13-82c1-42a79c5b5a79",
    "prId" : 2901,
    "comments" : [
      {
        "id" : "0c9e3bf2-ce5f-41a2-a421-3a4e3fa46e59",
        "parentId" : null,
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "```suggestion\r\nTo run the quickstart-scala as a standalone project (not part of the DAML project), or to override the default SDK version configured in the `./SDK_VERSION` file, you have to specify `da.sdk.version` JVM system properties:\r\n```",
        "createdAt" : "2019-09-16T09:04:54Z",
        "updatedAt" : "2019-09-16T12:17:08Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "431b467ffcf9a9f0591a049b5ad5cfad072d7182",
    "line" : null,
    "diffHunk" : "@@ -1,22 +1,73 @@\n # quickstart-scala example\n \n This example demonstrates how to:\n-- set up and configure Scala codegen\n+- set up and configure Scala codegen (see `codegen` configuration in the `./daml.yaml`)\n - instantiate a contract and send a corresponding create command to the ledger\n - how to exercise a choice and send a corresponding exercise command  \n - subscribe to receive ledger events and decode them into generated Scala ADTs\n \n-This examples requires a running sandbox. To start a sandbox, run the following command from within a DAML Assistant project directory: \n+All instructions below assume that you have DAML SDK installed. If you have not installed it yet, please follow these instructions: https://docs.daml.com/getting-started/installation.html\n+\n+## Create quickstart-scala project\n+```\n+daml new ./quickstart-scala quickstart-scala\n+```\n+This should output:\n+```\n+Created a new project in \"./quickstart-scala\" based on the template \"quickstart-scala\".\n+```\n+Where:\n+- `./quickstart-scala` is a project directory name\n+- `quickstart-scala` is a project template name, to see the entire list of available templates, run: `daml new --list`\n+\n+## Compile DAML project\n+The DAML code for the IOU example is located in the `./daml` folder. Run the following command to build it:\n+```\n+$ cd ./quickstart-scala\n+$ daml buld\n+```\n+this should output:\n+```\n+Compiling quickstart to a DAR.\n+Created .daml/dist/quickstart-0.0.1.dar.\n ```\n-$ daml start\n+\n+## Generate Scala classes representing DAML contract templates\n+```\n+$ daml codegen scala\n+```\n+This should generate scala classes in the `./scala-codegen/src/main/scala` directory. See `codegen` configuration in the `daml.yaml` file:\n+```\n+...\n+codegen:\n+  scala:\n+    package-prefix: com.digitalasset.quickstart.iou.model\n+    output-directory: scala-codegen/src/main/scala\n+    verbosity: 2\n ```\n \n-To run the quickstart-scala example as part of a DAML Assistant project:\n+## Start sandbox\n+This examples requires a running sandbox. To start it, run the following command:\n+```\n+$ daml sandbox ./.daml/dist/quickstart-0.0.1.dar\n+```\n+Where `./.daml/dist/quickstart-0.0.1.dar` is the DAR file created in the previous step.\n+\n+## Compile and run Scala example\n+Run the following command from the `quickstart-scala` folder:\n ```\n $ sbt \"application/runMain com.digitalasset.quickstart.iou.IouMain localhost 6865\"\n ```\n+If example completes successfully, the above process should terminate and the output should look like this:\n+```\n+<Sent and received messages>\n+...\n+11:54:03.865 [run-main-0] INFO - Shutting down...\n+...\n+[success] Total time: 7 s, completed Sep 12, 2019, 11:54:04 AM\n+```\n \n-To run the quickstart-scala as a standalone project, you have to specify `da.sdk.version` and `dar.file` JVM system properties:\n+To run the quickstart-scala as a standalone project (not part of the DAML project) or to override the default SDK version configured in the `./SDK_VERSION` file, you have to specify `da.sdk.version` JVM system properties:"
  }
]