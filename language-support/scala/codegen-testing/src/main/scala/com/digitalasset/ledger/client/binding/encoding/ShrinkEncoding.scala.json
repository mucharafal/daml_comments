[
  {
    "id" : "652f86de-4763-48df-ac11-d6e02a8f07df",
    "prId" : 1833,
    "comments" : [
      {
        "id" : "7f8e0468-c960-4797-9a19-53f73ed896e4",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "If you don't flatten the interface:\r\n\r\n```suggestion\r\n  type EnumCases[A] = (A => Bool, A) @@ Tags.FirstVal\r\n```\r\n\r\nwith `enum` producing `Stream.empty` if the predicate matches, that `A` otherwise, and the `FirstVal` monoid implementing `Plus`.",
        "createdAt" : "2019-06-24T12:48:27Z",
        "updatedAt" : "2019-06-26T17:21:52Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "14dbf2ff-5ab0-4813-8c02-ce46dfab82e7",
        "parentId" : "7f8e0468-c960-4797-9a19-53f73ed896e4",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "does not apply anymore",
        "createdAt" : "2019-06-25T09:27:26Z",
        "updatedAt" : "2019-06-26T17:21:52Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0024f1caa606682717407339870b82441a5a448c",
    "line" : null,
    "diffHunk" : "@@ -32,6 +32,8 @@ abstract class ShrinkEncoding extends LfTypeEncoding {\n \n   type VariantCases[A] = Shrink[A] // probably\n \n+  type EnumCases[A] = Shrink[A]"
  },
  {
    "id" : "f5193ed5-c73d-4f97-801c-4281f370c70c",
    "prId" : 1833,
    "comments" : [
      {
        "id" : "ff7e5364-7a14-4fbd-8ec6-5e04980419cf",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n  override def enum[A](enumId: rpcvalue.Identifier, cases: EnumCases[A]): Out[A] = Shrink.shrinkAny\r\n```",
        "createdAt" : "2019-06-24T12:48:41Z",
        "updatedAt" : "2019-06-26T17:21:52Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "bfb8de4f-e709-4378-959e-44e95f993cbe",
        "parentId" : "ff7e5364-7a14-4fbd-8ec6-5e04980419cf",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "does not apply anymore",
        "createdAt" : "2019-06-25T09:26:40Z",
        "updatedAt" : "2019-06-26T17:21:52Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0024f1caa606682717407339870b82441a5a448c",
    "line" : null,
    "diffHunk" : "@@ -43,6 +45,13 @@ abstract class ShrinkEncoding extends LfTypeEncoding {\n \n   override def variant[A](variantId: rpcvalue.Identifier, cases: VariantCases[A]): Out[A] = cases\n \n+  override def enum[A](enumId: rpcvalue.Identifier, cases: EnumCases[A]): Out[A] = cases"
  },
  {
    "id" : "5aa89b39-439b-402e-bcda-ec3beb30b63c",
    "prId" : 1833,
    "comments" : [
      {
        "id" : "c8164cd1-80e0-4704-9a7b-f254e63a7e44",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n      if (index(a) == 0) Stream.empty else Stream(cases.head._2)\r\n```",
        "createdAt" : "2019-06-26T11:21:45Z",
        "updatedAt" : "2019-06-26T17:21:52Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "91c06bfa-5d70-4530-b8ba-2226d389e4f7",
        "parentId" : "c8164cd1-80e0-4704-9a7b-f254e63a7e44",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2019-06-26T11:29:11Z",
        "updatedAt" : "2019-06-26T17:21:52Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0024f1caa606682717407339870b82441a5a448c",
    "line" : null,
    "diffHunk" : "@@ -43,6 +44,15 @@ abstract class ShrinkEncoding extends LfTypeEncoding {\n \n   override def variant[A](variantId: rpcvalue.Identifier, cases: VariantCases[A]): Out[A] = cases\n \n+  override def enumAll[A](\n+      enumId: Identifier,\n+      index: A => Int,\n+      cases: OneAnd[Vector, (String, A)],\n+  ): Out[A] =\n+    Shrink { a: A =>\n+      Stream(a).filter(index(_) == 0)"
  }
]