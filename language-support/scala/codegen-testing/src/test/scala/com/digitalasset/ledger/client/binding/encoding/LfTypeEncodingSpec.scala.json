[
  {
    "id" : "b78544b8-8038-406f-9239-e5e74a2d5474",
    "prId" : 1833,
    "comments" : [
      {
        "id" : "1bad9501-8c42-4205-a579-fa879b09a946",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n          cases.toVector\r\n```",
        "createdAt" : "2019-06-26T07:08:20Z",
        "updatedAt" : "2019-06-26T17:21:52Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fae260cd-bfc8-48dc-ac00-cfb773be95ce",
        "parentId" : "1bad9501-8c42-4205-a579-fa879b09a946",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Oops n/m",
        "createdAt" : "2019-06-26T09:49:58Z",
        "updatedAt" : "2019-06-26T17:21:52Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0024f1caa606682717407339870b82441a5a448c",
    "line" : 98,
    "diffHunk" : "@@ -405,6 +400,24 @@ object LfTypeEncodingSpec {\n       })\n     }\n \n+    override def enumAll[A](\n+        enumId: rpcvalue.Identifier,\n+        index: A => Int,\n+        cases: OneAnd[Vector, (String, A)],\n+    ): Out[A] =\n+      new Value.InternalImpl[A] {\n+        private val readerMap =\n+          cases.toVector.toMap"
  },
  {
    "id" : "6c55050b-7ee3-4ece-8599-46b7546cdb6d",
    "prId" : 1833,
    "comments" : [
      {
        "id" : "ac2c9cee-95f8-48e1-9af7-4e28865d7004",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n          av.enum.flatMap(e => readerMap.lift(e.index))\r\n```",
        "createdAt" : "2019-06-26T07:08:48Z",
        "updatedAt" : "2019-06-26T17:21:52Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a3617643-9ef9-4aac-8f73-f0e7d0d92065",
        "parentId" : "ac2c9cee-95f8-48e1-9af7-4e28865d7004",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Oops n/m",
        "createdAt" : "2019-06-26T09:49:44Z",
        "updatedAt" : "2019-06-26T17:21:52Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0024f1caa606682717407339870b82441a5a448c",
    "line" : 101,
    "diffHunk" : "@@ -405,6 +400,24 @@ object LfTypeEncodingSpec {\n       })\n     }\n \n+    override def enumAll[A](\n+        enumId: rpcvalue.Identifier,\n+        index: A => Int,\n+        cases: OneAnd[Vector, (String, A)],\n+    ): Out[A] =\n+      new Value.InternalImpl[A] {\n+        private val readerMap =\n+          cases.toVector.toMap\n+\n+        override def read(av: VSum): Option[A] =\n+          av.enum.flatMap(e => readerMap.get(e.constructor))"
  }
]