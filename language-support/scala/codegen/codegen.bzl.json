[
  {
    "id" : "bd5cd400-788b-40d0-8a02-0f8162d4778b",
    "prId" : 1602,
    "comments" : [
      {
        "id" : "8c9fd875-3c48-4f41-8904-b5bb9e19864a",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I think I'm missing something here. Why is this hard coded now?",
        "createdAt" : "2019-06-12T11:55:08Z",
        "updatedAt" : "2019-06-12T11:56:21Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4eadb3ec-c993-47de-8141-e7a3021d0933",
        "parentId" : "8c9fd875-3c48-4f41-8904-b5bb9e19864a",
        "author" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "body" : "The ```codegen_out``` output was being 'misused' as the output _directory_ of the code generation but as the generated code was being zipped into the ```srcjar_out``` output the ```codegen_out``` was actually a temporary directory and (luckily) not used as a dependency. The change reflects the actual use of the 'output' and allows the ```scala_source_jar``` rule to work correctly for this ```//language-support/scala/examples:quickstart-scala-codegen-lib``` target.",
        "createdAt" : "2019-06-12T12:09:14Z",
        "updatedAt" : "2019-06-12T12:09:15Z",
        "lastEditedBy" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2c550390-3ba8-4a43-9da9-2de0d7f0cd6d",
        "parentId" : "8c9fd875-3c48-4f41-8904-b5bb9e19864a",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "üëç ",
        "createdAt" : "2019-06-12T12:29:50Z",
        "updatedAt" : "2019-06-12T12:29:51Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d1e12b90aca06189a9f1b3274a9185a81362e56d",
    "line" : 5,
    "diffHunk" : "@@ -2,7 +2,7 @@\n # SPDX-License-Identifier: Apache-2.0\n \n def _dar_to_scala_impl(ctx):\n-    codegen_out_dir = ctx.outputs.codegen_out\n+    codegen_out_dir = ctx.actions.declare_directory(ctx.label.name + \"_codegen_out\")"
  },
  {
    "id" : "8c0951af-397c-42b1-a397-b0cae8506f29",
    "prId" : 1202,
    "comments" : [
      {
        "id" : "37e69535-9d4b-4b06-bff8-b74078048528",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "This one is failing on Windows. Did you try `\"@bazel_tools//tools/jdk:jar\"`?",
        "createdAt" : "2019-05-17T06:55:00Z",
        "updatedAt" : "2019-05-20T13:27:03Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "70ac70939dcae4ea1f385f290b3c6677cc744904",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,45 @@\n+# Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+def dar_to_scala(**kwargs):\n+    \"\"\"\n+    Generate scala code from provided DAR files.\n+\n+    This macro does not try to compile the generated classes it just outputs the `srcjar` with generated files.\n+    \"\"\"\n+    name = kwargs[\"name\"]\n+    dars = kwargs[\"srcs\"]\n+    package_prefix = kwargs[\"package_prefix\"]\n+    verbosity = kwargs.get(\"verbosity\", \"2\")\n+    srcjar_out = kwargs[\"srcjar_out\"]\n+\n+    src_out = name + \"-srcs\"\n+\n+    cmd = \"\"\"\n+        $(execpath //language-support/scala/codegen:codegen-main) --output-directory={gen_out} --verbosity={verbosity} {gen_in}\n+        $(execpath @local_jdk//:bin/jar) -cf $@ -C {gen_out} .\n+    \"\"\".format(\n+        verbosity = verbosity,\n+        gen_in = dars_with_package_prefix(dars, package_prefix),\n+        gen_out = src_out,\n+    )\n+\n+    native.genrule(\n+        name = name,\n+        srcs = dars,\n+        outs = [srcjar_out],\n+        cmd = cmd,\n+        tools = [\n+            \"//language-support/scala/codegen:codegen-main\",\n+            \"@local_jdk//:bin/jar\","
  },
  {
    "id" : "e0275cf5-fba1-4a30-8618-7169c999f4aa",
    "prId" : 1202,
    "comments" : [
      {
        "id" : "47e8c2ce-3086-4d7b-b47f-e7be7f44430c",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Unfortunately `jar -cf` is not reproducible, which is bad for caching. Bazel includes a `zipper` tool for that purpose. See [`daml/proto.bzl`](https://github.com/digital-asset/daml/blob/44c67547f58ff37f03c797af6cac27f61684e90c/bazel_tools/proto.bzl#L95-L121). They also use it to create a `srcjar`, in that case from proto generated code. To use that it might be easier to express `dar_to_scala` as a proper Bazel rule, rather than a macro. That should be straight forward following the example of `proto_gen`.",
        "createdAt" : "2019-05-17T07:20:53Z",
        "updatedAt" : "2019-05-20T13:27:03Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7dfa53e8-ccad-4fe4-890d-baeec8f94166",
        "parentId" : "47e8c2ce-3086-4d7b-b47f-e7be7f44430c",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "cc @gerolf-da as this is \"borrowed\" from java codegen rule",
        "createdAt" : "2019-05-17T13:44:29Z",
        "updatedAt" : "2019-05-20T13:27:03Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "70ac70939dcae4ea1f385f290b3c6677cc744904",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,45 @@\n+# Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+def dar_to_scala(**kwargs):\n+    \"\"\"\n+    Generate scala code from provided DAR files.\n+\n+    This macro does not try to compile the generated classes it just outputs the `srcjar` with generated files.\n+    \"\"\"\n+    name = kwargs[\"name\"]\n+    dars = kwargs[\"srcs\"]\n+    package_prefix = kwargs[\"package_prefix\"]\n+    verbosity = kwargs.get(\"verbosity\", \"2\")\n+    srcjar_out = kwargs[\"srcjar_out\"]\n+\n+    src_out = name + \"-srcs\"\n+\n+    cmd = \"\"\"\n+        $(execpath //language-support/scala/codegen:codegen-main) --output-directory={gen_out} --verbosity={verbosity} {gen_in}\n+        $(execpath @local_jdk//:bin/jar) -cf $@ -C {gen_out} ."
  },
  {
    "id" : "c352747d-4811-4e1d-9fe7-69ad958e69d9",
    "prId" : 1202,
    "comments" : [
      {
        "id" : "0f274d19-e077-4038-b2b1-5eaeb4b08be5",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "```suggestion\r\n    srcjar_out_file = ctx.outputs.srcjar_out\r\n```\r\nMisleading name. It's the output `srcjar` file, not a directory.",
        "createdAt" : "2019-05-20T07:20:33Z",
        "updatedAt" : "2019-05-20T13:27:03Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "70ac70939dcae4ea1f385f290b3c6677cc744904",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,89 @@\n+# Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+def _dar_to_scala_impl(ctx):\n+    codegen_out_dir = ctx.outputs.codegen_out\n+    srcjar_out_dir = ctx.outputs.srcjar_out"
  }
]