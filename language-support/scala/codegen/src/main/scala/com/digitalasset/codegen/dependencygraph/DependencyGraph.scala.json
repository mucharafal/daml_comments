[
  {
    "id" : "13506195-466f-451f-b436-2401c649c9c4",
    "prId" : 3159,
    "comments" : [
      {
        "id" : "d158a9dd-a005-4b9f-a453-8eff8f75d46c",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Did you observe any value from these `toStream` calls? If not, I suggest reverting.",
        "createdAt" : "2019-10-10T15:01:41Z",
        "updatedAt" : "2019-10-10T18:26:13Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2994c05a-5bfb-4fbf-ae05-180bc3580bdb",
        "parentId" : "d158a9dd-a005-4b9f-a453-8eff8f75d46c",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "looks like it decreased the number of the SOE from 1 out 5 to 1 out 20.",
        "createdAt" : "2019-10-10T18:10:27Z",
        "updatedAt" : "2019-10-10T18:26:13Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "43ae86891e5f8a31b0d3a57c247568b812c614aa",
    "line" : null,
    "diffHunk" : "@@ -36,7 +36,7 @@ private final case class LFDependencyGraph(private val util: lf.LFUtil)\n             symmGenTypeDependencies(typeDecl),\n             collectDepError = false))\n     }\n-    val templateNodes = decls.collect {\n+    val templateNodes = decls.toStream.collect {"
  },
  {
    "id" : "db249fb9-3306-44e6-9fa3-b32070e29717",
    "prId" : 1210,
    "comments" : [
      {
        "id" : "8134b6d4-8cd8-42ca-893b-098289cb95a9",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "The filtering done here is too deeply nested; instead, the `EnvironmentInterface` itself should be filtered closer to `CodeGen`. Then probably `Util` doesn't need to have the regex.",
        "createdAt" : "2019-05-17T19:43:12Z",
        "updatedAt" : "2019-06-11T19:43:17Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "24800eb387ce26d19e7b19fb11ea60df1862330e",
    "line" : null,
    "diffHunk" : "@@ -47,7 +51,24 @@ private final case class LFDependencyGraph(private val util: lf.LFUtil)\n             recDeps ++ choiceDeps,\n             collectDepError = true))\n     }\n-    Graph.cyclicDependencies(internalNodes = typeDeclNodes, roots = templateNodes)\n+\n+    def matchesRoots(qualName: Ref.Identifier): Boolean =\n+      util.roots.exists(_.findFirstIn(qualName.qualifiedName.qualifiedName).isDefined)\n+    // scala-2.13-M4: _.matches(qualName.qualifiedName.qualifiedName)\n+\n+    val interesting =\n+      if (util.roots.isEmpty)\n+        templateNodes\n+      else {\n+        val res = templateNodes.filter(pair => matchesRoots(pair._1))\n+        logger.info(s\"\"\"Filtered template names to match regex set:\n+             |${util.roots.mkString(\", \")}.\n+             |Considering ${res.size} templates.\n+           \"\"\".stripMargin)\n+        res\n+      }"
  }
]