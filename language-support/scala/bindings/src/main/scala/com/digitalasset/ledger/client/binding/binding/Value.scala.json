[
  {
    "id" : "93a14560-a6f0-4710-bc4c-98918411f252",
    "prId" : 7483,
    "comments" : [
      {
        "id" : "806ef6e4-fc39-40d4-9d5c-6e118ae2566d",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : ":+1: \r\n",
        "createdAt" : "2020-09-25T12:10:14Z",
        "updatedAt" : "2020-09-28T06:43:56Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8acb142ecf47700230d2a8ea8989744ef13e5e83",
    "line" : 15,
    "diffHunk" : "@@ -75,7 +76,9 @@ object DamlCodecs extends encoding.ValuePrimitiveEncoding[Value] {\n   }\n \n   implicit override val valueNumeric: Value[P.Numeric] =\n-    fromArgumentValueFuns(_.numeric map BigDecimal.exact, bd => VSum.Numeric(bd.toString))\n+    fromArgumentValueFuns(\n+      _.numeric map lf.Numeric.assertFromString,\n+      bd => VSum.Numeric(lf.Numeric.toString(bd.bigDecimal)))"
  },
  {
    "id" : "e1979f47-17a8-4d69-8123-56af4e4903e7",
    "prId" : 7483,
    "comments" : [
      {
        "id" : "b8bdaca0-493f-4006-aebd-ec08b6220250",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Use `fromString`, `toOption`, and `flatMap` instead.",
        "createdAt" : "2020-09-25T14:42:14Z",
        "updatedAt" : "2020-09-28T06:43:56Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f9b1e882-8a72-490b-86d4-34afdd498c1b",
        "parentId" : "b8bdaca0-493f-4006-aebd-ec08b6220250",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Duh, somehow I didn’t realize that `_.numeric` returns an `Option`. That’s what I get for trying to avoid intellij for this small patch. Thanks for catching it! That’s much nicer.",
        "createdAt" : "2020-09-25T15:48:18Z",
        "updatedAt" : "2020-09-28T06:43:56Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "8acb142ecf47700230d2a8ea8989744ef13e5e83",
    "line" : null,
    "diffHunk" : "@@ -75,7 +76,9 @@ object DamlCodecs extends encoding.ValuePrimitiveEncoding[Value] {\n   }\n \n   implicit override val valueNumeric: Value[P.Numeric] =\n-    fromArgumentValueFuns(_.numeric map BigDecimal.exact, bd => VSum.Numeric(bd.toString))\n+    fromArgumentValueFuns(\n+      _.numeric map lf.Numeric.assertFromString,"
  }
]