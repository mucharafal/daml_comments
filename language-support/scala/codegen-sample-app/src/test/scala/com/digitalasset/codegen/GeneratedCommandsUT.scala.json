[
  {
    "id" : "d74e5054-1f44-4fc6-a916-7c289afbfa11",
    "prId" : 6660,
    "comments" : [
      {
        "id" : "2577b1e4-a9fb-4858-98a4-f700003d239c",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Would it make sense to verify the behavior of a failing exercise-by-key in a test?",
        "createdAt" : "2020-07-09T16:57:20Z",
        "updatedAt" : "2020-07-09T16:57:53Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5baa0766-fd48-42ac-aed6-3575944e9f1f",
        "parentId" : "2577b1e4-a9fb-4858-98a4-f700003d239c",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "No, because the result of the command has nothing to do with the codegen.",
        "createdAt" : "2020-07-09T17:07:38Z",
        "updatedAt" : "2020-07-09T17:07:39Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a519d0cf-0030-40c7-aa39-04433a494d06",
        "parentId" : "2577b1e4-a9fb-4858-98a4-f700003d239c",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "I think testing for a properly generated `Command.Command.ExerciseByKey` is sufficient (love the name Command.Command :)). It compiles and all required field are properly populated. Making sure that the command is accepted or rejected by the ledger is NOT the scala codegen concern.",
        "createdAt" : "2020-07-09T17:20:53Z",
        "updatedAt" : "2020-07-09T17:21:42Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3873568005f1a9f2194e839fa9a92f895e3b1304",
    "line" : 25,
    "diffHunk" : "@@ -30,4 +30,17 @@ class GeneratedCommandsUT extends WordSpec with Matchers with Inside {\n       }\n     }\n   }\n+\n+  \"key\" should {\n+    \"make an exercise-by-key command\" in {\n+      inside((KeyedNumber key alice exerciseIncrement (alice, 42)).command.command) {\n+        case rpccmd.Command.Command.ExerciseByKey(\n+            rpccmd.ExerciseByKeyCommand(Some(tid), Some(k), \"Increment\", Some(choiceArg))) =>\n+          import com.daml.ledger.client.binding.Value.encode\n+          tid should ===(KeyedNumber.id)\n+          k should ===(encode(alice))\n+          choiceArg should ===(encode(Increment(42)))\n+      }\n+    }\n+  }"
  }
]