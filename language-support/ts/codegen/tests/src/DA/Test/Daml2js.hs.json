[
  {
    "id" : "89053f1b-1a62-4bea-b062-667995fcee7f",
    "prId" : 6657,
    "comments" : [
      {
        "id" : "74f1473c-4384-4072-8389-e2418ba94ceb",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Would it make sense to add assertions for the `.js` files here as well?",
        "createdAt" : "2020-07-09T19:26:07Z",
        "updatedAt" : "2020-07-09T19:31:59Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b1c154d5-acfe-4a14-8b31-c50c1c55fd7f",
        "parentId" : "74f1473c-4384-4072-8389-e2418ba94ceb",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "The way I understood this code it was more like a lazily written unit test (since it piggybacks on top of the integration test) to check that the logic for generating the index tree is correct. Therefore it didn’t really seem useful to test that the rendering logic to commonjs is correct and the commonjs module stuff looks horrible so I’d rather test the logic using the nice ES6 modules.",
        "createdAt" : "2020-07-09T19:34:42Z",
        "updatedAt" : "2020-07-09T19:34:43Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "381ee9cd524fb450ded324f1f48f4cc97a2cf7cb",
    "line" : 37,
    "diffHunk" : "@@ -176,20 +171,20 @@ tests yarn damlc daml2js davl = testGroup \"daml2js tests\"\n           , \"A\" </> \"B\" </> \"D\" </> \"index\"\n           , \"A\" </> \"B\" </> \"D\" </> \"module\"\n           ]\n-        assertFileDoesNotExist (projectTs </> \"src\" </> \"A\" </> \"B\" </> \"module.ts\")\n+        assertFileDoesNotExist (projectTs </> \"lib\" </> \"A\" </> \"B\" </> \"module.js\")\n \n-        withCurrentDirectory (projectTs </> \"src\") $ do\n+        withCurrentDirectory (projectTs </> \"lib\") $ do\n           let reexportIndex name =\n                 [ \"import * as \" <> name <> \" from './\" <> name <> \"';\"\n-                , \"export import \" <> name <> \" = \" <> name <> \";\"\n+                , \"export { \" <> name <> \" } ;\"\n                 ]\n           let reexportModule = [\"export * from './module';\"]\n-          indexContents <- T.lines <$> T.readFileUtf8 \"index.ts\"\n+          indexContents <- T.lines <$> T.readFileUtf8 \"index.d.ts\"\n           assertBool \"index.ts does not reexport A\" (reexportIndex \"A\" `isPrefixOf` indexContents)\n-          assertFileLines (\"A\" </> \"index.ts\") (reexportIndex \"B\" ++ reexportModule)\n-          assertFileLines (\"A\" </> \"B\" </> \"index.ts\") (reexportIndex \"C\" ++ reexportIndex \"D\")\n-          assertFileLines (\"A\" </> \"B\" </> \"C\" </> \"index.ts\") reexportModule\n-          assertFileLines (\"A\" </> \"B\" </> \"D\" </> \"index.ts\") reexportModule\n+          assertFileLines (\"A\" </> \"index.d.ts\") (reexportIndex \"B\" ++ reexportModule)\n+          assertFileLines (\"A\" </> \"B\" </> \"index.d.ts\") (reexportIndex \"C\" ++ reexportIndex \"D\")\n+          assertFileLines (\"A\" </> \"B\" </> \"C\" </> \"index.d.ts\") reexportModule\n+          assertFileLines (\"A\" </> \"B\" </> \"D\" </> \"index.d.ts\") reexportModule"
  },
  {
    "id" : "a4a47e50-86fe-41ab-b64a-e0fc9181ced9",
    "prId" : 5934,
    "comments" : [
      {
        "id" : "d8b19ac4-3004-442b-a7f2-23621273f4af",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "This should actually say 2.32",
        "createdAt" : "2020-05-11T19:01:09Z",
        "updatedAt" : "2020-05-11T19:03:51Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "27431258-4a24-4b34-9b85-02fe6ceadd33",
        "parentId" : "d8b19ac4-3004-442b-a7f2-23621273f4af",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "I can fix in a followup to get this one through",
        "createdAt" : "2020-05-11T19:02:41Z",
        "updatedAt" : "2020-05-11T19:03:51Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "adc2b96a-acc1-4bfb-ac19-3d95fa1191c8",
        "parentId" : "d8b19ac4-3004-442b-a7f2-23621273f4af",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "just make it a suggestion and you save me having to open an editor",
        "createdAt" : "2020-05-11T19:04:08Z",
        "updatedAt" : "2020-05-11T19:04:09Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "eb8c0f6c-57dd-4587-858b-65986a43bf89",
        "parentId" : "d8b19ac4-3004-442b-a7f2-23621273f4af",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "i would have taken care of it ;)",
        "createdAt" : "2020-05-11T19:06:50Z",
        "updatedAt" : "2020-05-11T19:06:50Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "03245cf8f91af466c0047705038c5ab2dcd78d4d",
    "line" : null,
    "diffHunk" : "@@ -26,8 +26,9 @@ eslintVersion :: T.Text\n eslintVersion = \"^6.8.0\"\n \n -- Version of typescript-eslint for linting the generated code.\n+-- 2.23 produces an error https://github.com/typescript-eslint/typescript-eslint/issues/2009"
  }
]