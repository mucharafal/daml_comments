[
  {
    "id" : "8c0f8ef7-1158-42ba-8594-4e8bbdb14cfb",
    "prId" : 7082,
    "comments" : [
      {
        "id" : "be7c18c2-77d6-45b7-9ad3-678a368c3853",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Can you please add a link to the issue here?",
        "createdAt" : "2020-08-11T08:21:48Z",
        "updatedAt" : "2020-08-11T08:25:29Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "71fd2911-e974-4d94-b5a1-de9dbd595d31",
        "parentId" : "be7c18c2-77d6-45b7-9ad3-678a368c3853",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Done. âœ… ",
        "createdAt" : "2020-08-11T08:26:10Z",
        "updatedAt" : "2020-08-11T08:26:10Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "046eed40b59c2d4572b3aabe26c0873db7b49eeb",
    "line" : null,
    "diffHunk" : "@@ -103,6 +103,7 @@ sh_test(\n             \"ts/**/lib/**\",\n         ],\n     ),\n+    flaky = True,"
  },
  {
    "id" : "d2b57f6d-a0c3-4bcb-86a5-a87fe1681b5b",
    "prId" : 5553,
    "comments" : [
      {
        "id" : "94c639e8-ddae-4a51-8f49-f82d3a48c7ad",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "letâ€™s see how it goes but we might end up having to add this back. You are starting two JVM process + one node process in those tests + damlc so they are very resource hungry and running them in parallel with other tests might end up overloading the machine.",
        "createdAt" : "2020-04-14T17:47:26Z",
        "updatedAt" : "2020-04-14T17:47:32Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a601d6f1-0e9e-4f22-8dba-919882de0d84",
        "parentId" : "94c639e8-ddae-4a51-8f49-f82d3a48c7ad",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Copy that.",
        "createdAt" : "2020-04-14T18:15:19Z",
        "updatedAt" : "2020-04-14T18:15:19Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a531fa2e91c8166269e89d49c693ca7b59e6ba22",
    "line" : 4,
    "diffHunk" : "@@ -101,9 +101,6 @@ sh_test(\n             \"ts/**/lib/**\",\n         ],\n     ),\n-    tags = ["
  },
  {
    "id" : "1b1e1ec8-16a1-4153-8bcf-a046e5aee9b4",
    "prId" : 5218,
    "comments" : [
      {
        "id" : "a74157e8-0798-4556-8c0d-d36082388695",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : ":+1: That should avoid the issue. Iâ€™m actually wondering if the recent changes in `rules_haskell` to not pass include directories avoids this issue even on Windows. @aherrmann probably knows.",
        "createdAt" : "2020-03-26T18:14:37Z",
        "updatedAt" : "2020-03-26T18:18:26Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0abe93a6fc31745849983ecd333eea94a1ba62f5",
    "line" : 13,
    "diffHunk" : "@@ -109,6 +109,25 @@ sh_test(\n     ],\n ) if not is_windows else None\n \n+da_haskell_library("
  },
  {
    "id" : "73e505d9-ada4-4a33-a060-eb4e134c26cb",
    "prId" : 5070,
    "comments" : [
      {
        "id" : "cf2dd4cb-12c7-4436-9d94-d708629e1b92",
        "parentId" : null,
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Why is this necessary? The daml.yaml specifies the version as 1.0.0 doesn't it?",
        "createdAt" : "2020-03-18T14:26:43Z",
        "updatedAt" : "2020-03-18T22:00:03Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a56fcd41-481a-4b9f-b630-c7fdb1255f7d",
        "parentId" : "cf2dd4cb-12c7-4436-9d94-d708629e1b92",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "You rely on it. Nowhere else does.\r\nI've got a mind to change the default to something unusual like 1.2.3",
        "createdAt" : "2020-03-18T14:50:52Z",
        "updatedAt" : "2020-03-18T22:00:03Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e986de20-015b-4506-bc32-f73371882d42",
        "parentId" : "cf2dd4cb-12c7-4436-9d94-d708629e1b92",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "I got it now. Thank-you!",
        "createdAt" : "2020-03-18T17:20:37Z",
        "updatedAt" : "2020-03-18T22:00:03Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1124c3bce4e6881fde26f5bd070e74b01ce38a50",
    "line" : 12,
    "diffHunk" : "@@ -7,12 +7,12 @@ load(\"@build_environment//:configuration.bzl\", \"sdk_version\")\n load(\"@os_info//:os_info.bzl\", \"is_windows\")\n \n # This rule builds a dar from the daml sources under the 'daml'\n-# directory. It is referenced from the 'build-and-lint' test target that\n+# directory. It is referenced from the 'build-and-lint-test' target that\n # follows.\n daml_compile(\n-    name = \"build-and-lint-1.0.0\",\n+    name = \"build-and-lint\",\n     srcs = glob([\"daml/**/*.daml\"]),\n-    main_src = \"daml/Main.daml\",\n+    version = \"1.0.0\","
  },
  {
    "id" : "80bd40d1-af94-4543-ad38-64fe5cff3374",
    "prId" : 5070,
    "comments" : [
      {
        "id" : "82df42a0-7abe-4a43-9a23-d40932fb8190",
        "parentId" : null,
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "ðŸŽ‰ !",
        "createdAt" : "2020-03-18T14:26:57Z",
        "updatedAt" : "2020-03-18T22:00:03Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1124c3bce4e6881fde26f5bd070e74b01ce38a50",
    "line" : 30,
    "diffHunk" : "@@ -79,7 +79,7 @@ sh_test(\n         \"$(location //:daml2ts)\",\n         \"$(location //ledger/sandbox:sandbox-binary_deploy.jar)\",\n         \"$(location //ledger-service/http-json:http-json-binary_deploy.jar)\",\n-        \"$(location :build-and-lint-1.0.0.dar)\",\n+        \"$(location :build-and-lint.dar)\","
  },
  {
    "id" : "f066c89b-e83c-4460-a08e-a9d8a251be02",
    "prId" : 4818,
    "comments" : [
      {
        "id" : "3668a169-b8eb-4a00-a3b1-2adbbf6b4410",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "ðŸ˜„",
        "createdAt" : "2020-03-05T08:41:24Z",
        "updatedAt" : "2020-03-05T12:00:20Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "00d45cb44007659545cda3a4ccf31a12b4c88fbe",
    "line" : 5,
    "diffHunk" : "@@ -68,7 +68,7 @@ daml_compile(\n #  - Evaluates assertions of http-json-api specified ledger operations\n #    involving contracts defined by the dar;\n #  - Gracefully tears down the processes it started when its work is done.\n-\n+# All in all, a pretty slick bit of work!"
  },
  {
    "id" : "2165bdbf-2bd6-47ea-bb18-3ae5a77043a9",
    "prId" : 4799,
    "comments" : [
      {
        "id" : "198f6b2d-b016-4c3b-8663-056ee69be9d3",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I donâ€™t think this is true. The DAR is built separately and you pass it in via `data`.",
        "createdAt" : "2020-03-04T08:06:43Z",
        "updatedAt" : "2020-03-04T19:19:03Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ed48b830-baa7-4a20-b82f-8e60022ab63e",
        "parentId" : "198f6b2d-b016-4c3b-8663-056ee69be9d3",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "You are right.",
        "createdAt" : "2020-03-04T13:58:24Z",
        "updatedAt" : "2020-03-04T19:19:03Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "516a9a33965e2db029a67edd5bcf173e1f360b77",
    "line" : null,
    "diffHunk" : "@@ -10,23 +10,65 @@ load(\"@os_info//:os_info.bzl\", \"is_windows\")\n # directory. It is referenced from the 'build-and-lint' test that\n # follows.\n daml_compile(\n-    name = \"daml2ts-test\",\n+    name = \"build-and-lint-pkg\",\n     srcs = glob([\"daml/**/*.daml\"]),\n     main_src = \"daml/Main.daml\",\n )\n \n-# The 'build-and-lint' (test) target:\n-#  - Causes 'daml2ts-test.dar' to be produced (from the sources under 'ts/daml');\n-#  - Invokes 'daml2ts' on that dar to produce typescript bindings in' ts/generated/src/daml';\n-#  - Invokes 'yarn install' in 'ts' to install dependencies;\n-#  - Invokes 'yarn build' then 'yarn lint' on each of the '@daml/types', '@daml/ledger' and 'generated' packages;\n-#  - Invokes 'yarn test' from the 'ts/generated' directory.\n-# That last step causes 'ts/generated/src/tests/__tests__/test.ts' to be executed which:\n-#  - Spins up a sandbox running the 'daml2ts-test.dar';\n+# build-and-lint\n+# ==============\n+#\n+# 'build-and-lint.sh' is an integration test. It builds a DAR from\n+#  some DAML, invokes daml2ts on the DAR, uploads the DAR to a ledger\n+#  and then runs tests on the TypeScript generated by daml2ts via a\n+#  json-api connected to the ledger.\n+#\n+#  The main inputs to 'build-and-lint' are:\n+#     - Bazel artifacts : '@daml/types' and '@daml/ledger' (these are\n+#       npm packages);\n+#     - Source artifacts:\n+#       - 'ts/codegen/tests/daml/*'\n+#         The DAML that goes into the DAR ('build-and-lint-pkg.dar');\n+#       - 'ts/codegen/tests/ts/*'\n+#         A skeleton yarn workspaces root containing a TypeScript package\n+#         'build-and-lint' which houses the test driver 'test.ts'.\n+#\n+# 'build-and-lint' creates a temp directory ('root' say), and uses the\n+# above inputs (via filesystem copies, damlc, daml2ts and yarn install)\n+# to produce a filesystem with the following structure:\n+#\n+#   root/\n+#      build-and-lint/\n+#        src/\n+#          __tests__/\n+#            test.ts\n+#      daml2ts/\n+#        build-and-lint-pkg/  -- The TypeScript generated from 'build-and-lint-pkg.dar'\n+#        057eed/\n+#        ...\n+#      package.json  -- Enumeration of the workspaces : build-and-lint-pkg, daml2ts/057eed, ...\n+#      node_modules/\n+#        @daml/\n+#          types/\n+#          ledger/\n+#        ...\n+#\n+# In more detail, the actions of 'build-and-lint' are to:\n+#  - Produce 'build-and-lint-pkg.dar';"
  },
  {
    "id" : "2ed35147-3cb2-4ec1-a82b-bc3e159030d4",
    "prId" : 4799,
    "comments" : [
      {
        "id" : "6702f495-989c-4385-84bb-517687bef32d",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Is it no longer slick? ðŸ˜› ",
        "createdAt" : "2020-03-04T18:09:50Z",
        "updatedAt" : "2020-03-04T19:55:59Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c69cf06c-d09e-40b3-b270-364ffefc98b1",
        "parentId" : "6702f495-989c-4385-84bb-517687bef32d",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "It is still slick.",
        "createdAt" : "2020-03-04T21:13:08Z",
        "updatedAt" : "2020-03-04T21:13:09Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5170840d-f46f-43a6-ad4a-c37fadcdc9b3",
        "parentId" : "6702f495-989c-4385-84bb-517687bef32d",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Comment restored in https://github.com/digital-asset/daml/pull/4818.",
        "createdAt" : "2020-03-04T21:36:06Z",
        "updatedAt" : "2020-03-04T21:36:07Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "516a9a33965e2db029a67edd5bcf173e1f360b77",
    "line" : 72,
    "diffHunk" : "@@ -10,23 +10,65 @@ load(\"@os_info//:os_info.bzl\", \"is_windows\")\n # directory. It is referenced from the 'build-and-lint' test that\n # follows.\n daml_compile(\n-    name = \"daml2ts-test\",\n+    name = \"build-and-lint-pkg\",\n     srcs = glob([\"daml/**/*.daml\"]),\n     main_src = \"daml/Main.daml\",\n )\n \n-# The 'build-and-lint' (test) target:\n-#  - Causes 'daml2ts-test.dar' to be produced (from the sources under 'ts/daml');\n-#  - Invokes 'daml2ts' on that dar to produce typescript bindings in' ts/generated/src/daml';\n-#  - Invokes 'yarn install' in 'ts' to install dependencies;\n-#  - Invokes 'yarn build' then 'yarn lint' on each of the '@daml/types', '@daml/ledger' and 'generated' packages;\n-#  - Invokes 'yarn test' from the 'ts/generated' directory.\n-# That last step causes 'ts/generated/src/tests/__tests__/test.ts' to be executed which:\n-#  - Spins up a sandbox running the 'daml2ts-test.dar';\n+# build-and-lint\n+# ==============\n+#\n+# 'build-and-lint.sh' is an integration test. It builds a DAR from\n+#  some DAML, invokes daml2ts on the DAR, uploads the DAR to a ledger\n+#  and then runs tests on the TypeScript generated by daml2ts via a\n+#  json-api connected to the ledger.\n+#\n+#  The main inputs to 'build-and-lint' are:\n+#     - Bazel artifacts : '@daml/types' and '@daml/ledger' (these are\n+#       npm packages);\n+#     - Source artifacts:\n+#       - 'ts/codegen/tests/daml/*'\n+#         The DAML that goes into the DAR ('build-and-lint-pkg.dar');\n+#       - 'ts/codegen/tests/ts/*'\n+#         A skeleton yarn workspaces root containing a TypeScript package\n+#         'build-and-lint' which houses the test driver 'test.ts'.\n+#\n+# 'build-and-lint' creates a temp directory ('root' say), and uses the\n+# above inputs (via filesystem copies, damlc, daml2ts and yarn install)\n+# to produce a filesystem with the following structure:\n+#\n+#   root/\n+#      build-and-lint/\n+#        src/\n+#          __tests__/\n+#            test.ts\n+#      daml2ts/\n+#        build-and-lint-pkg/  -- The TypeScript generated from 'build-and-lint-pkg.dar'\n+#        057eed/\n+#        ...\n+#      package.json  -- Enumeration of the workspaces : build-and-lint-pkg, daml2ts/057eed, ...\n+#      node_modules/\n+#        @daml/\n+#          types/\n+#          ledger/\n+#        ...\n+#\n+# In more detail, the actions of 'build-and-lint' are to:\n+#  - Invoke 'daml2ts' on 'build-and-lint-pkg.dar' produce TypeScript bindings (\n+#    in the 'daml2ts' directory);\n+#  - Invoke from 'root':\n+#    - 'yarn workspaces run install';\n+#    - 'yarn workspaces run build';\n+#    - 'yarn workspaces run lint';\n+#  - Finally, invoke 'yarn test' from the 'root/build-and-lint' directory.\n+#\n+# That last step causes 'build-and-lint/src/__tests__/test.ts' to be executed which:\n+#  - Spins up a sandbox running the 'build-and-lint-pkg.dar';\n #  - Spins up a http-json-api connected to the sandbox;\n-#  - Evaluates assertions of http-json-api specified ledger operations involving contracts defined by the dar;\n+#  - Evaluates assertions of http-json-api specified ledger operations\n+#    involving contracts defined by the dar;\n #  - Gracefully tears down the processes it started when its work is done.\n-# All in all, a pretty slick bit of work!"
  },
  {
    "id" : "39f1d744-8c2e-4419-b601-b4ac6588dc8b",
    "prId" : 4476,
    "comments" : [
      {
        "id" : "aed6a599-5743-42fa-ab59-23352a3e2843",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I think itâ€™s generally a good idea to leave a comment when marking a test exclusive that explains the reasoning. In this case: hardcoded portnumbers.",
        "createdAt" : "2020-02-11T20:20:14Z",
        "updatedAt" : "2020-02-11T20:35:52Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5bc6e4e8-82dd-40b6-a8d1-39cd14dc07f8",
        "parentId" : "aed6a599-5743-42fa-ab59-23352a3e2843",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Ok!",
        "createdAt" : "2020-02-11T20:25:11Z",
        "updatedAt" : "2020-02-11T20:35:52Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "470a305dbec7ef86ed9a3c742435fc7bcadb9638",
    "line" : null,
    "diffHunk" : "@@ -62,4 +62,7 @@ sh_test(\n     deps = [\n         \"@bazel_tools//tools/bash/runfiles\",\n     ],\n+    tags = [\n+      \"exclusive\","
  },
  {
    "id" : "367f84ed-e653-4fd5-aa9b-33d585ec8f1e",
    "prId" : 3441,
    "comments" : [
      {
        "id" : "c31aebd8-0f69-4cd9-9883-e7c4f25f95cc",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I expect/hope that this will turn into a proper tasty test suite at some point since Iâ€™m scared of bash but fine to leave it for now.",
        "createdAt" : "2019-11-19T08:27:19Z",
        "updatedAt" : "2019-11-19T15:10:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4395d89e-7294-4d13-8bec-da932796641f",
        "parentId" : "c31aebd8-0f69-4cd9-9883-e7c4f25f95cc",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Yes, it will. Right now, bash was the fastest way to get this into master before the PR gets too big.",
        "createdAt" : "2019-11-19T08:59:32Z",
        "updatedAt" : "2019-11-19T15:10:10Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "eff993c856bef39dda178c0b0ca7b3cc76f89f26",
    "line" : 21,
    "diffHunk" : "@@ -0,0 +1,38 @@\n+# Copyright (c) 2019 The DAML Authors. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+load(\"//rules_daml:daml.bzl\", \"daml_compile\")\n+load(\"@os_info//:os_info.bzl\", \"is_windows\")\n+\n+daml_compile(\n+    name = \"daml2ts-test\",\n+    main_src = \"daml/Main.daml\",\n+    srcs = glob([\"daml/**/*.daml\"]),\n+)\n+\n+# This is needed to be able to call `$(location ...)` in rules.\n+# Otherwise I have not found a way to express the conditional within the\n+# `$(location ...)` substitution.\n+alias(\n+    name = \"yarn\",\n+    actual = \"@nodejs//:bin/yarn.cmd\" if is_windows else \"@nodejs//:bin/yarn\",\n+)\n+\n+sh_test("
  },
  {
    "id" : "14897aec-360e-429b-8495-b043d8ddefa3",
    "prId" : 3441,
    "comments" : [
      {
        "id" : "fc826997-ad77-4557-a32b-11c9c9c1f18c",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "This seems fine, and simpler than setting up a `yarn_dev_env` similar to `nodejs_dev_env`. Maybe `//3rdparty/nodejs:yarn` or `//:yarn` is a better place for this?",
        "createdAt" : "2019-11-19T09:30:58Z",
        "updatedAt" : "2019-11-19T15:10:10Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a37aceab-645c-499a-a868-565d6983dc4a",
        "parentId" : "fc826997-ad77-4557-a32b-11c9c9c1f18c",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I'll do this in a separate PR. There's an unrelated bazel file containing the same hack. I'll fix both then.",
        "createdAt" : "2019-11-19T11:56:01Z",
        "updatedAt" : "2019-11-19T15:10:10Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "eff993c856bef39dda178c0b0ca7b3cc76f89f26",
    "line" : 19,
    "diffHunk" : "@@ -0,0 +1,38 @@\n+# Copyright (c) 2019 The DAML Authors. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+load(\"//rules_daml:daml.bzl\", \"daml_compile\")\n+load(\"@os_info//:os_info.bzl\", \"is_windows\")\n+\n+daml_compile(\n+    name = \"daml2ts-test\",\n+    main_src = \"daml/Main.daml\",\n+    srcs = glob([\"daml/**/*.daml\"]),\n+)\n+\n+# This is needed to be able to call `$(location ...)` in rules.\n+# Otherwise I have not found a way to express the conditional within the\n+# `$(location ...)` substitution.\n+alias(\n+    name = \"yarn\",\n+    actual = \"@nodejs//:bin/yarn.cmd\" if is_windows else \"@nodejs//:bin/yarn\",\n+)"
  }
]