[
  {
    "id" : "900d5efc-34bd-4d94-aee7-5f8fb53d5d9f",
    "prId" : 7066,
    "comments" : [
      {
        "id" : "33d13651-e4ce-4591-8166-9305977c3a87",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Tests are failing about 4/10 times without this. With it I got 40 out of 40 successes. I'm not super happy about it, but this being JS, I don't know of any better way to give the collect callback a chance to run.",
        "createdAt" : "2020-09-08T17:16:45Z",
        "updatedAt" : "2020-09-08T17:16:46Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a1166194-6186-4d9e-b54a-11bdc011213a",
        "parentId" : "33d13651-e4ce-4591-8166-9305977c3a87",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Can we make a promise out of the callback and `await` that?",
        "createdAt" : "2020-09-08T17:19:40Z",
        "updatedAt" : "2020-09-08T17:19:47Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7fca5345-6614-4855-bc05-7cb168b1998a",
        "parentId" : "33d13651-e4ce-4591-8166-9305977c3a87",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I suppose we could replace the current `collect` mechanism with a multi-delivery promise, and then explicitly `await` each expected message, rather than handling the whole stream as an array.\r\n\r\nSyntactically you'd have a few more method calls and `await` expressions in exchange for this one `sleep`. In terms of runtime behaviour, I believe the test would time out instead of failing, which means that it would be slower for non-timing-related failures and that it will be much more lenient if things get slow.\r\n\r\nI'll let you decide if you think the tradeoff is worth it; I have a small preference for the state it's currently in, but it's not a massive change and I'm willing to open a PR for it if you think that's better.",
        "createdAt" : "2020-09-08T17:34:58Z",
        "updatedAt" : "2020-09-08T17:34:58Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "471001a3-477f-4726-954f-14d472be7b4f",
        "parentId" : "33d13651-e4ce-4591-8166-9305977c3a87",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Letâ€™s leave it and if it starts flaking we can reconsider.",
        "createdAt" : "2020-09-08T17:36:14Z",
        "updatedAt" : "2020-09-08T17:36:14Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ef0422dc9dbfe8749fff1b56b9a06706cecc569",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +364,368 @@  await create(\"included\");\n\n  await sleep(500);\n\n  expect(queryResult).toMatchObject("
  },
  {
    "id" : "38b91f65-0c62-4a92-b0e5-d2a7505cd9f6",
    "prId" : 6898,
    "comments" : [
      {
        "id" : "2dfd87cc-7874-4f33-98bf-08574628af4e",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Shouldnâ€™t this pass now?",
        "createdAt" : "2020-07-28T13:30:52Z",
        "updatedAt" : "2020-07-28T13:31:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0ee7ee8e-26e1-4ce1-93d4-702f80e14110",
        "parentId" : "2dfd87cc-7874-4f33-98bf-08574628af4e",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "It should indeed. Good catch. I'll make another PR for that.",
        "createdAt" : "2020-07-28T13:35:59Z",
        "updatedAt" : "2020-07-28T13:36:00Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d3c974e5-7488-4e09-9abe-eb358f7157be",
        "parentId" : "2dfd87cc-7874-4f33-98bf-08574628af4e",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Now youâ€™re just gaming PR stats :trollface: ",
        "createdAt" : "2020-07-28T13:37:28Z",
        "updatedAt" : "2020-07-28T13:37:29Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "12131a8c-df40-4bda-b9db-9ed3938db8ca",
        "parentId" : "2dfd87cc-7874-4f33-98bf-08574628af4e",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I'm gaming your contribution stats too since code reviews count as well. ðŸ¤« ",
        "createdAt" : "2020-07-28T13:40:00Z",
        "updatedAt" : "2020-07-28T13:40:00Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5dbc137d3934573d4f5719eb87379502e0807f24",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +119,123 @@  // test('uninhabited record', () => {\n  //   expect(buildAndLint.Main.VoidRecord.decoder().run(undefined).ok).toBe(false);\n  // });\n\n  test('uninhabited enum', () => {"
  },
  {
    "id" : "893e77d1-4555-4f81-a91a-8505020821bb",
    "prId" : 5571,
    "comments" : [
      {
        "id" : "a77c6e98-722b-4470-b5f4-d92ea0f149fb",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Nice!",
        "createdAt" : "2020-04-16T08:18:09Z",
        "updatedAt" : "2020-04-16T13:08:48Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "72535d45c1b8ec7a43d469e44a1e26622b509de6",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +157,161 @@  expect(events[1]).toHaveProperty('created');\n  const alice5Archived = (events[0] as {archived: buildAndLint.Main.Person.ArchiveEvent}).archived;\n  const alice6Contract = (events[1] as {created: buildAndLint.Main.Person.CreateEvent}).created;\n  expect(alice5Archived.contractId).toEqual(alice5Contract.contractId);\n  expect(alice6Contract.contractId).toEqual(result);"
  },
  {
    "id" : "721fce27-4200-4bc8-b1c5-b41235625439",
    "prId" : 5553,
    "comments" : [
      {
        "id" : "7ac3930d-98ba-4981-886d-21004a5a6a38",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "This would have made it a bit terser:\r\n```suggestion\r\nconst httpBaseUrl = (): string => `http://localhost:${jsonApiPort}/`;\r\n```\r\nAnd please add semicolons to the end of lines. It's not strictly necessary but I don't understand the implications of not doing it and am a bit wary hence.",
        "createdAt" : "2020-04-16T08:26:59Z",
        "updatedAt" : "2020-04-16T08:27:17Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a531fa2e91c8166269e89d49c693ca7b59e6ba22",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +29,33 @@let jsonApiPort: number | undefined = undefined;\nconst JSON_API_PORT_FILE = 'json-api.port';\nconst httpBaseUrl: () => string = () => `http://localhost:${jsonApiPort}/`\n\nlet sandboxProcess: ChildProcess | undefined = undefined;"
  },
  {
    "id" : "70d2d6ab-be70-465c-ac1d-42972c8b0258",
    "prId" : 5550,
    "comments" : [
      {
        "id" : "c4f2f21c-f122-4ba3-a975-52b554603126",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Hardcoding port numbers somewhat defeats the point of using `--port-file`. We should bind to port `0` and then read the port from the file. Fine to leve it for this PR but letâ€™s change that separately.",
        "createdAt" : "2020-04-14T15:42:03Z",
        "updatedAt" : "2020-04-14T15:44:30Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a18ac10a-835a-4f6d-a6d3-68035f61c943",
        "parentId" : "c4f2f21c-f122-4ba3-a975-52b554603126",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Tracking in issue https://github.com/digital-asset/daml/issues/5551",
        "createdAt" : "2020-04-14T16:05:08Z",
        "updatedAt" : "2020-04-14T16:05:08Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "21784d17a48a9bb046c8c2a7f2100c6770449ae0",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +26,30 @@const SANDBOX_PORT = 6865;\nconst SANDBOX_PORT_FILE = 'sandbox.port';\nconst JSON_API_PORT = 7575;\nconst JSON_API_PORT_FILE = 'json-api.port';\nconst HTTP_BASE_URL = `http://localhost:${JSON_API_PORT}/`;"
  },
  {
    "id" : "6607f925-1412-4d16-ae05-a649dc1c1198",
    "prId" : 4975,
    "comments" : [
      {
        "id" : "e3160b66-9248-4d17-9fa4-f132850d2f30",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This doesnâ€™t seem to actually test the difference anywhere. I admittedly donâ€™t understand typescript but afaict one of the main benefits of the new approach is that I can just use `\"Red\"` instead of `Color.Red`. We should add some tests for that!",
        "createdAt" : "2020-03-12T20:23:06Z",
        "updatedAt" : "2020-03-12T21:11:40Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c94ff1ce-1224-4f43-bb0e-ed04bcd53a50",
        "parentId" : "e3160b66-9248-4d17-9fa4-f132850d2f30",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Ok, done!",
        "createdAt" : "2020-03-12T20:54:33Z",
        "updatedAt" : "2020-03-12T21:12:15Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3f6f10a59e79f234fa88ceca81c572c611a97f7d",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +236,240 @@    archiveX: {},\n    either: {tag: 'Right', value: 'really?'},\n    tuple: {_1: '12', _2: 'mmm'},\n    enum: buildAndLint.Main.Color.Red,\n    enumList: [buildAndLint.Main.Color.Red, buildAndLint.Main.Color.Blue, buildAndLint.Main.Color.Yellow],"
  }
]