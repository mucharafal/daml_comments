[
  {
    "id" : "4556b003-0d8b-4a29-89de-0c22ebdad363",
    "prId" : 7566,
    "comments" : [
      {
        "id" : "dbaea00f-d8f6-4efa-ac3f-d8976cdba119",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Answering my own question: The reason why this works is that `Ledger` already accepted an optional parameter.",
        "createdAt" : "2020-10-05T14:04:14Z",
        "updatedAt" : "2020-10-05T14:44:58Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ebc4c68bf722830ccd1e0f5a1be7ba977b4ab6a3",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +90,94 @@  const DamlLedger: React.FC<LedgerProps> = ({token, httpBaseUrl, wsBaseUrl, reconnectThreshold, party, children}) => {\n    const [reloadToken, setReloadToken] = useState(0);\n    const ledger = useMemo(() => new Ledger({token, httpBaseUrl, wsBaseUrl, reconnectThreshold}), [token, httpBaseUrl, wsBaseUrl, reconnectThreshold]);\n    const state: DamlLedgerState = useMemo(() => ({\n      reloadToken,"
  }
]