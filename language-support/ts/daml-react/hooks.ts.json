[
  {
    "id" : "3b01c348-71c2-456b-b002-d87f910c360b",
    "prId" : 5375,
    "comments" : [
      {
        "id" : "7c41e0d4-e134-4e75-8877-3135dc687b36",
        "parentId" : null,
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "@hurryabit I changed the order of these signatures so that the documentation is created for the version with most parameters. I hope this doesn't change anything in semantics.",
        "createdAt" : "2020-04-02T12:43:37Z",
        "updatedAt" : "2020-04-02T15:04:13Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8943f405-b281-44d9-b6d0-8b93d113dd7c",
        "parentId" : "7c41e0d4-e134-4e75-8877-3135dc687b36",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Since the signatures don't overlap, this should be fine. It would also only affect type checking and nothing at runtime. Can you please do the same for `useQuery` as well if necessary?",
        "createdAt" : "2020-04-02T14:51:50Z",
        "updatedAt" : "2020-04-02T15:04:13Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "24cd399b-416b-4472-9dc3-d204cd68d1d7",
        "parentId" : "7c41e0d4-e134-4e75-8877-3135dc687b36",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "for `useQuery` it's already right.",
        "createdAt" : "2020-04-02T15:03:04Z",
        "updatedAt" : "2020-04-02T15:04:13Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d069d14fb2abcaacdc8e8d1a8de1432e5c485a54",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +146,150 @@ */\nexport function useStreamQuery<T extends object, K, I extends string>(template: Template<T, K, I>, queryFactory: () => Query<T>, queryDeps: readonly unknown[]): QueryResult<T, K, I>\nexport function useStreamQuery<T extends object, K, I extends string>(template: Template<T, K, I>): QueryResult<T, K, I>\nexport function useStreamQuery<T extends object, K, I extends string>(template: Template<T, K, I>, queryFactory?: () => Query<T>, queryDeps?: readonly unknown[]): QueryResult<T, K, I> {\n  const [result, setResult] = useState<QueryResult<T, K, I>>({contracts: [], loading: false});"
  },
  {
    "id" : "800c7984-aec0-43fc-b618-a8150522504e",
    "prId" : 4977,
    "comments" : [
      {
        "id" : "f98ed026-e73a-468b-8aeb-2a2d1081dfbf",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n * @param keyFactory A function returning a contract key.\r\n * @param keyDeps The dependencies of the key (for which a change triggers an update of the result)\r\n```",
        "createdAt" : "2020-03-16T10:04:16Z",
        "updatedAt" : "2020-03-16T10:04:45Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8c770f146e360efcd62a10a47b65fef1f667abe5",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +204,208 @@ * @param template The template of the contracts to match.\n * @param queryFactory A function returning a contract key.\n * @param queryDeps The dependencies of the query (for which a change triggers an update of the result)\n *\n * @return The matching (unique) contract."
  },
  {
    "id" : "9373d158-5213-44d5-b05c-a00769e0e470",
    "prId" : 4972,
    "comments" : [
      {
        "id" : "dfaa5c04-cb29-4b6b-9c0c-5321f1ae82f5",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Is there a `@deprecated` pragma we could add to the doc comment?",
        "createdAt" : "2020-03-16T11:30:25Z",
        "updatedAt" : "2020-03-16T13:09:28Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f5bf966a-fff3-46dd-9579-f96a309eea66",
        "parentId" : "dfaa5c04-cb29-4b6b-9c0c-5321f1ae82f5",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "so right now, the docs for this are not shown at all because of the `@ignore` pragma. we can also use the `@deprecate` pragma to show the docs as deprecated.",
        "createdAt" : "2020-03-16T12:11:46Z",
        "updatedAt" : "2020-03-16T13:09:28Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "91416bc8-4b80-4509-9b40-b96e8c985c66",
        "parentId" : "dfaa5c04-cb29-4b6b-9c0c-5321f1ae82f5",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "changed it to @deprecated.",
        "createdAt" : "2020-03-16T12:12:38Z",
        "updatedAt" : "2020-03-16T13:09:28Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "69373fe4a2c42ce761b666e5f98233422141ea9f",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +138,142 @@ */\nexport const useExercise = <T extends object, C, R>(choice: Choice<T, C, R>): (cid: ContractId<T>, argument: C) => Promise<R> => {\n  console.log('useExercise is deprecated. Please use \"useLedger\" instead.');\n  const state = useDamlState();\n  const exercise = async (cid: ContractId<T>, argument: C) => {"
  }
]