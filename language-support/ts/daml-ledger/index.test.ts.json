[
  {
    "id" : "48a20761-19a5-4952-aa2f-5138d3195f14",
    "prId" : 7404,
    "comments" : [
      {
        "id" : "0b4f04a7-a829-4b21-a7d8-cbdd72766597",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Why do we need to bump the timeout here?",
        "createdAt" : "2020-09-16T08:55:20Z",
        "updatedAt" : "2020-09-16T09:56:20Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e0528f72-74bd-4652-9e06-f5c63e5d4ce3",
        "parentId" : "0b4f04a7-a829-4b21-a7d8-cbdd72766597",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "We don't _need_ to, I suppose: I've not seen this fail yet. Call it ~paranoia~ prudence: sleep instructions are always a bit fuzzy in their guarantees, so I prefer to sleep \"significantly\" longer than a timeout I'm testing for. These are milliseconds and we have like 4 lines of code here so it's cutting it really close otherwise. ",
        "createdAt" : "2020-09-16T09:44:24Z",
        "updatedAt" : "2020-09-16T09:56:20Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d0b4318b65d3ff40751a756b838044db7b29d2aa",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +183,187 @@    stream.on(\"close\", mockClose);\n    mockInstance.serverSend({events: [], offset: '3'});\n    await new Promise(resolve => setTimeout(resolve, reconnectThreshold * 2));\n    mockConstructor.mockClear();\n    mockInstance.serverClose({code: 1, reason: 'test close'});"
  },
  {
    "id" : "ff6fa162-06dd-49e6-9430-0e25963f1b35",
    "prId" : 7066,
    "comments" : [
      {
        "id" : "8fa5b645-8c76-430f-b24e-ab315ad65277",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Why the name change? We still seem to call `streamQuery`.",
        "createdAt" : "2020-08-12T07:42:56Z",
        "updatedAt" : "2020-09-08T14:23:47Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "30015812-dcb0-4b4f-b00a-b08fd156c782",
        "parentId" : "8fa5b645-8c76-430f-b24e-ab315ad65277",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "These tests are really testing the underlying stream mechanism: what we do if the result is not in the proper format or if the websocket connection drops. They are not specific to any of the public query methods. I suppose replicating those tests for `streamQuery` and `streamFetchByKey` was an acceptable shortcut when there were only two of them, but now that there are four it seemed really pointless to keep testing the same stuff over and over.",
        "createdAt" : "2020-08-14T17:41:14Z",
        "updatedAt" : "2020-09-08T14:23:47Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2d0d5669-d88c-4dcf-a726-ee520e3abec1",
        "parentId" : "8fa5b645-8c76-430f-b24e-ab315ad65277",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Makes sense, thanks for the explanation!",
        "createdAt" : "2020-08-14T18:31:27Z",
        "updatedAt" : "2020-09-08T14:23:47Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ef0422dc9dbfe8749fff1b56b9a06706cecc569",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +121,125 @@});\n\ndescribe(\"streamSubmit\", () => {\n  test(\"receive unknown message\", () => {\n    const ledger = new Ledger(mockOptions);"
  },
  {
    "id" : "0b3a4c16-c8a8-42e1-b5de-f5b4fb749a19",
    "prId" : 7066,
    "comments" : [
      {
        "id" : "4d79c045-b9af-43d2-870a-770c62cb7235",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Why did you change this?",
        "createdAt" : "2020-08-12T08:00:59Z",
        "updatedAt" : "2020-09-08T14:23:47Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c14f66f3-503e-4efe-bfb8-63215199104a",
        "parentId" : "4d79c045-b9af-43d2-870a-770c62cb7235",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Because this is testing the code in the underlying `streamSubmit` function, so the external function we call doesn't matter here, and I wanted to make that explicit, rather than just redo the exact same test with each of the four public methods, all targeted specifically to testing the exact same behaviour of the underlying private method.",
        "createdAt" : "2020-08-14T17:42:59Z",
        "updatedAt" : "2020-09-08T14:23:47Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ef0422dc9dbfe8749fff1b56b9a06706cecc569",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +153,157 @@  test(\"receive errors\", () => {\n    const ledger = new Ledger(mockOptions);\n    const stream = ledger.streamFetchByKey(Foo, fooKey);\n    stream.on(\"change\", mockChange);\n    const restoreConsole = mockConsole();"
  },
  {
    "id" : "a3fb68a2-330c-4d80-8562-f90b808fa097",
    "prId" : 5416,
    "comments" : [
      {
        "id" : "33ee60c6-2edc-48a3-8bfb-7236c5528a17",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Can you please leave a hint why we are not reconnecting?",
        "createdAt" : "2020-04-14T09:43:03Z",
        "updatedAt" : "2020-04-14T10:01:56Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "322a70d5-42dc-4c69-ba07-fa66d03248f2",
        "parentId" : "33ee60c6-2edc-48a3-8bfb-7236c5528a17",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "added a hint.",
        "createdAt" : "2020-04-14T09:55:02Z",
        "updatedAt" : "2020-04-14T10:01:56Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "66ada6cd985bbd0ed3e23a2cc8ac9b3c1ff91066",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +183,187 @@    // check that the client doesn't try to reconnect again.  it should only reconnect if it\n    // received an event confirming the stream is live again, i.e. {events: [], offset: '3'}\n    mockInstance.serverClose({code: 1, reason: 'test close'});\n    expect(mockConstructor).not.toHaveBeenCalled();\n  });"
  },
  {
    "id" : "92ca2576-4a81-475b-86e5-6139a331fc30",
    "prId" : 5180,
    "comments" : [
      {
        "id" : "a0ed6944-4e86-467e-b0ea-69c303fe83fb",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Jest seems to have mocks for everything. Good find!",
        "createdAt" : "2020-03-26T08:36:57Z",
        "updatedAt" : "2020-03-31T15:39:02Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d1750ad64940421aef165938f3ec54231c3b408e",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +7,11 @@import * as jtv from \"@mojotech/json-type-validation\";\nimport type { EventEmitter } from 'events';\nimport mockConsole from \"jest-mock-console\";\n\nconst mockChange = jest.fn();"
  },
  {
    "id" : "51b84d13-0e66-4030-87cb-21c07d7a0b57",
    "prId" : 5180,
    "comments" : [
      {
        "id" : "eae3f10b-c9da-4053-9a6d-afd5082e544a",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Testing `streamFetchByKey` on a template without a key type doesn't really make sense. Let's fix the in a followup PR.",
        "createdAt" : "2020-03-31T15:09:53Z",
        "updatedAt" : "2020-03-31T15:39:02Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f7452cb2-f9d0-461a-9789-1c7db732552b",
        "parentId" : "eae3f10b-c9da-4053-9a6d-afd5082e544a",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "I added a key.",
        "createdAt" : "2020-03-31T15:24:26Z",
        "updatedAt" : "2020-03-31T15:39:03Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d1750ad64940421aef165938f3ec54231c3b408e",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +191,195 @@});\n\ndescribe(\"streamFetchByKey\", () => {\n  test(\"receive no event\", () => {\n    const ledger = new Ledger(mockOptions);"
  }
]