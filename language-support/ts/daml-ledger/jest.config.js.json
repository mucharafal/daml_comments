[
  {
    "id" : "ecbd3ff2-c901-46f5-8cc9-1a603ad98249",
    "prId" : 5180,
    "comments" : [
      {
        "id" : "6897f613-a22c-4613-b7a9-6f16d90e5b26",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "We don't depend on React here. Are you sure we need this?",
        "createdAt" : "2020-03-25T15:56:06Z",
        "updatedAt" : "2020-03-31T15:39:02Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7a9059ea-5a86-4851-947c-db9e69ae50d8",
        "parentId" : "6897f613-a22c-4613-b7a9-6f16d90e5b26",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "no, this is just copy pasta from the daml-react's jest.config.js. I removed it.",
        "createdAt" : "2020-03-25T18:47:33Z",
        "updatedAt" : "2020-03-31T15:39:02Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d1750ad64940421aef165938f3ec54231c3b408e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,38 @@\n+// Copyright (c) 2020 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+const moduleNameMapper = {\n+  '^@daml/types$': '../daml-types',\n+  '^@daml/ledger$': '../daml-ledger',\n+  // $1 used for @daml/react/ledgerStore\n+  '^@daml/react(.*)$': '../daml-react$1'"
  },
  {
    "id" : "80a8610e-8bd1-42cc-aebd-371f36a33f8f",
    "prId" : 5180,
    "comments" : [
      {
        "id" : "b5e2891e-dc82-4568-a6d5-e72c8bd72d4c",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "This might also not be needed for the same reason.",
        "createdAt" : "2020-03-25T15:56:21Z",
        "updatedAt" : "2020-03-31T15:39:02Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d1750ad64940421aef165938f3ec54231c3b408e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,38 @@\n+// Copyright (c) 2020 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+const moduleNameMapper = {\n+  '^@daml/types$': '../daml-types',\n+  '^@daml/ledger$': '../daml-ledger',\n+  // $1 used for @daml/react/ledgerStore\n+  '^@daml/react(.*)$': '../daml-react$1'\n+};\n+\n+// Bazel workaround for:\n+//\n+//   Invalid hook call. Hooks can only be called inside of the body of a function component.\n+//\n+// By default the test-case loads `react/cjs/react.development.js` and\n+// fails with the above error. A similar issue with `ts_devserver` suggests\n+// that `rules_nodejs` bundles conflicting versions of react in some of the\n+// artifacts. See https://github.com/bazelbuild/rules_nodejs/issues/1383 .\n+//\n+// We do not want to use this workaround when invoking the test with\n+// `yarn test`. We us the existence of the environment variable\n+// `TEST_WORKSPACE` as a proxy for whether the test was invoked from bazel.\n+if (process.env.TEST_WORKSPACE !== undefined) {\n+  moduleNameMapper['^react$'] = '<rootDir>/../../../node_modules/react/umd/react.development.js';\n+}"
  }
]