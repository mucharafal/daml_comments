[
  {
    "id" : "4a8ddeee-f290-4614-9122-75b60af46266",
    "prId" : 700,
    "comments" : [
      {
        "id" : "ffbe4ef9-f191-4d52-9363-738bcce0baca",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "You probably won't need this type annotation if you change the pattern below from `Right _` to `Right ()`, which is nicer since more explicit anyway.",
        "createdAt" : "2019-04-25T14:16:57Z",
        "updatedAt" : "2019-04-25T15:29:58Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2915643e-d980-44e8-aaa9-51b912dd2f45",
        "parentId" : "ffbe4ef9-f191-4d52-9363-738bcce0baca",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "It seems its the Left type of GRPCIOError which is why the annotation is needed",
        "createdAt" : "2019-04-25T15:10:13Z",
        "updatedAt" : "2019-04-25T15:29:58Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "bee4de24913d6bdd8d19435bc5083fd27968c7ee",
    "line" : 30,
    "diffHunk" : "@@ -0,0 +1,38 @@\n+{-# LANGUAGE GADTs             #-}\n+{-# LANGUAGE OverloadedLists   #-}\n+{-# LANGUAGE OverloadedStrings #-}\n+\n+import           Arithmetic\n+import           Network.GRPC.HighLevel.Generated\n+\n+clientConfig :: ClientConfig\n+clientConfig = ClientConfig { clientServerHost = \"localhost\"\n+                            , clientServerPort = 50051\n+                            , clientArgs = []\n+                            , clientSSLConfig = Nothing\n+                            }\n+main :: IO ()\n+main = withGRPCClient clientConfig $ \\client -> do\n+  Arithmetic{..} <- arithmeticClient client\n+\n+  -- Request for the Add RPC\n+  ClientNormalResponse (OneInt x) _meta1 _meta2 _status _details\n+    <- arithmeticAdd (ClientNormalRequest (TwoInts 2 2) 1 [])\n+  putStrLn (\"2 + 2 = \" ++ show x)\n+\n+  -- Request for the RunningSum RPC\n+  ClientWriterResponse reply _streamMeta1 _streamMeta2 streamStatus streamDtls\n+    <- arithmeticRunningSum $ ClientWriterRequest 1 [] $ \\send -> do\n+        eithers <- mapM send [OneInt 1, OneInt 2, OneInt 3]\n+                     :: IO [Either GRPCIOError ()]"
  },
  {
    "id" : "4fa2be5a-331c-41b3-b3b9-863fc4e807ad",
    "prId" : 700,
    "comments" : [
      {
        "id" : "12693e9f-a1f4-458d-9912-fb3837f3f568",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "`fail` rather than `error` when in IO please.",
        "createdAt" : "2019-04-25T14:41:02Z",
        "updatedAt" : "2019-04-25T15:29:58Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "26bbf976-5a55-47a3-b17c-f61c0e0606e9",
        "parentId" : "12693e9f-a1f4-458d-9912-fb3837f3f568",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "ok",
        "createdAt" : "2019-04-25T16:44:44Z",
        "updatedAt" : "2019-04-25T16:44:44Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "bee4de24913d6bdd8d19435bc5083fd27968c7ee",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,38 @@\n+{-# LANGUAGE GADTs             #-}\n+{-# LANGUAGE OverloadedLists   #-}\n+{-# LANGUAGE OverloadedStrings #-}\n+\n+import           Arithmetic\n+import           Network.GRPC.HighLevel.Generated\n+\n+clientConfig :: ClientConfig\n+clientConfig = ClientConfig { clientServerHost = \"localhost\"\n+                            , clientServerPort = 50051\n+                            , clientArgs = []\n+                            , clientSSLConfig = Nothing\n+                            }\n+main :: IO ()\n+main = withGRPCClient clientConfig $ \\client -> do\n+  Arithmetic{..} <- arithmeticClient client\n+\n+  -- Request for the Add RPC\n+  ClientNormalResponse (OneInt x) _meta1 _meta2 _status _details\n+    <- arithmeticAdd (ClientNormalRequest (TwoInts 2 2) 1 [])\n+  putStrLn (\"2 + 2 = \" ++ show x)\n+\n+  -- Request for the RunningSum RPC\n+  ClientWriterResponse reply _streamMeta1 _streamMeta2 streamStatus streamDtls\n+    <- arithmeticRunningSum $ ClientWriterRequest 1 [] $ \\send -> do\n+        eithers <- mapM send [OneInt 1, OneInt 2, OneInt 3]\n+                     :: IO [Either GRPCIOError ()]\n+        case sequence eithers of\n+          Left err -> error (\"Error while streaming: \" ++ show err)"
  }
]