[
  {
    "id" : "62e3d699-2687-41e1-9a45-8c44a849eb82",
    "prId" : 4986,
    "comments" : [
      {
        "id" : "8bc146bf-c4fb-4980-bf55-44ac89db02d2",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I just killed the non-shared part from the tests here. We haven’t used it for ages and I have absolutely no intention of bringing it back.",
        "createdAt" : "2020-03-13T13:33:14Z",
        "updatedAt" : "2020-03-13T13:36:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "dd753b062ca084c5db9ed44259af1cf7d44f2f11",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +704,708 @@darPath = mainWorkspace </> \"language-support/hs/bindings/for-tests.dar\"\n\ntestGroupWithSandbox :: FilePath -> Maybe Secret -> TestName -> [WithSandbox -> TestTree] -> TestTree\ntestGroupWithSandbox testDar mbSecret name tests =\n    withSandbox defaultSandboxConf { dars = [ testDar ], timeMode = Static } $ \\getSandboxPort ->"
  },
  {
    "id" : "2a105955-214c-4f11-8f71-57ba803ccd53",
    "prId" : 3736,
    "comments" : [
      {
        "id" : "12a15348-fc59-437e-af5b-39ff7ae6ddcc",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Here you are also inconsistent with the type synonym. You get back `String` from this function and the only use site is `setToken` which expects `Tok`.",
        "createdAt" : "2019-12-04T18:32:51Z",
        "updatedAt" : "2019-12-05T08:44:42Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d36c29e380cb356866501127c22a4dccd552d51a",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +670,674 @@              setToken tok ls\n\nmakeSignedJwt :: AuthSpec -> TestId -> String\nmakeSignedJwt AuthSpec{sharedSecret} tid = do\n  let parties = [ T.pack $ TL.unpack $ unParty $ p tid | p <- [alice,bob] ]"
  },
  {
    "id" : "1a02ae29-f00f-4f6f-8423-91fea14a290c",
    "prId" : 3736,
    "comments" : [
      {
        "id" : "775ecba9-74dd-4dcd-8fe6-7333a9bd2539",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "You now have two functions called `makeSignedJwt`, one here and one in the integration tests. The one here prepends `Bearer` whereas the other one doesn’t which is confusing. It would probably be nice to factor this out into a function in the ledger bindings. At the very least the two should be made consistent but it might also be a good idea to factor this out into a function in the ledger bindings:\r\n\r\n```\r\ndata SandboxJwtPayload = SandboxJwtPayload\r\n  { admin :: Bool\r\n  , actAs :: [Text]\r\n  -- There are more fields here, see https://github.com/digital-asset/daml/blob/f50424253fdab43920b35d24c37009d2edbec265/docs/source/tools/sandbox.rst but at least for this PR I would leave it at these.\r\n  }\r\nmakeSandboxJwt :: SandboxJwtPayload -> Signer -> String\r\nmakeSandboxJwt = …\r\n```",
        "createdAt" : "2019-12-04T18:41:16Z",
        "updatedAt" : "2019-12-05T08:44:42Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d36c29e380cb356866501127c22a4dccd552d51a",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +671,675 @@\nmakeSignedJwt :: AuthSpec -> TestId -> String\nmakeSignedJwt AuthSpec{sharedSecret} tid = do\n  let parties = [ T.pack $ TL.unpack $ unParty $ p tid | p <- [alice,bob] ]\n  let urc = JWT.ClaimsMap $ Map.fromList"
  },
  {
    "id" : "6bc5fdb1-a0bb-40ac-9add-1a5df8cff2bb",
    "prId" : 2440,
    "comments" : [
      {
        "id" : "42c9fba8-69b2-42e2-ae74-5ef3bf8d619a",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Does this work?\r\n```suggestion\r\n    , RecordField \"decimal\" $ VDecimal 123.456\r\n```",
        "createdAt" : "2019-08-07T10:56:31Z",
        "updatedAt" : "2019-08-07T10:56:43Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "db1b9376-6a06-4e63-b7a5-7e87d05f5654",
        "parentId" : "42c9fba8-69b2-42e2-ae74-5ef3bf8d619a",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "no, it didn't. - that why I added `read`\r\nshould it?\r\nwould it need a `FromString` instance for `Fixed` or something?\r\n\r\nremember, I don't know the details. I just let the compiler errors guide me :)\r\n",
        "createdAt" : "2019-08-07T11:10:39Z",
        "updatedAt" : "2019-08-07T11:10:39Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7774291d-c745-456d-bdae-60a9f0d38c49",
        "parentId" : "42c9fba8-69b2-42e2-ae74-5ef3bf8d619a",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Note that @hurryabit proposed `VDecimal 123.456` not `VDecimal \"123.456\"`. That definitely does not need an `IsString` instance and if it doesn’t work, I’d be interested in the error.",
        "createdAt" : "2019-08-07T11:28:39Z",
        "updatedAt" : "2019-08-07T11:28:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4c2b2c73-aa57-4467-8f8d-7dce448ed1ba",
        "parentId" : "42c9fba8-69b2-42e2-ae74-5ef3bf8d619a",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "For my proposal we need a `Fractional` instance, which `Fixed E10` should have.",
        "createdAt" : "2019-08-07T11:37:24Z",
        "updatedAt" : "2019-08-07T11:37:24Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "69e2a3f9-3c40-4b75-9ffc-9a42598fee95",
        "parentId" : "42c9fba8-69b2-42e2-ae74-5ef3bf8d619a",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "AH, sorry I should have read your proposal more closely.\r\n`VDecimal 123.456` works like a charm\r\n\r\nFrom `VDecimal \"123.456\"`, we get the following error as expected:\r\n```\r\nlanguage-support/hs/bindings/test/DA/Ledger/Tests.hs:519:40-48: error:\r\n    * No instance for (Data.String.IsString (Data.Fixed.Fixed LF.E10))\r\n        arising from the literal `\"123.456\"'\r\n    * In the first argument of `VDecimal', namely `\"123.456\"'\r\n      In the second argument of `($)', namely `VDecimal \"123.456\"'\r\n      In the expression: RecordField \"decimal\" $ VDecimal \"123.456\"\r\n    |\r\n519 |     , RecordField \"decimal\" $ VDecimal \"123.456\"\r\n    |                                        ^^^^^^^^^\r\n```\r\n",
        "createdAt" : "2019-08-08T07:09:10Z",
        "updatedAt" : "2019-08-08T07:09:10Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "eabad75dbc08b599fb34c3aa1143453e577fd92b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +517,521 @@    , RecordField \"list\"    $ VList []\n    , RecordField \"int\"     $ VInt 42\n    , RecordField \"decimal\" $ VDecimal (read \"123.456\")\n    , RecordField \"text\"    $ VText \"OMG lol\"\n    , RecordField \"time\"    $ VTime (MicroSecondsSinceEpoch $ 1000 * 1000 * 60 * 60 * 24 * 365 * 50)"
  },
  {
    "id" : "ccb45fba-c3c8-4b52-8111-46baa484b871",
    "prId" : 2368,
    "comments" : [
      {
        "id" : "0fea3f8d-ae45-4ffc-97fd-f271c3932413",
        "parentId" : null,
        "author" : null,
        "body" : "Instead of having a catch-all case, I would prefer this to be an explicit list of all cases to ensure the compiler catches it when new value constructors are added. But this is test code so maybe it's fine.",
        "createdAt" : "2019-08-01T12:30:15Z",
        "updatedAt" : "2019-08-01T12:37:16Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "7fb62a01-c1c4-4e06-ba7b-1d3e33e8c310",
        "parentId" : "0fea3f8d-ae45-4ffc-97fd-f271c3932413",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Agreed.",
        "createdAt" : "2019-08-05T11:50:36Z",
        "updatedAt" : "2019-08-05T11:51:20Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2c934103-315a-44f3-928b-1f4e1cf926d2",
        "parentId" : "0fea3f8d-ae45-4ffc-97fd-f271c3932413",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "I'm agreeing with 2nd half of Fran's comment - it would be overkill for test code.",
        "createdAt" : "2019-08-05T15:36:09Z",
        "updatedAt" : "2019-08-05T15:36:09Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f819135b9015a28811f8fa4cb7540952ddb7a3c7",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +558,562 @@    VOpt opt -> VOpt $ fmap detag opt\n    VMap m -> VMap $ fmap detag m\n    v -> v\n    where\n        detagRecord :: Record -> Record"
  },
  {
    "id" : "9281ed6b-c6d0-4074-91da-29abb2e28bc9",
    "prId" : 2305,
    "comments" : [
      {
        "id" : "51f8c6cb-0702-4290-88b1-63b7f3b23cdc",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I always have a hard time wrapping my head around double negation. I suggest to use `when (lid1 == lid2) $ ...`.",
        "createdAt" : "2019-07-29T09:26:12Z",
        "updatedAt" : "2019-07-29T09:26:20Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6b98de02223d8b1abee6ca5cac26c8076294aca7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +584,588 @@    Ledger.reset lid\n    lid2 <- getLedgerIdentity\n    unless (lid /= lid2) $ fail \"resetSandbox: reset did not change the ledger-id\"\n\n----------------------------------------------------------------------"
  },
  {
    "id" : "5be20273-0561-4e27-b63a-0174d7d731d0",
    "prId" : 2247,
    "comments" : [
      {
        "id" : "8a1965cd-14a1-4af5-95a5-c3f6d3cc6ebd",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Did you mean?\r\n```suggestion\r\n    liftIO $ assertEqual \"time1\" t00 time -- initially the time is 0.0\r\n```\r\nIf so, same below.",
        "createdAt" : "2019-07-22T15:05:43Z",
        "updatedAt" : "2019-07-22T15:06:09Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "209bca18d216a336e7cf23b4df124642400f16f9",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +384,388 @@\n    Just (Right time) <- liftIO $ timeout 1 (takeStream xs)\n    liftIO $ assertEqual \"time1\" t00 time -- initially the time is 0,0\n\n    Right () <- Ledger.setTime lid t00 t11"
  },
  {
    "id" : "a6bad206-90de-4d43-9b76-bda8108067c7",
    "prId" : 2185,
    "comments" : [
      {
        "id" : "0a23628e-4c00-480a-8820-50e14b5215d9",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Is there any expected result here we could test for? Or are we just happy if all of this runs through without any error?",
        "createdAt" : "2019-07-17T11:06:21Z",
        "updatedAt" : "2019-07-17T12:21:52Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "50998161-8677-43ba-9a9d-a64fa6231825",
        "parentId" : "0a23628e-4c00-480a-8820-50e14b5215d9",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "I like tests too. And I am happy for this test to be added.\r\n\r\nBut I just wanted to make it clear, and hope we all agree :\r\n\r\n- This new test is not really a test of the haskell ledger bindings.\r\n- It's not really even an integration test of the sandbox ledger and the haskell bindings.\r\n- What it is, is a stress test of the sandbox ledger, making use of the haskell ledger bindings.\r\n\r\n",
        "createdAt" : "2019-07-17T11:37:06Z",
        "updatedAt" : "2019-07-17T12:21:52Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "68647877-2488-457e-9a10-6d7545f4c0da",
        "parentId" : "0a23628e-4c00-480a-8820-50e14b5215d9",
        "author" : {
          "login" : "majcherm-da",
          "name" : "Michał Majcherski",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/43614029?u=8320ef35eb6289112c9c95df3e483f322c9aa60e&v=4"
        },
        "body" : "@hurryabit We're happy if it runs without an error, but I extended it to verify uniqueness of received ledger IDs as we have these at hand anyway.\r\n\r\n@nickchapman-da I'd say it actually is an integration test - we use gRPC for integration and this test starts failing after gRPC upgrade on Windows, while it works ok on current master. It might be caused by sth. specific to sandbox part, but not necessarily.",
        "createdAt" : "2019-07-17T12:31:22Z",
        "updatedAt" : "2019-07-17T12:31:22Z",
        "lastEditedBy" : {
          "login" : "majcherm-da",
          "name" : "Michał Majcherski",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/43614029?u=8320ef35eb6289112c9c95df3e483f322c9aa60e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "84d180333eb68f1038078284e2ce3e2b0fab6024",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +90,94 @@    lids <- forM [1 .. resetsCount] $ \\_ -> do\n        lid <- getLedgerIdentity\n        Ledger.reset lid\n        pure lid\n    liftIO $ assertEqual \"Ledger IDs are unique\" resetsCount (Set.size $ Set.fromList lids)"
  },
  {
    "id" : "0f380bf6-887c-4452-9090-0f493791969b",
    "prId" : 2067,
    "comments" : [
      {
        "id" : "0f8a527e-0e7b-43ea-936b-e52bc5a7f590",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Are we sure we need this?",
        "createdAt" : "2019-07-15T11:35:37Z",
        "updatedAt" : "2019-07-15T11:36:11Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4a9b23f6-861f-46df-a02f-8cb97685d5bd",
        "parentId" : "0f8a527e-0e7b-43ea-936b-e52bc5a7f590",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "yes, for the `signatories` field label",
        "createdAt" : "2019-07-15T13:03:16Z",
        "updatedAt" : "2019-07-15T13:03:17Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "db14f1a6e0a6eb3965e0abef2a70c66c0b63aece",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +3,7 @@\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE DuplicateRecordFields #-}\n\nmodule DA.Ledger.Tests (main) where"
  },
  {
    "id" : "bfdbcc88-4dd4-4033-b062-6e14ffdce611",
    "prId" : 2029,
    "comments" : [
      {
        "id" : "d47c6a7c-f8cf-4d3c-a10a-9f7da74b4ed7",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Maybe make a newtype for the verbosity?",
        "createdAt" : "2019-07-05T16:14:23Z",
        "updatedAt" : "2019-07-05T16:14:46Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b30d7d69-b70b-4d27-ac29-f01e11cb0a3a",
        "parentId" : "d47c6a7c-f8cf-4d3c-a10a-9f7da74b4ed7",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "ok",
        "createdAt" : "2019-07-08T10:29:27Z",
        "updatedAt" : "2019-07-08T10:29:27Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6e83098e-396b-4c30-9f82-f071d445f3eb",
        "parentId" : "d47c6a7c-f8cf-4d3c-a10a-9f7da74b4ed7",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "yeah, it's better",
        "createdAt" : "2019-07-08T10:29:45Z",
        "updatedAt" : "2019-07-08T10:29:45Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ec9c9d014032efd981e4522a47dfb769819d7c4a",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +175,179 @@tCreateWithoutKey withSandbox = testCase \"createWithoutKey\" $ run withSandbox $ \\pid -> do\n    lid <- getLedgerIdentity\n    let verbose = False\n    txs <- getAllTransactions lid alice verbose\n    let command = createWithoutKey pid alice 100"
  }
]