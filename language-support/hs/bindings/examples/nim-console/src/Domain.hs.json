[
  {
    "id" : "f2ad2f97-4d45-4bc0-8634-2fd85f3166b1",
    "prId" : 1572,
    "comments" : [
      {
        "id" : "04609342-cda0-4fa0-918b-71401b47fba5",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "`zipWith (-) p1 p2`",
        "createdAt" : "2019-06-10T13:23:06Z",
        "updatedAt" : "2019-06-10T13:25:24Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f9110a8c-03c5-4680-8118-e36faac23094",
        "parentId" : "04609342-cda0-4fa0-918b-71401b47fba5",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Thanks, I simplified it a bit",
        "createdAt" : "2019-06-10T15:28:34Z",
        "updatedAt" : "2019-06-10T15:28:35Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "533ee31b-3f77-413f-85a4-1f167d76d42b",
        "parentId" : "04609342-cda0-4fa0-918b-71401b47fba5",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "I don't see any simplifications pushed?",
        "createdAt" : "2019-06-10T17:28:11Z",
        "updatedAt" : "2019-06-10T17:28:22Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9e1c1163-a972-402a-ab13-3332af03df89",
        "parentId" : "04609342-cda0-4fa0-918b-71401b47fba5",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Next PR. Looks like this now:\r\n```\r\n    filter (\\Move{howMany} -> howMany > 0)\r\n    $ zipWithFrom (\\pileNum (x,y) -> Move {pileNum, howMany = x - y}) 1\r\n    $ zip p1 p2\r\n```",
        "createdAt" : "2019-06-12T07:46:50Z",
        "updatedAt" : "2019-06-12T07:46:50Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "66505802fdfef3cae7f19d041c1f552cc7a53963",
    "line" : 30,
    "diffHunk" : "@@ -70,3 +74,11 @@ legalMovesOfGame Game{piles} = do\n     (pileNum,remaining) <- zip [1..] piles\n     howMany <- [1..min 3 remaining]\n     return $ Move {pileNum,howMany}\n+\n+deduceMoves :: Game -> Game -> [Move]\n+deduceMoves Game{piles=p1} Game{piles=p2} =\n+    filter (\\Move{howMany} -> howMany > 0)\n+    $ map (\\(pileNum,howMany) -> Move {pileNum, howMany})\n+    $ zip [1..]\n+    $ map (\\(x,y) -> x - y)"
  },
  {
    "id" : "a9f5e8ef-c35a-4a99-9c1b-eb7d35b9b3eb",
    "prId" : 1572,
    "comments" : [
      {
        "id" : "56652263-68f6-4a7f-9eac-8413108dacce",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "`zipFrom 1`, or probably `zipWithFrom 1 (\\pileNum howMany -> ...`",
        "createdAt" : "2019-06-10T13:23:37Z",
        "updatedAt" : "2019-06-10T13:25:24Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "66505802fdfef3cae7f19d041c1f552cc7a53963",
    "line" : 29,
    "diffHunk" : "@@ -70,3 +74,11 @@ legalMovesOfGame Game{piles} = do\n     (pileNum,remaining) <- zip [1..] piles\n     howMany <- [1..min 3 remaining]\n     return $ Move {pileNum,howMany}\n+\n+deduceMoves :: Game -> Game -> [Move]\n+deduceMoves Game{piles=p1} Game{piles=p2} =\n+    filter (\\Move{howMany} -> howMany > 0)\n+    $ map (\\(pileNum,howMany) -> Move {pileNum, howMany})\n+    $ zip [1..]"
  },
  {
    "id" : "1ddda7ba-a0c7-4dce-8231-899f95e84780",
    "prId" : 1181,
    "comments" : [
      {
        "id" : "f144a771-40f1-4616-9e3b-28286bcf09ee",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Usually just import unqualified and completely.",
        "createdAt" : "2019-05-16T13:09:22Z",
        "updatedAt" : "2019-05-16T14:23:34Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0fd09c201af9ab3aa50443135b7098211c156639",
    "line" : 18,
    "diffHunk" : "@@ -0,0 +1,62 @@\n+-- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+-- SPDX-License-Identifier: Apache-2.0\n+\n+\n+-- Domain types (will originate in Daml model)\n+\n+module Domain(Player(..),\n+              Offer(..),\n+              Game(..),\n+              Move(..),\n+              playersOfGame,\n+              playersOfOffer,\n+              legalMovesOfGame,\n+              initGame,\n+              playMove\n+             ) where\n+\n+import Data.List as List(splitAt)"
  }
]