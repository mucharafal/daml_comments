[
  {
    "id" : "57a7cc40-60b7-4cfa-a32a-dffbd1524088",
    "prId" : 816,
    "comments" : [
      {
        "id" : "7ac6a285-f897-470a-81e0-ed9e2a8eb3ea",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "```suggestion\r\n    putStrLn $ \"Connecting to ledger on port: \" ++ show port\r\n```\r\n\r\nEveryone always puts spaces before and after `$`. Your `putStrLn$` gives me flash backs to visual basic.",
        "createdAt" : "2019-05-01T10:37:19Z",
        "updatedAt" : "2019-05-01T13:50:53Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "25537cd2-bb33-4e1a-b859-7ab6d9c412dc",
        "parentId" : "7ac6a285-f897-470a-81e0-ed9e2a8eb3ea",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "More generally, we hashed it out and advocate white space around all binary operators, notably including cons e.g `x : xs`.",
        "createdAt" : "2019-05-01T11:57:33Z",
        "updatedAt" : "2019-05-01T13:50:53Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ab7c43bf-4c62-4f7d-8807-3681aaf713db",
        "parentId" : "7ac6a285-f897-470a-81e0-ed9e2a8eb3ea",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "ok",
        "createdAt" : "2019-05-01T12:43:47Z",
        "updatedAt" : "2019-05-01T13:50:53Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ed28d8989bedb633bd82d5be0f472d1a86b1a780",
    "line" : null,
    "diffHunk" : "@@ -1,15 +1,40 @@\n -- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n -- SPDX-License-Identifier: Apache-2.0\n \n+{-# LANGUAGE OverloadedStrings #-}\n+\n module Main(main) where\n \n-import           LedgerIdentity     (Port (..), ledgerId)\n+import           Control.Concurrent\n+import           LedgerHL           as Ledger\n import           System.Environment\n \n main :: IO ()\n main = do\n-    putStrLn \"Ledger App (View)...\"\n-    [port] <- getArgs\n-    id <- LedgerIdentity.ledgerId (Port (read port))\n-    print (port, id)\n+    port <- fmap (Port . read . head) $ getArgs\n+    putStrLn$ \"Connecting to ledger on port: \" ++ show port"
  },
  {
    "id" : "bce1cee5-d884-4520-89bf-1a6a76f3a350",
    "prId" : 816,
    "comments" : [
      {
        "id" : "832ad5e5-c499-4b7f-9ddf-e843a37935b1",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "This return is redundant",
        "createdAt" : "2019-05-01T10:37:47Z",
        "updatedAt" : "2019-05-01T13:50:53Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ed28d8989bedb633bd82d5be0f472d1a86b1a780",
    "line" : null,
    "diffHunk" : "@@ -1,15 +1,40 @@\n -- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n -- SPDX-License-Identifier: Apache-2.0\n \n+{-# LANGUAGE OverloadedStrings #-}\n+\n module Main(main) where\n \n-import           LedgerIdentity     (Port (..), ledgerId)\n+import           Control.Concurrent\n+import           LedgerHL           as Ledger\n import           System.Environment\n \n main :: IO ()\n main = do\n-    putStrLn \"Ledger App (View)...\"\n-    [port] <- getArgs\n-    id <- LedgerIdentity.ledgerId (Port (read port))\n-    print (port, id)\n+    port <- fmap (Port . read . head) $ getArgs\n+    putStrLn$ \"Connecting to ledger on port: \" ++ show port\n+    h <- Ledger.connect port\n+    let id = Ledger.identity h\n+    putStrLn$ \"LedgerIdentity = \" <> show id\n+    putStrLn \"Getting Transaction streams.\"\n+    let alice = Party \"Alice\"\n+    let bob = Party \"Bob\"\n+    aliceTs <- Ledger.getTransactionStream h alice\n+    bobTs <- Ledger.getTransactionStream h bob\n+    putStrLn \"Watching Transaction streams.\"\n+    watch alice aliceTs\n+    watch bob bobTs\n+    waitForALongTime\n+    return ()"
  },
  {
    "id" : "c5cc9cac-3bd3-4edd-b0ae-910b39057b29",
    "prId" : 816,
    "comments" : [
      {
        "id" : "6f489549-d340-4c2d-af17-7065c2777c3f",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "```suggestion\r\nwatch party rs = void $forkIO $ loop (1::Int)\r\n```",
        "createdAt" : "2019-05-01T10:38:27Z",
        "updatedAt" : "2019-05-01T13:50:53Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "fb5d89b3-e1ab-475c-bde6-1e9ce7abc335",
        "parentId" : "6f489549-d340-4c2d-af17-7065c2777c3f",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Should there be a space there too? `void $ forkIO`?",
        "createdAt" : "2019-05-01T11:57:42Z",
        "updatedAt" : "2019-05-01T13:50:53Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b3f83e5f-a3b5-493d-80ba-72c5c50b15e3",
        "parentId" : "6f489549-d340-4c2d-af17-7065c2777c3f",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Gary, you are a tease :)",
        "createdAt" : "2019-05-01T12:47:38Z",
        "updatedAt" : "2019-05-01T13:50:53Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ed28d8989bedb633bd82d5be0f472d1a86b1a780",
    "line" : null,
    "diffHunk" : "@@ -1,15 +1,40 @@\n -- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n -- SPDX-License-Identifier: Apache-2.0\n \n+{-# LANGUAGE OverloadedStrings #-}\n+\n module Main(main) where\n \n-import           LedgerIdentity     (Port (..), ledgerId)\n+import           Control.Concurrent\n+import           LedgerHL           as Ledger\n import           System.Environment\n \n main :: IO ()\n main = do\n-    putStrLn \"Ledger App (View)...\"\n-    [port] <- getArgs\n-    id <- LedgerIdentity.ledgerId (Port (read port))\n-    print (port, id)\n+    port <- fmap (Port . read . head) $ getArgs\n+    putStrLn$ \"Connecting to ledger on port: \" ++ show port\n+    h <- Ledger.connect port\n+    let id = Ledger.identity h\n+    putStrLn$ \"LedgerIdentity = \" <> show id\n+    putStrLn \"Getting Transaction streams.\"\n+    let alice = Party \"Alice\"\n+    let bob = Party \"Bob\"\n+    aliceTs <- Ledger.getTransactionStream h alice\n+    bobTs <- Ledger.getTransactionStream h bob\n+    putStrLn \"Watching Transaction streams.\"\n+    watch alice aliceTs\n+    watch bob bobTs\n+    waitForALongTime\n+    return ()\n+\n+watch :: Show a => Party -> ResponseStream a -> IO ()\n+watch party rs = do _ <- forkIO $ loop (1::Int); return ()"
  },
  {
    "id" : "cd7f1d0e-eb8a-4583-9c93-5449da2455b5",
    "prId" : 816,
    "comments" : [
      {
        "id" : "8de4b591-1738-44e8-8899-3ad9ebbcb2ca",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Use System.Time.Extra.Sleep, and then you can work in seconds. But if you just want to wait \"forever\" a `getLine` might be reasonable - terminate when the user hits enter.",
        "createdAt" : "2019-05-01T10:39:06Z",
        "updatedAt" : "2019-05-01T13:50:53Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ed28d8989bedb633bd82d5be0f472d1a86b1a780",
    "line" : null,
    "diffHunk" : "@@ -1,15 +1,40 @@\n -- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n -- SPDX-License-Identifier: Apache-2.0\n \n+{-# LANGUAGE OverloadedStrings #-}\n+\n module Main(main) where\n \n-import           LedgerIdentity     (Port (..), ledgerId)\n+import           Control.Concurrent\n+import           LedgerHL           as Ledger\n import           System.Environment\n \n main :: IO ()\n main = do\n-    putStrLn \"Ledger App (View)...\"\n-    [port] <- getArgs\n-    id <- LedgerIdentity.ledgerId (Port (read port))\n-    print (port, id)\n+    port <- fmap (Port . read . head) $ getArgs\n+    putStrLn$ \"Connecting to ledger on port: \" ++ show port\n+    h <- Ledger.connect port\n+    let id = Ledger.identity h\n+    putStrLn$ \"LedgerIdentity = \" <> show id\n+    putStrLn \"Getting Transaction streams.\"\n+    let alice = Party \"Alice\"\n+    let bob = Party \"Bob\"\n+    aliceTs <- Ledger.getTransactionStream h alice\n+    bobTs <- Ledger.getTransactionStream h bob\n+    putStrLn \"Watching Transaction streams.\"\n+    watch alice aliceTs\n+    watch bob bobTs\n+    waitForALongTime\n+    return ()\n+\n+watch :: Show a => Party -> ResponseStream a -> IO ()\n+watch party rs = do _ <- forkIO $ loop (1::Int); return ()\n+    where loop n = do\n+              x <- nextResponse rs\n+              putStrLn $ show party <> \"(\" <> show n <> \") = \" <> show x\n+              loop (n+1)\n \n+waitForALongTime :: IO ()\n+waitForALongTime = do\n+    putStrLn \"Pause for a year\"\n+    threadDelay (10 ^ (6 :: Int) * 3600 * 24 * 365)"
  },
  {
    "id" : "42fc0602-ce06-4b74-974b-35bb8338b947",
    "prId" : 816,
    "comments" : [
      {
        "id" : "0d46052e-5d5f-4366-b782-d3fdb8ac9cbe",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Space?",
        "createdAt" : "2019-05-01T12:04:11Z",
        "updatedAt" : "2019-05-01T13:50:53Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ed28d8989bedb633bd82d5be0f472d1a86b1a780",
    "line" : null,
    "diffHunk" : "@@ -1,15 +1,40 @@\n -- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n -- SPDX-License-Identifier: Apache-2.0\n \n+{-# LANGUAGE OverloadedStrings #-}\n+\n module Main(main) where\n \n-import           LedgerIdentity     (Port (..), ledgerId)\n+import           Control.Concurrent\n+import           LedgerHL           as Ledger\n import           System.Environment\n \n main :: IO ()\n main = do\n-    putStrLn \"Ledger App (View)...\"\n-    [port] <- getArgs\n-    id <- LedgerIdentity.ledgerId (Port (read port))\n-    print (port, id)\n+    port <- fmap (Port . read . head) $ getArgs\n+    putStrLn$ \"Connecting to ledger on port: \" ++ show port\n+    h <- Ledger.connect port\n+    let id = Ledger.identity h\n+    putStrLn$ \"LedgerIdentity = \" <> show id"
  },
  {
    "id" : "2f0b8d38-3a00-4080-8923-1607ab1a9af9",
    "prId" : 816,
    "comments" : [
      {
        "id" : "3b9cd6e2-dd62-4ff8-ad86-cf309f1c7f58",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "If using the `getLine` as suggested by Neil, may be worth changing this to\r\n```suggestion\r\n    putStrLn \"Press Enter to continue\"\r\n```",
        "createdAt" : "2019-05-01T12:07:13Z",
        "updatedAt" : "2019-05-01T13:50:53Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ef07c5fd-6476-407d-be2d-dae1ea1e3787",
        "parentId" : "3b9cd6e2-dd62-4ff8-ad86-cf309f1c7f58",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "thanks",
        "createdAt" : "2019-05-01T13:00:29Z",
        "updatedAt" : "2019-05-01T13:50:53Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ed28d8989bedb633bd82d5be0f472d1a86b1a780",
    "line" : null,
    "diffHunk" : "@@ -1,15 +1,40 @@\n -- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n -- SPDX-License-Identifier: Apache-2.0\n \n+{-# LANGUAGE OverloadedStrings #-}\n+\n module Main(main) where\n \n-import           LedgerIdentity     (Port (..), ledgerId)\n+import           Control.Concurrent\n+import           LedgerHL           as Ledger\n import           System.Environment\n \n main :: IO ()\n main = do\n-    putStrLn \"Ledger App (View)...\"\n-    [port] <- getArgs\n-    id <- LedgerIdentity.ledgerId (Port (read port))\n-    print (port, id)\n+    port <- fmap (Port . read . head) $ getArgs\n+    putStrLn$ \"Connecting to ledger on port: \" ++ show port\n+    h <- Ledger.connect port\n+    let id = Ledger.identity h\n+    putStrLn$ \"LedgerIdentity = \" <> show id\n+    putStrLn \"Getting Transaction streams.\"\n+    let alice = Party \"Alice\"\n+    let bob = Party \"Bob\"\n+    aliceTs <- Ledger.getTransactionStream h alice\n+    bobTs <- Ledger.getTransactionStream h bob\n+    putStrLn \"Watching Transaction streams.\"\n+    watch alice aliceTs\n+    watch bob bobTs\n+    waitForALongTime\n+    return ()\n+\n+watch :: Show a => Party -> ResponseStream a -> IO ()\n+watch party rs = do _ <- forkIO $ loop (1::Int); return ()\n+    where loop n = do\n+              x <- nextResponse rs\n+              putStrLn $ show party <> \"(\" <> show n <> \") = \" <> show x\n+              loop (n+1)\n \n+waitForALongTime :: IO ()\n+waitForALongTime = do\n+    putStrLn \"Pause for a year\""
  },
  {
    "id" : "043301a3-22f5-48da-9eaf-95251e286d8e",
    "prId" : 755,
    "comments" : [
      {
        "id" : "27ae0460-e239-4419-b1f5-ca212f202092",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Copyright header",
        "createdAt" : "2019-04-29T10:47:11Z",
        "updatedAt" : "2019-04-29T13:22:39Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6e4f0b64-5294-4ead-aaaa-cd46d260da83",
        "parentId" : "27ae0460-e239-4419-b1f5-ca212f202092",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "done",
        "createdAt" : "2019-04-29T11:46:45Z",
        "updatedAt" : "2019-04-29T13:22:39Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7d1db8045e0b7241a3e130bf03f9013a8d6e2662",
    "line" : 3,
    "diffHunk" : "@@ -0,0 +1,12 @@\n+"
  }
]