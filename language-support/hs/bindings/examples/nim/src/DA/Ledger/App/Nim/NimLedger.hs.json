[
  {
    "id" : "881d0626-bc43-49b6-aa41-d905e579e735",
    "prId" : 2455,
    "comments" : [
      {
        "id" : "554fc208-f1f2-4960-b5b2-81373dc91b1b",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Can we at least check some module name or something a bit more specific than just grepping through the `show` output of the whole package? I also donâ€™t really understand why we cannot read the dar here like we do in the tests and do this properly.",
        "createdAt" : "2019-08-08T13:40:15Z",
        "updatedAt" : "2019-08-08T13:40:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e13cd4f1ba9c1d22003e77379481d936ea600230",
    "line" : 44,
    "diffHunk" : "@@ -31,9 +33,22 @@ run timeout ls  = runLedgerService ls timeout (configOfPort port)\n connect :: Logger -> IO Handle\n connect log = do\n     lid <- run 5 getLedgerIdentity\n-    ids <- run 5 $ listPackages lid\n-    [_,pid,_] <- return ids -- guess which is the Nim package -- TODO: fix this properly!\n-    return Handle{log,lid,pid}\n+\n+    discovery <- run 5 $ do\n+        pids <- listPackages lid\n+        forM pids $ \\pid -> do\n+            getPackage lid pid >>= \\case\n+                Nothing -> return (pid, False)\n+                Just package -> do\n+                    return (pid, containsNim package)\n+\n+    case List.filter snd discovery of\n+        [] -> fail \"cant find package containing Nim\"\n+        xs@(_:_:_) -> fail $ \"found multiple packages containing Nim: \" <> show (map fst xs)\n+        [(pid,_)] -> return Handle{log,lid,pid}\n+\n+containsNim :: LF.Package -> Bool\n+containsNim package = \"Nim\" `isInfixOf` show package -- TODO: be more principled"
  }
]