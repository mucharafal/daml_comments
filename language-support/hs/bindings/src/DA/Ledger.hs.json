[
  {
    "id" : "fb1b2a88-cdef-4744-b844-f2cf69aff0e3",
    "prId" : 2285,
    "comments" : [
      {
        "id" : "968f46fd-816c-477a-91ee-721cbf4fd260",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I would probably just inline the definition at this point. The helper doesn’t add that much. But I don’t feel strongly about this so your choice.",
        "createdAt" : "2019-07-25T10:39:11Z",
        "updatedAt" : "2019-07-25T10:41:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d5e4a4eab076ab2f3cb8f5143332e6a0450c98b9",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +39,43 @@\nconfigOfHostAndPort :: Host -> Port -> ClientConfig\nconfigOfHostAndPort host port =\n    ClientConfig { clientServerHost = host\n                 , clientServerPort = port"
  },
  {
    "id" : "e820dc1a-b1f7-47fa-817d-801602d77e88",
    "prId" : 2096,
    "comments" : [
      {
        "id" : "d69380da-673b-4f80-ab01-049e5a66b099",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Awesome, much nicer!",
        "createdAt" : "2019-07-11T12:40:51Z",
        "updatedAt" : "2019-07-11T12:46:54Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "638953034e6f609d8a4b38b0e801ac0015e339b4",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +72,76 @@    -> LedgerService a\nwithGetTransactions req =\n    bracket (getTransactions req) closeStreamLS\n\n"
  },
  {
    "id" : "3d96d613-c3b5-458b-b839-1fcab07fc622",
    "prId" : 2029,
    "comments" : [
      {
        "id" : "a185e06a-1700-4c6f-b5f3-e8cc7166706e",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Might be worth considering to chose a different name here given that `filter` is already in `Prelude` so this can be slightly confusing.",
        "createdAt" : "2019-07-05T15:50:42Z",
        "updatedAt" : "2019-07-05T16:14:46Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2703be9f-5089-48f8-86cc-909b3627e026",
        "parentId" : "a185e06a-1700-4c6f-b5f3-e8cc7166706e",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "The name `filter` originates in `transaction_service.proto`",
        "createdAt" : "2019-07-08T09:43:15Z",
        "updatedAt" : "2019-07-08T09:43:16Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ec9c9d014032efd981e4522a47dfb769819d7c4a",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +47,51 @@getAllTransactionTrees :: LedgerId -> Party -> Bool -> LedgerService (Stream TransactionTree)\ngetAllTransactionTrees lid party verbose = do\n    let filter = filterEverthingForParty party\n    let req = GetTransactionsRequest lid LedgerBegin Nothing filter verbose\n    getTransactionTrees req"
  },
  {
    "id" : "91b79932-3bf1-4a2e-a881-dc30f4d61e86",
    "prId" : 1342,
    "comments" : [
      {
        "id" : "a3df1d85-1fa8-4627-acd0-d98c8cb398ef",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Using the record selector for the last field would be more appropriate here.",
        "createdAt" : "2019-05-24T12:45:24Z",
        "updatedAt" : "2019-05-24T12:45:25Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c777060a-f485-4392-9466-9d9778fd5c8a",
        "parentId" : "a3df1d85-1fa8-4627-acd0-d98c8cb398ef",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "so: `TransactionService{transactionServiceGetLedgerEnd=rpc}`\r\nAlthough this is differently fragile to changes in the proto generated code.\r\nNot fragile on additional or reorded rpcs; but now fragile on the rpc name.\r\nBut overall this seems better.\r\n",
        "createdAt" : "2019-05-24T15:28:46Z",
        "updatedAt" : "2019-05-24T15:28:47Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "754f08b4-c1ad-4db7-946c-a343f05eb93d",
        "parentId" : "a3df1d85-1fa8-4627-acd0-d98c8cb398ef",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I would write\r\n```haskell\r\nlet rpc = transactionServiceGetLedgerEnd service\r\n```",
        "createdAt" : "2019-05-24T16:08:38Z",
        "updatedAt" : "2019-05-24T16:08:38Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b47e2ac0d39770b24721e1dcd04ee7bb4eed8269",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +120,124 @@    LL.withGRPCClient (config port) $ \\client -> do\n        service <- LL.transactionServiceClient client\n        let TransactionService _ _ _ _ _ _ rpc = service\n        let request = GetLedgerEndRequest (unLedgerId lid) noTrace\n        response <- rpc (ClientNormalRequest request timeout mdm)"
  }
]