[
  {
    "id" : "baffd515-2cde-446a-9ba5-8985e7cbf007",
    "prId" : 2075,
    "comments" : [
      {
        "id" : "9031fcb7-8b87-4fa3-97b3-8ce23c208f7c",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Might be a good idea to open a ticket for improving thread handling here so we donâ€™t forget about it.",
        "createdAt" : "2019-07-09T17:38:19Z",
        "updatedAt" : "2019-07-10T09:45:19Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7b48c9a5-ebec-417c-a613-511e38bb058b",
        "parentId" : "9031fcb7-8b87-4fa3-97b3-8ce23c208f7c",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "I will deal with the thread handling in the next PR",
        "createdAt" : "2019-07-10T09:47:45Z",
        "updatedAt" : "2019-07-10T09:47:45Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "884e82fa5eddc9e555fa8468edfda5a3e5394f6c",
    "line" : 22,
    "diffHunk" : "@@ -0,0 +1,27 @@\n+-- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+-- SPDX-License-Identifier: Apache-2.0\n+\n+{-# LANGUAGE GADTs #-}\n+\n+module DA.Ledger.Services.LedgerConfigurationService(getLedgerConfiguration) where\n+\n+import DA.Ledger.LedgerService\n+import DA.Ledger.Stream\n+import DA.Ledger.Types\n+import Control.Concurrent (forkIO)\n+import Network.GRPC.HighLevel.Generated\n+import DA.Ledger.GrpcWrapUtils\n+import DA.Ledger.Convert\n+import qualified Com.Digitalasset.Ledger.Api.V1.LedgerConfigurationService as LL\n+\n+getLedgerConfiguration :: LedgerId -> LedgerService (Stream LedgerConfiguration)\n+getLedgerConfiguration lid =\n+    makeLedgerService $ \\timeout config -> do\n+    stream <- newStream\n+    let request = LL.GetLedgerConfigurationRequest (unLedgerId lid) noTrace\n+    _ <- forkIO $"
  }
]