[
  {
    "id" : "8a7a61bd-1e4e-49cc-bedd-622484853418",
    "prId" : 2440,
    "comments" : [
      {
        "id" : "0c66634b-83ad-4d3a-98f1-bc26dbe239e7",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\ninstance Show Party where show p = \"'\" <> Text.unpack (unParty p) <> \"'\"\r\n```",
        "createdAt" : "2019-08-07T10:54:58Z",
        "updatedAt" : "2019-08-07T10:56:43Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "eabad75dbc08b599fb34c3aa1143453e577fd92b",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +277,281 @@\nnewtype Party = Party { unParty :: Text } deriving (Eq,Ord)\ninstance Show Party where show p = \"'\" <> (Text.unpack $ unParty p) <> \"'\"\n\nnewtype Verbosity = Verbosity { unVerbosity :: Bool } deriving (Eq,Ord,Show)"
  },
  {
    "id" : "c2c48b92-9a50-4204-aea2-6ad6a0fa29bc",
    "prId" : 2368,
    "comments" : [
      {
        "id" : "f5cd0fbb-28df-4eb6-979a-2f7e8cacf677",
        "parentId" : null,
        "author" : null,
        "body" : "Could you make the various `data` / `newtype` definitions in this file more visually uniform? I'm partial to the style used in here in `data Enum`, but consistency is more important than any particular preference anyway.",
        "createdAt" : "2019-08-01T12:34:49Z",
        "updatedAt" : "2019-08-01T12:37:16Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "362e1ef2-283c-46c9-a332-e69617459b56",
        "parentId" : "f5cd0fbb-28df-4eb6-979a-2f7e8cacf677",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Yes! Totally Agree. I have recently migrated to the style used here for Enum. And have it on my to-do list to migrate this entire file to that format. But I didn't want to mix up a reformatting into this PR.",
        "createdAt" : "2019-08-01T14:43:20Z",
        "updatedAt" : "2019-08-01T14:43:20Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "96215764-20f7-46f9-84f6-bf6fe951555f",
        "parentId" : "f5cd0fbb-28df-4eb6-979a-2f7e8cacf677",
        "author" : null,
        "body" : ":+1: ",
        "createdAt" : "2019-08-01T17:47:02Z",
        "updatedAt" : "2019-08-01T17:47:02Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "f819135b9015a28811f8fa4cb7540952ddb7a3c7",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +204,208 @@    { eid   :: Maybe Identifier\n    , cons  :: ConstructorId\n    } deriving (Eq,Ord,Show)\n\ndata Record"
  },
  {
    "id" : "d4b02026-e905-40e6-9597-39e0c393c30c",
    "prId" : 2368,
    "comments" : [
      {
        "id" : "398c4d09-b07b-457b-ba7b-305cdfc6330b",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "We're using `Fixed E10` as the payload in the DAML-LF AST. See https://github.com/digital-asset/daml/blob/705f014a888e2854e6776458abe4484b2929dbc2/compiler/daml-lf-ast/src/DA/Daml/LF/Ast/Base.hs#L195 and https://www.stackage.org/haddock/lts-13.30/base-4.12.0.0/Data-Fixed.html",
        "createdAt" : "2019-08-05T11:42:00Z",
        "updatedAt" : "2019-08-05T11:51:20Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b431e592-ec49-4c59-a85d-151db075c15b",
        "parentId" : "398c4d09-b07b-457b-ba7b-305cdfc6330b",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "ok, I'll try this...",
        "createdAt" : "2019-08-05T15:33:30Z",
        "updatedAt" : "2019-08-05T15:33:30Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1fa8be7a-a1e6-44f8-8f44-1e76ffb75ad3",
        "parentId" : "398c4d09-b07b-457b-ba7b-305cdfc6330b",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "ok, changing to `Fixed E10` as you suggest\r\nrequires some changes to the raise/lower convert functions (as expected)\r\nGood job I have round-tripping tests in place, or else I would have introduced a bug!",
        "createdAt" : "2019-08-07T10:39:34Z",
        "updatedAt" : "2019-08-07T10:39:34Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f819135b9015a28811f8fa4cb7540952ddb7a3c7",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +189,193 @@    | VList [Value]\n    | VInt Int\n    | VDecimal Text\n    | VText Text\n    | VTime MicroSecondsSinceEpoch"
  },
  {
    "id" : "28af34dc-1f4c-43bf-9d74-857294ec0dee",
    "prId" : 2368,
    "comments" : [
      {
        "id" : "96fd176b-d4e0-438d-9236-b6862466e59a",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I assume this field contains the name of the enum type. If so, we should use a better name, like `enumType`.",
        "createdAt" : "2019-08-05T11:45:14Z",
        "updatedAt" : "2019-08-05T11:51:20Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "72d7507b-2f43-463f-8c28-c5d80cc7c0a6",
        "parentId" : "96fd176b-d4e0-438d-9236-b6862466e59a",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "I was wondering if we could get rid of these fields entirely.\r\nThey are optional in the API.\r\nWhen sending they can always be omitted\r\nWhen receiving, they only get filled in in `verbose` mode.\r\nI don't really see what purpose they serve.",
        "createdAt" : "2019-08-05T15:33:14Z",
        "updatedAt" : "2019-08-05T15:33:14Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1de6a023-dee3-472c-8da9-388a1068a8b9",
        "parentId" : "96fd176b-d4e0-438d-9236-b6862466e59a",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "They make the Ledger API nominally typed instead of \"just\" structurally typed. For example, they are good for sanity checking.",
        "createdAt" : "2019-08-05T15:42:50Z",
        "updatedAt" : "2019-08-05T15:42:50Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f819135b9015a28811f8fa4cb7540952ddb7a3c7",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +202,206 @@\ndata Enum = Enum\n    { eid   :: Maybe Identifier\n    , cons  :: ConstructorId\n    } deriving (Eq,Ord,Show)"
  },
  {
    "id" : "e90422ba-c483-4dc8-a2ed-f63d825a81ee",
    "prId" : 2368,
    "comments" : [
      {
        "id" : "30fe0b48-a82d-4312-91a0-d3b6a0cc7e7b",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "The `show` instance for `Party` in DAML wraps the party name in single quote, eg. `'Alice'`. For the sake of consistency, we should do this here as well.",
        "createdAt" : "2019-08-05T11:49:49Z",
        "updatedAt" : "2019-08-05T11:51:20Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9723bb91-5803-4448-8750-cad203833d5b",
        "parentId" : "30fe0b48-a82d-4312-91a0-d3b6a0cc7e7b",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "ok",
        "createdAt" : "2019-08-05T15:35:05Z",
        "updatedAt" : "2019-08-05T15:35:05Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f819135b9015a28811f8fa4cb7540952ddb7a3c7",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +256,260 @@\nnewtype Party = Party { unParty :: Text } deriving (Eq,Ord)\ninstance Show Party where show = Text.unpack . unParty\n\nnewtype ModuleName = ModuleName { unModuleName :: Text } deriving (Eq,Ord,Show)"
  },
  {
    "id" : "99987792-308f-4e36-a96e-c711781efd4d",
    "prId" : 2321,
    "comments" : [
      {
        "id" : "fcb334ff-d2c7-4c47-8b7b-28e1a5e66f7d",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I’m not sure that type synonym adds anything over using `LL.Status` directly.",
        "createdAt" : "2019-07-29T18:55:12Z",
        "updatedAt" : "2019-07-29T18:55:22Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "342cdeb0-f6c7-4b4e-ad42-e0cb215aded1",
        "parentId" : "fcb334ff-d2c7-4c47-8b7b-28e1a5e66f7d",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I agree. Just re-exporting `LL.Status` should be good enough.",
        "createdAt" : "2019-07-30T07:19:50Z",
        "updatedAt" : "2019-07-30T07:20:02Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3515f2a9-a25e-42ea-9543-e251716b195d",
        "parentId" : "fcb334ff-d2c7-4c47-8b7b-28e1a5e66f7d",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "ok, will do",
        "createdAt" : "2019-07-30T08:17:27Z",
        "updatedAt" : "2019-07-30T08:17:28Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1f2db8aa702af32ed66d9fd525a174268d6fb0f2",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +229,233 @@        nanos   :: Integer }  deriving (Eq,Ord,Show)\n\ntype Status = LL.Status\n\nnewtype TemplateId = TemplateId Identifier -- TODO: remove this wrapping"
  },
  {
    "id" : "c6709500-506c-4642-8dea-eaee6db577f7",
    "prId" : 2075,
    "comments" : [
      {
        "id" : "063633c7-e0c6-4624-9354-479fb1a94aca",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "You could also just reexport `LL.Duration` instead of making a type synonym.",
        "createdAt" : "2019-07-10T06:46:42Z",
        "updatedAt" : "2019-07-10T09:45:19Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "884e82fa5eddc9e555fa8468edfda5a3e5394f6c",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +274,278 @@    } deriving (Eq,Ord,Show)\n\ntype Duration = LL.Duration"
  }
]