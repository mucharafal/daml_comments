[
  {
    "id" : "d0056b9a-459f-47a9-a842-859e8123387d",
    "prId" : 5070,
    "comments" : [
      {
        "id" : "5df72cb3-f247-45be-8b0e-69a812a2c047",
        "parentId" : null,
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Isn't this dangerous? If the file doesn't exist, then `glob` means we'll just get the empty list potentially obscuring an error?",
        "createdAt" : "2020-03-18T14:25:17Z",
        "updatedAt" : "2020-03-18T22:00:03Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7cf45eec-837f-4378-87a8-ac0d0266e228",
        "parentId" : "5df72cb3-f247-45be-8b0e-69a812a2c047",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "good point. I'll raise an explicit error for `[]`",
        "createdAt" : "2020-03-18T14:51:57Z",
        "updatedAt" : "2020-03-18T22:00:03Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8882f417-7400-4fca-9e61-c43ebcbb477a",
        "parentId" : "5df72cb3-f247-45be-8b0e-69a812a2c047",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Bazel itself now errors on empty globs unless you explicitly allow them with [`allow_empty`](https://docs.bazel.build/versions/master/be/functions.html#glob).",
        "createdAt" : "2020-03-18T15:14:54Z",
        "updatedAt" : "2020-03-18T22:00:03Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "77b7c09b-9b72-45a6-adf4-f70af0173320",
        "parentId" : "5df72cb3-f247-45be-8b0e-69a812a2c047",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "A DALF doesnâ€™t need to have any modules. I think you just want to omit the glob and use the list directly here.",
        "createdAt" : "2020-03-18T18:44:12Z",
        "updatedAt" : "2020-03-18T22:00:03Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6a40c43c-af7f-4577-88e3-8ecee4a4b4e9",
        "parentId" : "5df72cb3-f247-45be-8b0e-69a812a2c047",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "> Bazel itself now errors on empty globs unless you explicitly allow them with [`allow_empty`](https://docs.bazel.build/versions/master/be/functions.html#glob).\r\n\r\nunfortunately the `allow_empty` defaults to True, so it's not very useful as a mistake catcher\r\n\r\nI fixed the case where a glob wasn't necessary.\r\n",
        "createdAt" : "2020-03-18T20:56:16Z",
        "updatedAt" : "2020-03-18T22:00:03Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "bfe55337-a343-4d1a-8dba-1047646d2300",
        "parentId" : "5df72cb3-f247-45be-8b0e-69a812a2c047",
        "author" : {
          "login" : "aherrmann",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/732652?u=4be2e2d07cfb10d93ea9afddc5eccc867b736f9b&v=4"
        },
        "body" : "> unfortunately the `allow_empty` defaults to True, so it's not very useful as a mistake catcher\r\n\r\nIndeed, they've been pushing the switch to default to `allow_empty = False` to later and later times. Last I checked it should already have been switched in 2.0, but it looks like now it's scheduled for Bazel 4.0, see https://github.com/bazelbuild/bazel/issues/8195.\r\n",
        "createdAt" : "2020-03-19T08:47:12Z",
        "updatedAt" : "2020-03-19T08:47:12Z",
        "lastEditedBy" : {
          "login" : "aherrmann",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/732652?u=4be2e2d07cfb10d93ea9afddc5eccc867b736f9b&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1124c3bce4e6881fde26f5bd070e74b01ce38a50",
    "line" : null,
    "diffHunk" : "@@ -36,13 +36,11 @@ da_haskell_library(\n daml_compile(\n     name = \"for-tests\",\n     srcs = glob([\"test/daml/for-tests/*.daml\"]),\n-    main_src = \"test/daml/for-tests/Main.daml\",\n )\n \n daml_compile(\n     name = \"for-upload\",\n     srcs = glob([\"test/daml/for-upload/ExtraModule.daml\"]),"
  },
  {
    "id" : "bee74c49-483e-449c-a5dc-bfd438da213d",
    "prId" : 3607,
    "comments" : [
      {
        "id" : "0472a200-78ea-4c5e-a38c-21f63adcb83e",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Adding a dep on `MissingH` just for `strip` seems a bit excessive. If you do want to strip, I would prefer to use `Text.strip` or just inline an implementation using `takeWhile`.",
        "createdAt" : "2019-11-25T13:35:59Z",
        "updatedAt" : "2019-11-25T17:10:17Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ef41787eb4966f740c1592548f83beacd3dcca51",
    "line" : 4,
    "diffHunk" : "@@ -9,6 +9,7 @@ da_haskell_library(\n     name = \"hs-ledger\",\n     srcs = glob([\"src/**/*.hs\"]),\n     hackage_deps = [\n+        \"MissingH\","
  },
  {
    "id" : "2c704f76-2576-4495-bc75-43f8e027c90b",
    "prId" : 2096,
    "comments" : [
      {
        "id" : "9e0dbe8b-94f6-4ad8-9366-a38b32d8c931",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Are you sure the flakiness was caused by this?",
        "createdAt" : "2019-07-11T07:44:31Z",
        "updatedAt" : "2019-07-11T12:36:08Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7aeec206-d652-4b10-8fda-a12850e04a24",
        "parentId" : "9e0dbe8b-94f6-4ad8-9366-a38b32d8c931",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "nope. but I wanted to run on CI.\r\nI will reinstate this line unless I think I have managed to fix it.\r\n\r\nMy gut feeling is that the`haskell-grpc` library does not mask async-exceptions in places it should, and the low-level c-code gets in some inconsistent state.\r\n\r\nI plan to test this theory by some adding some aggressive masking in my code around certain calls to the `haskell-grpc` code.\r\n",
        "createdAt" : "2019-07-11T08:13:59Z",
        "updatedAt" : "2019-07-11T12:36:08Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "10c2bd42-4473-4c41-b9fe-b25c60cd53f1",
        "parentId" : "9e0dbe8b-94f6-4ad8-9366-a38b32d8c931",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "As discussed. We think the flakiness is due to some problem in `haskell-grpc`\r\nReinstated the`flaky = True` here.",
        "createdAt" : "2019-07-11T12:34:06Z",
        "updatedAt" : "2019-07-11T12:36:08Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "638953034e6f609d8a4b38b0e801ac0015e339b4",
    "line" : null,
    "diffHunk" : "@@ -72,7 +73,6 @@ da_haskell_test(\n         \":quickstart.dar\",\n         \"//ledger/sandbox:sandbox-binary\",\n     ],\n-    flaky = True,  # FIXME Remove this once #1927 is solved"
  },
  {
    "id" : "df23bba3-ceff-4b43-97ee-9b4b6f5caf72",
    "prId" : 1023,
    "comments" : [
      {
        "id" : "532cdfb3-92aa-4237-8c84-3661fac6bb41",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Why not 1.3?",
        "createdAt" : "2019-05-08T21:16:31Z",
        "updatedAt" : "2019-05-09T15:25:47Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "96031780-d738-4ff9-857a-4c424269f64c",
        "parentId" : "532cdfb3-92aa-4237-8c84-3661fac6bb41",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "You could also just not specify it in which case the default of the compiler will be used which has the advantage that we notice breakages when we upgrade that.",
        "createdAt" : "2019-05-09T06:40:26Z",
        "updatedAt" : "2019-05-09T15:25:47Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7599a81c-7dbc-4fd8-88c2-86f78a3483da",
        "parentId" : "532cdfb3-92aa-4237-8c84-3661fac6bb41",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "I removed the version",
        "createdAt" : "2019-05-09T12:17:08Z",
        "updatedAt" : "2019-05-09T15:25:47Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e332e354ce4d8c092b38a1ac64a702adfb8a2b44",
    "line" : null,
    "diffHunk" : "@@ -36,3 +37,36 @@ da_haskell_binary(\n         \"//language-support/hs/bindings:hs-ledger\",\n     ],\n )\n+\n+daml_compile(\n+    name = \"quickstart\",\n+    srcs = glob([\"test/daml/quickstart/*.daml\"]),\n+    main_src = \"test/daml/quickstart/Main.daml\",\n+    target = \"1.1\","
  },
  {
    "id" : "a96dbf50-1b6c-4561-b93f-e22bcb302a6c",
    "prId" : 879,
    "comments" : [
      {
        "id" : "5993adbb-cff4-4dbc-b1d9-688416b3064a",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Can we get a better name?",
        "createdAt" : "2019-05-03T10:18:29Z",
        "updatedAt" : "2019-05-03T10:20:18Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8115afd41b7797436684816ff474f2ce0f10f185",
    "line" : 6,
    "diffHunk" : "@@ -21,12 +21,15 @@ da_haskell_library(\n )\n \n da_haskell_binary(\n-    name = \"examples-view\",\n-    srcs = [\"examples/View.hs\"],\n+    name = \"play\","
  },
  {
    "id" : "48fd686a-7875-4d03-903b-2e0bbaab7065",
    "prId" : 816,
    "comments" : [
      {
        "id" : "94e9665e-e36e-4823-b3d1-5aeb9da7ee51",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "No point checking in commented out dependencies",
        "createdAt" : "2019-05-01T10:36:36Z",
        "updatedAt" : "2019-05-01T13:50:53Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ed28d8989bedb633bd82d5be0f472d1a86b1a780",
    "line" : null,
    "diffHunk" : "@@ -9,7 +9,10 @@ da_haskell_library(\n     hazel_deps = [\n         \"base\",\n         \"text\",\n+        \"vector\",\n         \"containers\",\n+        \"proto3-suite\",\n+        #\"proto3-wire\","
  },
  {
    "id" : "2f4a634f-8128-48e9-87c6-8de48346895d",
    "prId" : 755,
    "comments" : [
      {
        "id" : "57da895f-3446-49f2-89f7-725f564c9108",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n    srcs = glob([\"src/**/*.hs\"]),\r\n```",
        "createdAt" : "2019-04-29T09:39:23Z",
        "updatedAt" : "2019-04-29T13:22:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "966adb9b-6c66-40e8-8442-77b48d2a3a94",
        "parentId" : "57da895f-3446-49f2-89f7-725f564c9108",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "ok",
        "createdAt" : "2019-04-29T11:52:42Z",
        "updatedAt" : "2019-04-29T13:22:39Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7d1db8045e0b7241a3e130bf03f9013a8d6e2662",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,36 @@\n+# Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+load(\"//bazel_tools:haskell.bzl\", \"da_haskell_library\", \"da_haskell_binary\")\n+\n+filegroup(\n+    name = \"hs-ledger-sources\",\n+    srcs = glob([\"src/*.hs\"]),"
  },
  {
    "id" : "6ef63610-5a22-4f49-b4d9-90eb87686a63",
    "prId" : 755,
    "comments" : [
      {
        "id" : "f4095288-b1b2-4f30-afbf-1043648d8661",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Why is this a filegroup? I would just inline the `glob` here.",
        "createdAt" : "2019-04-29T09:39:41Z",
        "updatedAt" : "2019-04-29T13:22:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5b1d3c4a-a340-429c-84bd-6bd502d334ac",
        "parentId" : "f4095288-b1b2-4f30-afbf-1043648d8661",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "ok",
        "createdAt" : "2019-04-29T11:54:06Z",
        "updatedAt" : "2019-04-29T13:22:39Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7d1db8045e0b7241a3e130bf03f9013a8d6e2662",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,36 @@\n+# Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+load(\"//bazel_tools:haskell.bzl\", \"da_haskell_library\", \"da_haskell_binary\")\n+\n+filegroup(\n+    name = \"hs-ledger-sources\",\n+    srcs = glob([\"src/*.hs\"]),\n+    visibility = [\"//visibility:private\"],\n+)\n+\n+da_haskell_library(\n+    name = \"hs-ledger\",\n+    srcs = [\":hs-ledger-sources\"],"
  },
  {
    "id" : "03289906-9c5a-4cc2-a33e-0f0e591eb1d7",
    "prId" : 755,
    "comments" : [
      {
        "id" : "b858f32f-a839-4c14-98bf-4c8f392da915",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n    name = \"examples_view\",\r\n```\r\nI am not sure if slashes in filenames work but they are at least very confusing so I would avoid them.",
        "createdAt" : "2019-04-29T09:40:47Z",
        "updatedAt" : "2019-04-29T13:22:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "79346fa1-cfe1-4a4b-ad2b-1b7499848f56",
        "parentId" : "b858f32f-a839-4c14-98bf-4c8f392da915",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "I saw the use of slashes in the bazel doc - they do work - but I agree perhaps best to avoid.\r\nDash vs Underscore?\r\nI already chose to use dash to be consistent when adding to existing BUILD.bazel files.\r\nI'll use that here.\r\n",
        "createdAt" : "2019-04-29T11:41:34Z",
        "updatedAt" : "2019-04-29T13:22:39Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7d1db8045e0b7241a3e130bf03f9013a8d6e2662",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,36 @@\n+# Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+load(\"//bazel_tools:haskell.bzl\", \"da_haskell_library\", \"da_haskell_binary\")\n+\n+filegroup(\n+    name = \"hs-ledger-sources\",\n+    srcs = glob([\"src/*.hs\"]),\n+    visibility = [\"//visibility:private\"],\n+)\n+\n+da_haskell_library(\n+    name = \"hs-ledger\",\n+    srcs = [\":hs-ledger-sources\"],\n+    hazel_deps = [\n+        \"base\",\n+        \"text\",\n+        \"containers\",\n+    ],\n+    visibility = [\"//visibility:public\"],\n+    deps = [\n+        \"//ledger-api/grpc-definitions:ledger-api-haskellpb\",\n+        \"//nix/third-party/gRPC-haskell:grpc-haskell\",\n+    ],\n+)\n+\n+da_haskell_binary(\n+    name = \"examples/view\","
  }
]