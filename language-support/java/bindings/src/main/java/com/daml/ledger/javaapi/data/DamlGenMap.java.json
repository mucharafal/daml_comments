[
  {
    "id" : "121b7275-90eb-4b1f-8ea4-d506676bda24",
    "prId" : 3549,
    "comments" : [
      {
        "id" : "d5d63c16-1915-4f2a-be37-e588b1c86445",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "You could do something like this:\r\n\r\n```java\r\nreturn collectingAndThen(\r\n    Collectors.toMap(\r\n        keyMapper,\r\n        valueMapper,\r\n        (left, right) -> right,\r\n        LinkedHashMap::new),\r\n    DamlGenMap::new);\r\n```\r\n\r\nNot sure whether this is better or worse.",
        "createdAt" : "2019-11-20T13:59:09Z",
        "updatedAt" : "2019-11-21T22:39:07Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "79bdf64e-2bc9-4a7c-aaa1-17fcff282507",
        "parentId" : "d5d63c16-1915-4f2a-be37-e588b1c86445",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I do not find that much better. \r\nYour comment  \"Not sure whether this is better or worse.\" does not really help me to choose.",
        "createdAt" : "2019-11-20T16:20:11Z",
        "updatedAt" : "2019-11-21T22:39:07Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "435f03988f317b31110707522fa59fe2182f74a7",
    "line" : null,
    "diffHunk" : "@@ -22,15 +21,30 @@ public DamlGenMap(java.util.Map<Value, Value> value) {\n         this.value = value;\n     }\n \n+    public static <T> Collector<T, Map<Value, Value>, DamlGenMap> collector(\n+            Function<T, Value> keyMapper,\n+            Function<T, Value> valueMapper) {\n+\n+        return Collector.of(\n+                LinkedHashMap::new,\n+                (acc, entry) -> acc.put(keyMapper.apply(entry), valueMapper.apply(entry)),\n+                (left, right) -> {\n+                    left.putAll(right);\n+                    return left;\n+                },\n+                DamlGenMap::new\n+        );"
  },
  {
    "id" : "deb0b2f1-e793-4725-a3bb-6bfdfcd2cd10",
    "prId" : 3549,
    "comments" : [
      {
        "id" : "e1eb853b-8ff8-4232-b52d-8ed3ec35595e",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "```suggestion\r\npublic final class DamlGenMap extends Value {\r\n```",
        "createdAt" : "2019-11-20T14:48:26Z",
        "updatedAt" : "2019-11-21T22:39:07Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e5da327f-f397-4873-a263-60b5f72f95b8",
        "parentId" : "e1eb853b-8ff8-4232-b52d-8ed3ec35595e",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2019-11-21T12:23:57Z",
        "updatedAt" : "2019-11-21T22:39:07Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "435f03988f317b31110707522fa59fe2182f74a7",
    "line" : null,
    "diffHunk" : "@@ -7,12 +7,11 @@\n import org.checkerframework.checker.nullness.qual.NonNull;\n \n import javax.annotation.Nonnull;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.Objects;\n-import java.util.StringJoiner;\n+import java.util.*;\n+import java.util.function.Function;\n+import java.util.stream.Collector;\n \n-public class DamlGenMap extends Value {\n+final public class DamlGenMap extends Value {"
  },
  {
    "id" : "3942567d-e6b6-442f-b531-d9e7b18752bd",
    "prId" : 3549,
    "comments" : [
      {
        "id" : "e7f5ebbd-b35b-4e31-87f2-0e71a21a339b",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Is `DamlGenMap` supposed to be immutable? If it is, we might want to clone the map here (or make this private, and make a public factory method that clones it).",
        "createdAt" : "2019-11-20T14:51:32Z",
        "updatedAt" : "2019-11-21T22:39:07Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d1be78c7-71ec-461a-ab9e-f2d48c1eee0e",
        "parentId" : "e7f5ebbd-b35b-4e31-87f2-0e71a21a339b",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "It is not suppose to be immutable. At least I copy from `DamlList` where the underlying list is mutable.\r\n@gerolf-da should I make `DamlList`, `DamlMap`, and `DamlGenMap` immutable ? ",
        "createdAt" : "2019-11-20T16:13:45Z",
        "updatedAt" : "2019-11-21T22:39:07Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "0310aa8f-ed31-47ca-ba37-9e75d61d5f78",
        "parentId" : "e7f5ebbd-b35b-4e31-87f2-0e71a21a339b",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Yes, I was looking at `DamlList` recently in another context and I noticed it there too. Ideally we copy the map (the values themselves should be already immutable).",
        "createdAt" : "2019-11-20T16:35:41Z",
        "updatedAt" : "2019-11-21T22:39:07Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "435f03988f317b31110707522fa59fe2182f74a7",
    "line" : null,
    "diffHunk" : "@@ -22,15 +21,30 @@ public DamlGenMap(java.util.Map<Value, Value> value) {\n         this.value = value;"
  },
  {
    "id" : "88c13112-17c2-4e34-a06b-91a2d0ac6c77",
    "prId" : 3549,
    "comments" : [
      {
        "id" : "83913b3b-1dee-4e01-9246-21201ae7f95a",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "If the map is supposed to be immutable, might wanna return `Collections.unmodifiableMap(value)` here.",
        "createdAt" : "2019-11-20T14:51:35Z",
        "updatedAt" : "2019-11-21T22:39:07Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a1b2512a-594f-4a25-94f6-1a59474f54f6",
        "parentId" : "83913b3b-1dee-4e01-9246-21201ae7f95a",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "In fact if we do not copy the map given as argument in the constructor, this is pretty useless. \r\n ",
        "createdAt" : "2019-11-20T16:24:59Z",
        "updatedAt" : "2019-11-21T22:39:07Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "435f03988f317b31110707522fa59fe2182f74a7",
    "line" : null,
    "diffHunk" : "@@ -22,15 +21,30 @@ public DamlGenMap(java.util.Map<Value, Value> value) {\n         this.value = value;\n     }\n \n+    public static <T> Collector<T, Map<Value, Value>, DamlGenMap> collector(\n+            Function<T, Value> keyMapper,\n+            Function<T, Value> valueMapper) {\n+\n+        return Collector.of(\n+                LinkedHashMap::new,\n+                (acc, entry) -> acc.put(keyMapper.apply(entry), valueMapper.apply(entry)),\n+                (left, right) -> {\n+                    left.putAll(right);\n+                    return left;\n+                },\n+                DamlGenMap::new\n+        );\n+    }\n+\n     public @Nonnull\n     java.util.Map<Value, Value> getMap() { return value; }"
  },
  {
    "id" : "bf5a2e57-f107-4a9d-b65d-55836610d5b6",
    "prId" : 3549,
    "comments" : [
      {
        "id" : "a3f9977e-c942-4410-8779-fe94a04a0dcc",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Did you mean to use both `Nonnull` and `NonNull`?",
        "createdAt" : "2019-11-20T20:18:09Z",
        "updatedAt" : "2019-11-21T22:39:07Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f2b412c8-b236-47c6-bb06-e7fb00555710",
        "parentId" : "a3f9977e-c942-4410-8779-fe94a04a0dcc",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2019-11-21T12:24:20Z",
        "updatedAt" : "2019-11-21T22:39:07Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "435f03988f317b31110707522fa59fe2182f74a7",
    "line" : null,
    "diffHunk" : "@@ -13,12 +13,24 @@\n \n public final class DamlGenMap extends Value {\n \n-    private static DamlGenMap EMPTY = new DamlGenMap(Collections.EMPTY_MAP);\n+    private final Map<Value, Value> map;\n \n-    private final java.util.Map<Value, Value> value;\n+    /**\n+     * The map that is passed to this constructor must not be changed\n+     * once passed.\n+     */\n+    private DamlGenMap(@NonNull Map<@NonNull Value, @NonNull Value> value) {\n+        this.map = value;\n+    }\n+\n+    private static @Nonnull DamlGenMap fromPrivateMap(@NonNull Map<@NonNull Value, @NonNull Value> map){"
  }
]