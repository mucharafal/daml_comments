[
  {
    "id" : "e98d9fb4-3506-46a5-aaee-1abd8c2a705b",
    "prId" : 1814,
    "comments" : [
      {
        "id" : "a5acf86b-00c4-485e-b0bc-e2bd7abf26d8",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Technically this doesn't prevent the caller of the constructor from modifying the set referenced by `observers`. To be 100% guarded against this, we'd have to copy the parameter into a new `Set` (luckily Strings are immutable) and wrap them in an unmodifiable set.",
        "createdAt" : "2019-06-24T06:50:34Z",
        "updatedAt" : "2019-06-26T13:27:04Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a67ee225-410a-4aa3-8e71-0e12f03e78c8",
        "parentId" : "a5acf86b-00c4-485e-b0bc-e2bd7abf26d8",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Ah, good catch, thanks!",
        "createdAt" : "2019-06-24T10:19:23Z",
        "updatedAt" : "2019-06-26T13:27:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "71234ba4-8cb7-432f-99ab-d716cec25387",
        "parentId" : "a5acf86b-00c4-485e-b0bc-e2bd7abf26d8",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I just noticed I'm actually already performing the copy in the `fromProto` method, but the constructor is clearly the safe place where this invariant can be fully protected. I'll move the copies here and add one for the `witnessParties` argument as well.",
        "createdAt" : "2019-06-24T10:27:34Z",
        "updatedAt" : "2019-06-26T13:27:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ed489b1c-b0a9-4375-bb97-02af2d192e1e",
        "parentId" : "a5acf86b-00c4-485e-b0bc-e2bd7abf26d8",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Mh, I was actually making the copy to make the type coming from the ProtoBuffer-generated code (which uses `List`s) compatible with the one I wrote (which uses `Set`s). What if I change the constructor to take `Collection`s? It would be backward compatible.",
        "createdAt" : "2019-06-24T10:30:18Z",
        "updatedAt" : "2019-06-26T13:27:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "cc6b2732-623f-45bc-9b2c-2b973a320317",
        "parentId" : "a5acf86b-00c4-485e-b0bc-e2bd7abf26d8",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Sorry, I lost the thread here. Which copy are you referring to? The one in `fromProto`?",
        "createdAt" : "2019-06-24T11:29:04Z",
        "updatedAt" : "2019-06-26T13:27:04Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4355c7f3-1d61-4239-8ea8-49bbef39710f",
        "parentId" : "a5acf86b-00c4-485e-b0bc-e2bd7abf26d8",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Sorry, I got it now. Do you want to change the parameter for `witnessParties` to be `Collection` instead of `List`?",
        "createdAt" : "2019-06-24T11:55:04Z",
        "updatedAt" : "2019-06-26T13:27:04Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "444b44e3-3fe9-499f-a7d1-1db2212a64bf",
        "parentId" : "a5acf86b-00c4-485e-b0bc-e2bd7abf26d8",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Mostly the other two to avoid unnecessary extra-copying, but I would add `witnessParties` mostly for consistency. In the end I decided to keep the `witnessParties` as it is and only ask a generic collection for `signatories` and `observers`. Commit coming.",
        "createdAt" : "2019-06-24T13:18:52Z",
        "updatedAt" : "2019-06-26T13:27:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c4039747-95ea-4d9b-bd60-e1e045b18ea2",
        "parentId" : "a5acf86b-00c4-485e-b0bc-e2bd7abf26d8",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/1814/commits/e7bcb1faf5331d9cdb937c00f8ab7efe71df38c1",
        "createdAt" : "2019-06-24T14:44:56Z",
        "updatedAt" : "2019-06-26T13:27:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "537cda6e4f290b219868ccfcbbf8534deed162d9",
    "line" : null,
    "diffHunk" : "@@ -27,14 +25,20 @@\n \n     private final Optional<Value> contractKey;\n \n-    public CreatedEvent(@NonNull List<@NonNull String> witnessParties, @NonNull String eventId, @NonNull Identifier templateId, @NonNull String contractId, @NonNull Record arguments, @NonNull Optional<String> agreementText, @NonNull Optional<Value> contractKey) {\n-        this.witnessParties = witnessParties;\n+    private final @NonNull Set<@NonNull String> signatories;\n+\n+    private final @NonNull Set<@NonNull String> observers;\n+\n+    public CreatedEvent(@NonNull List<@NonNull String> witnessParties, @NonNull String eventId, @NonNull Identifier templateId, @NonNull String contractId, @NonNull Record arguments, @NonNull Optional<String> agreementText, @NonNull Optional<Value> contractKey, @NonNull Set<@NonNull String> signatories, @NonNull Set<@NonNull String> observers) {\n+        this.witnessParties = Collections.unmodifiableList(witnessParties);\n         this.eventId = eventId;\n         this.templateId = templateId;\n         this.contractId = contractId;\n         this.arguments = arguments;\n         this.agreementText = agreementText;\n         this.contractKey = contractKey;\n+        this.signatories = Collections.unmodifiableSet(signatories);\n+        this.observers = Collections.unmodifiableSet(observers);"
  }
]