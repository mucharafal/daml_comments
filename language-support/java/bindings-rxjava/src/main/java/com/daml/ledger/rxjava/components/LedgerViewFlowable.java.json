[
  {
    "id" : "6b7c746f-c36f-4e4e-bd68-f47aa7ea4049",
    "prId" : 1236,
    "comments" : [
      {
        "id" : "6d2e72e2-824b-408b-a835-666ad2ad961e",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I think it's permitted to return a subclass of the originally specified return type in a method override. This means we wouldn't need the additional method.",
        "createdAt" : "2019-05-20T11:06:29Z",
        "updatedAt" : "2019-05-21T07:51:49Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "bd43980d-2901-475a-bcf5-eaee58634e86",
        "parentId" : "6d2e72e2-824b-408b-a835-666ad2ad961e",
        "author" : {
          "login" : "gaborh-da",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/33900822?v=4"
        },
        "body" : "You can return it but you cannot modify the return type \"to preserve the Subtype instead of returning the Supertype\".",
        "createdAt" : "2019-05-20T11:53:04Z",
        "updatedAt" : "2019-05-21T07:51:49Z",
        "lastEditedBy" : {
          "login" : "gaborh-da",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/33900822?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "031166c3-ae80-4db5-b483-c4ad26e6eed2",
        "parentId" : "6d2e72e2-824b-408b-a835-666ad2ad961e",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Hm, so this class compiles and can be used exactly how you envisioned:\r\n\r\n```java\r\n    /**\r\n     * A ledger view for unit testing of bots.\r\n     *\r\n     * @param <R> The type of the contracts in this application.\r\n     */\r\n    public static class LedgerTestView<R> extends LedgerView<R> {\r\n        public LedgerTestView(PMap<String, PMap<Identifier, PSet<String>>> commandIdToContractIds,\r\n                   PMap<Identifier, PMap<String, PSet<String>>> contractIdsToCommandIds,\r\n                   PMap<Identifier, PMap<String, R>> pendingContractSet,\r\n                   PMap<Identifier, PMap<String, R>> activeContractSet) {\r\n            super(commandIdToContractIds, contractIdsToCommandIds, pendingContractSet, activeContractSet);\r\n        }\r\n\r\n        @Override\r\n        public LedgerTestView<R> addActiveContract(Identifier templateId, String contractId, R r) {\r\n            LedgerView lv = super.addActiveContract(templateId, contractId, r);\r\n            return new LedgerTestView<R>(\r\n                    lv.commandIdToContractIds,\r\n                    lv.contractIdsToCommandIds,\r\n                    lv.pendingContractSet,\r\n                    lv.activeContractSet);\r\n        }\r\n    }\r\n\r\n```",
        "createdAt" : "2019-05-20T12:33:43Z",
        "updatedAt" : "2019-05-21T07:51:49Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b3ebf8b0-34e9-4a86-8d04-f1e6cdce0335",
        "parentId" : "6d2e72e2-824b-408b-a835-666ad2ad961e",
        "author" : {
          "login" : "gaborh-da",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/33900822?v=4"
        },
        "body" : "Well, in the meanwhile we came to the same conclusion as written above ^ We need to modify some visibility modifiers from private to protected to allow access of those fields.",
        "createdAt" : "2019-05-20T13:01:47Z",
        "updatedAt" : "2019-05-21T07:51:49Z",
        "lastEditedBy" : {
          "login" : "gaborh-da",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/33900822?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2874bbd2-fe30-4939-9a5c-fc4f1828b488",
        "parentId" : "6d2e72e2-824b-408b-a835-666ad2ad961e",
        "author" : {
          "login" : "gaborh-da",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/33900822?v=4"
        },
        "body" : "There is a slight diff, however. We did not override the method addActiveContract but created another - we thought that way it is cleaner. Do you prefer the overridden version @gerolf-da ?",
        "createdAt" : "2019-05-20T13:04:37Z",
        "updatedAt" : "2019-05-21T07:51:49Z",
        "lastEditedBy" : {
          "login" : "gaborh-da",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/33900822?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "aecff838-c0d8-4236-a63a-bb22767422dc",
        "parentId" : "6d2e72e2-824b-408b-a835-666ad2ad961e",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "The overridden version is just fine, because we're in Java-land after all. Especially considering that this is a class used for testing, I'm fine with that.",
        "createdAt" : "2019-05-20T13:22:08Z",
        "updatedAt" : "2019-05-21T07:51:49Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f971d09d-93f6-463e-b517-242ef46df8a5",
        "parentId" : "6d2e72e2-824b-408b-a835-666ad2ad961e",
        "author" : {
          "login" : "gaborh-da",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/33900822?v=4"
        },
        "body" : "Like now? :)",
        "createdAt" : "2019-05-20T15:03:39Z",
        "updatedAt" : "2019-05-21T07:51:49Z",
        "lastEditedBy" : {
          "login" : "gaborh-da",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/33900822?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "90c1c34698810db2cbd6796ebccc789cb3b1dee0",
    "line" : null,
    "diffHunk" : "@@ -509,4 +509,27 @@ public int hashCode() {\n             return Objects.hash(commandIdToContractIds, contractIdsToCommandIds, pendingContractSet, activeContractSet);\n         }\n     }\n+\n+    /**\n+     * A ledger view for unit testing of bots.\n+     *\n+     * @param <R> The type of the contracts in this application.\n+     */\n+    public static class LedgerTestView<R> extends LedgerView {\n+        public LedgerTestView(PMap<String, PMap<Identifier, PSet<String>>> commandIdToContractIds,\n+                   PMap<Identifier, PMap<String, PSet<String>>> contractIdsToCommandIds,\n+                   PMap<Identifier, PMap<String, R>> pendingContractSet,\n+                   PMap<Identifier, PMap<String, R>> activeContractSet) {\n+            super(commandIdToContractIds, contractIdsToCommandIds, pendingContractSet, activeContractSet);\n+        }\n+\n+        @java.lang.Override\n+        public LedgerView addActiveContract(Identifier templateId, String contractId, java.lang.Object object) {"
  },
  {
    "id" : "7245f7a9-95ed-4d95-8442-be878bbd337a",
    "prId" : 1236,
    "comments" : [
      {
        "id" : "3fc8b585-59b1-47df-bef9-476e5bf3a54c",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "This cast will fail, because the `super` implementation always creates new `LedgerView` objects, and not `LedgerTestView`.",
        "createdAt" : "2019-05-20T12:11:56Z",
        "updatedAt" : "2019-05-21T07:51:49Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "bba10f89-1073-4b25-8933-10d0269c1442",
        "parentId" : "3fc8b585-59b1-47df-bef9-476e5bf3a54c",
        "author" : {
          "login" : "gaborh-da",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/33900822?v=4"
        },
        "body" : "Yeah. I think I need to create a wrapper class instead.",
        "createdAt" : "2019-05-20T12:47:44Z",
        "updatedAt" : "2019-05-21T07:51:49Z",
        "lastEditedBy" : {
          "login" : "gaborh-da",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/33900822?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7de57ee7-5072-4802-9b9e-dd6170b9346a",
        "parentId" : "3fc8b585-59b1-47df-bef9-476e5bf3a54c",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Not a wrapper, but since `LedgerView#addActiveContract` returns an instance of `LedgerView`, we need to transfer the data to `LedgerTestView`. So I guess it's both a wrapper and a subclass ;)",
        "createdAt" : "2019-05-20T13:20:46Z",
        "updatedAt" : "2019-05-21T07:51:49Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "90c1c34698810db2cbd6796ebccc789cb3b1dee0",
    "line" : null,
    "diffHunk" : "@@ -509,4 +509,22 @@ public int hashCode() {\n             return Objects.hash(commandIdToContractIds, contractIdsToCommandIds, pendingContractSet, activeContractSet);\n         }\n     }\n+\n+    /**\n+     * A ledger view for unit testing of bots.\n+     *\n+     * @param <R> The type of the contracts in this application.\n+     */\n+    public static class LedgerTestView<R> extends LedgerView {\n+        public LedgerTestView(PMap<String, PMap<Identifier, PSet<String>>> commandIdToContractIds,\n+                   PMap<Identifier, PMap<String, PSet<String>>> contractIdsToCommandIds,\n+                   PMap<Identifier, PMap<String, R>> pendingContractSet,\n+                   PMap<Identifier, PMap<String, R>> activeContractSet) {\n+            super(commandIdToContractIds, contractIdsToCommandIds, pendingContractSet, activeContractSet);\n+        }\n+\n+        public LedgerTestView addActiveContractToTestView(Identifier templateId, String contractId, java.lang.Object object) {\n+            return (LedgerTestView)super.addActiveContract(templateId, contractId, object);"
  }
]