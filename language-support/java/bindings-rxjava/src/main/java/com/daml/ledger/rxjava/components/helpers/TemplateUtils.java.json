[
  {
    "id" : "2a1e31d9-4461-4d47-8021-6e9b26e1f7ab",
    "prId" : 3098,
    "comments" : [
      {
        "id" : "7df28e2d-d70f-4bfe-8042-79b1a7c12965",
        "parentId" : null,
        "author" : {
          "login" : "bartfaitamas",
          "name" : "B치rtfai Tam치s",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/23925?v=4"
        },
        "body" : "@gerolf-da how hard would it be to generate this code, and instead of using reflection, generate a big `if` statement?",
        "createdAt" : "2019-10-03T15:00:17Z",
        "updatedAt" : "2019-10-07T15:02:51Z",
        "lastEditedBy" : {
          "login" : "bartfaitamas",
          "name" : "B치rtfai Tam치s",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/23925?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ac21fb1e-9372-44f3-acbb-a9cd2532e7ab",
        "parentId" : "7df28e2d-d70f-4bfe-8042-79b1a7c12965",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "In fact, the java codegen can generate a \"Decoder\" class that does the matching via the template ID and returns a statically known function, so no reflection is needed. See [decoder docs](https://docs.daml.com/app-dev/bindings-java/codegen.html#generate-the-decoder-utility-class) for a bit more information.",
        "createdAt" : "2019-10-08T08:03:49Z",
        "updatedAt" : "2019-10-08T08:03:49Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0b06cc52-06c2-449b-9024-212a3e410559",
        "parentId" : "7df28e2d-d70f-4bfe-8042-79b1a7c12965",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "But that would have to happen in the user code, as this generic utility does not have access to the statically generated classes.",
        "createdAt" : "2019-10-08T08:04:55Z",
        "updatedAt" : "2019-10-08T08:04:55Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2a445816-b86f-434c-84c1-a482b85f0a03",
        "parentId" : "7df28e2d-d70f-4bfe-8042-79b1a7c12965",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Mmmmh, so we had this already? /cc @richardkapolnai-da ",
        "createdAt" : "2019-10-08T08:10:35Z",
        "updatedAt" : "2019-10-08T08:10:35Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c5bdeacc-d54a-4de1-a1b4-bb467811050e",
        "parentId" : "7df28e2d-d70f-4bfe-8042-79b1a7c12965",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Ok, totally my fault for not recognizing this was the decoder (which I actually wrote in the first place :laughing: ). I'll improve the documentation for it.",
        "createdAt" : "2019-10-08T08:14:16Z",
        "updatedAt" : "2019-10-08T08:14:41Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "25008dd1-c5c3-4189-a801-d643479157fe",
        "parentId" : "7df28e2d-d70f-4bfe-8042-79b1a7c12965",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "https://github.com/digital-asset/daml/pull/3124",
        "createdAt" : "2019-10-08T08:53:31Z",
        "updatedAt" : "2019-10-08T08:53:31Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "90f7aff1-45f5-403b-80ca-5439d0ac995d",
        "parentId" : "7df28e2d-d70f-4bfe-8042-79b1a7c12965",
        "author" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "body" : "Funny. I also could have read the docs... :)\r\nHowever, I made a comment on the other PR, the equality is not trivial to me.",
        "createdAt" : "2019-10-08T11:54:34Z",
        "updatedAt" : "2019-10-08T11:54:34Z",
        "lastEditedBy" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8aebc85d130200edea5af1e657de92e61f702cd4",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@            }\n        }\n        return createdContract -> {\n            if (!factories.containsKey(createdContract.getTemplateId())) {\n                throw new IllegalStateException("
  }
]