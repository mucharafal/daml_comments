[
  {
    "id" : "73208a4f-e844-4089-8fc1-550a2c8afe44",
    "prId" : 3733,
    "comments" : [
      {
        "id" : "b65beab3-f2ac-4052-b98d-40eed366527a",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "What does this comment mean? Isn't this simply an empty response?\r\nThis is definitely not a mock as it does not record calls (according to nomenclature e.g. https://blog.pragmatists.com/test-doubles-fakes-mocks-and-stubs-1a7491dfa3da).",
        "createdAt" : "2019-12-05T09:12:00Z",
        "updatedAt" : "2019-12-05T09:48:38Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f0258179-7248-4ac6-a4e0-6ab76e21cf61",
        "parentId" : "b65beab3-f2ac-4052-b98d-40eed366527a",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "`lastTransactionByEventIdRequest.set(request)` - it records it in the line above, no?",
        "createdAt" : "2019-12-05T09:44:05Z",
        "updatedAt" : "2019-12-05T09:48:38Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "37e09b61-2f35-4e9a-9cb8-d60b64089e95",
        "parentId" : "b65beab3-f2ac-4052-b98d-40eed366527a",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Isn't that what the line above this one does?\r\n```scala\r\n    lastTransactionByEventIdRequest.set(request)\r\n```",
        "createdAt" : "2019-12-05T09:44:33Z",
        "updatedAt" : "2019-12-05T09:48:38Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "72ffdf2f-3ab9-4231-8d1b-b8e3ecaff725",
        "parentId" : "b65beab3-f2ac-4052-b98d-40eed366527a",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "You're right -- this is indeed a very simple mock.",
        "createdAt" : "2019-12-05T10:04:25Z",
        "updatedAt" : "2019-12-05T10:04:40Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a577264afd2be0e02604a911a7fa44c2fea02a9a",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +78,82 @@      request: GetTransactionByEventIdRequest): Future[GetTransactionResponse] = {\n    lastTransactionByEventIdRequest.set(request)\n    Future.successful(new GetTransactionResponse(None)) // just a mock, not intended for consumption\n  }\n"
  },
  {
    "id" : "fc2da520-fd34-48cf-ad1f-155e1d7f8a5a",
    "prId" : 3733,
    "comments" : [
      {
        "id" : "867ccb50-8d0f-4b06-af74-4f6f6c962210",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "We may want to add tests for this as the below logic does not seem to be trivial (I understand you just reformatted this method).",
        "createdAt" : "2019-12-05T09:18:50Z",
        "updatedAt" : "2019-12-05T09:48:38Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b8e88c3d-6891-410c-9588-534acb56328d",
        "parentId" : "867ccb50-8d0f-4b06-af74-4f6f6c962210",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Sure, can you open a ticket for this? This is beyond the scope of the work done in this PR.",
        "createdAt" : "2019-12-05T09:42:10Z",
        "updatedAt" : "2019-12-05T09:48:38Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ff6efd80-d58e-4ac9-8146-f041731b0844",
        "parentId" : "867ccb50-8d0f-4b06-af74-4f6f6c962210",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Created #3742 for reusing code for ledger offset ordering as we already have such logic littered around.",
        "createdAt" : "2019-12-05T10:12:34Z",
        "updatedAt" : "2019-12-05T10:12:53Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a577264afd2be0e02604a911a7fa44c2fea02a9a",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +148,152 @@  }\n\n  val ledgerOffsetOrdering: Ordering[LedgerOffset] = (x: LedgerOffset, y: LedgerOffset) => {\n    if (x.equals(y)) 0\n    else {"
  }
]