[
  {
    "id" : "49316dcd-3f4d-43be-a4a2-cd2571bfb9db",
    "prId" : 6476,
    "comments" : [
      {
        "id" : "aa633864-3a10-4060-9d89-b9cb70bd2b58",
        "parentId" : null,
        "author" : {
          "login" : "tamaskalcza-da",
          "name" : "Tamás Kálcza",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/54800417?u=2f23b2f81e5322e0a3ccde86f489a6f607b51fcb&v=4"
        },
        "body" : "This looks odd. I'd consider either a `scala.collection.mutable.Seq` or a `Seq.newBuilder`.\r\n\r\nAlthough I think using a loan pattern here would be much cleaner. E.g.:\r\n\r\n```scala\r\nusing(Bot.wire(...)) { connection =>\r\n}\r\n```",
        "createdAt" : "2020-06-24T11:23:18Z",
        "updatedAt" : "2020-06-24T13:24:51Z",
        "lastEditedBy" : {
          "login" : "tamaskalcza-da",
          "name" : "Tamás Kálcza",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/54800417?u=2f23b2f81e5322e0a3ccde86f489a6f607b51fcb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4d0d3d32-8426-47d2-9368-117cd5fd4c19",
        "parentId" : "aa633864-3a10-4060-9d89-b9cb70bd2b58",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Yeah, that's much nicer. I'll do that.",
        "createdAt" : "2020-06-24T12:33:19Z",
        "updatedAt" : "2020-06-24T13:24:51Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "0d4841a7-c95d-4546-8748-0a569e52636d",
        "parentId" : "aa633864-3a10-4060-9d89-b9cb70bd2b58",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Done.",
        "createdAt" : "2020-06-24T12:41:36Z",
        "updatedAt" : "2020-06-24T13:24:51Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d10fdc1e12c42decf6d14f2b19ac0a3cb4c7f548",
    "line" : null,
    "diffHunk" : "@@ -43,11 +44,27 @@ import scala.concurrent.{Future, Promise}\n import scala.util.Random\n import scala.util.control.NonFatal\n \n-final class BotTest extends FlatSpec with Matchers with Eventually {\n+final class BotTest extends FlatSpec with Matchers with Eventually with BeforeAndAfterEach {\n   override implicit def patienceConfig: PatienceConfig = PatienceConfig(5.seconds, 1.second)\n \n   private def ledgerServices: LedgerServices = new LedgerServices(\"bot-test\")\n \n+  private var dispose: Seq[Disposable] = _\n+\n+  override def beforeEach(): Unit = {\n+    super.beforeEach()\n+    this.dispose = Vector.empty\n+  }\n+\n+  override def afterEach(): Unit = {\n+    dispose.foreach(_.dispose())\n+    super.afterEach()\n+  }"
  },
  {
    "id" : "ef0cad31-4176-47df-8aaf-58fdddee3063",
    "prId" : 6476,
    "comments" : [
      {
        "id" : "dfdc0695-5def-41e2-a51f-2a08336b2175",
        "parentId" : null,
        "author" : {
          "login" : "tamaskalcza-da",
          "name" : "Tamás Kálcza",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/54800417?u=2f23b2f81e5322e0a3ccde86f489a6f607b51fcb&v=4"
        },
        "body" : "I think you can drop this now.",
        "createdAt" : "2020-06-24T13:12:41Z",
        "updatedAt" : "2020-06-24T13:24:51Z",
        "lastEditedBy" : {
          "login" : "tamaskalcza-da",
          "name" : "Tamás Kálcza",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/54800417?u=2f23b2f81e5322e0a3ccde86f489a6f607b51fcb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f832d81e-5ecf-4f0e-b962-0c0c44a0c734",
        "parentId" : "dfdc0695-5def-41e2-a51f-2a08336b2175",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Whoops, thanks for spotting this.",
        "createdAt" : "2020-06-24T13:24:36Z",
        "updatedAt" : "2020-06-24T13:24:51Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d10fdc1e12c42decf6d14f2b19ac0a3cb4c7f548",
    "line" : null,
    "diffHunk" : "@@ -43,7 +44,7 @@ import scala.concurrent.{Future, Promise}\n import scala.util.Random\n import scala.util.control.NonFatal\n \n-final class BotTest extends FlatSpec with Matchers with Eventually {\n+final class BotTest extends FlatSpec with Matchers with Eventually with BeforeAndAfterEach {"
  },
  {
    "id" : "2bd2c29e-02fc-43ac-af3c-ee0a1626a6f5",
    "prId" : 6476,
    "comments" : [
      {
        "id" : "f826c3d3-a5d0-4291-b5c4-dcf7ef907280",
        "parentId" : null,
        "author" : {
          "login" : "tamaskalcza-da",
          "name" : "Tamás Kálcza",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/54800417?u=2f23b2f81e5322e0a3ccde86f489a6f607b51fcb&v=4"
        },
        "body" : "Not to be picky, however it seems you don't use the return of the `Bot.wire`. Is that by mistake? If not, you can simplify the `using`.",
        "createdAt" : "2020-06-24T13:13:51Z",
        "updatedAt" : "2020-06-24T13:24:51Z",
        "lastEditedBy" : {
          "login" : "tamaskalcza-da",
          "name" : "Tamás Kálcza",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/54800417?u=2f23b2f81e5322e0a3ccde86f489a6f607b51fcb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2efac665-1221-4990-857b-63472399f5a1",
        "parentId" : "f826c3d3-a5d0-4291-b5c4-dcf7ef907280",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Yup. I guess today I'm over-engineering a lot. Thank you for pointing it out!",
        "createdAt" : "2020-06-24T13:24:57Z",
        "updatedAt" : "2020-06-24T13:24:58Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d10fdc1e12c42decf6d14f2b19ac0a3cb4c7f548",
    "line" : null,
    "diffHunk" : "@@ -229,24 +230,24 @@ final class BotTest extends FlatSpec with Matchers with Eventually {\n       }\n \n     val counter = new AtomicInteger(0)\n-    Bot.wire(appId, ledgerClient, transactionFilter, bot, _ => counter)\n-\n-    // when the bot is wired-up, no command should have been submitted to the server\n-    ledgerClient.submitted should have size 0\n-    counter.get shouldBe 0\n+    using(Bot.wire(appId, ledgerClient, transactionFilter, bot, _ => counter)) { _ =>"
  },
  {
    "id" : "9eb4024d-be2d-435e-886f-36def3202daf",
    "prId" : 3716,
    "comments" : [
      {
        "id" : "374d2557-756f-410d-ba30-2ea2747fed7d",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Rather than a `TODO`, perhaps:\r\n\r\n```scala\r\nthrow new UnsupportedOperationException(\"untested endpoint; implement when you need it\")\r\n```",
        "createdAt" : "2019-12-04T09:23:58Z",
        "updatedAt" : "2019-12-04T09:27:05Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "95b55051-3dfa-4d22-a142-0c422f036eda",
        "parentId" : "374d2557-756f-410d-ba30-2ea2747fed7d",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I'm trying to move the clients in parallel and this is a single file that everybody touches, I'll leave it alone for the time being but I will definitely apply this suggestion when I'm putting all the clients together in the final PR for this ticket. Thanks! :+1: ",
        "createdAt" : "2019-12-04T09:34:14Z",
        "updatedAt" : "2019-12-04T09:34:14Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ad5c60845f5533e52798c2ade04765938c62e30e",
    "line" : 4,
    "diffHunk" : "@@ -151,6 +151,16 @@ class BotTest extends FlatSpec with Matchers with DataLayerHelpers {\n                   commands))\n               Single.error(new RuntimeException(\"expected failure\"))\n             }\n+            // TODO Untested endpoint"
  }
]