[
  {
    "id" : "419bb2cf-8920-4b96-bd5e-bd90f37f024b",
    "prId" : 3098,
    "comments" : [
      {
        "id" : "2d741997-8563-4bd0-b152-2882c8fc5a3a",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "If the intent is to make sure that this integrates with codegen, then codegen should be used to make sure we're not breaking the utility you added. You can use the approach used by the Java codegen integration tests:\r\n- write the piece of DAML you want to interact with\r\n- run codegen on it\r\n- use the generated code for your tests\r\nYou can read the Bazel code we wrote to encode this process [here](https://github.com/digital-asset/daml/blob/master/language-support/java/codegen/BUILD.bazel#L163-L240).\r\nNote that for what you want to achieve, probably using just the latest DAML-LF version is enough, so the complexity of the pipeline should be way easier that this. I'm 100% available for help if you need any.",
        "createdAt" : "2019-10-07T09:45:40Z",
        "updatedAt" : "2019-10-07T15:02:51Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2c008a15-9c6f-4a7b-becc-82cae1d50384",
        "parentId" : "2d741997-8563-4bd0-b152-2882c8fc5a3a",
        "author" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "body" : "Agreed, I'd rather chose a real code generation, I'm trying to accomplish that.",
        "createdAt" : "2019-10-07T13:47:22Z",
        "updatedAt" : "2019-10-07T15:02:51Z",
        "lastEditedBy" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "04e524c3-0197-4c27-a655-8f8254fbdc1a",
        "parentId" : "2d741997-8563-4bd0-b152-2882c8fc5a3a",
        "author" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "body" : "Hopefully it's done.",
        "createdAt" : "2019-10-07T15:12:43Z",
        "updatedAt" : "2019-10-07T15:12:43Z",
        "lastEditedBy" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "8aebc85d130200edea5af1e657de92e61f702cd4",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,30 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ledger.rxjava.components;\n+\n+import com.daml.ledger.javaapi.data.*;\n+import java.util.List;\n+\n+public class TemplateA extends Template {"
  }
]