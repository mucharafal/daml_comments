[
  {
    "id" : "0c72362a-7d9e-4600-bdec-9a41bdb0ff83",
    "prId" : 1205,
    "comments" : [
      {
        "id" : "4223f4a4-0fe5-4d5c-a917-27dd0e04c32f",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Please modify the `scala_source_jar` rule to allow providing a `srcjar` label.",
        "createdAt" : "2019-06-11T14:39:04Z",
        "updatedAt" : "2019-06-17T13:09:52Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "66160c99-31e5-4639-9c59-dd1927d3b5d5",
        "parentId" : "4223f4a4-0fe5-4d5c-a917-27dd0e04c32f",
        "author" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "body" : "Implemented by #1602 and #1611 ",
        "createdAt" : "2019-06-12T19:24:40Z",
        "updatedAt" : "2019-06-17T13:09:52Z",
        "lastEditedBy" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4e921d1c4fbbaa2ed6afdae1675b3daaa6fa5ef3",
    "line" : 26,
    "diffHunk" : "@@ -259,6 +265,19 @@ pom_file(\n     target = \":ledger-api-scalapb\",\n )\n \n+# Create empty Scaladoc JAR for uploading to Maven Central\n+scaladoc_jar(\n+    name = \"ledger-api-scalapb_scaladoc\",\n+    srcs = [],\n+    deps = [],\n+) if is_windows == False else None\n+\n+# Create empty Sources JAR for uploading to Maven Central\n+scala_source_jar(\n+    name = \"ledger-api-scalapb_src\","
  },
  {
    "id" : "7a627eba-c22b-41bb-831f-8889f0b2a8dd",
    "prId" : 676,
    "comments" : [
      {
        "id" : "b88fab33-731d-4119-aeb6-b887fc2141b4",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "You could probably factor out the duplication between the list here and the list in the cmd.",
        "createdAt" : "2019-04-24T18:03:14Z",
        "updatedAt" : "2019-04-24T19:21:14Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ce5730aa-2e56-4712-8e18-29e405f3790d",
        "parentId" : "b88fab33-731d-4119-aeb6-b887fc2141b4",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "tricky because of the mismatch between CamlCase and snake_case",
        "createdAt" : "2019-04-24T18:26:50Z",
        "updatedAt" : "2019-04-24T19:21:14Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "db1e49de6a572c74fb8f5eea2056ba562500828f",
    "line" : 34,
    "diffHunk" : "@@ -70,69 +73,115 @@ proto_gen(\n     ],\n )\n \n-# TODO(nic): When compile-proto-file handles map<key,value>, we will can run on:  **/*.proto\n-# + glob([\"**/*.proto\",])\n+google_protobuf_src = \"external/com_google_protobuf/src\"\n+\n+genrule(\n+    name = \"google-protobuf-haskellpb-sources\",\n+    srcs = [\"@com_google_protobuf//:well_known_protos\"],\n+    outs = [\"Google/Protobuf/\" + b for b in [\n+        \"Any.hs\","
  },
  {
    "id" : "d53a53e7-bf1a-499c-893c-93813af17201",
    "prId" : 676,
    "comments" : [
      {
        "id" : "d638d772-f098-4578-afc4-13de25c7b1ea",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "[`string.format`](https://docs.bazel.build/versions/master/skylark/lib/string.html#format) can be nice for this kind of stuff although for this particular case there is not a huge difference.",
        "createdAt" : "2019-04-24T18:04:04Z",
        "updatedAt" : "2019-04-24T19:21:14Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e676ac1e-8137-44d0-aed9-fcff65d32957",
        "parentId" : "d638d772-f098-4578-afc4-13de25c7b1ea",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "thanks, will bear in mind for the future",
        "createdAt" : "2019-04-24T18:27:07Z",
        "updatedAt" : "2019-04-24T19:21:14Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "db1e49de6a572c74fb8f5eea2056ba562500828f",
    "line" : 49,
    "diffHunk" : "@@ -70,69 +73,115 @@ proto_gen(\n     ],\n )\n \n-# TODO(nic): When compile-proto-file handles map<key,value>, we will can run on:  **/*.proto\n-# + glob([\"**/*.proto\",])\n+google_protobuf_src = \"external/com_google_protobuf/src\"\n+\n+genrule(\n+    name = \"google-protobuf-haskellpb-sources\",\n+    srcs = [\"@com_google_protobuf//:well_known_protos\"],\n+    outs = [\"Google/Protobuf/\" + b for b in [\n+        \"Any.hs\",\n+        \"Duration.hs\",\n+        \"Empty.hs\",\n+        \"Timestamp.hs\",\n+        \"Wrappers.hs\",\n+    ]],\n+    cmd = \"\"\"\n+        for src in \\\n+            external/com_google_protobuf/src/google/protobuf/any.proto \\\n+            external/com_google_protobuf/src/google/protobuf/duration.proto \\\n+            external/com_google_protobuf/src/google/protobuf/empty.proto \\\n+            external/com_google_protobuf/src/google/protobuf/timestamp.proto \\\n+            external/com_google_protobuf/src/google/protobuf/wrappers.proto \\\n+        ; do\n+            $(location @haskell_proto3__suite//:compile-proto-file) \\\n+                --includeDir \"\"\" + google_protobuf_src + \"\"\" \\"
  },
  {
    "id" : "9e60c7f9-1428-4a77-8e0e-32c8b83e2af7",
    "prId" : 676,
    "comments" : [
      {
        "id" : "8c2c0c9b-ea7a-4d1a-96af-67c781f8b0da",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Do you plan to add more files to this? If not, I probably wouldnâ€™t use a loop over a single file.",
        "createdAt" : "2019-04-24T18:06:41Z",
        "updatedAt" : "2019-04-24T19:21:14Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "562de78a-e4c5-4865-9246-fe5e52e5d268",
        "parentId" : "8c2c0c9b-ea7a-4d1a-96af-67c781f8b0da",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "ok",
        "createdAt" : "2019-04-24T18:27:33Z",
        "updatedAt" : "2019-04-24T19:21:14Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "db1e49de6a572c74fb8f5eea2056ba562500828f",
    "line" : null,
    "diffHunk" : "@@ -70,69 +73,115 @@ proto_gen(\n     ],\n )\n \n-# TODO(nic): When compile-proto-file handles map<key,value>, we will can run on:  **/*.proto\n-# + glob([\"**/*.proto\",])\n+google_protobuf_src = \"external/com_google_protobuf/src\"\n+\n+genrule(\n+    name = \"google-protobuf-haskellpb-sources\",\n+    srcs = [\"@com_google_protobuf//:well_known_protos\"],\n+    outs = [\"Google/Protobuf/\" + b for b in [\n+        \"Any.hs\",\n+        \"Duration.hs\",\n+        \"Empty.hs\",\n+        \"Timestamp.hs\",\n+        \"Wrappers.hs\",\n+    ]],\n+    cmd = \"\"\"\n+        for src in \\\n+            external/com_google_protobuf/src/google/protobuf/any.proto \\\n+            external/com_google_protobuf/src/google/protobuf/duration.proto \\\n+            external/com_google_protobuf/src/google/protobuf/empty.proto \\\n+            external/com_google_protobuf/src/google/protobuf/timestamp.proto \\\n+            external/com_google_protobuf/src/google/protobuf/wrappers.proto \\\n+        ; do\n+            $(location @haskell_proto3__suite//:compile-proto-file) \\\n+                --includeDir \"\"\" + google_protobuf_src + \"\"\" \\\n+                --proto google/protobuf/$$(basename $$src) \\\n+                --out $(@D)\n+        done\n+    \"\"\",\n+    tools = [\n+        \"@haskell_proto3__suite//:compile-proto-file\",\n+    ],\n+)\n+\n+google_rpc_src = \"external/com_github_googleapis_googleapis\"\n+\n+genrule(\n+    name = \"google-rpc-haskellpb-sources\",\n+    srcs = [\n+        \"@com_github_googleapis_googleapis//google/rpc:status.proto\",\n+        \"@com_google_protobuf//:well_known_protos\",\n+    ],\n+    outs = [\"Google/Rpc/Status.hs\"],\n+    cmd = \"\"\"\n+        for src in $(location @com_github_googleapis_googleapis//google/rpc:status.proto); do \\"
  },
  {
    "id" : "b0ff013d-5ece-45f3-9816-aa82187fc2e6",
    "prId" : 676,
    "comments" : [
      {
        "id" : "d0eee478-62af-4b6f-8d3c-ca7036cad8bd",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Neilâ€™s PR has been merged now so I think you might be able to get rid of this.",
        "createdAt" : "2019-04-24T18:07:48Z",
        "updatedAt" : "2019-04-24T19:21:14Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f3b1bc79-d23c-4b51-acc9-45eea22c6783",
        "parentId" : "d0eee478-62af-4b6f-8d3c-ca7036cad8bd",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "yes, I did this already!",
        "createdAt" : "2019-04-24T18:27:46Z",
        "updatedAt" : "2019-04-24T19:21:14Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "db1e49de6a572c74fb8f5eea2056ba562500828f",
    "line" : null,
    "diffHunk" : "@@ -70,69 +73,115 @@ proto_gen(\n     ],\n )\n \n-# TODO(nic): When compile-proto-file handles map<key,value>, we will can run on:  **/*.proto\n-# + glob([\"**/*.proto\",])\n+google_protobuf_src = \"external/com_google_protobuf/src\"\n+\n+genrule(\n+    name = \"google-protobuf-haskellpb-sources\",\n+    srcs = [\"@com_google_protobuf//:well_known_protos\"],\n+    outs = [\"Google/Protobuf/\" + b for b in [\n+        \"Any.hs\",\n+        \"Duration.hs\",\n+        \"Empty.hs\",\n+        \"Timestamp.hs\",\n+        \"Wrappers.hs\",\n+    ]],\n+    cmd = \"\"\"\n+        for src in \\\n+            external/com_google_protobuf/src/google/protobuf/any.proto \\\n+            external/com_google_protobuf/src/google/protobuf/duration.proto \\\n+            external/com_google_protobuf/src/google/protobuf/empty.proto \\\n+            external/com_google_protobuf/src/google/protobuf/timestamp.proto \\\n+            external/com_google_protobuf/src/google/protobuf/wrappers.proto \\\n+        ; do\n+            $(location @haskell_proto3__suite//:compile-proto-file) \\\n+                --includeDir \"\"\" + google_protobuf_src + \"\"\" \\\n+                --proto google/protobuf/$$(basename $$src) \\\n+                --out $(@D)\n+        done\n+    \"\"\",\n+    tools = [\n+        \"@haskell_proto3__suite//:compile-proto-file\",\n+    ],\n+)\n+\n+google_rpc_src = \"external/com_github_googleapis_googleapis\"\n+\n+genrule(\n+    name = \"google-rpc-haskellpb-sources\",\n+    srcs = [\n+        \"@com_github_googleapis_googleapis//google/rpc:status.proto\",\n+        \"@com_google_protobuf//:well_known_protos\",\n+    ],\n+    outs = [\"Google/Rpc/Status.hs\"],\n+    cmd = \"\"\"\n+        for src in $(location @com_github_googleapis_googleapis//google/rpc:status.proto); do \\\n+            $(location @haskell_proto3__suite//:compile-proto-file) \\\n+                --includeDir \"\"\" + google_protobuf_src + \"\"\" \\\n+                --includeDir \"\"\" + google_rpc_src + \"\"\" \\\n+                --proto google/rpc/$$(basename $$src) \\\n+                --out $$(dirname $$(dirname $(@D))) \n+                   #2x dirname because @D works differently for a single output\n+        done\n+    \"\"\",\n+    tools = [\n+        \"@haskell_proto3__suite//:compile-proto-file\",\n+    ],\n+)\n+\n+v1_proto_dir = \"com/digitalasset/ledger/api/v1/\"\n+\n+v1_protos_which_use_map = [\n+    # These must be excluded until we switch to upstream support for: map<key,value>"
  },
  {
    "id" : "a262a80d-aa31-4b68-8132-467a4dcd6e25",
    "prId" : 571,
    "comments" : [
      {
        "id" : "811c3b89-f1c5-45fb-b06f-c013d06f0f46",
        "parentId" : null,
        "author" : {
          "login" : "majcherm-da",
          "name" : "MichaÅ‚ Majcherski",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/43614029?u=8320ef35eb6289112c9c95df3e483f322c9aa60e&v=4"
        },
        "body" : "@nickchapman-da I modified the genrule you created recently as it was not taking into account `srcs` you were setting, but rather compiling all protos. Not sure why linux/mac builds were green taking into account your `TODO` comments, but it was failing on Windows for these commented out protos, so I modifed the rule to compile only these explicitly mentioned in `srcs`.",
        "createdAt" : "2019-04-19T15:04:47Z",
        "updatedAt" : "2019-04-23T08:34:57Z",
        "lastEditedBy" : {
          "login" : "majcherm-da",
          "name" : "MichaÅ‚ Majcherski",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/43614029?u=8320ef35eb6289112c9c95df3e483f322c9aa60e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "29a64522dbd6f7d7c4845d165473c13544833e97",
    "line" : 44,
    "diffHunk" : "@@ -121,15 +127,15 @@ genrule(\n         here=$$(dirname $(locations BUILD.bazel))\n         well_known=$$(dirname $$(dirname $$(dirname $$(echo $(locations @com_google_protobuf//:well_known_protos) | cut -d ' ' -f1))))\n         rpc_status=$$(dirname $$(dirname $$(dirname $$(echo $(location @com_github_googleapis_googleapis//google/rpc:status.proto)))))\n-        for src in $$here/com/digitalasset/ledger/api/v1/*.proto; do \n+        for src in $(locations :ledger-api-protos-fg); do"
  },
  {
    "id" : "aa4beba9-ff94-4b1e-bbda-d9788c3a7724",
    "prId" : 334,
    "comments" : [
      {
        "id" : "e5e25282-5eb8-4931-8caa-ebc6a5eecefc",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Please remove our debugging \"tool\" :)",
        "createdAt" : "2019-04-10T07:44:28Z",
        "updatedAt" : "2019-04-10T13:24:54Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "996f9c16-d0d0-4914-bb96-d2130f470812",
        "parentId" : "e5e25282-5eb8-4931-8caa-ebc6a5eecefc",
        "author" : {
          "login" : "bethaitman-da",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/42940582?u=89cc5505d9086a7a0f27b1bd24b4ff45be679e07&v=4"
        },
        "body" : "oops!",
        "createdAt" : "2019-04-10T08:43:27Z",
        "updatedAt" : "2019-04-10T13:24:54Z",
        "lastEditedBy" : {
          "login" : "bethaitman-da",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/42940582?u=89cc5505d9086a7a0f27b1bd24b4ff45be679e07&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6c3f268956d7cfa0b91fc927c13bd858315aec22",
    "line" : null,
    "diffHunk" : "@@ -135,13 +135,13 @@ proto_gen(\n genrule(\n     name = 'docs',\n     srcs = [':ledger-api-docs'],\n-    tools = [\"@pandoc_nix//:bin/pandoc\", \"post-process.sh\"],\n+    tools = [\"post-process.sh\"],\n     outs = ['proto-docs.rst'],\n     cmd = \"\"\"\n-        export PATH=\"$$( cd \"$$(dirname \"$(location @pandoc_nix//:bin/pandoc)\")\" ; pwd -P )\":$$PATH\n         unzip -q $(location :ledger-api-docs)\n+        ls -la"
  },
  {
    "id" : "d161fa19-d099-46d2-8030-2f40e89e321b",
    "prId" : 334,
    "comments" : [
      {
        "id" : "21fa933e-1181-492c-bbe6-26d6612cf7c1",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Since this PR is already cleaning up the proto->md->rst mess, how about we de-confuse the situation and pass `docs.rst` to the proto-gen-docs plugin in [line 129 in this file](https://github.com/digital-asset/daml/pull/334/files#diff-35fe07ffebf49e0dc52e0c10ea03aec0R129) and change the name here and in `post-process.sh` as well? Or maybe even better, inline the 2 `sed` calls into this genrule directly. The script itself is not used anywhere else.",
        "createdAt" : "2019-04-10T07:47:08Z",
        "updatedAt" : "2019-04-10T13:24:54Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "0ad0dc07-eb0f-45e5-8873-59396aa8bfe3",
        "parentId" : "21fa933e-1181-492c-bbe6-26d6612cf7c1",
        "author" : {
          "login" : "bethaitman-da",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/42940582?u=89cc5505d9086a7a0f27b1bd24b4ff45be679e07&v=4"
        },
        "body" : "Agreed! I'll have a go at that and see if I can manage it.",
        "createdAt" : "2019-04-10T08:42:32Z",
        "updatedAt" : "2019-04-10T13:24:54Z",
        "lastEditedBy" : {
          "login" : "bethaitman-da",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/42940582?u=89cc5505d9086a7a0f27b1bd24b4ff45be679e07&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6c3f268956d7cfa0b91fc927c13bd858315aec22",
    "line" : null,
    "diffHunk" : "@@ -135,13 +135,13 @@ proto_gen(\n genrule(\n     name = 'docs',\n     srcs = [':ledger-api-docs'],\n-    tools = [\"@pandoc_nix//:bin/pandoc\", \"post-process.sh\"],\n+    tools = [\"post-process.sh\"],\n     outs = ['proto-docs.rst'],\n     cmd = \"\"\"\n-        export PATH=\"$$( cd \"$$(dirname \"$(location @pandoc_nix//:bin/pandoc)\")\" ; pwd -P )\":$$PATH\n         unzip -q $(location :ledger-api-docs)\n+        ls -la\n         $(location post-process.sh)\n-        mv docs_rst_mmd.rst '$@'\n+        mv docs_rst_mmd.md '$@'"
  }
]