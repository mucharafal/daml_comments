[
  {
    "id" : "23f0ed78-641c-4253-8aec-fdb8741d8596",
    "prId" : 1264,
    "comments" : [
      {
        "id" : "9b675181-cae4-4520-9fda-910561739f5a",
        "parentId" : null,
        "author" : {
          "login" : "tristan-da",
          "name" : "Tristan Fairbairn",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/43772300?u=14695cf3c300109cc5e0bcd0b3ca2eef9aeae735&v=4"
        },
        "body" : "typo",
        "createdAt" : "2019-05-21T05:49:06Z",
        "updatedAt" : "2019-05-23T20:06:44Z",
        "lastEditedBy" : {
          "login" : "tristan-da",
          "name" : "Tristan Fairbairn",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/43772300?u=14695cf3c300109cc5e0bcd0b3ca2eef9aeae735&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "949c69703c60436cb3be1de6cb82043c45186fbf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,99 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+syntax = \"proto3\";\n+\n+package com.digitalasset.admin.api.v1;\n+\n+option java_outer_classname = \"PartyManagementServiceOuterClass\";\n+option java_package = \"com.digitalasset.admin.api.v1\";\n+\n+// Allows clients to query the DAML-LF packages that are supported by the server.\n+service PartyManagementService {\n+\n+  // Returns the identifiers of all parties hosted by the server.\n+  rpc ListParties (ListPartiesRequest) returns (ListPartiesResponse);\n+\n+  // Adds a party to the set hosted by the server. The validations performed\n+  // are implementation specific. For instance, party names might be checked\n+  // if they follow a certain pattern or the operation may be vetted by the \n+  // consensus of the collaborating nodes, etc.\n+  rpc AddParty (AddPartyReuest) returns (AddPartyResponse);\n+}\n+\n+message ListPartiesRequest {\n+\n+  // Must correspond to the ledger ID reported by the Ledger Identification Service.\n+  // Required\n+  string ledger_id = 1;\n+\n+  // TODO: Discuss teh necessity to include below fields, they are\n+  // present in the canton version of this service.\n+  \n+  // Timestamp seems irrelevant. Offset would be more interesting, but\n+  // it could incentivise concurrent use of this api and ledger api,\n+  // which shhould be rather discouraged.\n+  //google.protobuf.Timestamp asOf = 1;\n+\n+  // Domain is implicit in most implementations, ledger_id comes\n+  // close to thhis field semantically\n+  //string filterDomain = 2;\n+\n+  // Party filter could actually be interesting one to include.\n+  // I'ds prefer to skip it for KISS principle's sake\n+  //string filterParty = 3;\n+}\n+\n+message ListPartiesResponse {\n+\n+  // The details of all DAML parties hosted by the server.\n+  // Required\n+  repeated PartyDetails party_details = 1;\n+}\n+\n+message PartyDetails {\n+\n+  // The IDs of a DAML party hosted by the server.\n+  // Required\n+  string party_ids = 1;\n+\n+  // TODO: Discuss the necessity to include below fields, they are\n+  // present in the canton version of this service.\n+  // All those fields could be added later if need be.\n+  \n+  // Domain is implicit in most of other implementations. There is\n+  // only one. \n+  //string domain = 2;\n+\n+  // Participant is implicit in most of other implementations. It is the\n+  // one you are communicating with.\n+  //string participant = 3;\n+\n+  // Privilege is implicit in most of other implementations. It is a\n+  // submitting participant.\n+  //com.digitalasset.canton.identity.v0.ParticipantPrivilege privilege = 4;\n+\n+  // TrustLevel is implicit in most of other implementations. It is a \n+  // regular participant.\n+  //com.digitalasset.canton.identity.v0.TrustLevel trustLevel = 5;\n+}\n+\n+message AddPartyReuest {"
  },
  {
    "id" : "8d3c1ceb-3ea5-4a45-8806-044e19d69599",
    "prId" : 1264,
    "comments" : [
      {
        "id" : "934970f5-0697-4286-a17f-93c0287061dc",
        "parentId" : null,
        "author" : {
          "login" : "da-tanabe",
          "name" : "Davin K. Tanabe",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19478290?u=c4eed11976b50dbaed21ccb17371a74a7e802541&v=4"
        },
        "body" : "bad comment",
        "createdAt" : "2019-05-21T14:18:59Z",
        "updatedAt" : "2019-05-23T20:06:44Z",
        "lastEditedBy" : {
          "login" : "da-tanabe",
          "name" : "Davin K. Tanabe",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19478290?u=c4eed11976b50dbaed21ccb17371a74a7e802541&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "456c9e8a-75db-4eea-8c9d-4d707ce51267",
        "parentId" : "934970f5-0697-4286-a17f-93c0287061dc",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "copy-pasta, will fix that",
        "createdAt" : "2019-05-21T20:17:38Z",
        "updatedAt" : "2019-05-23T20:06:44Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "949c69703c60436cb3be1de6cb82043c45186fbf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,99 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+syntax = \"proto3\";\n+\n+package com.digitalasset.admin.api.v1;\n+\n+option java_outer_classname = \"PartyManagementServiceOuterClass\";\n+option java_package = \"com.digitalasset.admin.api.v1\";\n+\n+// Allows clients to query the DAML-LF packages that are supported by the server."
  },
  {
    "id" : "3f8ac469-a9c2-4a4f-b6dc-7db916c52d7c",
    "prId" : 1264,
    "comments" : [
      {
        "id" : "1afaaec7-2e27-4d54-8e8d-1bd24bb3c470",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "s/server/participant/.",
        "createdAt" : "2019-05-21T14:56:48Z",
        "updatedAt" : "2019-05-23T20:06:44Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "949c69703c60436cb3be1de6cb82043c45186fbf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,99 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+syntax = \"proto3\";\n+\n+package com.digitalasset.admin.api.v1;\n+\n+option java_outer_classname = \"PartyManagementServiceOuterClass\";\n+option java_package = \"com.digitalasset.admin.api.v1\";\n+\n+// Allows clients to query the DAML-LF packages that are supported by the server.\n+service PartyManagementService {\n+\n+  // Returns the identifiers of all parties hosted by the server.\n+  rpc ListParties (ListPartiesRequest) returns (ListPartiesResponse);\n+\n+  // Adds a party to the set hosted by the server. The validations performed"
  },
  {
    "id" : "86438b6c-9f4f-48d8-bf29-bdd9e6fdd903",
    "prId" : 1264,
    "comments" : [
      {
        "id" : "4392a0dd-81e5-4bd1-a04a-5c94af88e882",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "typo: \"AddPartyReuest\"",
        "createdAt" : "2019-05-21T14:57:01Z",
        "updatedAt" : "2019-05-23T20:06:44Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "949c69703c60436cb3be1de6cb82043c45186fbf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,99 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+syntax = \"proto3\";\n+\n+package com.digitalasset.admin.api.v1;\n+\n+option java_outer_classname = \"PartyManagementServiceOuterClass\";\n+option java_package = \"com.digitalasset.admin.api.v1\";\n+\n+// Allows clients to query the DAML-LF packages that are supported by the server.\n+service PartyManagementService {\n+\n+  // Returns the identifiers of all parties hosted by the server.\n+  rpc ListParties (ListPartiesRequest) returns (ListPartiesResponse);\n+\n+  // Adds a party to the set hosted by the server. The validations performed\n+  // are implementation specific. For instance, party names might be checked\n+  // if they follow a certain pattern or the operation may be vetted by the \n+  // consensus of the collaborating nodes, etc.\n+  rpc AddParty (AddPartyReuest) returns (AddPartyResponse);"
  },
  {
    "id" : "dd8d207b-0664-4361-8bb6-27d8cd5e26b0",
    "prId" : 1264,
    "comments" : [
      {
        "id" : "b6443f84-4c97-42e6-99cc-31a67954bad2",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "What's an agent?\r\n\r\nThis API doesn't really make any sense to me as it is now. Shouldn't there be some implementation specific metadata here? E.g. adding a party might also mean that you provide your public key etc.",
        "createdAt" : "2019-05-21T14:58:22Z",
        "updatedAt" : "2019-05-23T20:06:44Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8e015df2-fe65-4e0c-9e10-4c0cb2fa94c2",
        "parentId" : "b6443f84-4c97-42e6-99cc-31a67954bad2",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "The problem with public key is that in many cases it is implementation specific. Canton exposes the keys through their version of this api. Sawtooth on-boards participants and their keys natively. You still provide your key on the consensus layer when you want to store the party to participant data from this call in the KVs. The key, however, does not leak out to the client-facing apis. The more I think about it, the more I am convinced we need a participant identity. Question is how to implement it, so that it is a) stable until the end of time b) is available to a participant before it connects to the consensus layer (from which it must filter own party mapping)",
        "createdAt" : "2019-05-21T20:33:44Z",
        "updatedAt" : "2019-05-23T20:06:44Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f1dd2a33-d33b-4e38-984c-e3100cb2ab7e",
        "parentId" : "b6443f84-4c97-42e6-99cc-31a67954bad2",
        "author" : {
          "login" : "daravep",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/14316769?u=ecf84cb9190107a561ee4bec759072fdefd73269&v=4"
        },
        "body" : "Yep, adding parties in Canton looks like this:\r\n```\r\nda authorize_party_to_participant(Add, \"identityKey\", RequestSide.Both, \"Marcin::<fingerprint1>\", \"participant2::<fingerprint2>\", ParticipantPrivilege.Observation)\r\n```\r\nso my issue is that i can't squeeze things like `ParticipantPrivilege` and `RequestSide` into this call. \r\nWhat I could imagine is that this `AddParty` becomes a \"suggestion\" and then the participant node internally can decide on how to deal with such requests, but you can't bake too many assumptions on how such requests are processed into `daml-on-x`",
        "createdAt" : "2019-05-22T11:08:55Z",
        "updatedAt" : "2019-05-23T20:06:44Z",
        "lastEditedBy" : {
          "login" : "daravep",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/14316769?u=ecf84cb9190107a561ee4bec759072fdefd73269&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "949c69703c60436cb3be1de6cb82043c45186fbf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,99 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+syntax = \"proto3\";\n+\n+package com.digitalasset.admin.api.v1;\n+\n+option java_outer_classname = \"PartyManagementServiceOuterClass\";\n+option java_package = \"com.digitalasset.admin.api.v1\";\n+\n+// Allows clients to query the DAML-LF packages that are supported by the server.\n+service PartyManagementService {\n+\n+  // Returns the identifiers of all parties hosted by the server.\n+  rpc ListParties (ListPartiesRequest) returns (ListPartiesResponse);\n+\n+  // Adds a party to the set hosted by the server. The validations performed\n+  // are implementation specific. For instance, party names might be checked\n+  // if they follow a certain pattern or the operation may be vetted by the \n+  // consensus of the collaborating nodes, etc.\n+  rpc AddParty (AddPartyReuest) returns (AddPartyResponse);\n+}\n+\n+message ListPartiesRequest {\n+\n+  // Must correspond to the ledger ID reported by the Ledger Identification Service.\n+  // Required\n+  string ledger_id = 1;\n+\n+  // TODO: Discuss teh necessity to include below fields, they are\n+  // present in the canton version of this service.\n+  \n+  // Timestamp seems irrelevant. Offset would be more interesting, but\n+  // it could incentivise concurrent use of this api and ledger api,\n+  // which should be rather discouraged.\n+  //google.protobuf.Timestamp asOf = 1;\n+\n+  // Domain is implicit in most implementations, ledger_id comes\n+  // close to this field semantically\n+  //string filterDomain = 2;\n+\n+  // Party filter could actually be interesting one to include.\n+  // I'd prefer to skip it for KISS principle's sake\n+  //string filterParty = 3;\n+}\n+\n+message ListPartiesResponse {\n+\n+  // The details of all DAML parties hosted by the server.\n+  // Required\n+  repeated PartyDetails party_details = 1;\n+}\n+\n+message PartyDetails {\n+\n+  // The IDs of a DAML party hosted by the server.\n+  // Required\n+  string party_ids = 1;\n+\n+  // TODO: Discuss the necessity to include below fields, they are\n+  // present in the canton version of this service.\n+  // All those fields could be added later if need be.\n+  \n+  // Domain is implicit in most of other implementations. There is\n+  // only one. \n+  //string domain = 2;\n+\n+  // Participant is implicit in most of other implementations. It is the\n+  // one you are communicating with.\n+  //string participant = 3;\n+\n+  // Privilege is implicit in most of other implementations. It is a\n+  // submitting participant.\n+  //com.digitalasset.canton.identity.v0.ParticipantPrivilege privilege = 4;\n+\n+  // TrustLevel is implicit in most of other implementations. It is a \n+  // regular participant.\n+  //com.digitalasset.canton.identity.v0.TrustLevel trustLevel = 5;\n+}\n+\n+message AddPartyRequest {\n+\n+  // Must correspond to the ledger ID reported by the Ledger Identification Service.\n+  // Required\n+  string ledger_id = 1;\n+\n+  // Party to be added to the ledger api server\n+  // Required\n+  string party_id = 2;\n+\n+  // The id of the agent making the change. Interpretation is implementation specific.\n+  // Optional\n+  string added_by = 3;"
  },
  {
    "id" : "06add2b2-1bdf-4cc8-ac42-5a9279597346",
    "prId" : 1264,
    "comments" : [
      {
        "id" : "07bf7af1-1748-442a-b28b-7a22ffd49d74",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "s/ledger api server/participant/",
        "createdAt" : "2019-05-21T14:58:37Z",
        "updatedAt" : "2019-05-23T20:06:44Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "949c69703c60436cb3be1de6cb82043c45186fbf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,99 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+syntax = \"proto3\";\n+\n+package com.digitalasset.admin.api.v1;\n+\n+option java_outer_classname = \"PartyManagementServiceOuterClass\";\n+option java_package = \"com.digitalasset.admin.api.v1\";\n+\n+// Allows clients to query the DAML-LF packages that are supported by the server.\n+service PartyManagementService {\n+\n+  // Returns the identifiers of all parties hosted by the server.\n+  rpc ListParties (ListPartiesRequest) returns (ListPartiesResponse);\n+\n+  // Adds a party to the set hosted by the server. The validations performed\n+  // are implementation specific. For instance, party names might be checked\n+  // if they follow a certain pattern or the operation may be vetted by the \n+  // consensus of the collaborating nodes, etc.\n+  rpc AddParty (AddPartyReuest) returns (AddPartyResponse);\n+}\n+\n+message ListPartiesRequest {\n+\n+  // Must correspond to the ledger ID reported by the Ledger Identification Service.\n+  // Required\n+  string ledger_id = 1;\n+\n+  // TODO: Discuss teh necessity to include below fields, they are\n+  // present in the canton version of this service.\n+  \n+  // Timestamp seems irrelevant. Offset would be more interesting, but\n+  // it could incentivise concurrent use of this api and ledger api,\n+  // which should be rather discouraged.\n+  //google.protobuf.Timestamp asOf = 1;\n+\n+  // Domain is implicit in most implementations, ledger_id comes\n+  // close to this field semantically\n+  //string filterDomain = 2;\n+\n+  // Party filter could actually be interesting one to include.\n+  // I'd prefer to skip it for KISS principle's sake\n+  //string filterParty = 3;\n+}\n+\n+message ListPartiesResponse {\n+\n+  // The details of all DAML parties hosted by the server.\n+  // Required\n+  repeated PartyDetails party_details = 1;\n+}\n+\n+message PartyDetails {\n+\n+  // The IDs of a DAML party hosted by the server.\n+  // Required\n+  string party_ids = 1;\n+\n+  // TODO: Discuss the necessity to include below fields, they are\n+  // present in the canton version of this service.\n+  // All those fields could be added later if need be.\n+  \n+  // Domain is implicit in most of other implementations. There is\n+  // only one. \n+  //string domain = 2;\n+\n+  // Participant is implicit in most of other implementations. It is the\n+  // one you are communicating with.\n+  //string participant = 3;\n+\n+  // Privilege is implicit in most of other implementations. It is a\n+  // submitting participant.\n+  //com.digitalasset.canton.identity.v0.ParticipantPrivilege privilege = 4;\n+\n+  // TrustLevel is implicit in most of other implementations. It is a \n+  // regular participant.\n+  //com.digitalasset.canton.identity.v0.TrustLevel trustLevel = 5;\n+}\n+\n+message AddPartyRequest {\n+\n+  // Must correspond to the ledger ID reported by the Ledger Identification Service.\n+  // Required\n+  string ledger_id = 1;\n+\n+  // Party to be added to the ledger api server"
  },
  {
    "id" : "83ae91e0-d8f0-47b6-8584-c40744a4a9ac",
    "prId" : 1264,
    "comments" : [
      {
        "id" : "090c2bb3-2bf7-4182-8072-e7b240f9fbfe",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "ledger_id doesn't make sense here for the same reasons as it didn't for package service.",
        "createdAt" : "2019-05-21T14:59:02Z",
        "updatedAt" : "2019-05-23T20:06:44Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M채ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "da8c8abf-3cf4-4eeb-8677-fb5ecf3107a2",
        "parentId" : "090c2bb3-2bf7-4182-8072-e7b240f9fbfe",
        "author" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "body" : "I am not sure about that. Identity management data is stored on the ledger in an interspersed fashion with the actual daml transactions. It is therefore very tightly coupled with the ledger.",
        "createdAt" : "2019-05-21T20:19:22Z",
        "updatedAt" : "2019-05-23T20:06:44Z",
        "lastEditedBy" : {
          "login" : "mziolekda",
          "name" : "mziolekda",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/28315767?u=bfa7fd34d88616828ab02abda54fea595b0fde29&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "949c69703c60436cb3be1de6cb82043c45186fbf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,99 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+syntax = \"proto3\";\n+\n+package com.digitalasset.admin.api.v1;\n+\n+option java_outer_classname = \"PartyManagementServiceOuterClass\";\n+option java_package = \"com.digitalasset.admin.api.v1\";\n+\n+// Allows clients to query the DAML-LF packages that are supported by the server.\n+service PartyManagementService {\n+\n+  // Returns the identifiers of all parties hosted by the server.\n+  rpc ListParties (ListPartiesRequest) returns (ListPartiesResponse);\n+\n+  // Adds a party to the set hosted by the server. The validations performed\n+  // are implementation specific. For instance, party names might be checked\n+  // if they follow a certain pattern or the operation may be vetted by the \n+  // consensus of the collaborating nodes, etc.\n+  rpc AddParty (AddPartyReuest) returns (AddPartyResponse);\n+}\n+\n+message ListPartiesRequest {\n+\n+  // Must correspond to the ledger ID reported by the Ledger Identification Service.\n+  // Required\n+  string ledger_id = 1;\n+\n+  // TODO: Discuss teh necessity to include below fields, they are\n+  // present in the canton version of this service.\n+  \n+  // Timestamp seems irrelevant. Offset would be more interesting, but\n+  // it could incentivise concurrent use of this api and ledger api,\n+  // which should be rather discouraged.\n+  //google.protobuf.Timestamp asOf = 1;\n+\n+  // Domain is implicit in most implementations, ledger_id comes\n+  // close to this field semantically\n+  //string filterDomain = 2;\n+\n+  // Party filter could actually be interesting one to include.\n+  // I'd prefer to skip it for KISS principle's sake\n+  //string filterParty = 3;\n+}\n+\n+message ListPartiesResponse {\n+\n+  // The details of all DAML parties hosted by the server.\n+  // Required\n+  repeated PartyDetails party_details = 1;\n+}\n+\n+message PartyDetails {\n+\n+  // The IDs of a DAML party hosted by the server.\n+  // Required\n+  string party_ids = 1;\n+\n+  // TODO: Discuss the necessity to include below fields, they are\n+  // present in the canton version of this service.\n+  // All those fields could be added later if need be.\n+  \n+  // Domain is implicit in most of other implementations. There is\n+  // only one. \n+  //string domain = 2;\n+\n+  // Participant is implicit in most of other implementations. It is the\n+  // one you are communicating with.\n+  //string participant = 3;\n+\n+  // Privilege is implicit in most of other implementations. It is a\n+  // submitting participant.\n+  //com.digitalasset.canton.identity.v0.ParticipantPrivilege privilege = 4;\n+\n+  // TrustLevel is implicit in most of other implementations. It is a \n+  // regular participant.\n+  //com.digitalasset.canton.identity.v0.TrustLevel trustLevel = 5;\n+}\n+\n+message AddPartyRequest {\n+\n+  // Must correspond to the ledger ID reported by the Ledger Identification Service.\n+  // Required\n+  string ledger_id = 1;"
  },
  {
    "id" : "e4356505-3ce5-4228-9fa0-624d0bc953e7",
    "prId" : 1264,
    "comments" : [
      {
        "id" : "8af6234a-4629-46fe-9b66-12ae7f1caab6",
        "parentId" : null,
        "author" : {
          "login" : "daravep",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/14316769?u=ecf84cb9190107a561ee4bec759072fdefd73269&v=4"
        },
        "body" : "I would suggest to skip \"Adding party\" in this round. Let's just settle for: query for parties and check that the parties necessary exist and are configured. ",
        "createdAt" : "2019-05-22T10:52:06Z",
        "updatedAt" : "2019-05-23T20:06:44Z",
        "lastEditedBy" : {
          "login" : "daravep",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/14316769?u=ecf84cb9190107a561ee4bec759072fdefd73269&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4a04dc72-6cd6-4f4d-a963-1523eedc2cb8",
        "parentId" : "8af6234a-4629-46fe-9b66-12ae7f1caab6",
        "author" : {
          "login" : "daravep",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/14316769?u=ecf84cb9190107a561ee4bec759072fdefd73269&v=4"
        },
        "body" : "In any case, Adding Party in Canton is more powerful than captured here and is more subtle. So exposing this here would mean that there will be two ways to add Parties. One through the canonical way and one through the `Canton` way. Also, I don't think that we have a unique way on how to add parties among all systems. Some systems add parties \"centrally\", some distributed at the participant, some at the \"doorman\" etc.\r\nTherefore we should in a first iteration restrict ourselves to the read side of this API.",
        "createdAt" : "2019-05-22T11:02:15Z",
        "updatedAt" : "2019-05-23T20:06:44Z",
        "lastEditedBy" : {
          "login" : "daravep",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/14316769?u=ecf84cb9190107a561ee4bec759072fdefd73269&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "949c69703c60436cb3be1de6cb82043c45186fbf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,99 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+syntax = \"proto3\";\n+\n+package com.digitalasset.admin.api.v1;\n+\n+option java_outer_classname = \"PartyManagementServiceOuterClass\";\n+option java_package = \"com.digitalasset.admin.api.v1\";\n+\n+// Allows clients to manage the parties that are hosted by the particiapant.\n+service PartyManagementService {\n+\n+  // Returns the identifiers of all parties hosted by the participant.\n+  rpc ListParties (ListPartiesRequest) returns (ListPartiesResponse);\n+\n+  // Adds a party to the set hosted by the participant. The validations performed\n+  // are implementation specific. For instance, party names might be checked\n+  // if they follow a certain pattern or the operation may be vetted by the \n+  // consensus of the collaborating nodes, etc.\n+  rpc AddParty (AddPartyRequest) returns (AddPartyResponse);"
  },
  {
    "id" : "6c8c6773-6850-419f-b379-2b0b92fd5913",
    "prId" : 1264,
    "comments" : [
      {
        "id" : "7611b6d1-b131-494e-a7b9-b97d752b91a8",
        "parentId" : null,
        "author" : {
          "login" : "daravep",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/14316769?u=ecf84cb9190107a561ee4bec759072fdefd73269&v=4"
        },
        "body" : "1) This is too little information. You need to distinguish between \"parties I control\" and \"parties other people control\".\r\n2) As pointed out, parties in Canton are \"stable unique identifiers\" which are not suitable for human consumption. I think we need to add something like `(partyId, Option[CommonMetadata], Option[CustomMetadata])`\r\nwhere `CommonMetadata` is information that is commonly present in all ledger implementations and `CustomMetadata` is information which can go beyond. \r\nFurthermore, for Canton, `partyId` will remain stable and unchanged. `CommonMetadata` can be changed.\r\nAs such, we need an `MetadataUpdate` stream which is embedded in the Ledger API transaction stream.\r\n",
        "createdAt" : "2019-05-22T10:56:21Z",
        "updatedAt" : "2019-05-23T20:06:44Z",
        "lastEditedBy" : {
          "login" : "daravep",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/14316769?u=ecf84cb9190107a561ee4bec759072fdefd73269&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "949c69703c60436cb3be1de6cb82043c45186fbf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,99 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+syntax = \"proto3\";\n+\n+package com.digitalasset.admin.api.v1;\n+\n+option java_outer_classname = \"PartyManagementServiceOuterClass\";\n+option java_package = \"com.digitalasset.admin.api.v1\";\n+\n+// Allows clients to manage the parties that are hosted by the particiapant.\n+service PartyManagementService {\n+\n+  // Returns the identifiers of all parties hosted by the participant.\n+  rpc ListParties (ListPartiesRequest) returns (ListPartiesResponse);\n+\n+  // Adds a party to the set hosted by the participant. The validations performed\n+  // are implementation specific. For instance, party names might be checked\n+  // if they follow a certain pattern or the operation may be vetted by the \n+  // consensus of the collaborating nodes, etc.\n+  rpc AddParty (AddPartyRequest) returns (AddPartyResponse);\n+}\n+\n+message ListPartiesRequest {"
  },
  {
    "id" : "2d49b305-6e55-4237-9819-27f511d6a347",
    "prId" : 1264,
    "comments" : [
      {
        "id" : "215a6ac7-de39-46ed-8d75-99a9cd052b19",
        "parentId" : null,
        "author" : {
          "login" : "daravep",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/14316769?u=ecf84cb9190107a561ee4bec759072fdefd73269&v=4"
        },
        "body" : "The information below is necessary for Canton. However, I don't mind changing the Canton command to `ListPartiesVerbose` and implement this smaller _command._",
        "createdAt" : "2019-05-22T10:57:46Z",
        "updatedAt" : "2019-05-23T20:06:44Z",
        "lastEditedBy" : {
          "login" : "daravep",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/14316769?u=ecf84cb9190107a561ee4bec759072fdefd73269&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "949c69703c60436cb3be1de6cb82043c45186fbf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,99 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+syntax = \"proto3\";\n+\n+package com.digitalasset.admin.api.v1;\n+\n+option java_outer_classname = \"PartyManagementServiceOuterClass\";\n+option java_package = \"com.digitalasset.admin.api.v1\";\n+\n+// Allows clients to manage the parties that are hosted by the particiapant.\n+service PartyManagementService {\n+\n+  // Returns the identifiers of all parties hosted by the participant.\n+  rpc ListParties (ListPartiesRequest) returns (ListPartiesResponse);\n+\n+  // Adds a party to the set hosted by the participant. The validations performed\n+  // are implementation specific. For instance, party names might be checked\n+  // if they follow a certain pattern or the operation may be vetted by the \n+  // consensus of the collaborating nodes, etc.\n+  rpc AddParty (AddPartyRequest) returns (AddPartyResponse);\n+}\n+\n+message ListPartiesRequest {\n+\n+  // Must correspond to the ledger ID reported by the Ledger Identification Service.\n+  // Required\n+  string ledger_id = 1;\n+\n+  // TODO: Discuss teh necessity to include below fields, they are\n+  // present in the canton version of this service."
  },
  {
    "id" : "6e75328f-8d1a-4a84-abda-b8e621bfbf58",
    "prId" : 1264,
    "comments" : [
      {
        "id" : "97dae35b-7cc0-470f-8495-98d69ac821e4",
        "parentId" : null,
        "author" : {
          "login" : "daravep",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/14316769?u=ecf84cb9190107a561ee4bec759072fdefd73269&v=4"
        },
        "body" : "please consider my comment on stable party identifiers and unstable metadata. this is IMHO key.",
        "createdAt" : "2019-05-22T10:58:17Z",
        "updatedAt" : "2019-05-23T20:06:44Z",
        "lastEditedBy" : {
          "login" : "daravep",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/14316769?u=ecf84cb9190107a561ee4bec759072fdefd73269&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "949c69703c60436cb3be1de6cb82043c45186fbf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,99 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+syntax = \"proto3\";\n+\n+package com.digitalasset.admin.api.v1;\n+\n+option java_outer_classname = \"PartyManagementServiceOuterClass\";\n+option java_package = \"com.digitalasset.admin.api.v1\";\n+\n+// Allows clients to manage the parties that are hosted by the particiapant.\n+service PartyManagementService {\n+\n+  // Returns the identifiers of all parties hosted by the participant.\n+  rpc ListParties (ListPartiesRequest) returns (ListPartiesResponse);\n+\n+  // Adds a party to the set hosted by the participant. The validations performed\n+  // are implementation specific. For instance, party names might be checked\n+  // if they follow a certain pattern or the operation may be vetted by the \n+  // consensus of the collaborating nodes, etc.\n+  rpc AddParty (AddPartyRequest) returns (AddPartyResponse);\n+}\n+\n+message ListPartiesRequest {\n+\n+  // Must correspond to the ledger ID reported by the Ledger Identification Service.\n+  // Required\n+  string ledger_id = 1;\n+\n+  // TODO: Discuss teh necessity to include below fields, they are\n+  // present in the canton version of this service.\n+  \n+  // Timestamp seems irrelevant. Offset would be more interesting, but\n+  // it could incentivise concurrent use of this api and ledger api,\n+  // which should be rather discouraged.\n+  //google.protobuf.Timestamp asOf = 1;\n+\n+  // Domain is implicit in most implementations, ledger_id comes\n+  // close to this field semantically\n+  //string filterDomain = 2;\n+\n+  // Party filter could actually be interesting one to include.\n+  // I'd prefer to skip it for KISS principle's sake\n+  //string filterParty = 3;\n+}\n+\n+message ListPartiesResponse {\n+\n+  // The details of all DAML parties hosted by the participant.\n+  // Required\n+  repeated PartyDetails party_details = 1;\n+}\n+\n+message PartyDetails {\n+\n+  // The IDs of a DAML party hosted by the participant.\n+  // Required\n+  string party_ids = 1;"
  },
  {
    "id" : "fff725d2-6493-4da7-853b-4ed9d4c67b43",
    "prId" : 1264,
    "comments" : [
      {
        "id" : "4fd32acf-b1c3-46be-b9ca-57370482b1a9",
        "parentId" : null,
        "author" : {
          "login" : "daravep",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/14316769?u=ecf84cb9190107a561ee4bec759072fdefd73269&v=4"
        },
        "body" : "As said, In Canton, this request doesn't go to the participant node but to the identity manager who is autoritative to the party_id and so there can be many identity managers.",
        "createdAt" : "2019-05-22T11:04:48Z",
        "updatedAt" : "2019-05-23T20:06:44Z",
        "lastEditedBy" : {
          "login" : "daravep",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/14316769?u=ecf84cb9190107a561ee4bec759072fdefd73269&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "949c69703c60436cb3be1de6cb82043c45186fbf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,99 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+syntax = \"proto3\";\n+\n+package com.digitalasset.admin.api.v1;\n+\n+option java_outer_classname = \"PartyManagementServiceOuterClass\";\n+option java_package = \"com.digitalasset.admin.api.v1\";\n+\n+// Allows clients to manage the parties that are hosted by the particiapant.\n+service PartyManagementService {\n+\n+  // Returns the identifiers of all parties hosted by the participant.\n+  rpc ListParties (ListPartiesRequest) returns (ListPartiesResponse);\n+\n+  // Adds a party to the set hosted by the participant. The validations performed\n+  // are implementation specific. For instance, party names might be checked\n+  // if they follow a certain pattern or the operation may be vetted by the \n+  // consensus of the collaborating nodes, etc.\n+  rpc AddParty (AddPartyRequest) returns (AddPartyResponse);\n+}\n+\n+message ListPartiesRequest {\n+\n+  // Must correspond to the ledger ID reported by the Ledger Identification Service.\n+  // Required\n+  string ledger_id = 1;\n+\n+  // TODO: Discuss teh necessity to include below fields, they are\n+  // present in the canton version of this service.\n+  \n+  // Timestamp seems irrelevant. Offset would be more interesting, but\n+  // it could incentivise concurrent use of this api and ledger api,\n+  // which should be rather discouraged.\n+  //google.protobuf.Timestamp asOf = 1;\n+\n+  // Domain is implicit in most implementations, ledger_id comes\n+  // close to this field semantically\n+  //string filterDomain = 2;\n+\n+  // Party filter could actually be interesting one to include.\n+  // I'd prefer to skip it for KISS principle's sake\n+  //string filterParty = 3;\n+}\n+\n+message ListPartiesResponse {\n+\n+  // The details of all DAML parties hosted by the participant.\n+  // Required\n+  repeated PartyDetails party_details = 1;\n+}\n+\n+message PartyDetails {\n+\n+  // The IDs of a DAML party hosted by the participant.\n+  // Required\n+  string party_ids = 1;\n+\n+  // TODO: Discuss the necessity to include below fields, they are\n+  // present in the canton version of this service.\n+  // All those fields could be added later if need be.\n+  \n+  // Domain is implicit in most of other implementations. There is\n+  // only one. \n+  //string domain = 2;\n+\n+  // Participant is implicit in most of other implementations. It is the\n+  // one you are communicating with.\n+  //string participant = 3;\n+\n+  // Privilege is implicit in most of other implementations. It is a\n+  // submitting participant.\n+  //com.digitalasset.canton.identity.v0.ParticipantPrivilege privilege = 4;\n+\n+  // TrustLevel is implicit in most of other implementations. It is a \n+  // regular participant.\n+  //com.digitalasset.canton.identity.v0.TrustLevel trustLevel = 5;\n+}\n+\n+message AddPartyRequest {"
  },
  {
    "id" : "c736c7dd-c4f6-4c40-b8c7-b94ce72c7408",
    "prId" : 1264,
    "comments" : [
      {
        "id" : "965b6f52-2861-486a-9c43-d7e6d7caf28e",
        "parentId" : null,
        "author" : {
          "login" : "daravep",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/14316769?u=ecf84cb9190107a561ee4bec759072fdefd73269&v=4"
        },
        "body" : "party_id in canton needs to be `<identifier>::<fingerprint of identity key>`\r\nas such if somebody configures `Alice` as target party, then `Alice` should be the \"known name/metadata\" and actually not the party name itself. In Canton we enforce parties to be stable unique identifiers. So we want to be able to change the party name by changing metadata. ",
        "createdAt" : "2019-05-22T11:06:24Z",
        "updatedAt" : "2019-05-23T20:06:44Z",
        "lastEditedBy" : {
          "login" : "daravep",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/14316769?u=ecf84cb9190107a561ee4bec759072fdefd73269&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "949c69703c60436cb3be1de6cb82043c45186fbf",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,99 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+syntax = \"proto3\";\n+\n+package com.digitalasset.admin.api.v1;\n+\n+option java_outer_classname = \"PartyManagementServiceOuterClass\";\n+option java_package = \"com.digitalasset.admin.api.v1\";\n+\n+// Allows clients to manage the parties that are hosted by the particiapant.\n+service PartyManagementService {\n+\n+  // Returns the identifiers of all parties hosted by the participant.\n+  rpc ListParties (ListPartiesRequest) returns (ListPartiesResponse);\n+\n+  // Adds a party to the set hosted by the participant. The validations performed\n+  // are implementation specific. For instance, party names might be checked\n+  // if they follow a certain pattern or the operation may be vetted by the \n+  // consensus of the collaborating nodes, etc.\n+  rpc AddParty (AddPartyRequest) returns (AddPartyResponse);\n+}\n+\n+message ListPartiesRequest {\n+\n+  // Must correspond to the ledger ID reported by the Ledger Identification Service.\n+  // Required\n+  string ledger_id = 1;\n+\n+  // TODO: Discuss teh necessity to include below fields, they are\n+  // present in the canton version of this service.\n+  \n+  // Timestamp seems irrelevant. Offset would be more interesting, but\n+  // it could incentivise concurrent use of this api and ledger api,\n+  // which should be rather discouraged.\n+  //google.protobuf.Timestamp asOf = 1;\n+\n+  // Domain is implicit in most implementations, ledger_id comes\n+  // close to this field semantically\n+  //string filterDomain = 2;\n+\n+  // Party filter could actually be interesting one to include.\n+  // I'd prefer to skip it for KISS principle's sake\n+  //string filterParty = 3;\n+}\n+\n+message ListPartiesResponse {\n+\n+  // The details of all DAML parties hosted by the participant.\n+  // Required\n+  repeated PartyDetails party_details = 1;\n+}\n+\n+message PartyDetails {\n+\n+  // The IDs of a DAML party hosted by the participant.\n+  // Required\n+  string party_ids = 1;\n+\n+  // TODO: Discuss the necessity to include below fields, they are\n+  // present in the canton version of this service.\n+  // All those fields could be added later if need be.\n+  \n+  // Domain is implicit in most of other implementations. There is\n+  // only one. \n+  //string domain = 2;\n+\n+  // Participant is implicit in most of other implementations. It is the\n+  // one you are communicating with.\n+  //string participant = 3;\n+\n+  // Privilege is implicit in most of other implementations. It is a\n+  // submitting participant.\n+  //com.digitalasset.canton.identity.v0.ParticipantPrivilege privilege = 4;\n+\n+  // TrustLevel is implicit in most of other implementations. It is a \n+  // regular participant.\n+  //com.digitalasset.canton.identity.v0.TrustLevel trustLevel = 5;\n+}\n+\n+message AddPartyRequest {\n+\n+  // Must correspond to the ledger ID reported by the Ledger Identification Service.\n+  // Required\n+  string ledger_id = 1;\n+\n+  // Party to be added to the participant.\n+  // Required\n+  string party_id = 2;"
  }
]