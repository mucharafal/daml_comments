[
  {
    "id" : "29373c83-b743-4b93-a738-2ebee687837a",
    "prId" : 770,
    "comments" : [
      {
        "id" : "d97a5343-c784-4b00-bf89-de33bf7fa0cd",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "I love export lists...",
        "createdAt" : "2019-04-29T16:23:51Z",
        "updatedAt" : "2019-04-30T08:53:59Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f66a210e-fbbd-49a1-ba56-b27cdca0c1c0",
        "parentId" : "d97a5343-c784-4b00-bf89-de33bf7fa0cd",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Can we hlint for that?",
        "createdAt" : "2019-04-30T07:00:14Z",
        "updatedAt" : "2019-04-30T08:53:59Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6d3951d6-34cb-4569-80cb-31d501c869cb",
        "parentId" : "d97a5343-c784-4b00-bf89-de33bf7fa0cd",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Yes! If there's broad support I'll do it. You just add `- warn: {name: Use explicit module export list}` in the `.hlint.yaml`",
        "createdAt" : "2019-04-30T07:34:56Z",
        "updatedAt" : "2019-04-30T08:53:59Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ae6c551f-9dbb-49c2-bc6d-4b60c00264ff",
        "parentId" : "d97a5343-c784-4b00-bf89-de33bf7fa0cd",
        "author" : null,
        "body" : "I'm in favor!",
        "createdAt" : "2019-04-30T08:01:53Z",
        "updatedAt" : "2019-04-30T08:53:59Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "81d3c770-c56d-414d-9bd4-fecda22454a3",
        "parentId" : "d97a5343-c784-4b00-bf89-de33bf7fa0cd",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : ":+1:",
        "createdAt" : "2019-04-30T08:14:21Z",
        "updatedAt" : "2019-04-30T08:53:59Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9e6ef69c48f92b40eb0fdb6a818fab0a0de73496",
    "line" : null,
    "diffHunk" : "@@ -3,10 +3,25 @@\n \n module DAML.Project.Util where"
  },
  {
    "id" : "25d4b73f-ccfb-46d3-a9dc-f5ac5655d035",
    "prId" : 770,
    "comments" : [
      {
        "id" : "10d356f1-93d8-406c-b56c-a1a35fdc7d13",
        "parentId" : null,
        "author" : null,
        "body" : "copyDirectory is maybe not a good name, given that it also sets write permissions (I did this, it is my fault)",
        "createdAt" : "2019-04-30T07:58:18Z",
        "updatedAt" : "2019-04-30T08:53:59Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d546b866-ae6c-46b2-8f8a-af0e69b1f3c0",
        "parentId" : "10d356f1-93d8-406c-b56c-a1a35fdc7d13",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Good catch, I had forgotten about this change. Iâ€™ve removed it from `copyDirectory` and moved it to `daml new`.",
        "createdAt" : "2019-04-30T08:54:46Z",
        "updatedAt" : "2019-04-30T08:54:47Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9e6ef69c48f92b40eb0fdb6a818fab0a0de73496",
    "line" : null,
    "diffHunk" : "@@ -10,3 +22,26 @@ fromRightM f = either f pure\n -- | Same as 'fromMaybe' but monadic in the default.\n fromMaybeM :: Applicative m => m a -> Maybe a -> m a\n fromMaybeM d = maybe d pure\n+\n+copyDirectory :: FilePath -> FilePath -> IO ()\n+copyDirectory src target = do\n+    files <- listFilesRecursive src\n+    forM_ files $ \\file -> do\n+        let baseName = makeRelative src file\n+        let targetFile = target </> baseName\n+        createDirectoryIfMissing True (takeDirectory targetFile)\n+        copyFile file targetFile\n+        p <- getPermissions targetFile\n+        setPermissions targetFile p { writable = True }"
  },
  {
    "id" : "7a7a15c3-ec6d-4ed1-9f16-4de9ac619f66",
    "prId" : 770,
    "comments" : [
      {
        "id" : "c8943003-5b65-4817-a80d-df60ddc8ee87",
        "parentId" : null,
        "author" : null,
        "body" : "`copyDirectory` here sets write permissions on the target recursively, which sounds like the opposite of what we want in DAML.Assistant.Install ",
        "createdAt" : "2019-04-30T07:58:58Z",
        "updatedAt" : "2019-04-30T08:53:59Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "9e6ef69c48f92b40eb0fdb6a818fab0a0de73496",
    "line" : 44,
    "diffHunk" : "@@ -10,3 +22,26 @@ fromRightM f = either f pure\n -- | Same as 'fromMaybe' but monadic in the default.\n fromMaybeM :: Applicative m => m a -> Maybe a -> m a\n fromMaybeM d = maybe d pure\n+\n+copyDirectory :: FilePath -> FilePath -> IO ()\n+copyDirectory src target = do\n+    files <- listFilesRecursive src\n+    forM_ files $ \\file -> do\n+        let baseName = makeRelative src file\n+        let targetFile = target </> baseName\n+        createDirectoryIfMissing True (takeDirectory targetFile)\n+        copyFile file targetFile\n+        p <- getPermissions targetFile\n+        setPermissions targetFile p { writable = True }\n+\n+-- Similar to `renameDirectory` but falls back to a non-atomic copy + delete\n+-- if renameDirectory is unsupported, e.g., because src and target are on different\n+-- filesystems.\n+moveDirectory :: FilePath -> FilePath -> IO ()\n+moveDirectory src target =\n+    catchJust\n+        (\\ex -> guard (ioeGetErrorType ex == UnsupportedOperation))\n+        (renameDirectory src target)\n+        (const $ do\n+             copyDirectory src target"
  }
]