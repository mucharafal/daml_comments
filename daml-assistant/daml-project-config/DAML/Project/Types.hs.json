[
  {
    "id" : "b03b6363-0e5f-4d1f-b0a8-f89014a38d6e",
    "prId" : 545,
    "comments" : [
      {
        "id" : "721d7c1e-75c3-448c-8b2a-2158d10203b9",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Could we be clear whether it is the dir that daml assistant lives in, or the full path with .exe etc on the end? Ditto all the other ones in this module.",
        "createdAt" : "2019-04-16T15:17:36Z",
        "updatedAt" : "2019-04-16T15:25:15Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a9487eb1-0e8f-4d83-b134-c313da909cba",
        "parentId" : "721d7c1e-75c3-448c-8b2a-2158d10203b9",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I’ve tried to make it more clear and added an example for this variable. I’ll leave the other ones for separate PRs.",
        "createdAt" : "2019-04-16T15:27:08Z",
        "updatedAt" : "2019-04-16T15:27:08Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e06e7fc3-1b1e-4a03-a4eb-d6d410f7e556",
        "parentId" : "721d7c1e-75c3-448c-8b2a-2158d10203b9",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "👍 ",
        "createdAt" : "2019-04-16T15:27:34Z",
        "updatedAt" : "2019-04-16T15:27:34Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1fa796545cb4db6ebce53863f0a269efae559f20",
    "line" : 5,
    "diffHunk" : "@@ -85,6 +85,11 @@ newtype DamlPath = DamlPath\n     { unwrapDamlPath :: FilePath\n     } deriving (Eq, Show)\n \n+-- | Absolute file path to the assistant.\n+newtype DamlAssistantPath = DamlAssistantPath"
  },
  {
    "id" : "7cf33834-8f1d-44e2-997d-e684eeb3bbdf",
    "prId" : 379,
    "comments" : [
      {
        "id" : "8d974f25-f5e6-4987-b3e7-123b4b5b22d6",
        "parentId" : null,
        "author" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "body" : "```suggestion\r\nisStableVersion = null . L.view V.release . unwrapSdkVersion\r\n```",
        "createdAt" : "2019-04-11T10:32:38Z",
        "updatedAt" : "2019-04-11T11:15:56Z",
        "lastEditedBy" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8f2cf77a-eae8-44e5-8010-4584dc02eebd",
        "parentId" : "8d974f25-f5e6-4987-b3e7-123b4b5b22d6",
        "author" : {
          "login" : "fmota-da",
          "name" : "Fran",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/45589443?v=4"
        },
        "body" : "Of course! :-) thanks\r\n",
        "createdAt" : "2019-04-11T10:49:57Z",
        "updatedAt" : "2019-04-11T11:15:56Z",
        "lastEditedBy" : {
          "login" : "fmota-da",
          "name" : "Fran",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/45589443?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "cfd62eba-7e20-4dc3-a1db-03e73322e32c",
        "parentId" : "8d974f25-f5e6-4987-b3e7-123b4b5b22d6",
        "author" : {
          "login" : "fmota-da",
          "name" : "Fran",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/45589443?v=4"
        },
        "body" : "I'm somewhat surprised that hlint didn't reject it?",
        "createdAt" : "2019-04-11T10:57:54Z",
        "updatedAt" : "2019-04-11T11:15:56Z",
        "lastEditedBy" : {
          "login" : "fmota-da",
          "name" : "Fran",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/45589443?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c16696d7d467730a2a48b7bd00604d106c72fc91",
    "line" : null,
    "diffHunk" : "@@ -56,22 +56,29 @@ instance Y.FromJSON SdkVersion where\n             Left e -> fail (\"Invalid SDK version: \" <> e)\n             Right v -> pure (SdkVersion v)\n \n-data SdkChannel\n-    = Stable\n-    | Unstable\n-    | Custom [V.Identifier]\n-    deriving (Eq, Ord, Show)\n-\n-versionChannel :: SdkVersion -> SdkChannel\n-versionChannel (SdkVersion v) =\n-    let ch = v L.^. V.release in\n-    case ch of\n-        [] -> Stable\n-        [u] | Just u == V.textual \"unstable\" -> Unstable\n-        _ -> Custom ch\n+versionToString :: SdkVersion -> String\n+versionToString = V.toString . unwrapSdkVersion\n+\n+versionToText :: SdkVersion -> Text\n+versionToText = V.toText . unwrapSdkVersion\n+\n+data InvalidVersion = InvalidVersion\n+    { ivSource :: !Text -- ^ invalid version\n+    , ivMessage :: !String -- ^ error message\n+    } deriving (Show, Eq)\n+\n+instance Exception InvalidVersion where\n+    displayException (InvalidVersion bad msg) =\n+        \"Invalid SDK version  \" <> show bad <> \": \" <> msg\n+\n+parseVersion :: Text -> Either InvalidVersion SdkVersion\n+parseVersion src =\n+    case V.fromText src of\n+        Left msg -> Left (InvalidVersion src msg)\n+        Right v -> Right (SdkVersion v)\n \n isStableVersion :: SdkVersion -> Bool\n-isStableVersion = (== Stable) . versionChannel\n+isStableVersion = (== []) . L.view V.release . unwrapSdkVersion"
  },
  {
    "id" : "f02fc2ab-76a0-456d-ab0a-61c2f4c47c30",
    "prId" : 337,
    "comments" : [
      {
        "id" : "6f5b8bb2-4ef8-4df5-9844-1aa1f8b39101",
        "parentId" : null,
        "author" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "body" : "Do you have any plan to use this?",
        "createdAt" : "2019-04-10T06:38:19Z",
        "updatedAt" : "2019-04-10T08:58:45Z",
        "lastEditedBy" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7165549d-330f-40b7-8e53-832fe2560d22",
        "parentId" : "6f5b8bb2-4ef8-4df5-9844-1aa1f8b39101",
        "author" : {
          "login" : "fmota-da",
          "name" : "Fran",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/45589443?v=4"
        },
        "body" : "I might take this out. The concept of channel is premature.",
        "createdAt" : "2019-04-10T08:32:26Z",
        "updatedAt" : "2019-04-10T08:58:45Z",
        "lastEditedBy" : {
          "login" : "fmota-da",
          "name" : "Fran",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/45589443?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c63dc83e702244360b482149bc1bc3dfc388c2b4",
    "line" : 47,
    "diffHunk" : "@@ -44,27 +46,32 @@ newtype ProjectConfig = ProjectConfig\n     } deriving (Eq, Show, Y.FromJSON)\n \n newtype SdkVersion = SdkVersion\n-    { unwrapSdkVersion :: Text\n-    } deriving (Eq, Show, Y.FromJSON)\n-\n-newtype SdkChannel = SdkChannel\n-    { unwrapSdkChannel :: Text\n-    } deriving (Eq, Show, Y.FromJSON)\n-\n-newtype SdkSubVersion = SdkSubVersion\n-    { unwrapSdkSubVersion :: Text\n-    } deriving (Eq, Show, Y.FromJSON)\n-\n-splitVersion :: SdkVersion -> (SdkChannel, SdkSubVersion)\n-splitVersion (SdkVersion v) =\n-    case T.splitOn \"-\" v of\n-        [] -> error \"Logic error: empty version name.\"\n-        (ch : rest) -> (SdkChannel ch, SdkSubVersion (T.intercalate \"-\" rest))\n-\n-joinVersion :: (SdkChannel, SdkSubVersion) -> SdkVersion\n-joinVersion (SdkChannel a, SdkSubVersion \"\") = SdkVersion a\n-joinVersion (SdkChannel a, SdkSubVersion b) = SdkVersion (a <> \"-\" <> b)\n-\n+    { unwrapSdkVersion :: V.Version\n+    } deriving (Eq, Ord, Show)\n+\n+instance Y.FromJSON SdkVersion where\n+    parseJSON y = do\n+        verE <- V.fromText <$> Y.parseJSON y\n+        case verE of\n+            Left e -> fail (\"Invalid SDK version: \" <> e)\n+            Right v -> pure (SdkVersion v)\n+\n+data SdkChannel\n+    = Stable\n+    | Unstable\n+    | Custom [V.Identifier]"
  },
  {
    "id" : "d90cf5e3-4e7e-47e5-9eb4-cefc7ab25e9d",
    "prId" : 337,
    "comments" : [
      {
        "id" : "64664a56-8a6e-44c2-b0b5-a016cc91c9f1",
        "parentId" : null,
        "author" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "body" : "```suggestion\r\n    case ch of\r\n        [] -> Stable\r\n        [x] | Just x == V.textual \"unstable\" -> Unstable\r\n        _ -> Custom ch\r\n```\r\n\r\nYour choice but I find the logic here quite hard to parse.",
        "createdAt" : "2019-04-10T06:44:37Z",
        "updatedAt" : "2019-04-10T08:58:45Z",
        "lastEditedBy" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e07a9a90-6dd1-43e7-977e-c94f30d01ea4",
        "parentId" : "64664a56-8a6e-44c2-b0b5-a016cc91c9f1",
        "author" : {
          "login" : "fmota-da",
          "name" : "Fran",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/45589443?v=4"
        },
        "body" : "this is much nicer, thank you :-)",
        "createdAt" : "2019-04-10T07:41:55Z",
        "updatedAt" : "2019-04-10T08:58:45Z",
        "lastEditedBy" : {
          "login" : "fmota-da",
          "name" : "Fran",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/45589443?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c63dc83e702244360b482149bc1bc3dfc388c2b4",
    "line" : null,
    "diffHunk" : "@@ -44,27 +46,32 @@ newtype ProjectConfig = ProjectConfig\n     } deriving (Eq, Show, Y.FromJSON)\n \n newtype SdkVersion = SdkVersion\n-    { unwrapSdkVersion :: Text\n-    } deriving (Eq, Show, Y.FromJSON)\n-\n-newtype SdkChannel = SdkChannel\n-    { unwrapSdkChannel :: Text\n-    } deriving (Eq, Show, Y.FromJSON)\n-\n-newtype SdkSubVersion = SdkSubVersion\n-    { unwrapSdkSubVersion :: Text\n-    } deriving (Eq, Show, Y.FromJSON)\n-\n-splitVersion :: SdkVersion -> (SdkChannel, SdkSubVersion)\n-splitVersion (SdkVersion v) =\n-    case T.splitOn \"-\" v of\n-        [] -> error \"Logic error: empty version name.\"\n-        (ch : rest) -> (SdkChannel ch, SdkSubVersion (T.intercalate \"-\" rest))\n-\n-joinVersion :: (SdkChannel, SdkSubVersion) -> SdkVersion\n-joinVersion (SdkChannel a, SdkSubVersion \"\") = SdkVersion a\n-joinVersion (SdkChannel a, SdkSubVersion b) = SdkVersion (a <> \"-\" <> b)\n-\n+    { unwrapSdkVersion :: V.Version\n+    } deriving (Eq, Ord, Show)\n+\n+instance Y.FromJSON SdkVersion where\n+    parseJSON y = do\n+        verE <- V.fromText <$> Y.parseJSON y\n+        case verE of\n+            Left e -> fail (\"Invalid SDK version: \" <> e)\n+            Right v -> pure (SdkVersion v)\n+\n+data SdkChannel\n+    = Stable\n+    | Unstable\n+    | Custom [V.Identifier]\n+    deriving (Eq, Ord, Show)\n+\n+versionChannel :: SdkVersion -> SdkChannel\n+versionChannel (SdkVersion v) =\n+    let ch = v L.^. V.release in\n+    fromMaybe (Custom ch) $ lookup (map Just ch)"
  }
]