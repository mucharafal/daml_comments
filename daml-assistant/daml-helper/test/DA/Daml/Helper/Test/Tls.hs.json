[
  {
    "id" : "83e62c24-9ad4-4554-94df-365958cd8950",
    "prId" : 4965,
    "comments" : [
      {
        "id" : "86ee249c-f8a5-4d9b-bf4e-92a95fcaa479",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I‚Äôve simplified the tests somewhat to only make one request. Given that the purpose of those tests is to test TLS and not the `daml ledger` commands everything else seems redundant.",
        "createdAt" : "2020-03-12T12:40:13Z",
        "updatedAt" : "2020-03-12T13:12:08Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "59b7325303e5e2cf6701f6caa0c71402f7460bff",
    "line" : 40,
    "diffHunk" : "@@ -21,45 +22,87 @@ main = do\n     damlHelper <- locateRunfiles (mainWorkspace </> \"daml-assistant\" </> \"daml-helper\" </> exe \"daml-helper\")\n     sandbox <- locateRunfiles (mainWorkspace </> \"ledger\" </> \"sandbox\" </> exe \"sandbox-binary\")\n     certDir <- locateRunfiles (mainWorkspace </> \"daml-assistant\" </> \"daml-helper\")\n-    withTempFile $ \\portFile ->\n-        withBinaryFile nullDevice ReadWriteMode $ \\devNull ->\n-        defaultMain $ withResource (createSandbox devNull sandbox portFile (certDir </> \"server.crt\", certDir </> \"server.pem\") (certDir </> \"ca.crt\")) destroySandbox $ \\getSandbox ->\n+    defaultMain $\n         testGroup \"TLS\"\n-            [ testCase \"Party management\" $ do\n-                  p <- sandboxPort <$> getSandbox\n-                  let ledgerOpts =\n-                          [ \"--host=localhost\", \"--port\", show p\n-                          , \"--cacrt\", certDir </> \"ca.crt\"\n-                          , \"--pem\", certDir </> \"client.pem\"\n-                          , \"--crt\", certDir </> \"client.crt\"\n-                          ]\n-                  out <- readProcess damlHelper\n-                      (\"ledger\" : \"list-parties\" : ledgerOpts)\n-                      \"\"\n-                  assertInfixOf \"no parties are known\" out\n-                  out <- readProcess damlHelper\n-                      (\"ledger\" : \"allocate-party\" : \"Alice\" : ledgerOpts)\n-                      \"\"\n-                  assertInfixOf \"Allocated 'Alice' for 'Alice'\" out\n-                  out <- readProcess damlHelper\n-                      (\"ledger\" : \"list-parties\" : ledgerOpts)\n-                      \"\"\n-                  assertInfixOf \"PartyDetails {party = 'Alice', displayName = \\\"Alice\\\", isLocal = True}\" out\n-            -- TODO (MK) Once we have a ledger server (e.g. sandbox) that supports\n-            -- TLS without client auth, we should test this here as well.\n-            ]\n+           [ withSandbox sandbox certDir \"none\" $ \\getSandboxPort ->"
  },
  {
    "id" : "49ba839e-9c72-4770-9b6c-80af69a201d2",
    "prId" : 4943,
    "comments" : [
      {
        "id" : "e9970035-8196-4b9c-80f9-893c02c0623e",
        "parentId" : null,
        "author" : null,
        "body" : "üëç ",
        "createdAt" : "2020-03-11T16:49:02Z",
        "updatedAt" : "2020-03-11T16:49:02Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "6b80face89c6adb9849aad57e5ce5940bc37f090",
    "line" : 52,
    "diffHunk" : "@@ -0,0 +1,79 @@\n+-- Copyright (c) 2020 The DAML Authors. All rights reserved.\n+-- SPDX-License-Identifier: Apache-2.0\n+\n+module DA.Daml.Helper.Test.Tls (main) where\n+\n+import Control.Exception\n+import DA.Bazel.Runfiles\n+import DA.PortFile\n+import Data.List.Extra (isInfixOf)\n+import System.Environment.Blank\n+import System.FilePath\n+import System.Info.Extra\n+import System.IO.Extra\n+import System.Process\n+import Test.Tasty\n+import Test.Tasty.HUnit\n+\n+main :: IO ()\n+main = do\n+    setEnv \"TASTY_NUM_THREADS\" \"1\" True\n+    damlHelper <- locateRunfiles (mainWorkspace </> \"daml-assistant\" </> \"daml-helper\" </> exe \"daml-helper\")\n+    sandbox <- locateRunfiles (mainWorkspace </> \"ledger\" </> \"sandbox\" </> exe \"sandbox-binary\")\n+    certDir <- locateRunfiles (mainWorkspace </> \"daml-assistant\" </> \"daml-helper\" </> \"test-certificates\")\n+    withTempFile $ \\portFile ->\n+        withBinaryFile nullDevice ReadWriteMode $ \\devNull ->\n+        defaultMain $ withResource (createSandbox devNull sandbox portFile (certDir </> \"server.crt\", certDir </> \"server.pem\") (certDir </> \"ca.crt\")) destroySandbox $ \\getSandbox ->\n+        testGroup \"TLS\"\n+            [ testCase \"Party management\" $ do\n+                  p <- sandboxPort <$> getSandbox\n+                  let ledgerOpts =\n+                          [ \"--host=localhost\", \"--port\", show p\n+                          , \"--cacrt\", certDir </> \"ca.crt\"\n+                          , \"--pem\", certDir </> \"client.pem\"\n+                          , \"--crt\", certDir </> \"client.crt\"\n+                          ]\n+                  out <- readProcess damlHelper\n+                      (\"ledger\" : \"list-parties\" : ledgerOpts)\n+                      \"\"\n+                  assertInfixOf \"no parties are known\" out\n+                  out <- readProcess damlHelper\n+                      (\"ledger\" : \"allocate-party\" : \"Alice\" : ledgerOpts)\n+                      \"\"\n+                  assertInfixOf \"Allocated 'Alice' for 'Alice'\" out\n+                  out <- readProcess damlHelper\n+                      (\"ledger\" : \"list-parties\" : ledgerOpts)\n+                      \"\"\n+                  assertInfixOf \"PartyDetails {party = 'Alice', displayName = \\\"Alice\\\", isLocal = True}\" out\n+            -- TODO (MK) Once we have a ledger server (e.g. sandbox) that supports\n+            -- TLS without client auth, we should test this here as well.\n+            ]\n+\n+-- TODO Factor this out into a shared module across tests"
  }
]