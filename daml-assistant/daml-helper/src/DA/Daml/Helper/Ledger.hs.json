[
  {
    "id" : "e1c64c98-aeb1-4315-ae62-67d91395da55",
    "prId" : 7777,
    "comments" : [
      {
        "id" : "bcbcc5db-bb00-44a5-bb7d-1efd2e6f8798",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "We're calling the `LedgerFlags` constructor without listing the field names somewhere below. That's not the best idea in terms of maintainability. When I tried to suggest naming the arguments, I noticed I'm pretty much defining a default value for `LedgerFlags`. Well, let's do this properly then:\r\n```suggestion\r\n\r\ndefaultLedgerFlags :: LedgerApi -> LedgerFlags\r\ndefaultLedgerFlags api = LedgerFlags\r\n  { fApi = api\r\n  , fSslConfigM = Nothing\r\n  , fTimeout = 10\r\n  , fHostM = Nothing\r\n  , fPortM = Nothing\r\n  , fTokFileM = Nothing\r\n  }\r\n\r\n```",
        "createdAt" : "2020-10-22T13:55:03Z",
        "updatedAt" : "2020-10-22T14:47:03Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9beba81036c277a388fcb2d86a847f54a3ae64b8",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +71,75 @@  , fTokFileM :: Maybe FilePath\n  }\n\ndefaultLedgerFlags :: LedgerApi -> LedgerFlags\ndefaultLedgerFlags api = LedgerFlags"
  },
  {
    "id" : "43fc9419-b479-4f39-81ae-7b595de8db2b",
    "prId" : 7700,
    "comments" : [
      {
        "id" : "a57e6683-e02d-4fd2-80cb-2e1df37977c0",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "There are also HTTP APIs with more types like `req`. Maybe worth considering to use one if you care about this.",
        "createdAt" : "2020-10-16T07:26:25Z",
        "updatedAt" : "2020-10-21T14:02:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7875ea81-ead1-40a9-bb36-914854314f9b",
        "parentId" : "a57e6683-e02d-4fd2-80cb-2e1df37977c0",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "@cocreature could you point me to one?",
        "createdAt" : "2020-10-19T16:26:37Z",
        "updatedAt" : "2020-10-21T14:02:15Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4dad3abe-588f-4564-9ac2-b81abe51787e",
        "parentId" : "a57e6683-e02d-4fd2-80cb-2e1df37977c0",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "It’s literally called [req](https://hackage.haskell.org/package/req)",
        "createdAt" : "2020-10-19T16:30:31Z",
        "updatedAt" : "2020-10-21T14:02:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a508f660-360e-4ab4-854b-e10e80169ffb",
        "parentId" : "a57e6683-e02d-4fd2-80cb-2e1df37977c0",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "Ah, was getting your comment wrong. I think for this simple use case using plain http-client-simple should be good enough.",
        "createdAt" : "2020-10-19T17:49:50Z",
        "updatedAt" : "2020-10-21T14:02:15Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5fe9e2df-b482-417a-8dcb-953c7bf746cd",
        "parentId" : "a57e6683-e02d-4fd2-80cb-2e1df37977c0",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "agreed",
        "createdAt" : "2020-10-19T17:52:11Z",
        "updatedAt" : "2020-10-21T14:02:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a8eedbfa7487539c8c7d7f663d13ec5fef4dda3a",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +248,252 @@newtype Path = Path\n  { unPath :: BS.ByteString\n  } deriving IsString\n\n-- | Run a request against the HTTP JSON API."
  },
  {
    "id" : "2ddcfaf0-72f4-4ff1-a8a5-fef2736d702e",
    "prId" : 7700,
    "comments" : [
      {
        "id" : "67d5a129-d474-46cc-9f99-56aafbebeb88",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "The logic here only works if the JSON API is hosted at `/` and not a subpath. I believe we have this limitation in other places (e.g., DAML Script) so not a big issue but worth keeping in mind.",
        "createdAt" : "2020-10-16T07:27:26Z",
        "updatedAt" : "2020-10-21T14:02:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0c85f7bf-8055-45e2-bb5f-a4ca5a292002",
        "parentId" : "67d5a129-d474-46cc-9f99-56aafbebeb88",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Does that work with DABL?",
        "createdAt" : "2020-10-16T07:48:13Z",
        "updatedAt" : "2020-10-21T14:02:15Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "32bc8750-96fc-42c0-baf4-fde7520b7f57",
        "parentId" : "67d5a129-d474-46cc-9f99-56aafbebeb88",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Not quite sure where dabl hosts the API but afaik they don’t expose the admin endpoints anyway.",
        "createdAt" : "2020-10-16T10:30:16Z",
        "updatedAt" : "2020-10-21T14:02:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a8eedbfa7487539c8c7d7f663d13ec5fef4dda3a",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +260,264 @@    setRequestHost (BSC.pack host) $\n    setRequestMethod (unMethod method) $\n    setRequestPath (unPath path) $\n    setRequestHeader\n      \"authorization\""
  },
  {
    "id" : "57b320a9-a2e8-4e45-8dec-5c4f1daa45ae",
    "prId" : 7700,
    "comments" : [
      {
        "id" : "ba30ce2d-58b1-447c-a169-b5222875da55",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Do you know why we have this and `LedgerArgs`? That seems a bit redundant. It's also strange that import the compiler here. This is completely unrelated but might need some cleanup in the future. In the meantime, I think it would make sense to add the `api` field also do `LedgerArgs` instead of passing it around individually.",
        "createdAt" : "2020-10-20T16:16:29Z",
        "updatedAt" : "2020-10-21T14:02:15Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e84cb3ec-7128-4b89-b536-01a7b58d4e10",
        "parentId" : "ba30ce2d-58b1-447c-a169-b5222875da55",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "I think the `LedgerArgs/LedgerFlags` and how the gRPC api is called would need some cleanup, it seems unnecessarily complicated to me.",
        "createdAt" : "2020-10-20T17:06:58Z",
        "updatedAt" : "2020-10-21T14:02:15Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "08ad77b3-050d-4cfa-ab41-fc652346916c",
        "parentId" : "ba30ce2d-58b1-447c-a169-b5222875da55",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "Looking at it, I think the module `Compiler.Fetch` should move to the helper, and the `LedgerArgs` should become `LedgerFlags` or vice versa. I'd rather not add an unused field to `LedgerArgs` and clean this up in the near future.",
        "createdAt" : "2020-10-21T11:48:15Z",
        "updatedAt" : "2020-10-21T14:02:15Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a8eedbfa7487539c8c7d7f663d13ec5fef4dda3a",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +54,58 @@  deriving (Show, Eq)\n\ndata LedgerFlags = LedgerFlags\n  { api :: LedgerApi\n  , hostM :: Maybe String"
  },
  {
    "id" : "5650cb7b-ba50-4617-a5f8-fc83e1460b97",
    "prId" : 7700,
    "comments" : [
      {
        "id" : "997457c3-6ee4-4cff-85d0-8feec457e9f4",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Is there some form of error message we get from the JSON APU we could print here in case of a failure? It might also be better to `putStrLn` all the information we have and call `exitFailure`.",
        "createdAt" : "2020-10-20T16:21:04Z",
        "updatedAt" : "2020-10-21T14:02:15Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0a098146-eb9a-417e-9004-a12daa8b37e2",
        "parentId" : "997457c3-6ee4-4cff-85d0-8feec457e9f4",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "We now print the full status containing the error.",
        "createdAt" : "2020-10-21T13:25:06Z",
        "updatedAt" : "2020-10-21T14:02:15Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a8eedbfa7487539c8c7d7f663d13ec5fef4dda3a",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +267,271 @@  let status = getResponseStatus resp\n  unless (statusCode status == 200) $\n    fail $ \"Request failed with error code \" <> show status\n  pure resp\n"
  },
  {
    "id" : "2dcc6ecd-1b93-45c6-9fd8-a8afabdca6b4",
    "prId" : 7510,
    "comments" : [
      {
        "id" : "6940b7c3-ed59-45a9-b53f-070a92a0d0c2",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Please use `catch` from `safe-exceptions` or even better `catchIO`. You don’t want to catch asynchronous exceptions here.",
        "createdAt" : "2020-09-29T09:00:11Z",
        "updatedAt" : "2020-09-29T13:45:29Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "78912e01-043a-4a61-a8e2-387bfed1999a",
        "parentId" : "6940b7c3-ed59-45a9-b53f-070a92a0d0c2",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "I switch to safe-exceptions.\r\nI couldn't use `catchIO` as this does not catch `GRPCIOTimeout` which is the one I really care about.",
        "createdAt" : "2020-09-29T13:48:19Z",
        "updatedAt" : "2020-09-29T13:48:19Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "aa973cef1f3fd7914d95629eb069b1268c7d93ac",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +137,141 @@    putStrLn $ \"Uploading \" <> darPath <> \" to \" <> show hp\n    bytes <- BS.readFile darPath\n    uploadDarFile hp bytes `catch` \\e -> throw (ExceptionDuringUploadDar e)\n    putStrLn \"DAR upload succeeded.\"\n"
  },
  {
    "id" : "7c44e15e-de12-49cc-909b-b10a6669addd",
    "prId" : 2384,
    "comments" : [
      {
        "id" : "0bb3c945-9fc8-4fb3-a808-fafab9651b9e",
        "parentId" : null,
        "author" : null,
        "body" : "I like the separate module :-) \r\n\r\nI'd also be happy if all of the related logic for running the commands was in this module as well (the `runDeploy`, `runAllocateParty`, `runListParty`, etc). But happy to leave this refactoring for another PR. DamlHelper sure needs it at this point.",
        "createdAt" : "2019-08-02T17:58:24Z",
        "updatedAt" : "2019-08-02T17:58:24Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "f8e94fef0071b44e845610dfb85f98680256ad50",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +1,5 @@-- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n-- SPDX-License-Identifier: Apache-2.0\nmodule DA.Daml.Helper.Ledger (\n    HostAndPort(..),\n    listParties, PartyDetails(..), Party(..),"
  },
  {
    "id" : "08fca275-e724-484a-8598-a8fff0592af6",
    "prId" : 2384,
    "comments" : [
      {
        "id" : "4215f58b-a171-4c85-8a2f-c451dfa3dd0e",
        "parentId" : null,
        "author" : {
          "login" : "soren-da",
          "name" : "Soren Bleikertz",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/21557885?u=b740c5c93513e52897b197a1c8ba54af8774f2d5&v=4"
        },
        "body" : "Yes we should set the party name as a hint. Sandbox can take it as is and in Canton we would get more readable party ids.",
        "createdAt" : "2019-08-05T09:46:35Z",
        "updatedAt" : "2019-08-05T09:46:36Z",
        "lastEditedBy" : {
          "login" : "soren-da",
          "name" : "Soren Bleikertz",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/21557885?u=b740c5c93513e52897b197a1c8ba54af8774f2d5&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "049c18d6-b147-41c3-acea-3770becfd579",
        "parentId" : "4215f58b-a171-4c85-8a2f-c451dfa3dd0e",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Why do we even care that party names are readable?",
        "createdAt" : "2019-08-05T12:14:13Z",
        "updatedAt" : "2019-08-05T12:14:14Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f859196c-4b4e-4c31-8005-565956b0c36f",
        "parentId" : "4215f58b-a171-4c85-8a2f-c451dfa3dd0e",
        "author" : {
          "login" : "soren-da",
          "name" : "Soren Bleikertz",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/21557885?u=b740c5c93513e52897b197a1c8ba54af8774f2d5&v=4"
        },
        "body" : "It makes debugging easier if the party ids are readable to some degree. I'd appreciate if we set the hint based on the name.",
        "createdAt" : "2019-08-05T12:47:29Z",
        "updatedAt" : "2019-08-05T12:47:29Z",
        "lastEditedBy" : {
          "login" : "soren-da",
          "name" : "Soren Bleikertz",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/21557885?u=b740c5c93513e52897b197a1c8ba54af8774f2d5&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "60c8edf8-8e4e-45cb-9c58-a104cf80ad17",
        "parentId" : "4215f58b-a171-4c85-8a2f-c451dfa3dd0e",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "done.. next PR",
        "createdAt" : "2019-08-05T14:51:44Z",
        "updatedAt" : "2019-08-05T14:51:44Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f8e94fef0071b44e845610dfb85f98680256ad50",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +35,39 @@    let text = Text.pack name\n    let request = L.AllocatePartyRequest\n            { partyIdHint = \"\" -- text -- ???\n            , displayName = text }\n    PartyDetails{party} <- L.allocateParty request"
  }
]