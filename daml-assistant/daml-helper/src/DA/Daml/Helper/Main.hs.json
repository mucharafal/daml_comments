[
  {
    "id" : "c76a768b-3ed4-43fd-bfbd-55c5c7e5670e",
    "prId" : 6877,
    "comments" : [
      {
        "id" : "b5687612-eada-419d-b3dc-e946ad75028b",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "What happens if I do\r\n```sh\r\ndaml new foobar create-daml-app --template create-daml-app\r\n```\r\n?",
        "createdAt" : "2020-07-27T13:57:13Z",
        "updatedAt" : "2020-07-27T14:03:59Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b12e24ba-ff52-48a8-bca4-cb71009ce0d5",
        "parentId" : "b5687612-eada-419d-b3dc-e946ad75028b",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```\r\nInvalid option `--template'\r\n```\r\nNot great but good enough imho (and definitely better than no error).",
        "createdAt" : "2020-07-27T14:04:52Z",
        "updatedAt" : "2020-07-27T14:04:53Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b9c799d3-5a59-4ce8-9aef-bf07ae41fc74",
        "parentId" : "b5687612-eada-419d-b3dc-e946ad75028b",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Yeah, I agree that's good enough for now.",
        "createdAt" : "2020-07-27T15:00:22Z",
        "updatedAt" : "2020-07-27T15:00:22Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "200f6d47bf9183f810c1ffea79c1a24d0b286498",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +142,146 @@                  (strOption (long \"template\" <> tplOpts) <|>\n                   argument str tplOpts\n                  )\n        ]\n"
  },
  {
    "id" : "2687e6fa-cea4-4135-a359-38d5e59e0186",
    "prId" : 5225,
    "comments" : [
      {
        "id" : "b7f5c979-4a5f-4f3d-9910-966aaa6fde12",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I would recommend to have `pid` here be of type `PackageId` already instead of doing the conversion later.",
        "createdAt" : "2020-03-27T07:41:11Z",
        "updatedAt" : "2020-03-27T17:24:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "10d4db63259ee00af10a40ad04d1b5e3a64d75dc",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +60,64 @@    | LedgerAllocateParties { flags :: LedgerFlags, parties :: [String] }\n    | LedgerUploadDar { flags :: LedgerFlags, darPathM :: Maybe FilePath }\n    | LedgerFetchDar { flags :: LedgerFlags, pid :: String, saveAs :: FilePath }\n    | LedgerNavigator { flags :: LedgerFlags, remainingArguments :: [String] }\n    | Codegen { lang :: Lang, remainingArguments :: [String] }"
  },
  {
    "id" : "e46b3d1c-680b-40bd-921b-135eefae385c",
    "prId" : 5155,
    "comments" : [
      {
        "id" : "7a68a868-39a8-45fd-8d88-131d61c451a8",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "We're using `--start-navigator=yes` in the example in the docs below. Should we change that to `--start-navigator=true` then?",
        "createdAt" : "2020-03-24T12:24:08Z",
        "updatedAt" : "2020-03-24T12:28:47Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0fee375a-7906-48a4-916c-9d4450ab6cbf",
        "parentId" : "7a68a868-39a8-45fd-8d88-131d61c451a8",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Good catch, I’ve switched to `true`.",
        "createdAt" : "2020-03-24T12:28:51Z",
        "updatedAt" : "2020-03-24T12:28:51Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4f5f182db58024e2ea36dd5ff55a4bd69b04c1b5",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +137,141 @@                \"auto\" -> Right True\n                s -> Left (\"Expected \\\"yes\\\", \\\"true\\\", \\\"no\\\", \\\"false\\\" or \\\"auto\\\" but got \" <> show s)\n            -- To make things less confusing, we do not mention yes, no and auto here.\n            helpText = \"Start navigator as part of daml start. Can be set to true or false. Defaults to true.\"\n    deployCmdInfo = mconcat"
  },
  {
    "id" : "1fe28441-a4dd-412d-8f41-e2b27f0c8161",
    "prId" : 5155,
    "comments" : [
      {
        "id" : "f7072b1d-7724-4755-81f2-87dbf8b0b7f0",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Should we change `flagYesNoAuto` to have the behaviour we need here in a followup PR?",
        "createdAt" : "2020-03-24T12:25:11Z",
        "updatedAt" : "2020-03-24T12:28:47Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8aff55fb-4959-4437-b1b9-edd2dd1d59fc",
        "parentId" : "f7072b1d-7724-4755-81f2-87dbf8b0b7f0",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "There are two things that are different here:\r\n\r\n1. We need to be able to check if the flag was passed or not.\r\n2. We want `true` and `false` to work as well. \r\n\r\nThere are quite a few other uses of `flagYesNoAuto` that don’t need this so for now I would leave it as is. I somewhat wonder if the `flagYesNoAuto` thing is a good idea anyway and we should just switch to `true` `false` and no `auto` everywhere but I’m not touching that for now.",
        "createdAt" : "2020-03-24T13:04:22Z",
        "updatedAt" : "2020-03-24T13:04:23Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4f5f182db58024e2ea36dd5ff55a4bd69b04c1b5",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +125,129 @@    navigatorFlag =\n        -- We do not use flagYesNoAuto here since that doesn’t allow us to differentiate\n        -- if the flag was passed explicitly or not.\n        StartNavigator <$>\n        option reader (long \"start-navigator\" <> help helpText <> completeWith [\"true\", \"false\"] <> idm)"
  },
  {
    "id" : "64c265a9-23a7-425c-986b-8593a53aeafe",
    "prId" : 5152,
    "comments" : [
      {
        "id" : "5a08257e-6fea-4ef8-97b0-4a1e1928d17a",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I'm not entirely sure I agree it should get special treatment — using the generic syntax removes magic and hints at the existence of other templates — but if we do make it special, why not go a bit further? `daml create app` sounds a lot nicer to me.",
        "createdAt" : "2020-03-24T17:02:19Z",
        "updatedAt" : "2020-03-24T17:02:20Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5279e7ee-fdfc-4d3b-88ed-cbc6eecff054",
        "parentId" : "5a08257e-6fea-4ef8-97b0-4a1e1928d17a",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "`daml create app` looks confusing. That sounds like `daml create`  also accepts other parameters. `daml create-app` would be reasonable but I’m not sure that’s better given that we refer to it as `create-daml-app` everywhere else.\r\n\r\nAs for making it a special command `daml create-daml-app foobar` seems sufficiently nicer to me for a GTG than `daml new foobar create-daml-app` that I think it makes sense to have it. (Note that `daml new foobar create-daml-app` still works if you want to use it)",
        "createdAt" : "2020-03-24T17:08:11Z",
        "updatedAt" : "2020-03-24T17:08:12Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "82985094-7bc6-47a9-8435-2e5fbfbae157",
        "parentId" : "5a08257e-6fea-4ef8-97b0-4a1e1928d17a",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "An even nicer-to-have would be `daml create-daml-app` creating a directory called `create-daml-app` by default, to avoid `daml create-daml-app create-daml-app`.",
        "createdAt" : "2020-03-24T17:32:59Z",
        "updatedAt" : "2020-03-24T17:33:00Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f4f2bf7c-a074-49fa-886d-965e102e6c0c",
        "parentId" : "5a08257e-6fea-4ef8-97b0-4a1e1928d17a",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I considered that but I’m not sure anyone wants to call their project `create-daml-app` so that seems a bit silly.",
        "createdAt" : "2020-03-24T17:33:59Z",
        "updatedAt" : "2020-03-24T17:33:59Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "33548ddb-7cb7-4b8c-9d2f-7852acc34ed5",
        "parentId" : "5a08257e-6fea-4ef8-97b0-4a1e1928d17a",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Sort of a moot point by now, but for clarity I feel compelled to clarify that I meant it as `daml create <new-folder/project-name>`.",
        "createdAt" : "2020-03-30T10:18:48Z",
        "updatedAt" : "2020-03-30T10:18:49Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6d59130e585d20018e3b1d91fc3e82aefaa532aa",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +40,44 @@    | CreateDamlApp { targetFolder :: FilePath }\n    -- ^ CreateDamlApp is sufficiently special that in addition to\n    -- `daml new foobar create-daml-app` we also make `daml create-daml-app foobar` work.\n    | Init { targetFolderM :: Maybe FilePath }\n    | ListTemplates"
  },
  {
    "id" : "189fe43b-a7e3-4c8b-b8dc-9c8dbaa4f1f7",
    "prId" : 2451,
    "comments" : [
      {
        "id" : "9e0888e0-e72e-4990-af6f-d00287fc2b54",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Just an idea for the future: using `unwords` instead of `concat` allows for skipping the trailing spaces.",
        "createdAt" : "2019-08-08T09:31:02Z",
        "updatedAt" : "2019-08-08T09:31:03Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0e69158b-1ec3-4e19-96f3-649134f09629",
        "parentId" : "9e0888e0-e72e-4990-af6f-d00287fc2b54",
        "author" : null,
        "body" : "Ah yes, I had done this already in my PR for this same issue, but Moritz's PR was slightly better (and we submitted them at the same time) :-) ",
        "createdAt" : "2019-08-08T10:18:10Z",
        "updatedAt" : "2019-08-08T10:18:11Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "f8d306cb0e38c070c450009d1250e0c046e0ea3d",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +96,100 @@\n    deployCmdInfo = mconcat\n        [ progDesc $ concat\n              [ \"Deploy the current DAML project to a remote DAML ledger. \"\n              , \"This will allocate the project's parties on the ledger \""
  },
  {
    "id" : "fcfc1f3d-2391-4ca1-b86b-b0371c145184",
    "prId" : 2416,
    "comments" : [
      {
        "id" : "219fa9f9-b523-4670-ab41-c83f02cc8003",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Maybe we should introduce a level of nesting here to match the CLI structure, i.e., introduce a new `LedgerCommand` type and then only have a single constructor with a field of type `LedgerCommand` in `Command`.",
        "createdAt" : "2019-08-06T11:25:43Z",
        "updatedAt" : "2019-08-06T11:29:36Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7eb9293d-80c5-427c-ae1c-a929e13cf3f6",
        "parentId" : "219fa9f9-b523-4670-ab41-c83f02cc8003",
        "author" : null,
        "body" : "👍 I'll do this in another PR",
        "createdAt" : "2019-08-06T11:41:36Z",
        "updatedAt" : "2019-08-06T11:41:37Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "172becf84237e97507ffe46f870956648ed94aa0",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +35,39 @@    | Start { sandboxPortM :: Maybe SandboxPort, openBrowser :: OpenBrowser, startNavigator :: StartNavigator, onStartM :: Maybe String, waitForSignal :: WaitForSignal }\n    | Deploy { flags :: HostAndPortFlags }\n    | LedgerListParties { flags :: HostAndPortFlags }\n    | LedgerAllocateParty { flags :: HostAndPortFlags , party :: String }\n    | LedgerUploadDar { flags :: HostAndPortFlags, darPathM :: Maybe FilePath }"
  },
  {
    "id" : "926430e2-7e25-42a9-9e69-548cf588b2a5",
    "prId" : 2384,
    "comments" : [
      {
        "id" : "fab77a8c-511c-40dc-9f30-8c0d9646850f",
        "parentId" : null,
        "author" : null,
        "body" : "Like I said below, I think these would all be better organized as subcommands of \"deploy\".",
        "createdAt" : "2019-08-02T17:05:20Z",
        "updatedAt" : "2019-08-02T17:31:48Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "da093a36-33c1-42fb-abbd-a2553e7c716e",
        "parentId" : "fab77a8c-511c-40dc-9f30-8c0d9646850f",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Yup. Where are the existing examples?",
        "createdAt" : "2019-08-02T17:07:04Z",
        "updatedAt" : "2019-08-02T17:31:48Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "647c22fd-5269-4ade-b418-71b087c0b3e7",
        "parentId" : "fab77a8c-511c-40dc-9f30-8c0d9646850f",
        "author" : null,
        "body" : "I can dig up an old example for you.",
        "createdAt" : "2019-08-02T17:24:05Z",
        "updatedAt" : "2019-08-02T17:31:48Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "419fb8df-23ee-4b8d-b08b-5ff9888085d9",
        "parentId" : "fab77a8c-511c-40dc-9f30-8c0d9646850f",
        "author" : null,
        "body" : "Here, from the `da` code base:\r\n\r\nhttps://github.com/digital-asset/daml/blob/1fcf2e4442f102c894af06164c5c0872db85e4b0/da-assistant/DA/Sdk/Cli/Command.hs#L107\r\n\r\nYou can see `templateActionParser` is defined further below as another `subparser ... subcommand` list. Note that `subcommand` is defined in that file as a convenience around `command ... (info ...)` but you don't really need it.",
        "createdAt" : "2019-08-02T17:29:37Z",
        "updatedAt" : "2019-08-02T17:31:48Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "f8e94fef0071b44e845610dfb85f98680256ad50",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +47,51 @@         , command \"deploy\" (info (deployCmd <**> helper) idm)\n         , command \"list-parties\" (info (listPartiesCmd <**> helper) idm)\n         , command \"allocate-party\" (info (allocatePartyCmd <**> helper) idm)\n         , command \"run-jar\" (info runJarCmd forwardOptions)\n         ]"
  }
]