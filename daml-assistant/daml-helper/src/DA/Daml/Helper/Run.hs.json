[
  {
    "id" : "c1a3a553-ef5e-4c13-974f-891e675c45aa",
    "prId" : 5632,
    "comments" : [
      {
        "id" : "1c2a24ec-1120-46a3-bfa3-52922f8ea7d1",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "In my experience, mutually-exclusive switches either cause an error or operate on a \"last one wins\" principle. Is it worth tweaking this behavior so it follows one of these?",
        "createdAt" : "2020-04-20T13:54:12Z",
        "updatedAt" : "2020-04-20T14:16:28Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4578c9c8-5dd2-42e8-9913-a055c4e5f7f9",
        "parentId" : "1c2a24ec-1120-46a3-bfa3-52922f8ea7d1",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Good point, I copied the way sandbox handles this since it seems to make sense to be consistent here. Also I really miss optparse-applicative now :slightly_smiling_face: ",
        "createdAt" : "2020-04-20T14:16:57Z",
        "updatedAt" : "2020-04-20T14:16:57Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a5355b94-1020-4216-832a-dae7ac371c8a",
        "parentId" : "1c2a24ec-1120-46a3-bfa3-52922f8ea7d1",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I miss optparse-applicative in Scala too.",
        "createdAt" : "2020-04-20T14:21:20Z",
        "updatedAt" : "2020-04-20T14:21:20Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "42a4e3bcdf25023c98e4452c8dc45c3453a2d5ad",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +731,735 @@                    , if any (`elem` [\"-s\", \"--static-time\"]) sandboxOpts\n                        then \"--static-time\"\n                        else \"--wall-clock-time\"\n                    , \"--ledger-host\"\n                    , \"localhost\""
  },
  {
    "id" : "e55cb6ad-e2e3-49a4-b735-4b93280c8c5e",
    "prId" : 5394,
    "comments" : [
      {
        "id" : "dbf4f3e3-cdf3-491f-ba13-d07d9d020760",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Shouldn’t this say `daml codegen js`. The executable invoked by that seems like an implementation detail.",
        "createdAt" : "2020-04-03T06:32:18Z",
        "updatedAt" : "2020-04-03T06:48:02Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c763dd33aa767a9fa2e939b30d95300335c1b08b",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +330,334 @@    daml2js <- fmap (</> \"daml2js\" </> \"daml2js\") getSdkPath\n    withProcessWait_' (proc daml2js remainingArgs) (const $ pure ()) `catchIO`\n      (\\e -> hPutStrLn stderr \"Failed to invoke daml2js.\" *> throwIO e)\n\ngetLogbackArg :: FilePath -> IO String"
  },
  {
    "id" : "fea987df-f3cc-4db5-808f-46f42eccfe13",
    "prId" : 5152,
    "comments" : [
      {
        "id" : "e850196e-04dc-4d18-a4b3-9721298d6568",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Didn't know this URL existed, that's cool.",
        "createdAt" : "2020-03-24T17:20:14Z",
        "updatedAt" : "2020-03-24T17:27:27Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2d846b23-9258-470e-90ec-e9b268221edb",
        "parentId" : "e850196e-04dc-4d18-a4b3-9721298d6568",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "It exists for at least every commit, branch and tag.",
        "createdAt" : "2020-03-24T17:29:36Z",
        "updatedAt" : "2020-03-24T17:29:36Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6d59130e585d20018e3b1d91fc3e82aefaa532aa",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +695,699 @@                 putStrLn $ \"Created a new DAML app in \" <> show targetFolder <> \".\"\n    where\n        url version = \"https://github.com/digital-asset/create-daml-app/archive/v\" <> version <> \".tar.gz\"\n\ndefaultProjectTemplate :: String"
  },
  {
    "id" : "1b8c9050-ffa7-4e91-8eae-8cfeabdef52a",
    "prId" : 4799,
    "comments" : [
      {
        "id" : "16f5c81b-8147-480c-999c-721ffaf6630f",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Is there a reason behind doing that?",
        "createdAt" : "2020-03-04T19:19:51Z",
        "updatedAt" : "2020-03-04T19:55:59Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "13614c3a-c54c-4aff-8e89-9a24979192e4",
        "parentId" : "16f5c81b-8147-480c-999c-721ffaf6630f",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Yes. Although I ended up not adding/modifying code here in a material way, the indentation level was found to be inconsistent with the surrounding code so I fixed it.",
        "createdAt" : "2020-03-04T21:15:04Z",
        "updatedAt" : "2020-03-04T21:15:05Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f915d510-65ee-4f34-b29d-ed1379be31ce",
        "parentId" : "16f5c81b-8147-480c-999c-721ffaf6630f",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I'm not a huge fan of such corrections, particularly not in unrelated PRs which are already quite big.",
        "createdAt" : "2020-03-05T00:21:33Z",
        "updatedAt" : "2020-03-05T00:21:33Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e924119f-45ab-4f82-a049-4606c8cbfc9b",
        "parentId" : "16f5c81b-8147-480c-999c-721ffaf6630f",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Ok",
        "createdAt" : "2020-03-05T00:32:03Z",
        "updatedAt" : "2020-03-05T00:32:03Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "516a9a33965e2db029a67edd5bcf173e1f360b77",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +320,324 @@runDaml2ts :: [String] -> IO ()\nrunDaml2ts remainingArgs = do\n    daml2ts <- fmap (</> \"daml2ts\" </> \"daml2ts\") getSdkPath\n    withProcessWait_' (proc daml2ts remainingArgs) (const $ pure ()) `catchIO`\n      (\\e -> hPutStrLn stderr \"Failed to invoke daml2ts.\" *> throwIO e)"
  },
  {
    "id" : "956d5257-fac1-4241-9e6f-fd9d626cc5fe",
    "prId" : 2430,
    "comments" : [
      {
        "id" : "12659530-faf0-4817-b304-a69128feac58",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Why did you change the format here?",
        "createdAt" : "2019-08-06T15:06:14Z",
        "updatedAt" : "2019-08-06T15:06:29Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0976049e-a99d-4088-b2c6-479f1339b2c0",
        "parentId" : "12659530-faf0-4817-b304-a69128feac58",
        "author" : null,
        "body" : "I *think* the json format doesn't work, but I could be wrong. This might have just been the case of fixing the wrong thing by accident, before fixing the right thing.\r\n\r\nBut this format definitely works.",
        "createdAt" : "2019-08-06T15:08:41Z",
        "updatedAt" : "2019-08-06T15:08:41Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "1cbd1ad1-4be9-469d-aa35-495750952dbd",
        "parentId" : "12659530-faf0-4817-b304-a69128feac58",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "It definitely used to work at some point and iirc that was a feature of the underlying configuration lib so I would be surprised if it has changed. Using a standard format such as JSON does seem nicer than using whatever weird format that scala config lib is using but given that this will go away with #2418, it’s not worth spending any effort trying to figure out what’s going wrong :slightly_smiling_face: ",
        "createdAt" : "2019-08-06T15:10:34Z",
        "updatedAt" : "2019-08-06T15:10:34Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2800ddde-1083-4ea1-9ec1-ba1979ef03df",
        "parentId" : "12659530-faf0-4817-b304-a69128feac58",
        "author" : null,
        "body" : "I agree with everything you ~say~wrote :)",
        "createdAt" : "2019-08-06T15:13:09Z",
        "updatedAt" : "2019-08-06T15:13:24Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "83bc4b932fa966153b0f5754a96cdc1ecb00c64f",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +820,824 @@  where\n    navigatorConfig :: [PartyDetails] -> T.Text\n    navigatorConfig partyDetails = T.unlines . concat $\n        [ [\"users\", \"  {\"]\n        , [ T.concat"
  },
  {
    "id" : "60459c52-9834-4eaf-8fe4-8856fa298d12",
    "prId" : 2416,
    "comments" : [
      {
        "id" : "244fee9b-59c8-4486-875a-ecffb287ea18",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Should `runDeploy` call `runLedgerAllocateParty` and `runLedgerUploadDar`? It seems like this has a risk of the two getting slightly out of sync which could get rather confusing.",
        "createdAt" : "2019-08-06T11:28:36Z",
        "updatedAt" : "2019-08-06T11:29:36Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2122e868-7f64-41bd-bc8f-dd77467b7040",
        "parentId" : "244fee9b-59c8-4486-875a-ecffb287ea18",
        "author" : null,
        "body" : "👍 I'll save that for another PR, because the behavior is already a little bit different wrt allocate parties, and this seems like a good idea.",
        "createdAt" : "2019-08-06T11:41:01Z",
        "updatedAt" : "2019-08-06T11:41:11Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "172becf84237e97507ffe46f870956648ed94aa0",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +699,703 @@runDeploy :: HostAndPortFlags -> IO ()\nrunDeploy flags = do\n    hp <- getHostAndPortDefaults flags\n    putStrLn $ \"Deploying to \" <> show hp\n    parties <- getProjectParties"
  },
  {
    "id" : "f168aa1e-cfc3-4978-8fbd-aedffc39407a",
    "prId" : 2384,
    "comments" : [
      {
        "id" : "8e676869-3904-45b9-99a9-23d6d028d420",
        "parentId" : null,
        "author" : null,
        "body" : "ah, ocaml...\r\n\r\nI think the more idiomatic phrasing would be:\r\n\r\n```Haskell\r\npartyM <- Ledger.lookupParty hp name\r\nparty <- flip fromMaybeM partyM $ do\r\n    putStrLn $ \"Allocating party for '\" <> name <> \"' at \" <> show hp\r\n    Ledger.allocateParty hp name\r\n```",
        "createdAt" : "2019-08-02T17:50:28Z",
        "updatedAt" : "2019-08-02T17:50:41Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "c25daa1b-7b1f-42dc-9ab5-a9e89b87fe76",
        "parentId" : "8e676869-3904-45b9-99a9-23d6d028d420",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I wish we had `whenNothing :: Applicative f => Maybe a -> f a -> f a`. @ndmitchell would you accept that for the `extra` package?",
        "createdAt" : "2019-08-05T12:28:19Z",
        "updatedAt" : "2019-08-05T12:37:51Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b1c2798b-fb16-4fa8-a6b1-6a5cb6d98bfc",
        "parentId" : "8e676869-3904-45b9-99a9-23d6d028d420",
        "author" : {
          "login" : "ndmitchell",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1651197?u=2a7f401a0bc6c1e722d5fbecc923715861c4567c&v=4"
        },
        "body" : "concern is that I'd expect whenNothing to be when (isNothing x) ... and this doesn't have that type. flip fromMaybeM seems quite nice here, without inventing any new names. ",
        "createdAt" : "2019-08-05T13:50:20Z",
        "updatedAt" : "2019-08-05T13:50:20Z",
        "lastEditedBy" : {
          "login" : "ndmitchell",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1651197?u=2a7f401a0bc6c1e722d5fbecc923715861c4567c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ccf181ef-d3de-48c4-93a5-1581f6c2bf53",
        "parentId" : "8e676869-3904-45b9-99a9-23d6d028d420",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Happy to change to Fran's suggestion",
        "createdAt" : "2019-08-05T14:23:53Z",
        "updatedAt" : "2019-08-05T14:23:53Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d39959e8-f0a0-4ceb-a0a0-f5b61a50ede9",
        "parentId" : "8e676869-3904-45b9-99a9-23d6d028d420",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "depends what you idioms are :)\r\nbut I'll change it",
        "createdAt" : "2019-08-05T14:50:35Z",
        "updatedAt" : "2019-08-05T14:50:35Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f8e94fef0071b44e845610dfb85f98680256ad50",
    "line" : 126,
    "diffHunk" : "@@ -1,1 +723,727 @@allocatePartyIfRequired hp name = do\n    party <-\n        Ledger.lookupParty hp name >>= \\case\n        Nothing -> do\n            putStrLn $ \"Allocating party for '\" <> name <> \"' at \" <> show hp"
  },
  {
    "id" : "44c4dc4c-6685-4b5e-b6b2-31defe40b22d",
    "prId" : 2384,
    "comments" : [
      {
        "id" : "fd393ecb-6fd7-456d-8647-aa5f04191196",
        "parentId" : null,
        "author" : null,
        "body" : "The error message seems a bit off, because it might appear if the parties are there but are ill formed, and only the left side of the Either has enough information to disambiguate the issue. I think something like `\"Failed to read list of parties from project config\"` would be better, which also lets the config error's `displayException` explain the error in more detail.",
        "createdAt" : "2019-08-02T17:54:37Z",
        "updatedAt" : "2019-08-02T17:56:03Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "f943c525-9c40-4fd0-ae36-3c4fe439d9ac",
        "parentId" : "fd393ecb-6fd7-456d-8647-aa5f04191196",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "This message was modelled of the exiting message in the code:\r\n```\r\ngetProjectName :: IO String\r\ngetProjectName = do\r\n    projectConfig <- getProjectConfig\r\n    requiredE \"Project must have a name\" $\r\n        queryProjectConfigRequired [\"name\"] projectConfig\r\n```",
        "createdAt" : "2019-08-05T14:25:43Z",
        "updatedAt" : "2019-08-05T14:25:43Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "918dcb7e-7759-4915-b46e-fc6736680d24",
        "parentId" : "fd393ecb-6fd7-456d-8647-aa5f04191196",
        "author" : null,
        "body" : "I see. That message has the same problem. Please change it to `\"Failed to read project name from project config\"` or so.",
        "createdAt" : "2019-08-05T14:41:47Z",
        "updatedAt" : "2019-08-05T14:41:47Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "a77c798c-33d1-419c-aeb0-f902efc4ee41",
        "parentId" : "fd393ecb-6fd7-456d-8647-aa5f04191196",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "will fix both messages in next PR",
        "createdAt" : "2019-08-05T14:53:36Z",
        "updatedAt" : "2019-08-05T14:53:36Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "791ade50-ff86-4dd8-824c-9e5c0edd9981",
        "parentId" : "fd393ecb-6fd7-456d-8647-aa5f04191196",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "@associahedron We could be more DRY here. The config lookup combinators should automate these messages.",
        "createdAt" : "2019-08-05T14:55:01Z",
        "updatedAt" : "2019-08-05T14:55:01Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f8e94fef0071b44e845610dfb85f98680256ad50",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +755,759 @@getProjectParties = do\n    projectConfig <- getProjectConfig\n    requiredE \"Project must have parties listed\" $\n        queryProjectConfigRequired [\"parties\"] projectConfig\n"
  },
  {
    "id" : "4bf7e1f7-6c1f-415c-8d06-5a0bd86da047",
    "prId" : 2384,
    "comments" : [
      {
        "id" : "c903b042-f6a1-4706-b5d9-6439bf6e8f54",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Is there a way to do a batch allocation?",
        "createdAt" : "2019-08-05T12:31:42Z",
        "updatedAt" : "2019-08-05T12:37:51Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "68257209-40bb-457c-9698-e11c1f833a9f",
        "parentId" : "c903b042-f6a1-4706-b5d9-6439bf6e8f54",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "`daml deploy` does batch allocation of everything in the `daml.yaml` config.",
        "createdAt" : "2019-08-05T14:49:18Z",
        "updatedAt" : "2019-08-05T14:49:19Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cfc8b6ba-9869-4284-b1e2-6e1dee213f8f",
        "parentId" : "c903b042-f6a1-4706-b5d9-6439bf6e8f54",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I meant batch allocation over the Ledger API. This looks like we're checking for each individual party if it already exists and allocate it when it doesn't. That's `O(n)` API calls for allocating `n` parties. I'm wondering if there's a way to do it in `O(1)` API calls? (\"No\" is a perfectly fine answer.)",
        "createdAt" : "2019-08-05T14:52:37Z",
        "updatedAt" : "2019-08-05T14:52:38Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "02f76468-0ecf-4d4c-a566-b0d427c87a4f",
        "parentId" : "c903b042-f6a1-4706-b5d9-6439bf6e8f54",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "\"No\", the API does not support batch allocation.",
        "createdAt" : "2019-08-05T15:20:12Z",
        "updatedAt" : "2019-08-05T15:20:12Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "191cce28-d2b8-43ec-a727-30174c7f35fc",
        "parentId" : "c903b042-f6a1-4706-b5d9-6439bf6e8f54",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Thanks.",
        "createdAt" : "2019-08-05T15:21:46Z",
        "updatedAt" : "2019-08-05T15:21:47Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f8e94fef0071b44e845610dfb85f98680256ad50",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +710,714 @@    putStrLn $ \"Deploying to \" <> show hp\n    parties <- getProjectParties\n    mapM_ (allocatePartyIfRequired hp) parties\n    darPath <- getDarPath\n    doBuild"
  },
  {
    "id" : "188bc935-3426-4964-939a-1159612fc1f3",
    "prId" : 2384,
    "comments" : [
      {
        "id" : "0e004e3a-9e35-49a7-97ce-e355459cc3b4",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "To me a function called `withX` suggests that it wants a continuation as one of its arguments, most likely the last one. Renaming this to `getX` might be a good idea.",
        "createdAt" : "2019-08-05T12:34:06Z",
        "updatedAt" : "2019-08-05T12:37:51Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2dd6ad5d-b3cd-4c68-a277-d319eb25d35a",
        "parentId" : "0e004e3a-9e35-49a7-97ce-e355459cc3b4",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "ok, will do",
        "createdAt" : "2019-08-05T14:55:55Z",
        "updatedAt" : "2019-08-05T14:55:55Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f8e94fef0071b44e845610dfb85f98680256ad50",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +683,687 @@data HostAndPortFlags = HostAndPortFlags { hostM :: Maybe String, portM :: Maybe Int }\n\nwithHostAndPortDefaults :: HostAndPortFlags -> IO HostAndPort\nwithHostAndPortDefaults HostAndPortFlags{hostM,portM} = do\n    host <- fromMaybeM getProjectLedgerHost hostM"
  },
  {
    "id" : "8069c3c5-3411-453a-84d2-c6b19434ff4a",
    "prId" : 2384,
    "comments" : [
      {
        "id" : "f7b45209-8c3b-479d-b59b-788b65e13940",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I think\r\n```suggestion\r\n    if null xs then putStrLn \"no parties are known\" else mapM_ print xs\r\n```\r\nand removing the next line is clearer.",
        "createdAt" : "2019-08-05T12:37:33Z",
        "updatedAt" : "2019-08-05T12:37:51Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c7af8d80-2e88-4221-b52a-2ba19ff5dc31",
        "parentId" : "f7b45209-8c3b-479d-b59b-788b65e13940",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "man, we are getting dangerously close to the bike shed here, but I will do it...",
        "createdAt" : "2019-08-05T14:57:06Z",
        "updatedAt" : "2019-08-05T14:57:06Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f8e94fef0071b44e845610dfb85f98680256ad50",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +694,698 @@    putStrLn $ \"Listing parties at \" <> show hp\n    xs <- Ledger.listParties hp\n    when (null xs) $ putStrLn \"no parties are known\"\n    mapM_ print xs\n    exitSuccess"
  }
]