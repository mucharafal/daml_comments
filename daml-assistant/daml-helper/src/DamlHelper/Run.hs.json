[
  {
    "id" : "b0cfde6b-fbe2-4aba-8a76-d7a67165040d",
    "prId" : 2285,
    "comments" : [
      {
        "id" : "55236a8a-6311-4d6a-8ef9-7b561861e3ab",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n    let ledgerClientConfig = L.configOfHostAndPort (fromString host) (L.Port port)\r\n```",
        "createdAt" : "2019-07-25T10:40:48Z",
        "updatedAt" : "2019-07-25T10:41:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d5e4a4eab076ab2f3cb8f5143332e6a0450c98b9",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +682,686 @@    let ls = L.uploadDarFile bytes\n    let timeout = 30 :: L.TimeoutSeconds\n    let ledgerClientConfig = L.configOfHostAndPort (L.Host $ fromString host) (L.Port port)\n    L.runLedgerService ls timeout ledgerClientConfig >>= \\case\n        Right () -> do"
  },
  {
    "id" : "84c8d52a-a464-4fe9-8f9a-d8b29f0348d5",
    "prId" : 2250,
    "comments" : [
      {
        "id" : "6f7becd0-de4b-444b-828c-f71ecf090ba3",
        "parentId" : null,
        "author" : null,
        "body" : "The `let` is unnecessary given the previous `let`\r\n\r\n\r\n```suggestion\r\n        projectFilesRel = mapMaybe (stripPrefix targetFolderSep) projectFiles\r\n```",
        "createdAt" : "2019-07-22T16:43:51Z",
        "updatedAt" : "2019-07-22T16:44:20Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "8f0f424c-9279-44c7-baa4-48d46bdb0ae3",
        "parentId" : "6f7becd0-de4b-444b-828c-f71ecf090ba3",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I disagree. This `let` reduces what's in scope for `targetFolderSep`. It's so easy to accidentally write mutually recursive stuff without any intent. That's a way to break the recursion. In fact, I would encourage you to always add these `let`s in `do` blocks. :)",
        "createdAt" : "2019-07-22T16:55:58Z",
        "updatedAt" : "2019-07-22T16:55:59Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c1f0623f976c5e50f82e5307b387090db0fcc796",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +395,399 @@    projectFiles <- listFilesRecursive targetFolder\n    let targetFolderSep = addTrailingPathSeparator targetFolder\n    let projectFilesRel = mapMaybe (stripPrefix targetFolderSep) projectFiles\n    let isMainDotDaml = (== \"Main.daml\") . takeFileName\n        sourceM = find isMainDotDaml projectFilesRel"
  },
  {
    "id" : "eef3a08b-4dc5-43b2-953d-e125f756b279",
    "prId" : 2250,
    "comments" : [
      {
        "id" : "425aeba6-299b-49d0-94ea-27c098ad6c58",
        "parentId" : null,
        "author" : null,
        "body" : "Same here.\r\n```suggestion\r\n         isMainDotDaml = (== \"Main.daml\") . takeFileName\r\n```",
        "createdAt" : "2019-07-22T16:44:05Z",
        "updatedAt" : "2019-07-22T16:44:48Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "c1f0623f976c5e50f82e5307b387090db0fcc796",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +396,400 @@    let targetFolderSep = addTrailingPathSeparator targetFolder\n    let projectFilesRel = mapMaybe (stripPrefix targetFolderSep) projectFiles\n    let isMainDotDaml = (== \"Main.daml\") . takeFileName\n        sourceM = find isMainDotDaml projectFilesRel\n        source = fromMaybe \"daml/Main.daml\" sourceM"
  },
  {
    "id" : "4d0f77d3-7888-4bad-aadc-89a24112013a",
    "prId" : 2250,
    "comments" : [
      {
        "id" : "710ee295-ff4b-4177-84ce-5e8ca7ac1235",
        "parentId" : null,
        "author" : null,
        "body" : "Nice :-)",
        "createdAt" : "2019-07-22T16:44:13Z",
        "updatedAt" : "2019-07-22T16:44:20Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "c1f0623f976c5e50f82e5307b387090db0fcc796",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +397,401 @@    let projectFilesRel = mapMaybe (stripPrefix targetFolderSep) projectFiles\n    let isMainDotDaml = (== \"Main.daml\") . takeFileName\n        sourceM = find isMainDotDaml projectFilesRel\n        source = fromMaybe \"daml/Main.daml\" sourceM\n        name = takeFileName (dropTrailingPathSeparator targetFolderAbs)"
  },
  {
    "id" : "202e242a-5343-41ca-82fb-5393f40e5f86",
    "prId" : 2176,
    "comments" : [
      {
        "id" : "68dda66e-2118-4e83-affc-41d2b1c25b0d",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "We should at least make the port configurable for now given that `daml sandbox` also allows you to change that quite easily. Ofc eventually, we need this to be fully configurable including the host, SSL config, â€¦ but for an initial version the port is good enough imho.",
        "createdAt" : "2019-07-16T17:27:52Z",
        "updatedAt" : "2019-07-17T11:22:09Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b3ff57ae-3789-4cef-a1ef-e26d0309ffad",
        "parentId" : "68dda66e-2118-4e83-affc-41d2b1c25b0d",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "done!\r\nmade sandbox port configurable for deploy (and also start command)",
        "createdAt" : "2019-07-17T11:26:52Z",
        "updatedAt" : "2019-07-17T11:26:53Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "da98b4d49b2aebb66c932d5827800af490486a0b",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +674,678 @@    darPath <- getDarPath\n    doBuild\n    let SandboxPort port = sandboxPort\n    putStrLn $ \"Deploying \" <> darPath <> \" to ledger on port \" <> show port\n    bytes <- BS.readFile darPath"
  },
  {
    "id" : "1b91fd5d-ec68-4c37-9339-c24bb1253a27",
    "prId" : 1965,
    "comments" : [
      {
        "id" : "99a50cd2-ee4c-4967-8a7e-3ba6876d3e03",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Why do we need this?",
        "createdAt" : "2019-07-02T06:07:56Z",
        "updatedAt" : "2019-07-02T09:29:30Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c3649e76-21b6-4d82-a527-3a99b6dc6131",
        "parentId" : "99a50cd2-ee4c-4967-8a7e-3ba6876d3e03",
        "author" : null,
        "body" : "We've had issues before where `daml studio` sets `DAML_SDK_VERSION` (and other environment variables, but this is the main one), and then this gets stuck in vscode, so when the user subsequently opens another project without closing vscode in between, the extension calls `daml damlc ide` with the wrong environment (i.e. with `DAML_SDK_VERSION` already set). This prevents all of that, letting `daml damlc ide` determine all the relevant variables at a later time.\r\n\r\n(The alternative, I guess, is stripping out any `DAML_*` from the env when calling `daml damlc ide` in vscode.)",
        "createdAt" : "2019-07-02T07:15:24Z",
        "updatedAt" : "2019-07-02T09:29:30Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "40021547-41d0-41c4-833b-e80a2b79ac43",
        "parentId" : "99a50cd2-ee4c-4967-8a7e-3ba6876d3e03",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "I prefer having it in Haskell than Javascript, so here looks like a good place - but i think your comment deserves to be in the code. I imagine we have a ticket number we could include in the code too?",
        "createdAt" : "2019-07-02T07:35:03Z",
        "updatedAt" : "2019-07-02T09:29:30Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "df0f3cfe-9212-4895-aef9-4ea4b28a17eb",
        "parentId" : "99a50cd2-ee4c-4967-8a7e-3ba6876d3e03",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Perfectly happy to keep the logic here, I had simply forgotten why we needed it. So :+1: for a comment, Iâ€™m sure Iâ€™ll manage to forget it again :slightly_smiling_face: ",
        "createdAt" : "2019-07-02T07:51:01Z",
        "updatedAt" : "2019-07-02T09:29:30Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "604709d1-2fb5-43f2-85c2-4538ce0fd4a7",
        "parentId" : "99a50cd2-ee4c-4967-8a7e-3ba6876d3e03",
        "author" : null,
        "body" : "Added a comment and linked to issue #1666 ",
        "createdAt" : "2019-07-02T09:00:14Z",
        "updatedAt" : "2019-07-02T09:29:30Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "ccdc5ee75d18bf6fce73cadc569e9eda5351052f",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +93,97 @@runVsCodeCommand args = do\n    originalEnv <- getEnvironment\n    let strippedEnv = filter ((`notElem` damlEnvVars) . fst) originalEnv\n            -- ^ Strip DAML environment variables before calling VSCode, to\n            -- prevent setting DAML_SDK_VERSION too early. See issue #1666."
  }
]