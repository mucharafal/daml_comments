[
  {
    "id" : "bed19238-26d5-49c2-bea7-c0a7229a6276",
    "prId" : 3342,
    "comments" : [
      {
        "id" : "a8da9660-cd69-409c-bbca-cd1ecb643ab7",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This comment looks like a result of some broken copy paste :slightly_smiling_face: ",
        "createdAt" : "2019-11-05T14:45:34Z",
        "updatedAt" : "2019-11-05T18:46:21Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "957249ed-3d38-4bca-b666-65eed9fe420f",
        "parentId" : "a8da9660-cd69-409c-bbca-cd1ecb643ab7",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "whoops. thanks, will fix.",
        "createdAt" : "2019-11-05T15:30:54Z",
        "updatedAt" : "2019-11-05T18:46:21Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "272818c92a48fbaf19707d743912199fcaf709f7",
    "line" : null,
    "diffHunk" : "@@ -526,7 +525,114 @@ packagingTests = testGroup \"packaging\"\n               , bWithUpgradesDar\n               ]\n         assertBool \"a-0.2-with-upgrades.dar was not created.\" =<< doesFileExist bWithUpgradesDar\n-\n+      , testCaseSteps \"Build migration package with generics\" $ \\step -> withTempDir $ \\tmpDir -> do\n+        -- it's important that we have fresh empty directories here!\n+        let projectA = tmpDir </> \"a-1.0\"\n+        let projectB = tmpDir </> \"a-2.0\"\n+        let projectUpgrade = tmpDir </> \"upgrade\"\n+        let aDar = projectA </> \"projecta.dar\"\n+        let bDar = projectB </> \"projectb.dar\"\n+        let upgradeDar = projectUpgrade </> distDir </> \"upgrade-0.0.1.dar\"\n+        step \"Creating project a-1.0 ...\"\n+        createDirectoryIfMissing True (projectA </> \"daml\")\n+        writeFileUTF8 (projectA </> \"daml\" </> \"Main.daml\") $ unlines\n+            [ \"{-# LANGUAGE EmptyCase #-}\"\n+            , \"daml 1.2\"\n+            , \"module Main where\"\n+            , \"data OnlyA\"\n+            , \"data Both\"\n+            , \"template Foo\"\n+            , \"  with\"\n+            , \"    a : Int\"\n+            , \"    p : Party\"\n+            , \"  where\"\n+            , \"    signatory p\"\n+            ]\n+        writeFileUTF8 (projectA </> \"daml.yaml\") $ unlines\n+            [ \"sdk-version: \" <> sdkVersion\n+            , \"name: a\"\n+            , \"version: \\\"1.0\\\"\"\n+            , \"source: daml\"\n+            , \"exposed-modules: [Main]\"\n+            , \"dependencies:\"\n+            , \"  - daml-prim\"\n+            , \"  - daml-stdlib\"\n+            ]\n+        -- We use -o to test that we do not depend on the name of the dar\n+        withCurrentDirectory projectA $ callCommandQuiet $ \"daml build -o \" <> aDar\n+        assertBool \"a-1.0.dar was not created.\" =<< doesFileExist aDar\n+        step \"Creating project a-2.0 ...\"\n+        createDirectoryIfMissing True (projectB </> \"daml\")\n+        writeFileUTF8 (projectB </> \"daml\" </> \"Main.daml\") $ unlines\n+            [ \"daml 1.2\"\n+            , \"module Main where\"\n+            , \"data OnlyB\"\n+            , \"data Both\"\n+            , \"template Foo\"\n+            , \"  with\"\n+            , \"    a : Int\"\n+            , \"    p : Party\"\n+            , \"    new : Optional Text\"\n+            , \"  where\"\n+            , \"    signatory p\"\n+            ]\n+        writeFileUTF8 (projectB </> \"daml.yaml\") $ unlines\n+            [ \"sdk-version: \" <> sdkVersion\n+            , \"name: a\"\n+            , \"version: \\\"2.0\\\"\"\n+            , \"source: daml\"\n+            , \"exposed-modules: [Main]\"\n+            , \"dependencies:\"\n+            , \"  - daml-prim\"\n+            , \"  - daml-stdlib\"\n+            ]\n+        -- We use -o to test that we do not depend on the name of the dar\n+        withCurrentDirectory projectB $ callCommandQuiet $ \"daml build -o \" <> bDar\n+        assertBool \"a-2.0.dar was not created.\" =<< doesFileExist bDar\n+        step \"Creating upgrade/rollback project\"\n+        -- We use -o to verify that we do not depend on the"
  },
  {
    "id" : "919526d6-ea0c-4cda-a1c3-fb3a4dca0919",
    "prId" : 3176,
    "comments" : [
      {
        "id" : "f0f0f611-b78f-4d28-aa42-e32d79850412",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Definitely not necessary to do this in this PR but it would be nice to move all (but one) of the `damlc build` tests into a separate packaging test suite that calls `damlc build` instead of `daml build`. The integration tests are a bit annoying since they always have to build the whole SDK tarball and you can’t properly filter tests using `-p` since some of them depend on each other.\r\n\r\nOriginally that wasn’t possible since `damlc build` used to fail `ghc-pkg` but we’ve fixed that a while back.",
        "createdAt" : "2019-10-15T12:10:15Z",
        "updatedAt" : "2019-10-15T14:51:02Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ebd9ebe9-7160-4f75-bbe9-d8b57270ca6c",
        "parentId" : "f0f0f611-b78f-4d28-aa42-e32d79850412",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "Agreed.",
        "createdAt" : "2019-10-15T12:34:34Z",
        "updatedAt" : "2019-10-15T14:51:02Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "45fdc25e48bcb73c44106adba42b01b2161be66a",
    "line" : 4,
    "diffHunk" : "@@ -389,6 +389,48 @@ packagingTests = testGroup \"packaging\"\n             , \"dependencies: [daml-prim, daml-stdlib]\"\n             ]\n         withCurrentDirectory projDir $ callCommandQuiet \"daml build\"\n+    , testCase \"Dalf imports\" $ withTempDir $ \\projDir -> do"
  },
  {
    "id" : "c488516c-9d15-4c15-8764-ddf2cbba02d6",
    "prId" : 3176,
    "comments" : [
      {
        "id" : "74ac870e-be8c-4ae8-86e4-d75907ccb230",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "It might be easier if you turn this into a `genrule` and then only reference the generated `dalf` here.",
        "createdAt" : "2019-10-15T12:11:12Z",
        "updatedAt" : "2019-10-15T14:51:02Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cfb007c2-8629-4feb-bfa4-d11359f8d194",
        "parentId" : "74ac870e-be8c-4ae8-86e4-d75907ccb230",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "moved it to a genrule",
        "createdAt" : "2019-10-15T13:06:41Z",
        "updatedAt" : "2019-10-15T14:51:02Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "45fdc25e48bcb73c44106adba42b01b2161be66a",
    "line" : 5,
    "diffHunk" : "@@ -389,6 +389,48 @@ packagingTests = testGroup \"packaging\"\n             , \"dependencies: [daml-prim, daml-stdlib]\"\n             ]\n         withCurrentDirectory projDir $ callCommandQuiet \"daml build\"\n+    , testCase \"Dalf imports\" $ withTempDir $ \\projDir -> do\n+        let genSimpleDalfExe"
  },
  {
    "id" : "8aac3339-9ff4-4622-b679-2c764052e304",
    "prId" : 3144,
    "comments" : [
      {
        "id" : "2f8a9b48-9f72-4511-b2fc-9055e0d2a74e",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "What changed that requires us to use `withTempDir` here now? It looks reasonable but I don’t see why this has to change with this PR.",
        "createdAt" : "2019-10-10T05:54:43Z",
        "updatedAt" : "2019-10-10T09:51:45Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f9cd1c52-f3f8-40fe-8910-28bf654ea71b",
        "parentId" : "2f8a9b48-9f72-4511-b2fc-9055e0d2a74e",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "we happen to use the same temporary directory for all separate packaging tests. That means it's very easy to pick up sources from other tests with unpredictable results. This, for example, happened when I changed the source field of the dependency test to \".\" instead of \"A.daml\" here.",
        "createdAt" : "2019-10-10T09:51:09Z",
        "updatedAt" : "2019-10-10T09:51:45Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "41eece4a6f897d95f803564abc4b07560282dcdf",
    "line" : 18,
    "diffHunk" : "@@ -138,9 +138,9 @@ noassistantTests damlDir = testGroup \"no assistant\"\n               callProcess damlcPath [\"build\", \"--project-root\", \"foobar\", \"--init-package-db\", \"yes\"]\n     ]\n \n-packagingTests :: FilePath -> TestTree\n-packagingTests tmpDir = testGroup \"packaging\"\n-    [ testCaseSteps \"Build package with dependency\" $ \\step -> do\n+packagingTests :: TestTree\n+packagingTests = testGroup \"packaging\"\n+    [ testCaseSteps \"Build package with dependency\" $ \\step -> withTempDir $ \\tmpDir -> do"
  },
  {
    "id" : "0a1a7552-3a21-4b86-a35e-e5a067256512",
    "prId" : 3144,
    "comments" : [
      {
        "id" : "82c678c7-529b-4641-8351-d8e4806b2359",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n            not $ any (\"A.daml\" `isSuffixOf`) darFiles\r\n```\r\nfeel free to ignore that but I find that slightly easier to read",
        "createdAt" : "2019-10-10T05:56:21Z",
        "updatedAt" : "2019-10-10T09:51:45Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ed073b76-56eb-4f8e-b230-c083af502c8c",
        "parentId" : "82c678c7-529b-4641-8351-d8e4806b2359",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "goes either way for me.",
        "createdAt" : "2019-10-10T09:51:41Z",
        "updatedAt" : "2019-10-10T09:51:45Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "41eece4a6f897d95f803564abc4b07560282dcdf",
    "line" : null,
    "diffHunk" : "@@ -230,15 +230,18 @@ packagingTests tmpDir = testGroup \"packaging\"\n             [ \"sdk-version: \" <> sdkVersion\n             , \"version: \\\"1.0\\\"\"\n             , \"name: b\"\n-            , \"source: B.daml\"\n+            , \"source: .\"\n             , \"dependencies:\"\n             , \"  - daml-prim\"\n             , \"  - daml-stdlib\"\n             , \"  - \" <> aDar\n             ]\n         withCurrentDirectory projectB $ callCommandQuiet \"daml build\"\n         assertBool \"b.dar was not created.\" =<< doesFileExist bDar\n-    , testCase \"Build package with SDK dependency\" $ do\n+        darFiles <- Zip.filesInArchive . Zip.toArchive <$> BSL.readFile bDar\n+        assertBool \"b.dar contains source file from package database\" $\n+            all (not . (\"A.daml\" `isSuffixOf`)) darFiles"
  },
  {
    "id" : "635bd7cc-f3db-4112-b92c-d5ec6e48bc34",
    "prId" : 2564,
    "comments" : [
      {
        "id" : "31c4fad9-9271-4176-b9b2-8015b78dfca3",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Why do you need `--init-package-db=no`? Is this an optimization because `daml migrate` already takes care off this or a requirement because running `daml init` again will mess things up in some way?",
        "createdAt" : "2019-08-16T06:50:17Z",
        "updatedAt" : "2019-08-20T07:43:23Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7a7ffe94-6eeb-4473-bcf4-89bc781db0a6",
        "parentId" : "31c4fad9-9271-4176-b9b2-8015b78dfca3",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "yes, `migrate` takes care of setting up a sensible package database. `daml init` would mess things up.",
        "createdAt" : "2019-08-16T11:27:25Z",
        "updatedAt" : "2019-08-20T07:43:23Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "797bc638-2f23-4e3a-9479-c9b08b12f236",
        "parentId" : "31c4fad9-9271-4176-b9b2-8015b78dfca3",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "In that case, should we turn `migrate + build` into a single command (with a --no-build option for debugging)? It seems a bit unintuitive that`daml build` doesn’t work without special flags.",
        "createdAt" : "2019-08-16T11:56:41Z",
        "updatedAt" : "2019-08-20T07:43:23Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "850c1ddf-d8b5-414c-be0b-3a2d8bee924b",
        "parentId" : "31c4fad9-9271-4176-b9b2-8015b78dfca3",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "I now changed it, so that the migration project contains a `build.sh` that you can run. Generating the migration project and building it are two different processes. That the build will fail, will be a common thing, since the newer package might contain non-isomorphic contract templates. So I would not couple the two commands and instead, provide an easy way to try the build again once changes have been made manually to the source.",
        "createdAt" : "2019-08-16T14:03:37Z",
        "updatedAt" : "2019-08-20T07:43:23Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c88c2769-9f75-4095-9f5c-39ed4052d9b4",
        "parentId" : "31c4fad9-9271-4176-b9b2-8015b78dfca3",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Sounds good, thanks!",
        "createdAt" : "2019-08-16T14:05:49Z",
        "updatedAt" : "2019-08-20T07:43:23Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "50a2f894d3836c448d9860133cb32e547f7b6a23",
    "line" : null,
    "diffHunk" : "@@ -278,31 +279,31 @@ packagingTests tmpDir = testGroup \"packaging\"\n             ]\n         writeFileUTF8 (projectB </> \"daml.yaml\") $ unlines\n             [ \"sdk-version: \" <> sdkVersion\n-            , \"version: \\\"1.0\\\"\"\n-            , \"name: b\"\n+            , \"version: \\\"2.0\\\"\"\n+            , \"name: a\"\n             , \"source: daml/Main.daml\"\n             , \"exposed-modules: [Main]\"\n             , \"dependencies:\"\n             , \"  - daml-prim\"\n             , \"  - daml-stdlib\"\n             ]\n-        withCurrentDirectory projectB $ callCommandQuiet $ \"daml build --output \" <> distDir </> \"b.dar\"\n-        assertBool \"b.dar was not created.\" =<< doesFileExist bDar\n-        step \"Creating migration project\"\n-        callCommandQuiet $ unwords [\"daml\", \"migrate\", projectMigrate, \"daml/Main.daml\", aDar, bDar]\n+        withCurrentDirectory projectB $ callCommandQuiet \"daml build\"\n+        assertBool \"a-2.0.dar was not created.\" =<< doesFileExist bDar\n+        step \"Creating upgrade project\"\n+        callCommandQuiet $ unwords [\"daml\", \"migrate\", projectUpgrade, \"daml/Main.daml\", aDar, bDar]\n         step \"Build migration project\"\n-        withCurrentDirectory projectMigrate $ callCommandQuiet $ \"daml build --output \" <> distDir </> \"c.dar\"\n+        withCurrentDirectory projectUpgrade $ callCommandQuiet \"daml build --init-package-db=no --package \\'(\\\"a-1.0\\\", [(\\\"Main\\\", \\\"MainA\\\")])\\' --package \\'(\\\"a-2.0\\\", [(\\\"Main\\\", \\\"MainB\\\")])\\'\""
  },
  {
    "id" : "1e08b59b-e65b-4f37-8b85-6c4cd3147b63",
    "prId" : 2564,
    "comments" : [
      {
        "id" : "0c15386e-a543-49e1-afe9-e0b9be094003",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "What happens if I pass in two dars with the same version but different contents? Do I get a sensible error message or do things blow up badly? Might also makes sense to add a test for that.",
        "createdAt" : "2019-08-16T06:51:13Z",
        "updatedAt" : "2019-08-20T07:43:23Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5387ef55-540e-4468-b89c-fee747ad2463",
        "parentId" : "0c15386e-a543-49e1-afe9-e0b9be094003",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "Compilation of the migration code would fail, package names need to be different, otherwise you will get overlapping instances.",
        "createdAt" : "2019-08-16T11:29:08Z",
        "updatedAt" : "2019-08-20T07:43:23Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "50a2f894d3836c448d9860133cb32e547f7b6a23",
    "line" : 10,
    "diffHunk" : "@@ -231,11 +231,12 @@ packagingTests tmpDir = testGroup \"packaging\"\n     , testCaseSteps \"Build migration package\" $ \\step -> do\n         let projectA = tmpDir </> \"a\"\n         let projectB = tmpDir </> \"b\"\n-        let projectMigrate = tmpDir </> \"migrateAB\"\n-        let aDar = projectA </> distDir </> \"a.dar\"\n-        let bDar = projectB </> distDir </> \"b.dar\"\n-        let bUpgradedDar = tmpDir </> \"b_upgraded.dar\"\n-        step \"Creating project a...\"\n+        let projectUpgrade = tmpDir </> \"upgrade\"\n+        let aDar = projectA </> distDir </> \"a-1.0.dar\""
  },
  {
    "id" : "3de21ac9-7c13-424b-8926-652b4c1e789f",
    "prId" : 2564,
    "comments" : [
      {
        "id" : "97f4befb-2572-42c4-8ad1-67f85434a7b5",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "We really need to add a test that we can actually deploy this dar and run the upgrade but let’s keep that for a separate PR.",
        "createdAt" : "2019-08-16T06:52:16Z",
        "updatedAt" : "2019-08-20T07:43:23Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c6628bc1-0b10-4f58-bdf1-e581e30f8f9e",
        "parentId" : "97f4befb-2572-42c4-8ad1-67f85434a7b5",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "agreed!",
        "createdAt" : "2019-08-16T11:29:20Z",
        "updatedAt" : "2019-08-20T07:43:23Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "50a2f894d3836c448d9860133cb32e547f7b6a23",
    "line" : 79,
    "diffHunk" : "@@ -278,31 +279,31 @@ packagingTests tmpDir = testGroup \"packaging\"\n             ]\n         writeFileUTF8 (projectB </> \"daml.yaml\") $ unlines\n             [ \"sdk-version: \" <> sdkVersion\n-            , \"version: \\\"1.0\\\"\"\n-            , \"name: b\"\n+            , \"version: \\\"2.0\\\"\"\n+            , \"name: a\"\n             , \"source: daml/Main.daml\"\n             , \"exposed-modules: [Main]\"\n             , \"dependencies:\"\n             , \"  - daml-prim\"\n             , \"  - daml-stdlib\"\n             ]\n-        withCurrentDirectory projectB $ callCommandQuiet $ \"daml build --output \" <> distDir </> \"b.dar\"\n-        assertBool \"b.dar was not created.\" =<< doesFileExist bDar\n-        step \"Creating migration project\"\n-        callCommandQuiet $ unwords [\"daml\", \"migrate\", projectMigrate, \"daml/Main.daml\", aDar, bDar]\n+        withCurrentDirectory projectB $ callCommandQuiet \"daml build\"\n+        assertBool \"a-2.0.dar was not created.\" =<< doesFileExist bDar\n+        step \"Creating upgrade project\"\n+        callCommandQuiet $ unwords [\"daml\", \"migrate\", projectUpgrade, \"daml/Main.daml\", aDar, bDar]\n         step \"Build migration project\"\n-        withCurrentDirectory projectMigrate $ callCommandQuiet $ \"daml build --output \" <> distDir </> \"c.dar\"\n+        withCurrentDirectory projectUpgrade $ callCommandQuiet \"daml build --init-package-db=no --package \\'(\\\"a-1.0\\\", [(\\\"Main\\\", \\\"MainA\\\")])\\' --package \\'(\\\"a-2.0\\\", [(\\\"Main\\\", \\\"MainB\\\")])\\'\"\n+        assertBool \"upgrade-0.0.1.dar was not created\" =<< doesFileExist  upgradeDar\n         step \"Merging upgrade dar\"\n-        withCurrentDirectory tmpDir $\n-            callCommandQuiet $\n-            unwords\n-                [ \"daml damlc merge-dars\"\n-                , projectA </> distDir </> \"a.dar\"\n-                , projectMigrate </> distDir </> \"c.dar\"\n-                , \"--dar-name\"\n-                , \"b_upgraded.dar\"\n-                ]\n-        assertBool \"b_upgraded.dar was not created.\" =<< doesFileExist bUpgradedDar\n+        callCommandQuiet $\n+          unwords\n+              [ \"daml damlc merge-dars\"\n+              , bDar\n+              , upgradeDar\n+              , \"--dar-name\"\n+              , bWithUpgradesDar\n+              ]\n+        assertBool \"a-0.2-with-upgrades.dar was not created.\" =<< doesFileExist bWithUpgradesDar"
  },
  {
    "id" : "1b2fd4c5-a545-4d8b-8e4e-b39e2a3b2a0b",
    "prId" : 2515,
    "comments" : [
      {
        "id" : "f23cae0e-b755-438b-b3a1-1f965bee02a7",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Should we check more than just the existence of this file? E.g., we could check that each filepath found in the original dars also exists in the merged dar.",
        "createdAt" : "2019-08-13T13:22:54Z",
        "updatedAt" : "2019-08-13T13:23:03Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fc165b48-1c88-4711-9741-c7742dce61aa",
        "parentId" : "f23cae0e-b755-438b-b3a1-1f965bee02a7",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "hmm, that's close to rewriting the command in the test. Let's wait for people to actually use it.",
        "createdAt" : "2019-08-13T13:34:23Z",
        "updatedAt" : "2019-08-13T13:34:58Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9320dec86adc72603f7b2b64168e1028d3e1fc4b",
    "line" : 84,
    "diffHunk" : "@@ -279,6 +292,17 @@ packagingTests tmpDir = testGroup \"packaging\"\n         callCommandQuiet $ unwords [\"daml\", \"migrate\", projectMigrate, \"daml/Main.daml\", aDar, bDar]\n         step \"Build migration project\"\n         withCurrentDirectory projectMigrate $ callCommandQuiet \"daml build\"\n+        step \"Merging upgrade dar\"\n+        withCurrentDirectory tmpDir $\n+            callCommandQuiet $\n+            unwords\n+                [ \"daml damlc merge-dars\"\n+                , projectA </> distDir </> \"a.dar\"\n+                , projectB </> distDir </> \"b.dar\"\n+                , \"--dar-name\"\n+                , \"b_upgraded.dar\"\n+                ]\n+        assertBool \"b_upgraded.dar was not created.\" =<< doesFileExist bUpgradedDar"
  },
  {
    "id" : "2e3838fa-ef6c-40a4-b8e6-4db5c92d57e7",
    "prId" : 2459,
    "comments" : [
      {
        "id" : "08d6728d-8c71-41cb-be7a-573b92752470",
        "parentId" : null,
        "author" : null,
        "body" : "`projDir` is not a relative path though",
        "createdAt" : "2019-08-08T13:59:25Z",
        "updatedAt" : "2019-08-08T15:06:53Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a66b422c-4112-4731-8d64-adb13ebb55ef",
        "parentId" : "08d6728d-8c71-41cb-be7a-573b92752470",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "oops, fixed :)",
        "createdAt" : "2019-08-08T15:06:52Z",
        "updatedAt" : "2019-08-08T15:06:53Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "fbbf271c6bcb811d79e1c15a2bdfc7adc31d1395",
    "line" : null,
    "diffHunk" : "@@ -104,7 +104,22 @@ noassistantTests damlDir = testGroup \"no assistant\"\n               , \"a = ()\"\n               ]\n           let damlcPath = damlDir </> \"sdk\" </> sdkVersion </> \"damlc\" </> \"damlc\"\n-          callProcess damlcPath [\"build\", \"--project-root\", projDir, \"--init-package-db\", \"no\"]\n+      testCase \"damlc build --init-package-db=yes\" $ withTempDir $ \\projDir -> do\n+          writeFileUTF8 (projDir </> \"daml.yaml\") $ unlines\n+              [ \"sdk-version: \" <> sdkVersion\n+              , \"name: a\"\n+              , \"version: \\\"1.0\\\"\"\n+              , \"source: Main.daml\"\n+              , \"dependencies: [daml-prim, daml-stdlib]\"\n+              ]\n+          writeFileUTF8 (projDir </> \"Main.daml\") $ unlines\n+              [ \"daml 1.2\"\n+              , \"module Main where\"\n+              , \"a : ()\"\n+              , \"a = ()\"\n+              ]\n+          let damlcPath = damlDir </> \"sdk\" </> sdkVersion </> \"damlc\" </> \"damlc\"\n+          callProcess damlcPath [\"build\", \"--project-root\", projDir, \"--init-package-db\", \"yes\"]"
  },
  {
    "id" : "5dd86754-2e49-44f6-8e87-26047d4c5878",
    "prId" : 2299,
    "comments" : [
      {
        "id" : "5b0f609b-d9e2-430a-829a-2018b6b5e1ad",
        "parentId" : null,
        "author" : null,
        "body" : "waa!! how did this end up like this?!",
        "createdAt" : "2019-07-26T14:15:12Z",
        "updatedAt" : "2019-07-26T15:00:20Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "6502d7af-f940-4e22-9971-59e9307cbbe9",
        "parentId" : "5b0f609b-d9e2-430a-829a-2018b6b5e1ad",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "@nickchapman-da changed that to test that we do not depend on the directory name in the quickstart-java name.",
        "createdAt" : "2019-07-26T14:16:02Z",
        "updatedAt" : "2019-07-26T15:00:20Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2008c502-8a46-4562-b08f-15658f500448",
        "parentId" : "5b0f609b-d9e2-430a-829a-2018b6b5e1ad",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "yes, it was me!\r\n",
        "createdAt" : "2019-07-26T14:35:58Z",
        "updatedAt" : "2019-07-26T15:00:20Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2bc563ff-2d4e-4999-8afc-3a72e218c09d",
        "parentId" : "5b0f609b-d9e2-430a-829a-2018b6b5e1ad",
        "author" : null,
        "body" : "Cool :-) that was unexpected!",
        "createdAt" : "2019-07-26T15:01:43Z",
        "updatedAt" : "2019-07-26T15:01:43Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "213aa0a58d96761790079ea4c6167ca29fed128a",
    "line" : 6,
    "diffHunk" : "@@ -74,11 +74,13 @@ tests damlDir tmpDir = testGroup \"Integration tests\"\n     , packagingTests tmpDir\n     , quickstartTests quickstartDir mvnDir\n     , cleanTests cleanDir\n+    , deployTest deployDir\n     ]\n     where quickstartDir = tmpDir </> \"q-u-i-c-k-s-t-a-r-t\""
  },
  {
    "id" : "fd537283-6eef-486e-a53e-9333f0921334",
    "prId" : 2027,
    "comments" : [
      {
        "id" : "60658770-03d9-4421-b469-ccdff81b6728",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Oh that looks nice! I wonder if we can use this to avoid the horrible hacks where we call `bash.exe` since `shell` relies on `cmd.exe`.",
        "createdAt" : "2019-07-05T15:10:03Z",
        "updatedAt" : "2019-07-08T12:06:22Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2051baa0-8b5b-4d5b-842a-ef63cd387717",
        "parentId" : "60658770-03d9-4421-b469-ccdff81b6728",
        "author" : {
          "login" : "majcherm-da",
          "name" : "Michał Majcherski",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/43614029?u=8320ef35eb6289112c9c95df3e483f322c9aa60e&v=4"
        },
        "body" : "I got rid of it sometime back and I just pushed another commit with a change from `proc` to `shell` for `daml` invocations, which allowed to remove `daml` / `daml.cmd` switch.",
        "createdAt" : "2019-07-08T12:09:08Z",
        "updatedAt" : "2019-07-08T12:09:08Z",
        "lastEditedBy" : {
          "login" : "majcherm-da",
          "name" : "Michał Majcherski",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/43614029?u=8320ef35eb6289112c9c95df3e483f322c9aa60e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2b815f68bb5ffb16074a2405094959c650d351cb",
    "line" : 28,
    "diffHunk" : "@@ -43,10 +44,14 @@ main =\n     javaPath <- locateRunfiles \"local_jdk/bin\"\n     mvnPath <- locateRunfiles \"mvn_dev_env/bin\"\n     tarPath <- locateRunfiles \"tar_dev_env/bin\"\n+    -- NOTE: `COMSPEC` env. variable on Windows points to cmd.exe, which is required to be present\n+    -- on the PATH as mvn.cmd executes cmd.exe\n+    mbComSpec <- getEnv \"COMSPEC\""
  },
  {
    "id" : "edc0c4ae-51c1-44e7-9c43-2a59ee680378",
    "prId" : 2027,
    "comments" : [
      {
        "id" : "55574957-e0bc-4057-9dc4-c73021e06846",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I thought if you use `shell`, it will automatically pick `mvn.cmd`? Is that only the case if `mvn` does not exist?",
        "createdAt" : "2019-07-05T15:11:01Z",
        "updatedAt" : "2019-07-08T12:06:22Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "63561a49-df10-422b-8018-909026869ebd",
        "parentId" : "55574957-e0bc-4057-9dc4-c73021e06846",
        "author" : {
          "login" : "majcherm-da",
          "name" : "Michał Majcherski",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/43614029?u=8320ef35eb6289112c9c95df3e483f322c9aa60e&v=4"
        },
        "body" : "You're right, thanks! Now it's just `mvn`",
        "createdAt" : "2019-07-08T08:50:35Z",
        "updatedAt" : "2019-07-08T12:06:22Z",
        "lastEditedBy" : {
          "login" : "majcherm-da",
          "name" : "Michał Majcherski",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/43614029?u=8320ef35eb6289112c9c95df3e483f322c9aa60e&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2b815f68bb5ffb16074a2405094959c650d351cb",
    "line" : null,
    "diffHunk" : "@@ -367,6 +366,11 @@ damlInstallerName\n     | isWindows = \"daml.exe\"\n     | otherwise = \"daml\"\n \n+mvn :: String\n+mvn\n+    | isWindows = \"mvn.cmd\""
  },
  {
    "id" : "90985be6-b5cc-4c22-be09-6a1089a8ee5e",
    "prId" : 1840,
    "comments" : [
      {
        "id" : "ce81c6f0-5916-4ab0-bee6-bab27672dbc6",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Why do we need that now?",
        "createdAt" : "2019-06-25T14:56:29Z",
        "updatedAt" : "2019-06-25T15:35:19Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "540a5383-0060-4b84-90d3-b0b334c94bcc",
        "parentId" : "ce81c6f0-5916-4ab0-bee6-bab27672dbc6",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "Because the generic instance derivation apparently creates an empty case. I guess for unit.",
        "createdAt" : "2019-06-25T15:33:11Z",
        "updatedAt" : "2019-06-25T15:35:19Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6073d72f80f48ea96e2c534cd25453a8e731d5af",
    "line" : 5,
    "diffHunk" : "@@ -196,9 +196,12 @@ packagingTests tmpDir = testGroup \"packaging\"\n         step \"Creating project a...\"\n         createDirectoryIfMissing True (projectA </> \"daml\")\n         writeFileUTF8 (projectA </> \"daml\" </> \"Main.daml\") $ unlines\n-            [ \"daml 1.2\"\n+            [ \"{-# LANGUAGE EmptyCase #-}\""
  },
  {
    "id" : "66a2e115-a53d-4b31-b217-e2fb6239aa92",
    "prId" : 1409,
    "comments" : [
      {
        "id" : "1e58357b-0dfc-4115-abb6-d9cb7dde280b",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n          callProcessQuiet damlName [\"test\"]\r\n```\r\nGiven that we expose this command, we might as well use it.",
        "createdAt" : "2019-05-27T16:35:17Z",
        "updatedAt" : "2019-05-28T12:35:51Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "fd5dc4f06ee964293f58572c5bc9d7738e6bd799",
    "line" : null,
    "diffHunk" : "@@ -173,7 +173,9 @@ quickstartTests quickstartDir mvnDir = testGroup \"quickstart\" $\n     , testCase \"daml build \" $ withCurrentDirectory quickstartDir $\n           callProcessQuiet damlName [\"build\", \"-o\", \"target/daml/iou.dar\"]\n     , testCase \"daml damlc test\" $ withCurrentDirectory quickstartDir $\n-          callProcessQuiet damlName [\"damlc\", \"test\", \"daml/Main.daml\"]\n+          callProcessQuiet damlName [\"damlc\", \"test\"]"
  },
  {
    "id" : "37a820d5-b34c-4eef-b16f-e763d86ec5c8",
    "prId" : 1237,
    "comments" : [
      {
        "id" : "7f9f68c1-b9be-48d0-8c88-6583bb899b8a",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Nice, clever way to test this!",
        "createdAt" : "2019-05-20T09:30:56Z",
        "updatedAt" : "2019-05-20T09:44:29Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d77e5011afeed2e97071c040ca829aaec13ae56e",
    "line" : 16,
    "diffHunk" : "@@ -213,6 +215,36 @@ quickstartTests quickstartDir mvnDir = testGroup \"quickstart\" $\n     where\n         mvnRepoFlag = \"-Dmaven.repo.local=\" <> mvnDir\n \n+-- | Ensure that daml clean removes precisely the files created by daml build.\n+cleanTests :: FilePath -> TestTree"
  },
  {
    "id" : "bd292941-4068-4870-9f0e-cee7d042b54b",
    "prId" : 1125,
    "comments" : [
      {
        "id" : "07addd37-8994-47de-b9a2-8b53dc732924",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Why not just move to using the Shell form of process? In truth, that's what most users will be doing, so its the most accurate test and no need to have daml.cmd vs daml.",
        "createdAt" : "2019-05-14T13:14:21Z",
        "updatedAt" : "2019-05-14T17:38:16Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9d474724-3b1d-483d-968f-0157def1594d",
        "parentId" : "07addd37-8994-47de-b9a2-8b53dc732924",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Ah, I found adjustCP below...",
        "createdAt" : "2019-05-14T13:15:28Z",
        "updatedAt" : "2019-05-14T17:38:16Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "038930d8-7887-4e0f-b1d5-5ba754867b66",
        "parentId" : "07addd37-8994-47de-b9a2-8b53dc732924",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Moved it after `adjustCP` and pointed to the docs of `adjustCP`.",
        "createdAt" : "2019-05-14T13:19:05Z",
        "updatedAt" : "2019-05-14T17:38:16Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e020ce9fbe07316c459cd0f98676603a12e81efd",
    "line" : null,
    "diffHunk" : "@@ -27,31 +29,39 @@ import DA.Bazel.Runfiles\n import DamlHelper\n import SdkVersion\n \n+-- | Since we run in bash and not in cmd.exe \"daml\" won’t look for \"daml.cmd\"\n+-- so we use \"daml.cmd\" directly.\n+damlName :: String\n+damlName"
  },
  {
    "id" : "9c863ee6-f549-4b60-b46d-6ba76ae99bfd",
    "prId" : 1125,
    "comments" : [
      {
        "id" : "90919e94-28fa-4c6a-a55f-0f8cc135fed5",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Can we get a ticket to have this fixed at some point?",
        "createdAt" : "2019-05-14T13:14:52Z",
        "updatedAt" : "2019-05-14T17:38:16Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b9b824eb-b8ea-4336-b19c-d2da088b8b7d",
        "parentId" : "90919e94-28fa-4c6a-a55f-0f8cc135fed5",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Opened a ticket and linked to it from this comment.",
        "createdAt" : "2019-05-14T13:26:01Z",
        "updatedAt" : "2019-05-14T17:38:16Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e020ce9fbe07316c459cd0f98676603a12e81efd",
    "line" : 131,
    "diffHunk" : "@@ -160,7 +172,12 @@ quickstartTests quickstartDir mvnDir = testGroup \"quickstart\"\n                   (socket (addrFamily addr) (addrSocketType addr) (addrProtocol addr))\n                   close\n                   (\\s -> connect s (addrAddress addr))\n-    , testCase \"mvn compile\" $\n+    ] <>\n+    -- The mvn tests seem to fail on Windows for some reason so for now we disable them."
  },
  {
    "id" : "7d8340b3-570b-4158-91a1-8374a4522a19",
    "prId" : 1125,
    "comments" : [
      {
        "id" : "393c9ef9-2c13-4401-877d-7552b8db53c3",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Is that not fixable?",
        "createdAt" : "2019-05-14T13:15:19Z",
        "updatedAt" : "2019-05-14T17:38:16Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d568134e-43fb-49a2-834b-6003c6f91a52",
        "parentId" : "393c9ef9-2c13-4401-877d-7552b8db53c3",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Haven’t investigated it too deeply but so far I haven’t found a nice solution.",
        "createdAt" : "2019-05-14T13:26:28Z",
        "updatedAt" : "2019-05-14T17:38:16Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e020ce9fbe07316c459cd0f98676603a12e81efd",
    "line" : 158,
    "diffHunk" : "@@ -189,10 +206,21 @@ quickstartTests quickstartDir mvnDir = testGroup \"quickstart\"\n     where\n         mvnRepoFlag = \"-Dmaven.repo.local=\" <> mvnDir\n \n+-- | Bazel tests are run in a bash environment with cmd.exe not in PATH. This results in ShellCommand"
  },
  {
    "id" : "521e8ba7-6fbd-4dcc-ad36-922fe807fcb5",
    "prId" : 725,
    "comments" : [
      {
        "id" : "6a97853c-fe3c-408c-9388-bf08f7972215",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I opened https://github.com/digital-asset/daml/issues/743 to track the changes to `damlc test` before we add `daml test` back.",
        "createdAt" : "2019-04-26T19:03:48Z",
        "updatedAt" : "2019-04-29T07:32:58Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c0815ba1-37ff-42e6-a2b4-0fa5fa391ceb",
        "parentId" : "6a97853c-fe3c-408c-9388-bf08f7972215",
        "author" : null,
        "body" : "Thanks!",
        "createdAt" : "2019-04-29T07:31:27Z",
        "updatedAt" : "2019-04-29T07:32:58Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "28d1a1df4a4684326785a43d1294f948100ccc5b",
    "line" : 14,
    "diffHunk" : "@@ -59,15 +59,10 @@ quickstartTests :: FilePath -> FilePath -> TestTree\n quickstartTests quickstartDir mvnDir = testGroup \"quickstart\"\n     [ testCase \"daml new\" $\n           callProcessQuiet \"daml\" [\"new\", quickstartDir]\n-    , testCase \"daml init\" $ withCurrentDirectory quickstartDir $\n-          callProcessQuiet \"daml\" [\"init\"]\n-    , testCase \"daml package\" $ withCurrentDirectory quickstartDir $\n-          -- This location is assumed by the codegen in the quickstart example.\n-          callProcessQuiet \"daml\" [\"package\", \"-o\", \"target/daml/iou.dar\"]\n     , testCase \"daml build \" $ withCurrentDirectory quickstartDir $\n           callProcessQuiet \"daml\" [\"build\"]\n-    , testCase \"daml test\" $ withCurrentDirectory quickstartDir $\n-          callProcessQuiet \"daml\" [\"test\", \"daml/Main.daml\"]\n+    , testCase \"daml damlc test\" $ withCurrentDirectory quickstartDir $"
  },
  {
    "id" : "c04f46f1-6a1b-4c89-be82-13b3b13f942f",
    "prId" : 725,
    "comments" : [
      {
        "id" : "89cdb1ee-0ffd-4e43-a36e-c337fde3a338",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Removing this breaks the `mvn compile` test below which assumes this location. You could just add the `-o` parameter to `daml build` instead.",
        "createdAt" : "2019-04-26T19:41:34Z",
        "updatedAt" : "2019-04-29T07:32:58Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "284e2462-e9da-4b1c-9955-4f6e7b345e22",
        "parentId" : "89cdb1ee-0ffd-4e43-a36e-c337fde3a338",
        "author" : null,
        "body" : "Ah, thanks!",
        "createdAt" : "2019-04-29T07:33:06Z",
        "updatedAt" : "2019-04-29T07:33:06Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "28d1a1df4a4684326785a43d1294f948100ccc5b",
    "line" : 8,
    "diffHunk" : "@@ -59,15 +59,10 @@ quickstartTests :: FilePath -> FilePath -> TestTree\n quickstartTests quickstartDir mvnDir = testGroup \"quickstart\"\n     [ testCase \"daml new\" $\n           callProcessQuiet \"daml\" [\"new\", quickstartDir]\n-    , testCase \"daml init\" $ withCurrentDirectory quickstartDir $\n-          callProcessQuiet \"daml\" [\"init\"]\n-    , testCase \"daml package\" $ withCurrentDirectory quickstartDir $\n-          -- This location is assumed by the codegen in the quickstart example.\n-          callProcessQuiet \"daml\" [\"package\", \"-o\", \"target/daml/iou.dar\"]"
  }
]