[
  {
    "id" : "9e2a48b5-1e7c-4cfa-a5e6-aa33d8ea29bc",
    "prId" : 4420,
    "comments" : [
      {
        "id" : "c58e4af9-fde0-44f3-80ad-be05a74483f7",
        "parentId" : null,
        "author" : null,
        "body" : "It looks like the only reason you need `Env` here is to calculate the absolute path of the SDK command. I think I'd prefer this to be part of the `SdkCommandInfo` structure, instead of passing the whole `Env` around here. (And it gets rid of the `error` call without making things more complicated here.)\r\n\r\nYou need to update the `SdkCommandInfo` in any case, to handle turning completions on or off via sdk-config.yaml.",
        "createdAt" : "2020-02-06T10:22:35Z",
        "updatedAt" : "2020-02-06T12:43:11Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "cc9308dd-fea5-4143-bd28-841bff181d0d",
        "parentId" : "c58e4af9-fde0-44f3-80ad-be05a74483f7",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Makes sense :+1:",
        "createdAt" : "2020-02-06T10:27:41Z",
        "updatedAt" : "2020-02-06T12:43:11Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f51b49a2c1e2fc954375d45ec4f962193261ed48",
    "line" : null,
    "diffHunk" : "@@ -55,26 +57,44 @@ builtin name desc mod parser =\n isHidden :: SdkCommandInfo -> Bool\n isHidden = isNothing . sdkCommandDesc\n \n-dispatch :: SdkCommandInfo -> Mod CommandFields Command\n-dispatch info = subcommand\n+dispatch :: Env -> SdkCommandInfo -> Mod CommandFields Command\n+dispatch env info = subcommand\n     (unwrapSdkCommandName $ sdkCommandName info)\n     (fromMaybe \"\" $ sdkCommandDesc info)\n     forwardOptions\n-    (Dispatch info . UserCommandArgs <$>\n-        many (strArgument (metavar \"ARGS\" <> completer defaultCompleter)))\n-\n-commandParser :: [SdkCommandInfo] -> Parser Command\n-commandParser cmds | (hidden, visible) <- partition isHidden cmds = asum\n+    (Dispatch info . UserCommandArgs <$> sdkCommandArgsParser env info)\n+\n+sdkCommandArgsParser :: Env -> SdkCommandInfo -> Parser [String]\n+sdkCommandArgsParser env info = fromM (go (unwrapSdkCommandArgs $ sdkCommandArgs info))\n+  where go args = do\n+          mx <- oneM (optional $ strArgument (completer $ nestedCompl args))\n+          case mx of\n+            Nothing -> return []\n+            Just x -> (x :) <$> go (args ++ [x])\n+        nestedCompl args = mkCompleter $ \\arg -> do\n+          let path = unwrapSdkPath (fromJust $ envSdkPath env) </> unwrapSdkCommandPath (sdkCommandPath info)"
  }
]