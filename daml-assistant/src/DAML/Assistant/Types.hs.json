[
  {
    "id" : "15110c2c-1da1-4a57-93af-3693e26cab5e",
    "prId" : 1761,
    "comments" : [
      {
        "id" : "aa1979f4-d7e5-4778-92b4-892f7fc4bb90",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I’d probably handled the logic for `--activate` in the parser and then only have `iAssistant` here but I don’t feel strongly about this.\r\n\r\nI’m also not entirely sure we need backwards compatibility here but the added complexity seems small enough that I’m definitely not opposed to having it.",
        "createdAt" : "2019-06-19T11:23:24Z",
        "updatedAt" : "2019-06-19T12:25:52Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b473b2fb-d502-41c7-9533-f0fd214a3e58",
        "parentId" : "aa1979f4-d7e5-4778-92b4-892f7fc4bb90",
        "author" : null,
        "body" : "I think I still need it here for the `--activate` deprecation warning. \r\n\r\nYeah ... getting rid of `iActivate` and `--activate` is definitely something I want to do, perhaps in `0.14.x`. I just think that now that we have users we need to be careful not to break user interfaces too quickly.",
        "createdAt" : "2019-06-19T12:23:18Z",
        "updatedAt" : "2019-06-19T12:25:52Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "c5aceed170aea934726dfe56a243732cc7a888aa",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +86,90 @@    { iTargetM :: Maybe RawInstallTarget -- ^ version to install\n    , iAssistant :: InstallAssistant -- ^ install the assistant\n    , iActivate :: ActivateInstall -- ^ install the assistant if true (deprecated, delete with 0.14.x)\n    , iForce :: ForceInstall -- ^ force reinstall if already installed\n    , iQuiet :: QuietInstall -- ^ don't print messages"
  },
  {
    "id" : "6f4c8673-4f05-4606-b867-3515c10e7287",
    "prId" : 1700,
    "comments" : [
      {
        "id" : "59709f7d-3d73-498b-9e22-17113b004f0d",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Both these options to me feel like `--verbose`. Do we need separate options for them?",
        "createdAt" : "2019-06-17T10:46:37Z",
        "updatedAt" : "2019-06-17T10:52:15Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e9165578-3297-40c1-bfc7-03828e1b4487",
        "parentId" : "59709f7d-3d73-498b-9e22-17113b004f0d",
        "author" : null,
        "body" : "I like the idea of having individual toggles for showing different things. Adding a `--verbose` option that turns everything on by default isn't a bad idea though.",
        "createdAt" : "2019-06-17T10:55:51Z",
        "updatedAt" : "2019-06-17T10:55:52Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "bcd9c7cf18037659957f089b88603a42ebfe51c7",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +76,80 @@-- | Command-line options for daml version command.\ndata VersionOptions = VersionOptions\n    { vAll :: Bool -- ^ list all available versions\n    , vAssistant :: Bool -- ^ show assistant version\n    } deriving (Eq, Show)"
  },
  {
    "id" : "a4938263-6160-47c0-83c2-0d8242f23189",
    "prId" : 459,
    "comments" : [
      {
        "id" : "0428e6b3-a91d-4ab0-bc0e-87d4aa9c772c",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Example of what an install url looks like please. Does it have .tar.gz at the end? .zip? Qualified? With https?",
        "createdAt" : "2019-04-13T10:47:16Z",
        "updatedAt" : "2019-04-15T10:02:01Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "885f5bea-289d-47ea-9052-8da9742bb527",
        "parentId" : "0428e6b3-a91d-4ab0-bc0e-87d4aa9c772c",
        "author" : {
          "login" : "fmota-da",
          "name" : "Fran",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/45589443?v=4"
        },
        "body" : ":+1:",
        "createdAt" : "2019-04-15T08:49:20Z",
        "updatedAt" : "2019-04-15T10:02:01Z",
        "lastEditedBy" : {
          "login" : "fmota-da",
          "name" : "Fran",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/45589443?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "08a9f895c1edb3d261aac6210ae51e2c8349833b",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +72,76 @@-- | An install URL is a fully qualified HTTP[S] URL to an SDK release tarball. For example:\n-- \"https://github.com/digital-asset/daml/releases/download/v0.11.1/daml-sdk-0.11.1-macos.tar.gz\"\nnewtype InstallURL = InstallURL\n    { unwrapInstallURL :: Text\n    } deriving (Eq, Show, FromJSON)"
  },
  {
    "id" : "dbd126db-dafd-4a3f-aa16-e17a360ebf89",
    "prId" : 377,
    "comments" : [
      {
        "id" : "6fbfacb0-c38c-4875-a1f0-755c58f16f51",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Can we not just use System.Info.isWindows?",
        "createdAt" : "2019-04-11T10:05:18Z",
        "updatedAt" : "2019-04-11T10:07:25Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7fb8d7a2-99e4-4c80-9287-63c7247afc22",
        "parentId" : "6fbfacb0-c38c-4875-a1f0-755c58f16f51",
        "author" : {
          "login" : "fmota-da",
          "name" : "Fran",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/45589443?v=4"
        },
        "body" : ":+1: I'll do this in a separate PR.",
        "createdAt" : "2019-04-11T10:09:29Z",
        "updatedAt" : "2019-04-11T10:09:29Z",
        "lastEditedBy" : {
          "login" : "fmota-da",
          "name" : "Fran",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/45589443?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6cc65e81c4697d7fa5eb81bb6452c61075b58cf8",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +87,91 @@    | Windows\n\ngetPlatform :: Platform\ngetPlatform = case os of\n    \"darwin\"  -> Unix"
  }
]