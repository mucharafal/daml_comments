[
  {
    "id" : "f95281d1-13c5-4f0f-97b5-0778f1b7eaa4",
    "prId" : 1339,
    "comments" : [
      {
        "id" : "98949b8e-6c02-4a98-9b6d-a972ae2a81a1",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Why is catching and discarding all IOExceptions a good idea here? Would be nice to capture this in a comment.",
        "createdAt" : "2019-05-23T11:22:42Z",
        "updatedAt" : "2019-05-23T14:05:16Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d905dd1a-3e24-4308-80fa-d01210a3a248",
        "parentId" : "98949b8e-6c02-4a98-9b6d-a972ae2a81a1",
        "author" : null,
        "body" : "I'll add a comment",
        "createdAt" : "2019-05-23T11:34:20Z",
        "updatedAt" : "2019-05-23T14:05:16Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "d3a711ef84155acf0b8e25f398231dd2e4238e28",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +115,119 @@saveToCache :: DamlPath -> CacheKey -> String -> IO ()\nsaveToCache damlPath key value =\n    void . tryIO $ do\n        let dirPath = cacheDirPath damlPath\n            filePath = cacheFilePath damlPath key"
  },
  {
    "id" : "bc3463ce-985d-4be7-ad01-ab1aa6b7fae1",
    "prId" : 859,
    "comments" : [
      {
        "id" : "3dc756c0-f4ee-4c8c-8b2b-a57e9458466c",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Can we not just use System.Time.Extra.Seconds as the type here? I find NominalDiffTime a horrible type to work with...",
        "createdAt" : "2019-05-02T22:21:33Z",
        "updatedAt" : "2019-05-02T23:40:17Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e76ab25a-856d-46c3-899f-6c1c56a420e0",
        "parentId" : "3dc756c0-f4ee-4c8c-8b2b-a57e9458466c",
        "author" : null,
        "body" : ":+1: \r\n",
        "createdAt" : "2019-05-03T07:46:01Z",
        "updatedAt" : "2019-05-03T07:46:01Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "5c41807d4a80a44cc98e35ebd290d509b3a70c58",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +29,33 @@data UpdateCheck\n    = UpdateCheckNever\n    | UpdateCheckEvery CacheTimeout\n    deriving (Show, Eq, Ord)\n"
  },
  {
    "id" : "25f6d96e-d476-400e-b14b-91518378fa90",
    "prId" : 859,
    "comments" : [
      {
        "id" : "a6c373c4-950f-455e-a068-9e5622a7dd14",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Generally I like newtypes, but I don't feel this one adds much...",
        "createdAt" : "2019-05-02T22:22:16Z",
        "updatedAt" : "2019-05-02T23:40:17Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5c41807d4a80a44cc98e35ebd290d509b3a70c58",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +24,28 @@    deriving (Show, Eq, Ord, IsString)\n\nnewtype CacheTimeout = CacheTimeout NominalDiffTime\n    deriving (Show, Eq, Ord, Y.FromJSON)\n"
  },
  {
    "id" : "da1dc195-7449-438f-9f76-ddcf452679c9",
    "prId" : 859,
    "comments" : [
      {
        "id" : "6103314c-d1bf-4bb5-81e3-c260af92abbb",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Is this right? I would have expected their to be an explicit `daml update` command (because it's super handy to say check now regardless), and I would expect if someone set UpdateNever then did `daml update` (or merely had ever been on UpdateCheckEvery beforehand) it would next time return the most recent version it had cached, but not check afresh.",
        "createdAt" : "2019-05-02T22:25:23Z",
        "updatedAt" : "2019-05-02T23:40:17Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9cab1a28-c9b8-4df8-807f-6fcbaeb282bb",
        "parentId" : "6103314c-d1bf-4bb5-81e3-c260af92abbb",
        "author" : null,
        "body" : "That makes sense. Does `daml update` also install the latest version if it finds a new one?",
        "createdAt" : "2019-05-03T07:47:18Z",
        "updatedAt" : "2019-05-03T07:47:18Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "72d88c53-c702-4dec-9c07-165a523dee0a",
        "parentId" : "6103314c-d1bf-4bb5-81e3-c260af92abbb",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Maybe? Not sure. Are you doing to suggest `daml install` already does what I want?",
        "createdAt" : "2019-05-03T09:04:26Z",
        "updatedAt" : "2019-05-03T09:04:27Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a2f0ae6a-6958-4ef5-923b-af0077f10a2f",
        "parentId" : "6103314c-d1bf-4bb5-81e3-c260af92abbb",
        "author" : null,
        "body" : "`daml install latest --activate` will try to install the latest version of the sdk and assistant, regardless of the `update-check` setting.",
        "createdAt" : "2019-05-03T09:13:27Z",
        "updatedAt" : "2019-05-03T09:13:27Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "5c41807d4a80a44cc98e35ebd290d509b3a70c58",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +45,49 @@        defaultUpdateCheck = UpdateCheckEvery (CacheTimeout 86400)\n    case fromMaybe defaultUpdateCheck updateCheckM of\n        UpdateCheckNever -> pure Nothing\n        UpdateCheckEvery timeout ->\n            cacheWith \"latest-sdk-version\" timeout"
  }
]