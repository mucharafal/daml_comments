[
  {
    "id" : "017efff3-20eb-44a8-b00d-8a0502c40b5e",
    "prId" : 1119,
    "comments" : [
      {
        "id" : "e6cb8943-5d05-4031-86d5-660456b63526",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "@associahedron I went with your suggestion of adding flags both ways but it’s rather annoying to do in optparse-applicative so not entirely sure I like the complexity it adds. If we add it, we should probably be consistent and add it to all flags (in a separate PR).",
        "createdAt" : "2019-05-14T07:26:15Z",
        "updatedAt" : "2019-05-14T08:15:46Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "98c079fb-cd5a-4f13-8ab8-ba3bc7d6b12f",
        "parentId" : "e6cb8943-5d05-4031-86d5-660456b63526",
        "author" : null,
        "body" : "I'm sorry for the bikeshedding but this isn't exactly what I had in mind. Although I do like `--flag` and `--no-flag` syntax, I was thinking of converting all the flags where the \"correct\" default behavior isn't obvious (`--activate` in particular) to `--flag=yes`, `--flag=no`, and `--flag=auto`, with `auto` being the default, which should be easier to implement in optparse-applicative. (The downside is that you need to pass in `yes` instead of just saying `--flag`... but good error messages should mitigate the downside.)\r\n\r\n`--add-path` is another case where the default behavior isn't obvious (which is why I brought it up in the first place). On windows, you want to add path by default, and on unix you don't.\r\n\r\nYou can keep this as is for now, or revert to something simpler, or go all the way and implement `yes,no,auto` for `--add-path`. At some point I'm going to have to change the default behavior of `--activate`, so I'll update that flag when the time comes.",
        "createdAt" : "2019-05-14T07:53:02Z",
        "updatedAt" : "2019-05-14T08:15:46Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7cd6b247-b68f-446f-80dc-cf2d787c2e0a",
        "parentId" : "e6cb8943-5d05-4031-86d5-660456b63526",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Sounds sensible, I’ll switch to `yes,no,auto`.",
        "createdAt" : "2019-05-14T07:57:28Z",
        "updatedAt" : "2019-05-14T08:15:46Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0398579d8b2475e1d5e94807ce6cdaca4b9c5c7e",
    "line" : null,
    "diffHunk" : "@@ -64,5 +64,60 @@ installParser = InstallOptions\n     <*> iflag ActivateInstall \"activate\" mempty \"Activate installed version of daml\"\n     <*> iflag ForceInstall \"force\" (short 'f') \"Overwrite existing installation\"\n     <*> iflag QuietInstall \"quiet\" (short 'q') \"Don't display installation messages\"\n+    <*> enableDisableSwitch SetPath True \"set-path\""
  },
  {
    "id" : "490675c4-15f2-4be3-8f6a-aeb89e1f7a83",
    "prId" : 725,
    "comments" : [
      {
        "id" : "8a2de5c0-3d9c-4a8c-9781-d721157821fd",
        "parentId" : null,
        "author" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "body" : "```suggestion\r\n        <> builtin \"install\" \"Install the specified DAML SDK version, or the latest version if no version is specified\" mempty (Install <$> installParser <**> helper)\r\n```",
        "createdAt" : "2019-04-26T10:49:14Z",
        "updatedAt" : "2019-04-29T07:32:58Z",
        "lastEditedBy" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "aed5193d-e303-4ef2-afe2-1f0c04b98af2",
        "parentId" : "8a2de5c0-3d9c-4a8c-9781-d721157821fd",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "`Install DAML SDK version (defaults to latest)` seems to capture the same thing more concisely (given how `--help` shows, concise matters)",
        "createdAt" : "2019-04-26T11:01:24Z",
        "updatedAt" : "2019-04-29T07:32:58Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "414dd0d5-dd0a-4436-ae03-fd10ed933732",
        "parentId" : "8a2de5c0-3d9c-4a8c-9781-d721157821fd",
        "author" : null,
        "body" : "It does not default to latest (that is the command `daml install latest`, with `daml install` showing all the available targets). I like the description \"Install the specified DAML SDK version\".",
        "createdAt" : "2019-04-26T11:53:02Z",
        "updatedAt" : "2019-04-29T07:32:58Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "28d1a1df4a4684326785a43d1294f948100ccc5b",
    "line" : null,
    "diffHunk" : "@@ -46,13 +46,13 @@ dispatch info = subcommand\n commandParser :: [SdkCommandInfo] -> Parser Command\n commandParser cmds | (hidden, visible) <- partition isHidden cmds = asum\n     [ subparser -- visible commands\n-        $  builtin \"version\" \"Display SDK version\" mempty (pure Version <**> helper)\n-        <> builtin \"install\" \"Install SDK version\" mempty (Install <$> installParser <**> helper)\n-        <> builtin \"exec\" \"Execute command with daml environment.\" forwardOptions\n-            (Exec <$> strArgument (metavar \"CMD\") <*> many (strArgument (metavar \"ARGS\")))\n+        $  builtin \"version\" \"Display DAML SDK version\" mempty (pure Version <**> helper)\n+        <> builtin \"install\" \"Install DAML SDK version\" mempty (Install <$> installParser <**> helper)"
  },
  {
    "id" : "d6e84b0d-5814-41d1-8722-c2e469f0a169",
    "prId" : 725,
    "comments" : [
      {
        "id" : "b8553dfe-702b-4fd4-a05d-480e278ab120",
        "parentId" : null,
        "author" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "body" : "For what? Helps to be specific - I guess this is something like \"Display all installed DAML SDK versions. If run inside a project, also shows the SDK version that the project is using\"",
        "createdAt" : "2019-04-26T10:50:17Z",
        "updatedAt" : "2019-04-29T07:32:58Z",
        "lastEditedBy" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "34753303-8c77-4348-bfbf-8327fb826202",
        "parentId" : "b8553dfe-702b-4fd4-a05d-480e278ab120",
        "author" : null,
        "body" : "It really only displays the SDK version in use in this specific location. (e.g. inside a project it displays the project's SDK version, outside the project it displays the latest version). It's probably not a very useful command, would be better as an option `--version` that shows the current SDK and DAML assistant version.",
        "createdAt" : "2019-04-26T11:56:52Z",
        "updatedAt" : "2019-04-29T07:32:58Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "28d1a1df4a4684326785a43d1294f948100ccc5b",
    "line" : null,
    "diffHunk" : "@@ -46,13 +46,13 @@ dispatch info = subcommand\n commandParser :: [SdkCommandInfo] -> Parser Command\n commandParser cmds | (hidden, visible) <- partition isHidden cmds = asum\n     [ subparser -- visible commands\n-        $  builtin \"version\" \"Display SDK version\" mempty (pure Version <**> helper)\n-        <> builtin \"install\" \"Install SDK version\" mempty (Install <$> installParser <**> helper)\n-        <> builtin \"exec\" \"Execute command with daml environment.\" forwardOptions\n-            (Exec <$> strArgument (metavar \"CMD\") <*> many (strArgument (metavar \"ARGS\")))\n+        $  builtin \"version\" \"Display DAML SDK version\" mempty (pure Version <**> helper)"
  }
]