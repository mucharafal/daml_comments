[
  {
    "id" : "aa6cc5e5-b319-4db2-ba33-37b78a778a98",
    "prId" : 7586,
    "comments" : [
      {
        "id" : "62b4e2d0-89d9-4bbb-b8cc-817e524041d7",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "obviously needs to go before merging :slightly_smiling_face: ",
        "createdAt" : "2020-10-06T18:26:36Z",
        "updatedAt" : "2020-10-07T09:49:02Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "8ff0427fc5bfa77ffc7bddd4d68161481ec41107",
    "line" : null,
    "diffHunk" : "@@ -24,6 +24,7 @@ schedules:\n \n jobs:\n   - job: compatibility_ts_libs\n+    condition: false"
  },
  {
    "id" : "d4997e9f-fa15-4643-9477-21a1df2e5921",
    "prId" : 7543,
    "comments" : [
      {
        "id" : "14d0a504-5ae0-4651-b615-645046885dcf",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I assume you don’t want to merge all of those?",
        "createdAt" : "2020-10-01T13:42:12Z",
        "updatedAt" : "2020-10-01T16:58:50Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a5e80688-a8e3-4cb6-b2e9-5b2ae8ce4eb0",
        "parentId" : "14d0a504-5ae0-4651-b615-645046885dcf",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Indeed. They're part of a separate commit that I'll remove before merging.",
        "createdAt" : "2020-10-01T14:14:30Z",
        "updatedAt" : "2020-10-01T16:58:50Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "70cb469079e3f14d39f16178cc8d583f4009b1c4",
    "line" : null,
    "diffHunk" : "@@ -24,6 +24,7 @@ schedules:\n \n jobs:\n   - job: compatibility_ts_libs\n+    condition: false"
  },
  {
    "id" : "c6d2ac6b-6580-483b-8b49-3b0c9edfa9d5",
    "prId" : 7543,
    "comments" : [
      {
        "id" : "920c8d76-3ee5-4c66-90e4-19d7fad55b31",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : ":grin: (sorry couldn’t help smiling when I saw this)",
        "createdAt" : "2020-10-01T13:47:19Z",
        "updatedAt" : "2020-10-01T16:58:50Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "70cb469079e3f14d39f16178cc8d583f4009b1c4",
    "line" : 37,
    "diffHunk" : "@@ -174,3 +179,63 @@ jobs:\n         displayName: measure http-json performance\n         env:\n           GCRED: $(GOOGLE_APPLICATION_CREDENTIALS_CONTENT)\n+\n+  - job: check_releases\n+    timeoutInMinutes: 120\n+    pool:\n+      name: linux-pool\n+      demands: assignment -equals default\n+    steps:\n+      - checkout: self\n+      - bash: ci/dev-env-install.sh\n+        displayName: 'Build/Install the Developer Environment'\n+      - template: ../bash-lib.yml\n+        parameters:\n+          var_name: bash_lib\n+      - bash: |\n+          set -euo pipefail\n+          eval \"$(dev-env/bin/dade assist)\"\n+          source $(bash_lib)\n+\n+          LOG=$(mktemp)\n+\n+          DIR=$(mktemp -d)\n+          trap \"rm -rf \\\"$DIR\\\"\" EXIT\n+          cd \"$DIR\"\n+\n+          shopt -s extglob # enable !() pattern: things that _don't_ match\n+\n+          # TODO: get all releases (GH paginates by 30)\n+          RELEASES=$(curl https://api.github.com/repos/digital-asset/daml/releases -s)\n+          for i in $(seq 1 $(echo \"$RELEASES\" | jq length)); do\n+              VERSION=$(echo \"$RELEASES\" | jq -r \".[$i-1].tag_name\")\n+              mkdir \"$VERSION\"\n+              cd \"$VERSION\"\n+              PIDS=\"\"\n+              for ass in $(seq 1 $(echo \"$RELEASES\" | jq \".[$i-1].assets | length\")); do"
  },
  {
    "id" : "30f9eabc-1a7b-4e1d-9882-3b26d70bc6b3",
    "prId" : 7406,
    "comments" : [
      {
        "id" : "a1c78094-4904-4a74-abdc-aa8266a3c930",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I am pretty sure that it does support this. What I suspect is happening is that you are hardcoding a relative path to the DAR and the working directory is changed by `bazel run` so the relative PATH isn’t found. There are two options here:\r\n\r\n1. Add the DAR to the runfiles and locate it via `rlocation`. You can find tons of examples for this in our codebase but here is one https://github.com/digital-asset/daml/blob/09014dc63729e4a126306ec22183ded68917eb40/ledger/sandbox-common/src/test/lib/scala/platform/sandbox/AbstractSandboxFixture.scala#L42. This also has the advantage that you do not need the `bazel build` call first. It will be built automatically by Bazel.\r\n2. Use an absolute path. Then `bazel run` won’t mess with it and things should work out. However, you still have to call `bazel build` first.\r\n\r\nI’d prefer going with 1 here.",
        "createdAt" : "2020-09-16T07:38:36Z",
        "updatedAt" : "2020-09-16T15:43:51Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4a2f0c2b-4ff4-4c9b-a55f-e20bd5e53a6c",
        "parentId" : "a1c78094-4904-4a74-abdc-aa8266a3c930",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "how can I use `rlocation` from shell? The way my main is written it accepts file path in the command line argument. Nothing is hardcoded.",
        "createdAt" : "2020-09-16T13:43:13Z",
        "updatedAt" : "2020-09-16T15:43:51Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b4162951-017a-4766-b15c-db20011bb65b",
        "parentId" : "a1c78094-4904-4a74-abdc-aa8266a3c930",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Fair, in that case, the absolute path is probably the easier option.",
        "createdAt" : "2020-09-16T13:45:07Z",
        "updatedAt" : "2020-09-16T15:43:51Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7f19ed1c07c886a4d7b7a6b5c4a25bdbf8055037",
    "line" : null,
    "diffHunk" : "@@ -116,3 +116,64 @@ jobs:\n       - template: ../daily_tell_slack.yml\n         parameters:\n           success-message: '$(cat $(Build.StagingDirectory)/perf-results.json | jq . | jq -sR ''\"perf for ''\"$COMMIT_LINK\"'':```\\(.)```\"'')'\n+\n+  - job: perf_http_json\n+    timeoutInMinutes: 120\n+    pool:\n+      name: \"linux-pool\"\n+      demands: assignment -equals default\n+    steps:\n+      - checkout: self\n+      - bash: ci/dev-env-install.sh\n+        displayName: 'Build/Install the Developer Environment'\n+      - bash: ci/configure-bazel.sh\n+        displayName: 'Configure Bazel for root workspace'\n+        env:\n+          IS_FORK: $(System.PullRequest.IsFork)\n+          # to upload to the bazel cache\n+          GOOGLE_APPLICATION_CREDENTIALS_CONTENT: $(GOOGLE_APPLICATION_CREDENTIALS_CONTENT)\n+      - template: ../bash-lib.yml\n+        parameters:\n+          var_name: bash_lib\n+      - bash: |\n+          set -euo pipefail\n+          eval \"$(dev-env/bin/dade assist)\"\n+          source $(bash_lib)\n+\n+          SCENARIOS=\"\\\n+           com.daml.http.perf.scenario.CreateCommand \\\n+           com.daml.http.perf.scenario.ExerciseCommand \\\n+           com.daml.http.perf.scenario.CreateAndExerciseCommand \\\n+           com.daml.http.perf.scenario.AsyncQueryConstantAcs \\\n+           com.daml.http.perf.scenario.SyncQueryConstantAcs \\\n+           com.daml.http.perf.scenario.SyncQueryNewAcs \\\n+           com.daml.http.perf.scenario.SyncQueryVariableAcs \\\n+          \"\n+\n+          DAR=/var/tmp/quickstart-model.dar\n+\n+          bazel build //docs:quickstart-model\n+          # sandbox cannot open a dar via bazel symlink, copy it into /var/tmp"
  },
  {
    "id" : "ff94cf05-7015-4d87-91a6-a514f61c970f",
    "prId" : 7406,
    "comments" : [
      {
        "id" : "2f2d6c9b-8be3-4e81-81f4-73bad836928a",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "How about changing this to something similar to our release format for snapshots (https://github.com/digital-asset/daml/blob/09014dc63729e4a126306ec22183ded68917eb40/release.sh#L58)? Date makes it hard to trace it back to a commit.",
        "createdAt" : "2020-09-16T07:44:25Z",
        "updatedAt" : "2020-09-16T15:43:51Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "eb216fc0-3897-4ada-a9fa-75eee22c8c40",
        "parentId" : "2f2d6c9b-8be3-4e81-81f4-73bad836928a",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "You only linked one line of it here, I suppose you'd want a bit more, like:\r\n```suggestion\r\n          START=$(git log -n1 --format=%cd --date=format:%Y%m%d).$(git rev-list --count HEAD).$(Build.BuildId).$(git log -n1 --format=%h --abbrev=8)\r\n```",
        "createdAt" : "2020-09-16T09:09:49Z",
        "updatedAt" : "2020-09-16T15:43:51Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "782ba2e1-05e6-4592-bc35-5fca35f8eda4",
        "parentId" : "2f2d6c9b-8be3-4e81-81f4-73bad836928a",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "`job: perf_speedy` uses the same approach. So do you want to change it there too?",
        "createdAt" : "2020-09-16T13:35:59Z",
        "updatedAt" : "2020-09-16T15:43:51Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7f19ed1c07c886a4d7b7a6b5c4a25bdbf8055037",
    "line" : null,
    "diffHunk" : "@@ -116,3 +116,64 @@ jobs:\n       - template: ../daily_tell_slack.yml\n         parameters:\n           success-message: '$(cat $(Build.StagingDirectory)/perf-results.json | jq . | jq -sR ''\"perf for ''\"$COMMIT_LINK\"'':```\\(.)```\"'')'\n+\n+  - job: perf_http_json\n+    timeoutInMinutes: 120\n+    pool:\n+      name: \"linux-pool\"\n+      demands: assignment -equals default\n+    steps:\n+      - checkout: self\n+      - bash: ci/dev-env-install.sh\n+        displayName: 'Build/Install the Developer Environment'\n+      - bash: ci/configure-bazel.sh\n+        displayName: 'Configure Bazel for root workspace'\n+        env:\n+          IS_FORK: $(System.PullRequest.IsFork)\n+          # to upload to the bazel cache\n+          GOOGLE_APPLICATION_CREDENTIALS_CONTENT: $(GOOGLE_APPLICATION_CREDENTIALS_CONTENT)\n+      - template: ../bash-lib.yml\n+        parameters:\n+          var_name: bash_lib\n+      - bash: |\n+          set -euo pipefail\n+          eval \"$(dev-env/bin/dade assist)\"\n+          source $(bash_lib)\n+\n+          SCENARIOS=\"\\\n+           com.daml.http.perf.scenario.CreateCommand \\\n+           com.daml.http.perf.scenario.ExerciseCommand \\\n+           com.daml.http.perf.scenario.CreateAndExerciseCommand \\\n+           com.daml.http.perf.scenario.AsyncQueryConstantAcs \\\n+           com.daml.http.perf.scenario.SyncQueryConstantAcs \\\n+           com.daml.http.perf.scenario.SyncQueryNewAcs \\\n+           com.daml.http.perf.scenario.SyncQueryVariableAcs \\\n+          \"\n+\n+          DAR=/var/tmp/quickstart-model.dar\n+\n+          bazel build //docs:quickstart-model\n+          # sandbox cannot open a dar via bazel symlink, copy it into /var/tmp\n+          cp -vf ./bazel-bin/docs/quickstart-model.dar ${DAR}\n+\n+          JWT=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwczovL2RhbWwuY29tL2xlZGdlci1hcGkiOnsibGVkZ2VySWQiOiJNeUxlZGdlciIsImFwcGxpY2F0aW9uSWQiOiJmb29iYXIiLCJhY3RBcyI6WyJBbGljZSJdfX0.VdDI96mw5hrfM5ZNxLyetSVwcD7XtLT4dIdHIOa9lcU\"\n+\n+          START=$(date -u +%Y%m%d_%H%M%SZ)"
  },
  {
    "id" : "6c12a533-8db4-429c-9a06-aa446e9f9f6c",
    "prId" : 7406,
    "comments" : [
      {
        "id" : "1ad65b1f-ddc7-479c-9dbe-461683c1accc",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "@garyverhaegen-da what exactly does the buildid buy us? iirc Azure GCs old builds pretty quickly so whatever information in there seems to be lost fairly quickly.",
        "createdAt" : "2020-09-16T15:53:26Z",
        "updatedAt" : "2020-09-16T15:54:14Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "04f6f205-345d-4b67-a207-83f38022cbc5",
        "parentId" : "1ad65b1f-ddc7-479c-9dbe-461683c1accc",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "It serves the same purpose as the `0` we have in version numbers for that segment: uniqueness. It seems very plausible we'll run the daily tests on the same commit multiple times (say, over the weekend).",
        "createdAt" : "2020-09-16T16:03:43Z",
        "updatedAt" : "2020-09-16T16:03:43Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "12fc4915-9e27-45f4-a264-a189c42a987b",
        "parentId" : "1ad65b1f-ddc7-479c-9dbe-461683c1accc",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Thanks for the explanation!",
        "createdAt" : "2020-09-16T16:11:38Z",
        "updatedAt" : "2020-09-16T16:11:38Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b9e55f6c-1331-4360-974e-3619aa7565ee",
        "parentId" : "1ad65b1f-ddc7-479c-9dbe-461683c1accc",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "However I would just keep the last perf test results archive in this case.",
        "createdAt" : "2020-09-16T16:13:01Z",
        "updatedAt" : "2020-09-16T16:13:01Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c509b25d-1b01-4d84-990e-56d9e904925d",
        "parentId" : "1ad65b1f-ddc7-479c-9dbe-461683c1accc",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "We're talking ~100kb per run, I think we can afford a few extra ones. More data seems better in general, and multiple runs of the same code gives us some way to assess reproducibility.",
        "createdAt" : "2020-09-16T20:12:10Z",
        "updatedAt" : "2020-09-16T20:12:10Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7f19ed1c07c886a4d7b7a6b5c4a25bdbf8055037",
    "line" : 43,
    "diffHunk" : "@@ -116,3 +116,61 @@ jobs:\n       - template: ../daily_tell_slack.yml\n         parameters:\n           success-message: '$(cat $(Build.StagingDirectory)/perf-results.json | jq . | jq -sR ''\"perf for ''\"$COMMIT_LINK\"'':```\\(.)```\"'')'\n+\n+  - job: perf_http_json\n+    timeoutInMinutes: 120\n+    pool:\n+      name: \"linux-pool\"\n+      demands: assignment -equals default\n+    steps:\n+      - checkout: self\n+      - bash: ci/dev-env-install.sh\n+        displayName: 'Build/Install the Developer Environment'\n+      - bash: ci/configure-bazel.sh\n+        displayName: 'Configure Bazel for root workspace'\n+        env:\n+          IS_FORK: $(System.PullRequest.IsFork)\n+          # to upload to the bazel cache\n+          GOOGLE_APPLICATION_CREDENTIALS_CONTENT: $(GOOGLE_APPLICATION_CREDENTIALS_CONTENT)\n+      - template: ../bash-lib.yml\n+        parameters:\n+          var_name: bash_lib\n+      - bash: |\n+          set -euo pipefail\n+          eval \"$(dev-env/bin/dade assist)\"\n+          source $(bash_lib)\n+\n+          SCENARIOS=\"\\\n+           com.daml.http.perf.scenario.CreateCommand \\\n+           com.daml.http.perf.scenario.ExerciseCommand \\\n+           com.daml.http.perf.scenario.CreateAndExerciseCommand \\\n+           com.daml.http.perf.scenario.AsyncQueryConstantAcs \\\n+           com.daml.http.perf.scenario.SyncQueryConstantAcs \\\n+           com.daml.http.perf.scenario.SyncQueryNewAcs \\\n+           com.daml.http.perf.scenario.SyncQueryVariableAcs \\\n+          \"\n+\n+          bazel build //docs:quickstart-model\n+          DAR=\"${PWD}/bazel-bin/docs/quickstart-model.dar\"\n+\n+          JWT=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwczovL2RhbWwuY29tL2xlZGdlci1hcGkiOnsibGVkZ2VySWQiOiJNeUxlZGdlciIsImFwcGxpY2F0aW9uSWQiOiJmb29iYXIiLCJhY3RBcyI6WyJBbGljZSJdfX0.VdDI96mw5hrfM5ZNxLyetSVwcD7XtLT4dIdHIOa9lcU\"\n+\n+          START=$(git log -n1 --format=%cd --date=format:%Y%m%d).$(git rev-list --count HEAD).$(Build.BuildId).$(git log -n1 --format=%h --abbrev=8)"
  },
  {
    "id" : "fcf93319-f40a-4b09-94e0-3d32089d90e0",
    "prId" : 6018,
    "comments" : [
      {
        "id" : "cc27582d-c546-4e1a-96c5-4a0d757176d5",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I’ve bumped the timeout since we’ve already seen timeouts and this makes things even slower. Thinking about ways to make this faster, maybe it would make sense to skip the first few steps and directly jump to the first messaging feature with all deps. That probably cuts time in half at least. That would mean that we will have to keep both tests but that might still be a better option. We could also do things like building the DAR and generating the typescript code in `genrules` to get better parallelism and caching.\r\n\r\nNot going to attempt to do this in this PR.",
        "createdAt" : "2020-05-22T11:08:14Z",
        "updatedAt" : "2020-05-22T11:16:27Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a20cec2c94a272e9c17ae26f77408dd64d40189a",
    "line" : 5,
    "diffHunk" : "@@ -34,7 +34,7 @@ jobs:\n \n   - job: compatibility\n     dependsOn: compatibility_ts_libs\n-    timeoutInMinutes: 240\n+    timeoutInMinutes: 360"
  },
  {
    "id" : "ef77af8c-f36a-4b42-9033-ba533f2a1d6e",
    "prId" : 5920,
    "comments" : [
      {
        "id" : "00440294-3240-4fa3-9f51-3cdd0f708217",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "The `matrix` `strategy` only allows for substituting values. Since here we need to change the key (`name` vs. `vmImage`), we need to duplicate the entire job.",
        "createdAt" : "2020-05-10T23:28:33Z",
        "updatedAt" : "2020-05-10T23:28:33Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f3415a54-b1bb-45b1-970f-d3f19245afeb",
        "parentId" : "00440294-3240-4fa3-9f51-3cdd0f708217",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "You might be able to use an `if` on the variable you set in the matrix but given that this is hopefully temporary, I’m perfectly happy just duplicating it.",
        "createdAt" : "2020-05-11T06:23:42Z",
        "updatedAt" : "2020-05-11T06:23:43Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b9f142b0fa8fffe8236724935cb01fd3b61563cf",
    "line" : 24,
    "diffHunk" : "@@ -52,6 +46,31 @@ jobs:\n                $(Slack.team-daml)\n         displayName: report\n         condition: always()\n+\n+  - job: compatibility\n+    timeoutInMinutes: 240\n+    pool:\n+      vmImage: macos-10.14"
  },
  {
    "id" : "f05f01e9-258b-40e2-9218-e35379be0b62",
    "prId" : 5843,
    "comments" : [
      {
        "id" : "cb5bc9d1-7ac3-4f1f-aab7-66c5c02d4c3d",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "One option would be to always use the benchmark code from HEAD but against different versions of damlc and the interpreter. Changing damlc is straightforward but since the interpreter is used as a library this is going to be a bit more tricky.",
        "createdAt" : "2020-05-06T06:30:46Z",
        "updatedAt" : "2020-05-06T11:05:40Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4d00041a-5d32-402f-ad99-de259b6c1df7",
        "parentId" : "cb5bc9d1-7ac3-4f1f-aab7-66c5c02d4c3d",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "An alternative I played with was to checkout the `daml-lf/scenario-runner/src/perf` folder as of master on the baseline, which would test the current benchmark on the baseline damlc/speedy combination. But that doesn't work for arbitrary past commits (i.e. the perf folder depends on the rest of the repo so might not compile if interfaces have changed), so I eventually decided that, at least for the next time the benchmark is changed, we'd have to look at it manually and decide whether that's a viable way forward.",
        "createdAt" : "2020-05-06T10:35:45Z",
        "updatedAt" : "2020-05-06T11:05:40Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e81d3082bdb9619d997db4439b42a683b7d6838c",
    "line" : 36,
    "diffHunk" : "@@ -80,3 +80,49 @@ jobs:\n                $(Slack.team-daml)\n         displayName: report\n         condition: always()\n+  - job: performance_report\n+    timeoutInMinutes: 120\n+    pool:\n+      name: \"linux-pool\"\n+    steps:\n+      - checkout: self\n+      - bash: ci/dev-env-install.sh\n+        displayName: 'Build/Install the Developer Environment'\n+      - bash: ci/configure-bazel.sh\n+        displayName: 'Configure Bazel for root workspace'\n+        env:\n+          IS_FORK: $(System.PullRequest.IsFork)\n+          # to upload to the bazel cache\n+          GOOGLE_APPLICATION_CREDENTIALS_CONTENT: $(GOOGLE_APPLICATION_CREDENTIALS_CONTENT)\n+      - bash: |\n+          set -euo pipefail\n+          eval \"$(dev-env/bin/dade assist)\"\n+          BASELINE=\"cebc26af88efef4a7c81c62b0c14353f829b755e\"\n+          OUT=\"$(Build.StagingDirectory)/perf-results.json\"\n+          if git diff --exit-code $BASELINE -- daml-lf/scenario-interpreter/src/perf >&2; then\n+              # no changes, all good\n+              ci/cron/compare-perf.sh $BASELINE > $OUT\n+          else\n+              # the tests have changed, we need to figure out what to do with"
  },
  {
    "id" : "8d38753b-68b6-4e40-9208-aba7cd82f3fa",
    "prId" : 5675,
    "comments" : [
      {
        "id" : "64333988-7400-456d-a280-1d3a1de9ca21",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Depending on what we end up doing here, it may make more sense to have Windows as a separate job than try to merge it with the others.",
        "createdAt" : "2020-04-22T17:00:15Z",
        "updatedAt" : "2020-04-22T17:00:16Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "62550a98dded712f7fa4058383c27b104da784b9",
    "line" : 35,
    "diffHunk" : "@@ -0,0 +1,47 @@\n+# Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+# Do not run on PRs\n+pr: none\n+\n+# Do not run on merge to master\n+trigger: none\n+\n+# Do run on a schedule (daily)\n+#\n+# Note: machines are killed every day at 4AM UTC, so we need to either:\n+# - run sufficiently before that that this doesn't get killed, or\n+# - run sufficiently after that that machines are initialized.\n+#\n+# Targeting 6AM UTC seems to fit that.\n+schedules:\n+- cron: \"0 6 * * *\"\n+  displayName: daily compat check\n+  branches:\n+    include:\n+    - master\n+  always: true\n+\n+jobs:\n+  - job: compatibility\n+    timeoutInMinutes: 240\n+    strategy:\n+      matrix:\n+        linux:\n+          pool: 'linux-pool'\n+        macos:\n+          pool: 'macOS-pool'\n+        #windows:\n+          #pool: 'windows-pool'"
  }
]