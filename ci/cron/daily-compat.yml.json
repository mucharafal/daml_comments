[
  {
    "id" : "d77bcd3a-95b1-45ab-bd21-8bc8d4d22963",
    "prId" : 7543,
    "comments" : [
      {
        "id" : "8760b11a-b79f-43f5-93a1-5a947ee44a1e",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : ":grin: (sorry couldn’t help smiling when I saw this)",
        "createdAt" : "2020-10-01T13:47:19Z",
        "updatedAt" : "2020-10-01T16:58:50Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "70cb469079e3f14d39f16178cc8d583f4009b1c4",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +208,212 @@              cd \"$VERSION\"\n              PIDS=\"\"\n              for ass in $(seq 1 $(echo \"$RELEASES\" | jq \".[$i-1].assets | length\")); do\n                  {\n                      wget --quiet \"$(echo \"$RELEASES\" | jq -r \".[$i-1].assets[$ass-1].browser_download_url\")\" &"
  },
  {
    "id" : "1b319a9a-e48a-42d9-b350-27415a64d5da",
    "prId" : 7406,
    "comments" : [
      {
        "id" : "30445146-4f37-4609-b9a9-2545680291ac",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "@garyverhaegen-da what exactly does the buildid buy us? iirc Azure GCs old builds pretty quickly so whatever information in there seems to be lost fairly quickly.",
        "createdAt" : "2020-09-16T15:53:26Z",
        "updatedAt" : "2020-09-16T15:54:14Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f89d80e3-ef27-446e-a6dd-41c615263b2c",
        "parentId" : "30445146-4f37-4609-b9a9-2545680291ac",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "It serves the same purpose as the `0` we have in version numbers for that segment: uniqueness. It seems very plausible we'll run the daily tests on the same commit multiple times (say, over the weekend).",
        "createdAt" : "2020-09-16T16:03:43Z",
        "updatedAt" : "2020-09-16T16:03:43Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "60a8d008-e9c1-4c11-bf26-321381ab27e7",
        "parentId" : "30445146-4f37-4609-b9a9-2545680291ac",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Thanks for the explanation!",
        "createdAt" : "2020-09-16T16:11:38Z",
        "updatedAt" : "2020-09-16T16:11:38Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a311d41b-c944-4a19-af59-33ba2c6085a8",
        "parentId" : "30445146-4f37-4609-b9a9-2545680291ac",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "However I would just keep the last perf test results archive in this case.",
        "createdAt" : "2020-09-16T16:13:01Z",
        "updatedAt" : "2020-09-16T16:13:01Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3b0bf4de-4ba7-4f80-9e2d-3d154a579958",
        "parentId" : "30445146-4f37-4609-b9a9-2545680291ac",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "We're talking ~100kb per run, I think we can afford a few extra ones. More data seems better in general, and multiple runs of the same code gives us some way to assess reproducibility.",
        "createdAt" : "2020-09-16T20:12:10Z",
        "updatedAt" : "2020-09-16T20:12:10Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7f19ed1c07c886a4d7b7a6b5c4a25bdbf8055037",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +156,160 @@          JWT=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwczovL2RhbWwuY29tL2xlZGdlci1hcGkiOnsibGVkZ2VySWQiOiJNeUxlZGdlciIsImFwcGxpY2F0aW9uSWQiOiJmb29iYXIiLCJhY3RBcyI6WyJBbGljZSJdfX0.VdDI96mw5hrfM5ZNxLyetSVwcD7XtLT4dIdHIOa9lcU\"\n\n          START=$(git log -n1 --format=%cd --date=format:%Y%m%d).$(git rev-list --count HEAD).$(Build.BuildId).$(git log -n1 --format=%h --abbrev=8)\n          REPORT_ID=\"http_json_perf_results_${START}\"\n          OUT=\"$(Build.StagingDirectory)/${REPORT_ID}\""
  },
  {
    "id" : "505a56e4-7533-40d4-a75f-f184d47f1dec",
    "prId" : 6018,
    "comments" : [
      {
        "id" : "2f80a195-1972-42cd-8bf8-2c1883035000",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I’ve bumped the timeout since we’ve already seen timeouts and this makes things even slower. Thinking about ways to make this faster, maybe it would make sense to skip the first few steps and directly jump to the first messaging feature with all deps. That probably cuts time in half at least. That would mean that we will have to keep both tests but that might still be a better option. We could also do things like building the DAR and generating the typescript code in `genrules` to get better parallelism and caching.\r\n\r\nNot going to attempt to do this in this PR.",
        "createdAt" : "2020-05-22T11:08:14Z",
        "updatedAt" : "2020-05-22T11:16:27Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a20cec2c94a272e9c17ae26f77408dd64d40189a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +35,39 @@  - job: compatibility\n    dependsOn: compatibility_ts_libs\n    timeoutInMinutes: 360\n    strategy:\n      matrix:"
  },
  {
    "id" : "8d8ca11a-9017-4403-a640-bf33d97aaffb",
    "prId" : 5920,
    "comments" : [
      {
        "id" : "480255e1-dc77-40d1-997a-2699a4a73f2c",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "The `matrix` `strategy` only allows for substituting values. Since here we need to change the key (`name` vs. `vmImage`), we need to duplicate the entire job.",
        "createdAt" : "2020-05-10T23:28:33Z",
        "updatedAt" : "2020-05-10T23:28:33Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "081def05-b740-4fd5-9549-3edadcd50bd6",
        "parentId" : "480255e1-dc77-40d1-997a-2699a4a73f2c",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "You might be able to use an `if` on the variable you set in the matrix but given that this is hopefully temporary, I’m perfectly happy just duplicating it.",
        "createdAt" : "2020-05-11T06:23:42Z",
        "updatedAt" : "2020-05-11T06:23:43Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b9f142b0fa8fffe8236724935cb01fd3b61563cf",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +51,55 @@    timeoutInMinutes: 240\n    pool:\n      vmImage: macos-10.14\n    steps:\n      - checkout: self"
  },
  {
    "id" : "244b9a0a-9dd0-44d4-aadb-521340032570",
    "prId" : 5843,
    "comments" : [
      {
        "id" : "36cc0dbb-9ec1-4a44-88f3-6bc6553ba88e",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "One option would be to always use the benchmark code from HEAD but against different versions of damlc and the interpreter. Changing damlc is straightforward but since the interpreter is used as a library this is going to be a bit more tricky.",
        "createdAt" : "2020-05-06T06:30:46Z",
        "updatedAt" : "2020-05-06T11:05:40Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c63d1e9a-bcb4-4e90-8560-6361a53b9b5e",
        "parentId" : "36cc0dbb-9ec1-4a44-88f3-6bc6553ba88e",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "An alternative I played with was to checkout the `daml-lf/scenario-runner/src/perf` folder as of master on the baseline, which would test the current benchmark on the baseline damlc/speedy combination. But that doesn't work for arbitrary past commits (i.e. the perf folder depends on the rest of the repo so might not compile if interfaces have changed), so I eventually decided that, at least for the next time the benchmark is changed, we'd have to look at it manually and decide whether that's a viable way forward.",
        "createdAt" : "2020-05-06T10:35:45Z",
        "updatedAt" : "2020-05-06T11:05:40Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e81d3082bdb9619d997db4439b42a683b7d6838c",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +104,108 @@              ci/cron/compare-perf.sh $BASELINE > $OUT\n          else\n              # the tests have changed, we need to figure out what to do with\n              # the baseline.\n              echo \"Baseline no longer valid, needs manual correction.\" > $OUT"
  },
  {
    "id" : "7158e8ce-c400-4ba5-b9d1-9a91aec12035",
    "prId" : 5675,
    "comments" : [
      {
        "id" : "e630e9c1-d4e1-4417-9418-109848119b8f",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Depending on what we end up doing here, it may make more sense to have Windows as a separate job than try to merge it with the others.",
        "createdAt" : "2020-04-22T17:00:15Z",
        "updatedAt" : "2020-04-22T17:00:16Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "62550a98dded712f7fa4058383c27b104da784b9",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@          pool: 'macOS-pool'\n        #windows:\n          #pool: 'windows-pool'\n    pool:\n      name: $(pool)"
  }
]