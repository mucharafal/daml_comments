[
  {
    "id" : "d1311d0a-3b5c-4e4a-b318-35d8633a96b2",
    "prId" : 5843,
    "comments" : [
      {
        "id" : "8c50ccbe-9776-43d8-a30a-3512675f0311",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Looks like we are never deleting this directory?",
        "createdAt" : "2020-05-06T06:31:54Z",
        "updatedAt" : "2020-05-06T11:05:40Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b296c600-24e8-4ac0-b322-259b1412e384",
        "parentId" : "8c50ccbe-9776-43d8-a30a-3512675f0311",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Indeed. The job runs once a day and the one file that function writes is about 8.8kb, so I don't think it's an issue. Even taking into account the fact that the script invokes that function twice, and FS padding (on HFS+ at least), this is still consuming only 24kb in total (as machines get cleared every day, there should never be more than one set of files).",
        "createdAt" : "2020-05-06T11:01:26Z",
        "updatedAt" : "2020-05-06T11:05:40Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e81d3082bdb9619d997db4439b42a683b7d6838c",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +10,14 @@measure() {\n    local treeish=$1\n    local out=$(mktemp -d)/out.json\n    git checkout $treeish >&2\n    bazel run daml-lf/scenario-interpreter:scenario-perf -- -rf json -rff $out >&2"
  }
]