[
  {
    "id" : "0218264e-4bff-48d8-8a9c-840ce9253320",
    "prId" : 6267,
    "comments" : [
      {
        "id" : "95429a15-e0a2-4593-8bed-d91c7419dcbc",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I donâ€™t understand the escaping here. iirc (and I did briefly look at the yaml spec to confirm) you only have to escape single quotes within a single-quoted string.",
        "createdAt" : "2020-06-09T06:44:40Z",
        "updatedAt" : "2020-06-09T06:45:26Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "10ef2e45-a57a-4fb4-92fa-410cc1de68c4",
        "parentId" : "95429a15-e0a2-4593-8bed-d91c7419dcbc",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "They're escaped for Bash, not for YAML. I need the quotes in there to produce valid JSON.",
        "createdAt" : "2020-06-09T10:23:43Z",
        "updatedAt" : "2020-06-09T10:23:43Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "208dc409-bcf4-47c1-a5ef-6bf1e8b3a3f1",
        "parentId" : "95429a15-e0a2-4593-8bed-d91c7419dcbc",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Elaborating a little bit, we use this here:\r\n```\r\nMESSAGE=\"${{ parameters['success-message'] }}\"\r\n```\r\nand want that to Azure-resolve to\r\n```\r\nMESSAGE=\"\\\"$(Agent.JobName) passed: $COMMIT_LINK\\\"\"\r\n```\r\nso we have quotes in there for when we call\r\n```\r\nPAYLOAD=\"{\\\"text\\\":$MESSAGE}\"\r\n```\r\nso we produce valid JSON.\r\n\r\nNow, you'd think we could have just kept the existing form of\r\n```\r\nPAYLOAD=\"{\\\"text\\\":\\\"$MESSAGE\\n\\\"}\"\r\n```\r\nto have explicit quotes at the point of use. The problem with that is that the alternative, for the perf job, is produced by `jq`, which has to produce a valid JSON string (so it includes all the relevant escaping), and that has embedded quotes. So we need the default case to have embedded quotes too.",
        "createdAt" : "2020-06-09T10:32:37Z",
        "updatedAt" : "2020-06-09T10:32:37Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a751cc1a-3e11-45cb-963f-7289e21db9b7",
        "parentId" : "95429a15-e0a2-4593-8bed-d91c7419dcbc",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Makes sense, thanks for the explanation!",
        "createdAt" : "2020-06-09T10:33:30Z",
        "updatedAt" : "2020-06-09T10:33:30Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "333ffadfd657b84314cd66a9ed4d901c4cbe4510",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3,7 @@\nparameters:\n  success-message: '\\\"$(Agent.JobName) passed: $COMMIT_LINK\\\"'\n\nsteps:"
  },
  {
    "id" : "dae87987-2db5-42a4-ae5b-980bcb5c9431",
    "prId" : 6221,
    "comments" : [
      {
        "id" : "29063b36-f30f-4f3e-b687-198185b89925",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "If you want to fail eagerly if this variable doesn't exist, you could add:\r\n\r\n```suggestion\r\n    [ -n \"$(Build.SourceBranchName)\" ]\r\n    if [ \"$(Build.SourceBranchName)\" = \"master\" ]; then\r\n```",
        "createdAt" : "2020-06-04T09:25:25Z",
        "updatedAt" : "2020-06-04T10:13:18Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c8d7a736-8f39-44da-af13-4230071c9e19",
        "parentId" : "29063b36-f30f-4f3e-b687-198185b89925",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Is `set -u` not enough for that?",
        "createdAt" : "2020-06-04T09:26:57Z",
        "updatedAt" : "2020-06-04T10:13:18Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "78578aa6-5b71-4e6b-8908-fde3fed0edca",
        "parentId" : "29063b36-f30f-4f3e-b687-198185b89925",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Clearly `set -u` is not working here, as the jobs are still green on Azure despite the error message.",
        "createdAt" : "2020-06-04T09:30:12Z",
        "updatedAt" : "2020-06-04T10:13:18Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "79a4a4b3-14c9-4280-a4a9-001450aab755",
        "parentId" : "29063b36-f30f-4f3e-b687-198185b89925",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Nope, because this isn't a shell variable, it's an Azure Pipelines variable. It's inserted through string interpolation before the script is run, as far as I understand it.\r\n\r\nPerhaps the entire job will fail if the variable doesn't exist though. Not sure how permissive Azure is with this stuff. A quick search suggests it will either insert an empty string or \"undefined\", which seems even less useful.",
        "createdAt" : "2020-06-04T09:30:30Z",
        "updatedAt" : "2020-06-04T10:13:18Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bcecd575-568c-45ad-bda2-dc1aa32fc713",
        "parentId" : "29063b36-f30f-4f3e-b687-198185b89925",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "More layers of string interpolation solve all problems.",
        "createdAt" : "2020-06-04T09:33:44Z",
        "updatedAt" : "2020-06-04T10:13:18Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "364c758b-844c-4d5b-91f9-64d5cabc2bb9",
        "parentId" : "29063b36-f30f-4f3e-b687-198185b89925",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "@SamirTalwar That is not how Azure works. Not sure what you searched for, but if the variable doesn't exist at the Azure level, or if the syntax is wrong (as was the case here), Azure simply does not replace anything. So in this case Bash did get the literal `\"$(variables['SourceBranchName'])\"` and that is why Bash (not Azure preprocessing) printed\r\n```\r\n/home/vsts/agent/_work/_temp/7a958ea0-e48d-4658-9200-9d933a35582a.sh: line 11: variables[Build.SourceBranchName]: command not found\r\n```\r\nfrom its subshell, of which the return status is ignored despite `-e` because we're inside a `[]` (I think).\r\n\r\nSo I don't think the `[ -n ]` will help here. From my understanding of `-e` (`-u` is irrelevant here as from Bash's perspective there is no variable involved, just a subshell, so nothing that can be unset), this should fail properly on the subshell failing:\r\n```suggestion\r\n    branch=\"$(Build.SourceBranchName)\"\r\n    if [ \"$branch\" = \"master\" ]; then\r\n```\r\nEither way, we now have the correct syntax so this will never fail (ðŸ¤ž), as the `Build.SourceBranchName` variable should always be set by Azure.",
        "createdAt" : "2020-06-04T09:44:26Z",
        "updatedAt" : "2020-06-04T10:13:18Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bc4a69b9-b3bb-48b5-8eb2-ca76be3bd1f8",
        "parentId" : "29063b36-f30f-4f3e-b687-198185b89925",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Thanks for the explanation @garyverhaegen-da!",
        "createdAt" : "2020-06-04T09:52:19Z",
        "updatedAt" : "2020-06-04T10:13:18Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1fac7529-2927-404a-ad59-a63e62ab9e82",
        "parentId" : "29063b36-f30f-4f3e-b687-198185b89925",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Aha, good to know. Thanks for the clarification!",
        "createdAt" : "2020-06-04T09:53:13Z",
        "updatedAt" : "2020-06-04T10:13:18Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "853bccc774bb18b9a315a29713ad931e9248d052",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +17,21 @@    fi\n    PAYLOAD=\"{\\\"text\\\":\\\"$MESSAGE\\n\\\"}\"\n    if [ \"$(Build.SourceBranchName)\" = \"master\" ]; then\n        curl -XPOST \\\n             -i \\"
  }
]