[
  {
    "id" : "e35942a4-053b-4cef-863b-8bb14a71fb83",
    "prId" : 1568,
    "comments" : [
      {
        "id" : "115b2031-d6df-4699-93a5-d84c0e5bd308",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "If you give a name to the container you are starting, you can then easily stop it by name. Also, why not just use the image name here?\r\n```suggestion\r\n    docker run --name daml-webide-test --rm -p 8443:8443 gcr.io/da-gcp-web-ide-project/daml-webide:$VERSION > /dev/null 2>&1 &\r\n```",
        "createdAt" : "2019-06-11T13:03:48Z",
        "updatedAt" : "2019-06-11T18:23:19Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "33915e4d-ddab-401a-8981-dbc7180a755d",
        "parentId" : "115b2031-d6df-4699-93a5-d84c0e5bd308",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Also, I'm not in a position to test right now, but doesn't `docker run` return the container ID? You could just store that in a variable if you're worried about name collisions.",
        "createdAt" : "2019-06-11T13:14:23Z",
        "updatedAt" : "2019-06-11T18:23:19Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "45a31467-dde6-47ab-b84a-c28a50e143ba",
        "parentId" : "115b2031-d6df-4699-93a5-d84c0e5bd308",
        "author" : {
          "login" : "bolek-wisniewski",
          "name" : "Bolek@DigitalAsset",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/25302921?u=0ebe382413a7e394adf0aa30927d2c94e4882778&v=4"
        },
        "body" : "I've gotten to prefer image ids as they are definitive of the version of code I am running. I've added the container name",
        "createdAt" : "2019-06-11T14:16:21Z",
        "updatedAt" : "2019-06-11T18:23:19Z",
        "lastEditedBy" : {
          "login" : "bolek-wisniewski",
          "name" : "Bolek@DigitalAsset",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/25302921?u=0ebe382413a7e394adf0aa30927d2c94e4882778&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "33957a6d478ba3815e81a67c338bbe4c3a486f19",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,91 @@\n+#!/usr/bin/env bash\n+# Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+\n+[ -z $1 ] && echo \"usage build-webide [version] [latest:defaults true] [test:defaults true]\" && exit 1\n+\n+echo \"building webide image with $@\"\n+VERSION=$1\n+LATEST=${2:-true}\n+TEST=${3:-true}\n+PUSH=${4:-true}\n+DOCKER_FILE=\"$(dirname \"${BASH_SOURCE[0]}\")/../web-ide/ide-server/\"\n+\n+fail() {\n+    stopDocker\n+    exit 1\n+}\n+\n+ensureDockerStarted() {\n+    local IMAGE_ID=$1\n+    local limit=10\n+    local i=0\n+    local RESULT=\"START\"\n+    while [ $i -lt $limit -a $RESULT != \"Up\" ]; do\n+        sleep 1\n+        i=$(($i+1))\n+        RESULT=$(docker container ls --filter=ancestor=$IMAGE_ID --format {{.Status}} | cut -c1-2)\n+    done\n+    if [ $i -eq $limit ]; then\n+        echo \"Could not start docker container: ls result='$RESULT'\"\n+        fail\n+    fi\n+}\n+\n+ensureWebideStarted() {\n+    echo \"ensuring endpoint is responsive\"\n+    local limit=10\n+    local i=0\n+    local RESULT=1\n+    which curl > /dev/null 2>&1 #ensure dev-env does its thing before sending request\n+    while [ $i -lt $limit -a $RESULT -ne 0 ]; do\n+        sleep 1\n+        i=$(($i+1))\n+        curl -I http://localhost:8443\n+        RESULT=$?\n+    done\n+    if [ $RESULT -ne 0 ]; then\n+        echo \"Could not start webide\"\n+        fail\n+    fi\n+}\n+\n+stopDocker() {\n+    echo \"stopping docker\"\n+    docker stop $(docker ps --format {{.ID}})\n+}\n+\n+which docker > /dev/null 2>&1\n+if [ $? -ne 0 ]; then\n+    echo \"docker not installed!\"\n+    exit 1\n+fi\n+\n+if [ \"$LATEST\" = true ]; then\n+    docker build --rm --build-arg DAML_VERSION=$VERSION -t gcr.io/da-gcp-web-ide-project/daml-webide:$VERSION -t gcr.io/da-gcp-web-ide-project/daml-webide:latest $DOCKER_FILE\n+else\n+    docker build --rm --build-arg DAML_VERSION=$VERSION  -t gcr.io/da-gcp-web-ide-project/daml-webide:$VERSION $DOCKER_FILE\n+fi\n+\n+if [ \"$TEST\" = true ]; then\n+    IMAGE_ID=$(docker image ls --filter=reference=\"gcr.io/da-gcp-web-ide-project/daml-webide:$VERSION\" --format \"{{.ID}}\")\n+    echo \"running container for image $IMAGE_ID\"\n+    docker run --rm -p 8443:8443 $IMAGE_ID > /dev/null 2>&1 &"
  },
  {
    "id" : "457d791c-c683-4d85-973d-de5275004812",
    "prId" : 1568,
    "comments" : [
      {
        "id" : "8561fc9d-8a1c-43f7-845b-819511f70410",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Is this useful? When would the next line not be enough? (The `docker run` command above will fail if the port is not available, so if we get a response from that port we know it's a response from Docker.)",
        "createdAt" : "2019-06-11T13:05:36Z",
        "updatedAt" : "2019-06-11T18:23:19Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "35ebbfe3-3398-4375-a190-1db448ddf431",
        "parentId" : "8561fc9d-8a1c-43f7-845b-819511f70410",
        "author" : {
          "login" : "bolek-wisniewski",
          "name" : "Bolek@DigitalAsset",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/25302921?u=0ebe382413a7e394adf0aa30927d2c94e4882778&v=4"
        },
        "body" : "this also ensures that the container is fulling running (not initiating or paused)",
        "createdAt" : "2019-06-11T14:13:58Z",
        "updatedAt" : "2019-06-11T18:23:19Z",
        "lastEditedBy" : {
          "login" : "bolek-wisniewski",
          "name" : "Bolek@DigitalAsset",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/25302921?u=0ebe382413a7e394adf0aa30927d2c94e4882778&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "33957a6d478ba3815e81a67c338bbe4c3a486f19",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,91 @@\n+#!/usr/bin/env bash\n+# Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+\n+[ -z $1 ] && echo \"usage build-webide [version] [latest:defaults true] [test:defaults true]\" && exit 1\n+\n+echo \"building webide image with $@\"\n+VERSION=$1\n+LATEST=${2:-true}\n+TEST=${3:-true}\n+PUSH=${4:-true}\n+DOCKER_FILE=\"$(dirname \"${BASH_SOURCE[0]}\")/../web-ide/ide-server/\"\n+\n+fail() {\n+    stopDocker\n+    exit 1\n+}\n+\n+ensureDockerStarted() {\n+    local IMAGE_ID=$1\n+    local limit=10\n+    local i=0\n+    local RESULT=\"START\"\n+    while [ $i -lt $limit -a $RESULT != \"Up\" ]; do\n+        sleep 1\n+        i=$(($i+1))\n+        RESULT=$(docker container ls --filter=ancestor=$IMAGE_ID --format {{.Status}} | cut -c1-2)\n+    done\n+    if [ $i -eq $limit ]; then\n+        echo \"Could not start docker container: ls result='$RESULT'\"\n+        fail\n+    fi\n+}\n+\n+ensureWebideStarted() {\n+    echo \"ensuring endpoint is responsive\"\n+    local limit=10\n+    local i=0\n+    local RESULT=1\n+    which curl > /dev/null 2>&1 #ensure dev-env does its thing before sending request\n+    while [ $i -lt $limit -a $RESULT -ne 0 ]; do\n+        sleep 1\n+        i=$(($i+1))\n+        curl -I http://localhost:8443\n+        RESULT=$?\n+    done\n+    if [ $RESULT -ne 0 ]; then\n+        echo \"Could not start webide\"\n+        fail\n+    fi\n+}\n+\n+stopDocker() {\n+    echo \"stopping docker\"\n+    docker stop $(docker ps --format {{.ID}})\n+}\n+\n+which docker > /dev/null 2>&1\n+if [ $? -ne 0 ]; then\n+    echo \"docker not installed!\"\n+    exit 1\n+fi\n+\n+if [ \"$LATEST\" = true ]; then\n+    docker build --rm --build-arg DAML_VERSION=$VERSION -t gcr.io/da-gcp-web-ide-project/daml-webide:$VERSION -t gcr.io/da-gcp-web-ide-project/daml-webide:latest $DOCKER_FILE\n+else\n+    docker build --rm --build-arg DAML_VERSION=$VERSION  -t gcr.io/da-gcp-web-ide-project/daml-webide:$VERSION $DOCKER_FILE\n+fi\n+\n+if [ \"$TEST\" = true ]; then\n+    IMAGE_ID=$(docker image ls --filter=reference=\"gcr.io/da-gcp-web-ide-project/daml-webide:$VERSION\" --format \"{{.ID}}\")\n+    echo \"running container for image $IMAGE_ID\"\n+    docker run --rm -p 8443:8443 $IMAGE_ID > /dev/null 2>&1 &\n+    sleep 5\n+\n+    ensureDockerStarted $IMAGE_ID"
  },
  {
    "id" : "a296ef1c-c5c7-4c19-9f46-28490a29ee9a",
    "prId" : 1568,
    "comments" : [
      {
        "id" : "5341880a-3f93-42ab-9718-e4a9be9718e6",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "```suggestion\r\n    docker rm -f daml-webide-test\r\n```\r\n\r\nIt looks like the current `dockerStop` command would stop all Docker containers running on the current machine, which makes this script a bit dangerous to run in general. Also, why would we want to keep the stopped container around? (Regarding the `-f` here: we know it's the one we just created for this test, because otherwise (if the name was already taken) the `docker run` command would have failed.",
        "createdAt" : "2019-06-11T13:09:18Z",
        "updatedAt" : "2019-06-11T18:23:19Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5403cb08-3d98-4746-9284-3147932523ec",
        "parentId" : "5341880a-3f93-42ab-9718-e4a9be9718e6",
        "author" : {
          "login" : "bolek-wisniewski",
          "name" : "Bolek@DigitalAsset",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/25302921?u=0ebe382413a7e394adf0aa30927d2c94e4882778&v=4"
        },
        "body" : "👍 I'll name the container, thx\r\n\r\nI'm used to running many of these, but you're right, it is much easier to manage a single one by name",
        "createdAt" : "2019-06-11T14:12:42Z",
        "updatedAt" : "2019-06-11T18:23:19Z",
        "lastEditedBy" : {
          "login" : "bolek-wisniewski",
          "name" : "Bolek@DigitalAsset",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/25302921?u=0ebe382413a7e394adf0aa30927d2c94e4882778&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "33957a6d478ba3815e81a67c338bbe4c3a486f19",
    "line" : 81,
    "diffHunk" : "@@ -0,0 +1,91 @@\n+#!/usr/bin/env bash\n+# Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+\n+[ -z $1 ] && echo \"usage build-webide [version] [latest:defaults true] [test:defaults true]\" && exit 1\n+\n+echo \"building webide image with $@\"\n+VERSION=$1\n+LATEST=${2:-true}\n+TEST=${3:-true}\n+PUSH=${4:-true}\n+DOCKER_FILE=\"$(dirname \"${BASH_SOURCE[0]}\")/../web-ide/ide-server/\"\n+\n+fail() {\n+    stopDocker\n+    exit 1\n+}\n+\n+ensureDockerStarted() {\n+    local IMAGE_ID=$1\n+    local limit=10\n+    local i=0\n+    local RESULT=\"START\"\n+    while [ $i -lt $limit -a $RESULT != \"Up\" ]; do\n+        sleep 1\n+        i=$(($i+1))\n+        RESULT=$(docker container ls --filter=ancestor=$IMAGE_ID --format {{.Status}} | cut -c1-2)\n+    done\n+    if [ $i -eq $limit ]; then\n+        echo \"Could not start docker container: ls result='$RESULT'\"\n+        fail\n+    fi\n+}\n+\n+ensureWebideStarted() {\n+    echo \"ensuring endpoint is responsive\"\n+    local limit=10\n+    local i=0\n+    local RESULT=1\n+    which curl > /dev/null 2>&1 #ensure dev-env does its thing before sending request\n+    while [ $i -lt $limit -a $RESULT -ne 0 ]; do\n+        sleep 1\n+        i=$(($i+1))\n+        curl -I http://localhost:8443\n+        RESULT=$?\n+    done\n+    if [ $RESULT -ne 0 ]; then\n+        echo \"Could not start webide\"\n+        fail\n+    fi\n+}\n+\n+stopDocker() {\n+    echo \"stopping docker\"\n+    docker stop $(docker ps --format {{.ID}})\n+}\n+\n+which docker > /dev/null 2>&1\n+if [ $? -ne 0 ]; then\n+    echo \"docker not installed!\"\n+    exit 1\n+fi\n+\n+if [ \"$LATEST\" = true ]; then\n+    docker build --rm --build-arg DAML_VERSION=$VERSION -t gcr.io/da-gcp-web-ide-project/daml-webide:$VERSION -t gcr.io/da-gcp-web-ide-project/daml-webide:latest $DOCKER_FILE\n+else\n+    docker build --rm --build-arg DAML_VERSION=$VERSION  -t gcr.io/da-gcp-web-ide-project/daml-webide:$VERSION $DOCKER_FILE\n+fi\n+\n+if [ \"$TEST\" = true ]; then\n+    IMAGE_ID=$(docker image ls --filter=reference=\"gcr.io/da-gcp-web-ide-project/daml-webide:$VERSION\" --format \"{{.ID}}\")\n+    echo \"running container for image $IMAGE_ID\"\n+    docker run --rm -p 8443:8443 $IMAGE_ID > /dev/null 2>&1 &\n+    sleep 5\n+\n+    ensureDockerStarted $IMAGE_ID\n+    ensureWebideStarted\n+\n+    echo \"!!!!!!!!!!! Test passed !!!!!!!!!!!!!!!!!\"\n+    stopDocker"
  },
  {
    "id" : "0236ef63-e52d-4415-8c28-a970ed8b492b",
    "prId" : 1568,
    "comments" : [
      {
        "id" : "85afe311-772e-4764-9cbe-74d0c78aee25",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Any reason why we're not pushing to Docker Hub?",
        "createdAt" : "2019-06-11T13:09:37Z",
        "updatedAt" : "2019-06-11T18:23:19Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e588a472-7cfa-4f4a-ae6b-d53e959a115f",
        "parentId" : "85afe311-772e-4764-9cbe-74d0c78aee25",
        "author" : {
          "login" : "bolek-wisniewski",
          "name" : "Bolek@DigitalAsset",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/25302921?u=0ebe382413a7e394adf0aa30927d2c94e4882778&v=4"
        },
        "body" : "I'm willing, and manually I did do it. I have a service account for dockerhub but would need to add the credentials to azure...\r\n\r\nOn the other hand, these images are used for our own purposes and having a single registry makes it easier to understand our process.",
        "createdAt" : "2019-06-11T14:10:27Z",
        "updatedAt" : "2019-06-11T18:23:19Z",
        "lastEditedBy" : {
          "login" : "bolek-wisniewski",
          "name" : "Bolek@DigitalAsset",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/25302921?u=0ebe382413a7e394adf0aa30927d2c94e4882778&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "33957a6d478ba3815e81a67c338bbe4c3a486f19",
    "line" : 85,
    "diffHunk" : "@@ -0,0 +1,91 @@\n+#!/usr/bin/env bash\n+# Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+\n+[ -z $1 ] && echo \"usage build-webide [version] [latest:defaults true] [test:defaults true]\" && exit 1\n+\n+echo \"building webide image with $@\"\n+VERSION=$1\n+LATEST=${2:-true}\n+TEST=${3:-true}\n+PUSH=${4:-true}\n+DOCKER_FILE=\"$(dirname \"${BASH_SOURCE[0]}\")/../web-ide/ide-server/\"\n+\n+fail() {\n+    stopDocker\n+    exit 1\n+}\n+\n+ensureDockerStarted() {\n+    local IMAGE_ID=$1\n+    local limit=10\n+    local i=0\n+    local RESULT=\"START\"\n+    while [ $i -lt $limit -a $RESULT != \"Up\" ]; do\n+        sleep 1\n+        i=$(($i+1))\n+        RESULT=$(docker container ls --filter=ancestor=$IMAGE_ID --format {{.Status}} | cut -c1-2)\n+    done\n+    if [ $i -eq $limit ]; then\n+        echo \"Could not start docker container: ls result='$RESULT'\"\n+        fail\n+    fi\n+}\n+\n+ensureWebideStarted() {\n+    echo \"ensuring endpoint is responsive\"\n+    local limit=10\n+    local i=0\n+    local RESULT=1\n+    which curl > /dev/null 2>&1 #ensure dev-env does its thing before sending request\n+    while [ $i -lt $limit -a $RESULT -ne 0 ]; do\n+        sleep 1\n+        i=$(($i+1))\n+        curl -I http://localhost:8443\n+        RESULT=$?\n+    done\n+    if [ $RESULT -ne 0 ]; then\n+        echo \"Could not start webide\"\n+        fail\n+    fi\n+}\n+\n+stopDocker() {\n+    echo \"stopping docker\"\n+    docker stop $(docker ps --format {{.ID}})\n+}\n+\n+which docker > /dev/null 2>&1\n+if [ $? -ne 0 ]; then\n+    echo \"docker not installed!\"\n+    exit 1\n+fi\n+\n+if [ \"$LATEST\" = true ]; then\n+    docker build --rm --build-arg DAML_VERSION=$VERSION -t gcr.io/da-gcp-web-ide-project/daml-webide:$VERSION -t gcr.io/da-gcp-web-ide-project/daml-webide:latest $DOCKER_FILE\n+else\n+    docker build --rm --build-arg DAML_VERSION=$VERSION  -t gcr.io/da-gcp-web-ide-project/daml-webide:$VERSION $DOCKER_FILE\n+fi\n+\n+if [ \"$TEST\" = true ]; then\n+    IMAGE_ID=$(docker image ls --filter=reference=\"gcr.io/da-gcp-web-ide-project/daml-webide:$VERSION\" --format \"{{.ID}}\")\n+    echo \"running container for image $IMAGE_ID\"\n+    docker run --rm -p 8443:8443 $IMAGE_ID > /dev/null 2>&1 &\n+    sleep 5\n+\n+    ensureDockerStarted $IMAGE_ID\n+    ensureWebideStarted\n+\n+    echo \"!!!!!!!!!!! Test passed !!!!!!!!!!!!!!!!!\"\n+    stopDocker\n+fi\n+\n+if [ \"$PUSH\" = true ]; then\n+    docker push gcr.io/da-gcp-web-ide-project/daml-webide:$VERSION"
  },
  {
    "id" : "33df321e-eb26-4a52-9cc8-6997c86ced9a",
    "prId" : 1568,
    "comments" : [
      {
        "id" : "c09be989-6079-4a22-b5df-9bab85a57879",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "It seems like you are doing a lot of manual checking for errors in this file that would, as I understand it, be done automatically by Bash if you added\r\n```suggestion\r\nset -euo pipefail\r\n```\r\nat the top. Any reason why you avoided it?",
        "createdAt" : "2019-06-11T13:18:51Z",
        "updatedAt" : "2019-06-11T18:23:19Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8fc5806c-5bbf-4afc-b4dd-368c0952d875",
        "parentId" : "c09be989-6079-4a22-b5df-9bab85a57879",
        "author" : {
          "login" : "bolek-wisniewski",
          "name" : "Bolek@DigitalAsset",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/25302921?u=0ebe382413a7e394adf0aa30927d2c94e4882778&v=4"
        },
        "body" : "neglect...thx",
        "createdAt" : "2019-06-11T14:03:31Z",
        "updatedAt" : "2019-06-11T18:23:19Z",
        "lastEditedBy" : {
          "login" : "bolek-wisniewski",
          "name" : "Bolek@DigitalAsset",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/25302921?u=0ebe382413a7e394adf0aa30927d2c94e4882778&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "33957a6d478ba3815e81a67c338bbe4c3a486f19",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,91 @@\n+#!/usr/bin/env bash\n+# Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+"
  }
]