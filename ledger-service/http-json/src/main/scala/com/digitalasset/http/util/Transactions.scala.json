[
  {
    "id" : "c555ed51-7028-4624-99ff-0e1bcab8211b",
    "prId" : 7571,
    "comments" : [
      {
        "id" : "53ef571e-c43e-45d8-92a2-12dea87a6c1f",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n    TransactionFilter(lar.Party.unsubst(parties.iterator).map(_ -> filters).toMap) // lar.Party.unwrap(party) -> filters))\r\n```",
        "createdAt" : "2020-10-05T17:43:22Z",
        "updatedAt" : "2020-10-08T11:09:12Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6489aaa0d5262d62016575dbcf3ca97582f3a81b",
    "line" : null,
    "diffHunk" : "@@ -23,12 +23,12 @@ object Transactions {\n     transaction.events.iterator.flatMap(_.event.archived.toList).to(ImmArraySeq)\n \n   def transactionFilterFor(\n-      party: lar.Party,\n+      parties: Set[lar.Party],\n       templateIds: List[TemplateId.RequiredPkg]): TransactionFilter = {\n \n     val filters =\n       if (templateIds.isEmpty) Filters.defaultInstance\n       else Filters(Some(InclusiveFilters(templateIds.map(apiIdentifier))))\n-    TransactionFilter(Map(lar.Party.unwrap(party) -> filters))\n+    TransactionFilter(Map(parties.map(party => lar.Party.unwrap(party) -> filters).toList: _*)) // lar.Party.unwrap(party) -> filters))"
  }
]