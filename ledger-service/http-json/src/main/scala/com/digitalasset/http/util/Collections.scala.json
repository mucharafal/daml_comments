[
  {
    "id" : "d38050f2-e13a-454b-a993-c8589a5e608f",
    "prId" : 4680,
    "comments" : [
      {
        "id" : "54423b7e-a57e-4a16-ab5c-3451e3723d2f",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n    import scalaz.syntax.foldable._\r\n    OneAnd(as.head, as.tail.toSet - as.head)\r\n```",
        "createdAt" : "2020-02-25T22:58:30Z",
        "updatedAt" : "2020-02-26T14:39:52Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1c893cbb4ae4c432898f1636e3e8be6fbf07f824",
    "line" : null,
    "diffHunk" : "@@ -31,4 +31,7 @@ object Collections {\n     def collect[B](f: A PartialFunction B): Option[NonEmptyList[B]] =\n       self.list.collect(f).toNel\n   }\n+\n+  def toNonEmptySet[A](as: NonEmptyList[A]): OneAnd[Set, A] =\n+    OneAnd(as.head, as.tail.foldLeft(Set.empty[A])(_ + _) - as.head)"
  },
  {
    "id" : "1461bef4-636b-4d07-aac3-33f53290ad70",
    "prId" : 4363,
    "comments" : [
      {
        "id" : "a3bbdd59-875a-42a2-95b0-0ec4ff5aa63b",
        "parentId" : null,
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "do you want to keep it?",
        "createdAt" : "2020-02-05T13:28:49Z",
        "updatedAt" : "2020-02-06T14:50:14Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0eebf6edfa656f053fe4aa62ae2b225acfed08a5",
    "line" : null,
    "diffHunk" : "@@ -25,5 +25,23 @@ object Collections {\n       }\n       (esb.result, thatb.result)\n     }\n+\n+    /*\n+    def unzipMap[B, C, Bs, Cs](f: A => (B, C))(implicit bs: CanBuildFrom[Self, B, Bs], cs: CanBuildFrom[Self, C, Cs]) = {"
  }
]