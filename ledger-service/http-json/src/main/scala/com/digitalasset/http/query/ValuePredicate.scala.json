[
  {
    "id" : "1f27691c-e2ea-4583-ad4d-cd3375f74906",
    "prId" : 6569,
    "comments" : [
      {
        "id" : "951122d2-8079-4e21-97e1-d0839246c2d1",
        "parentId" : null,
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "Why not `case tc @ iface.TypeCon(iface.TypeConName(id), _)`?",
        "createdAt" : "2020-07-02T13:51:03Z",
        "updatedAt" : "2020-07-02T13:51:03Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "04a7c57999f34bb73958b71a0030ed1b70eddf7b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +322,326 @@\n    (typ match {\n      case tc @ iface.TypeCon(iface.TypeConName(id), typArgs @ _) =>\n        for {\n          dt <- defs(id)"
  },
  {
    "id" : "a76dd5c6-4f50-46a8-95dd-f9fb3919798a",
    "prId" : 3599,
    "comments" : [
      {
        "id" : "230f23fb-c966-4808-a151-7dce4a365138",
        "parentId" : null,
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "why `Path` for argument, but `Fragment` for return value? For self-documenting purposes? `Path` means something like  `person.name`?",
        "createdAt" : "2019-12-03T18:20:38Z",
        "updatedAt" : "2019-12-04T20:59:12Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b15a0382-7c3d-4a16-a7d3-d6ed969bb463",
        "parentId" : "230f23fb-c966-4808-a151-7dce4a365138",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Yes, only for self-documenting purposes. Yes.",
        "createdAt" : "2019-12-04T18:02:31Z",
        "updatedAt" : "2019-12-04T20:59:12Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1e431d26e5ede26373af748ecaaa57c13a41b1d3",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +103,107 @@        safe_== : Option[JsValue],\n        safe_@> : Option[JsValue]) {\n      def flush_@>(path: Path): Option[Fragment] =\n        safe_@> map (jq => path ++ sql\" @> $jq::jsonb\")\n      def flush_==(path: Path): Option[Fragment] ="
  },
  {
    "id" : "977f2ac5-ef07-4c08-a52a-09d91d1d4fcd",
    "prId" : 2826,
    "comments" : [
      {
        "id" : "8bc195fc-ea66-4199-8010-047c4569a2ae",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Variants can only have a single direct field, which in turn can be of a record type with many fields. What do you think about \"inline\" the fields of the child record as a shortcut? Especially considering that the name of the variant field is not directly \"visible\" in the DAML code. What field name should users use?",
        "createdAt" : "2019-09-23T15:33:10Z",
        "updatedAt" : "2019-09-23T19:38:21Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c6091d4e-9956-4496-9a75-868250d015be",
        "parentId" : "8bc195fc-ea66-4199-8010-047c4569a2ae",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "You cannot really inline the record, you need the parent field, which is a (`DataCon`, `Record`) pair.\r\nwhere `DataCon` is data constructor, the name of the variant and `Record` is a nested record. If you inline the record, where are you going to put the data constructor string? And we need it for serialization/deserialization. We can change the ADT but this will break backward-compatibility (many modules will be affected).",
        "createdAt" : "2019-09-23T18:24:23Z",
        "updatedAt" : "2019-09-23T19:38:21Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9c45871e-944f-446c-9ef6-0819cb0800b9",
        "parentId" : "8bc195fc-ea66-4199-8010-047c4569a2ae",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "> What do you think about \"inline\" the fields of the child record as a shortcut?\r\n\r\nWith the caveat that users would have to be aware of exceptions, exceptions to those exceptions, and exceptions to those exceptions to those exceptions (I stopped thinking of examples at that point).\r\n\r\n> Especially considering that the name of the variant field is not directly \"visible\" in the DAML code. What field name should users use?\r\n\r\nThe name is visible in DAML code; it's the data constructor.",
        "createdAt" : "2019-09-23T18:58:24Z",
        "updatedAt" : "2019-09-23T19:38:21Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1afb1923-bb6b-4881-b06d-49025d0ae43c",
        "parentId" : "8bc195fc-ea66-4199-8010-047c4569a2ae",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Okay, thanks.",
        "createdAt" : "2019-09-24T07:13:56Z",
        "updatedAt" : "2019-09-24T07:13:56Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "078ec69a5240afdc0f2e7a5ee0646566cc902378",
    "line" : 162,
    "diffHunk" : "@@ -1,1 +160,164 @@        )(VariantMatch)\n\n      case _ => predicateParseError(s\"Variant must have exactly 1 field, got: $fields, id: $id\")\n    }\n"
  }
]