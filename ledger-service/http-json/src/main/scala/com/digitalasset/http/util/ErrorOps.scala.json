[
  {
    "id" : "51bb1ac6-948d-43c0-8047-b52db7a64458",
    "prId" : 4730,
    "comments" : [
      {
        "id" : "d1807be1-7355-4752-9775-bfa01af46bd6",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "You can curry this if you want, just know that it provides no inference benefit to do so.",
        "createdAt" : "2020-02-26T17:30:46Z",
        "updatedAt" : "2020-02-26T19:34:26Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "085c73511cb3083449542b25922c15fdd1a0cbe3",
    "line" : 19,
    "diffHunk" : "@@ -0,0 +1,25 @@\n+// Copyright (c) 2020 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.http.util\n+\n+import com.digitalasset.util.ExceptionOps\n+import scalaz.syntax.show._\n+import scalaz.{Show, \\/}\n+\n+object ErrorOps {\n+\n+  implicit final class `\\\\/ WSS extras throwable`[R](private val self: Throwable \\/ R)\n+      extends AnyVal {\n+    def liftErr[M](f: String => M): M \\/ R =\n+      self leftMap (e => f(ExceptionOps.getDescription(e)))\n+  }\n+\n+  implicit final class `\\\\/ WSS extras`[L, R](private val self: L \\/ R) extends AnyVal {\n+    def liftErr[M](f: String => M)(implicit L: Show[L]): M \\/ R ="
  }
]