[
  {
    "id" : "56ab2bf4-6493-4ad5-bcf6-8359556abda6",
    "prId" : 3868,
    "comments" : [
      {
        "id" : "dfae2382-a045-41a3-af1d-815daf7d9d42",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n    !(toNoPkgSet(as) exists toNoPkgSet(bs))\r\n```",
        "createdAt" : "2019-12-16T21:48:16Z",
        "updatedAt" : "2019-12-17T15:10:20Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "109f58c583b4ebff099f05a3f0b91cbf61044e24",
    "line" : null,
    "diffHunk" : "@@ -132,4 +137,13 @@ class PackageServiceTest\n   private def appendToPackageId(x: String)(a: domain.TemplateId.RequiredPkg) =\n     a.copy(packageId = a.packageId + x)\n \n+  private def noDups(\n+      as: List[domain.TemplateId.RequiredPkg],\n+      bs: List[domain.TemplateId.RequiredPkg]): Boolean =\n+    (toNoPkgSet(as) intersect toNoPkgSet(bs)).isEmpty"
  },
  {
    "id" : "d50eb370-96f5-416c-ab04-2719774b8001",
    "prId" : 3868,
    "comments" : [
      {
        "id" : "89209022-e0f2-4173-b49b-34d0a3891eba",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n    xs.map(_ copy (packageId = ())).toSet\r\n```",
        "createdAt" : "2019-12-16T21:49:32Z",
        "updatedAt" : "2019-12-17T15:10:20Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "109f58c583b4ebff099f05a3f0b91cbf61044e24",
    "line" : null,
    "diffHunk" : "@@ -132,4 +137,13 @@ class PackageServiceTest\n   private def appendToPackageId(x: String)(a: domain.TemplateId.RequiredPkg) =\n     a.copy(packageId = a.packageId + x)\n \n+  private def noDups(\n+      as: List[domain.TemplateId.RequiredPkg],\n+      bs: List[domain.TemplateId.RequiredPkg]): Boolean =\n+    (toNoPkgSet(as) intersect toNoPkgSet(bs)).isEmpty\n+\n+  private def toNoPkgSet(xs: List[domain.TemplateId.RequiredPkg]): Set[domain.TemplateId.NoPkg] =\n+    xs.toSet.map { x: domain.TemplateId.RequiredPkg =>"
  },
  {
    "id" : "3b8a2812-6f9a-440c-8f00-03ce9602f9f1",
    "prId" : 3868,
    "comments" : [
      {
        "id" : "b40cc47b-6a0e-4607-9d50-79aa9612f7ec",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Perhaps something like `noIntersections` to make it clear that we're looking at duplicates between the lists, not within them.",
        "createdAt" : "2019-12-16T21:59:41Z",
        "updatedAt" : "2019-12-17T15:10:20Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "109f58c583b4ebff099f05a3f0b91cbf61044e24",
    "line" : null,
    "diffHunk" : "@@ -132,4 +137,13 @@ class PackageServiceTest\n   private def appendToPackageId(x: String)(a: domain.TemplateId.RequiredPkg) =\n     a.copy(packageId = a.packageId + x)\n \n+  private def noDups("
  }
]