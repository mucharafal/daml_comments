[
  {
    "id" : "5e3c04d1-266d-41c7-b566-94f14b916a70",
    "prId" : 4809,
    "comments" : [
      {
        "id" : "45bcb5c2-c820-4cf3-80ea-4fdaf90dbc54",
        "parentId" : null,
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "should we move into `InsertDeleteStep` companion object? It is a valid Monoid definition, we don't use it in prod code, but I think it is a good typeclass instance to have even for just documentation purposes.",
        "createdAt" : "2020-03-04T17:54:35Z",
        "updatedAt" : "2020-03-04T17:58:07Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a73d1ddc-2910-4e6e-9045-2d1cc84b4eb0",
        "parentId" : "45bcb5c2-c820-4cf3-80ea-4fdaf90dbc54",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Maybe; I'll think about whether the instance is parametric in `D`, and move it (and the other) if so.",
        "createdAt" : "2020-03-04T17:59:47Z",
        "updatedAt" : "2020-03-04T17:59:47Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4805b21fc74b54a33855f5cb6907fc0efbf433da",
    "line" : 5,
    "diffHunk" : "@@ -59,7 +59,7 @@ object InsertDeleteStepTest {\n   implicit val `Alpha arb`: Arbitrary[Cid] = Cid subst Arbitrary(\n     Gen.alphaUpperChar map (_.toString))\n \n-  private implicit val `IDS monoid`\n+  private[util] implicit val `IDS monoid`"
  }
]