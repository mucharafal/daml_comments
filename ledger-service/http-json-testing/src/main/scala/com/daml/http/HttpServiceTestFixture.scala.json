[
  {
    "id" : "67c15633-b49d-4356-b08c-d736527e5ca6",
    "prId" : 7791,
    "comments" : [
      {
        "id" : "0c1320c6-b01c-4dd8-91e4-55291bf1dcd8",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n  def postJsonStringRequestEncoded(uri: Uri, jsonString: String, headers: List[HttpHeader])(\r\n```\r\n\r\n🤷‍♂️ ",
        "createdAt" : "2020-10-23T16:40:04Z",
        "updatedAt" : "2020-10-23T16:49:49Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "cd75096c-72bb-487d-9567-15a2d71218d5",
        "parentId" : "0c1320c6-b01c-4dd8-91e4-55291bf1dcd8",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Why `Encoded`? The `String` at the end is for the return type",
        "createdAt" : "2020-10-23T16:42:41Z",
        "updatedAt" : "2020-10-23T16:49:49Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "bcea9791-0bb4-49fc-9460-1b916237648c",
        "parentId" : "0c1320c6-b01c-4dd8-91e4-55291bf1dcd8",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Because what is returned is the encoded form, rather than the decoded form. (The type is in the type 🙂 )",
        "createdAt" : "2020-10-23T16:46:57Z",
        "updatedAt" : "2020-10-23T16:49:49Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "11f4dd89-724a-48bc-a678-86534d7aa03a",
        "parentId" : "0c1320c6-b01c-4dd8-91e4-55291bf1dcd8",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Fair enough, naming things is hard :grin: ",
        "createdAt" : "2020-10-23T16:48:10Z",
        "updatedAt" : "2020-10-23T16:49:49Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9f75e7f2a54cf771b24f8a0370277e177701e1df",
    "line" : null,
    "diffHunk" : "@@ -290,10 +290,10 @@ object HttpServiceTestFixture extends LazyLogging with Assertions with Inside {\n       }\n   }\n \n-  def postJsonStringRequest(uri: Uri, jsonString: String, headers: List[HttpHeader])(\n+  def postJsonStringRequestString(uri: Uri, jsonString: String, headers: List[HttpHeader])("
  },
  {
    "id" : "1788de98-761f-4657-ba04-f54eac989e55",
    "prId" : 7791,
    "comments" : [
      {
        "id" : "8568af75-8db9-4695-8f12-bca46a9c3cde",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Little-known Scala trick, whitespace is parentheses\r\n\r\n```suggestion\r\n    postJsonStringRequestString(uri, jsonString, headers).map {\r\n      case (status, body) => (status, body.parseJson)\r\n    }\r\n```",
        "createdAt" : "2020-10-23T16:40:42Z",
        "updatedAt" : "2020-10-23T16:49:49Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9f75e7f2a54cf771b24f8a0370277e177701e1df",
    "line" : null,
    "diffHunk" : "@@ -305,10 +305,18 @@ object HttpServiceTestFixture extends LazyLogging with Assertions with Inside {\n       )\n       .flatMap { resp =>\n         val bodyF: Future[String] = getResponseDataBytes(resp, debug = true)\n-        bodyF.map(body => (resp.status, body.parseJson))\n+        bodyF.map(body => (resp.status, body))\n       }\n   }\n \n+  def postJsonStringRequest(uri: Uri, jsonString: String, headers: List[HttpHeader])(\n+      implicit as: ActorSystem,\n+      ec: ExecutionContext,\n+      mat: Materializer): Future[(StatusCode, JsValue)] =\n+    postJsonStringRequestString(uri, jsonString, headers).map({\n+      case (status, body) => (status, body.parseJson)\n+    })"
  },
  {
    "id" : "0d9d3a2b-43e4-4557-9412-72cd7b157161",
    "prId" : 7791,
    "comments" : [
      {
        "id" : "32d9b1de-550f-43fe-b0ea-952644c8b7af",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n    postJsonStringRequestEncoded(uri, jsonString, headers).map {\r\n```",
        "createdAt" : "2020-10-23T16:48:51Z",
        "updatedAt" : "2020-10-23T16:49:49Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9f75e7f2a54cf771b24f8a0370277e177701e1df",
    "line" : null,
    "diffHunk" : "@@ -305,10 +305,18 @@ object HttpServiceTestFixture extends LazyLogging with Assertions with Inside {\n       )\n       .flatMap { resp =>\n         val bodyF: Future[String] = getResponseDataBytes(resp, debug = true)\n-        bodyF.map(body => (resp.status, body.parseJson))\n+        bodyF.map(body => (resp.status, body))\n       }\n   }\n \n+  def postJsonStringRequest(uri: Uri, jsonString: String, headers: List[HttpHeader])(\n+      implicit as: ActorSystem,\n+      ec: ExecutionContext,\n+      mat: Materializer): Future[(StatusCode, JsValue)] =\n+    postJsonStringRequestString(uri, jsonString, headers).map {"
  }
]