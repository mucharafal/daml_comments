[
  {
    "id" : "77347dd6-2f6c-4e75-8a78-f3d10ed9c590",
    "prId" : 7090,
    "comments" : [
      {
        "id" : "917e9ca6-45a7-4813-aaea-2ce6e75dbaca",
        "parentId" : null,
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "Why is this `(B => B, T) => T` but not `(Unit => B, T) => T`? Or is that in case you want to have access to the default value that is already present in the config and being overwritten? We currently don't use the passed value, we throw it away, so it can be `() => B`:\r\n```\r\n.action((x, c) => address(_ => x, c))\r\n```\r\nSee the underscore in `_ => x`.",
        "createdAt" : "2020-08-11T19:28:16Z",
        "updatedAt" : "2020-08-12T16:14:23Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ea08157c-5e99-4925-ba01-41bb1c818d23",
        "parentId" : "917e9ca6-45a7-4813-aaea-2ce6e75dbaca",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "This is explained in the Scaladoc; we do not throw it away in every case. With `Unit` there, it is impossible to compose a `Setter[T, U]` and `Setter[U, V]` to get a `Setter[T, V]`; `TlsConfigurationCli` uses this feature.\r\n\r\nThe alternative is to have two `Setter` types.",
        "createdAt" : "2020-08-11T19:35:45Z",
        "updatedAt" : "2020-08-12T16:14:23Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d9ebc658-012a-4576-a624-0a5422d84284",
        "parentId" : "917e9ca6-45a7-4813-aaea-2ce6e75dbaca",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "actually yeah, it is explained in the scaladoc... but who reads them :)",
        "createdAt" : "2020-08-11T19:41:08Z",
        "updatedAt" : "2020-08-12T16:14:23Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "de914c456c01e489580cb73d807dffb3acd3c6bc",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +10,14 @@    * one, this form permits nesting via trivial composition.\n    */\n  type Setter[T, B] = (B => B, T) => T\n}"
  }
]