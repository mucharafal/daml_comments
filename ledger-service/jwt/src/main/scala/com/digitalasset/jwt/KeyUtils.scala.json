[
  {
    "id" : "51f7a696-f6f2-45c6-9941-8776a81f68db",
    "prId" : 3953,
    "comments" : [
      {
        "id" : "bcb373dc-0429-4c5d-8502-97445d44a94d",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "This function is identical to the above `readRSAPublicKeyFromCrt`, except for the final type cast. Could the common implementation be factored out?",
        "createdAt" : "2020-01-07T11:10:16Z",
        "updatedAt" : "2020-01-08T17:32:49Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5384ba25-b89f-45a8-b824-d085f68bee2c",
        "parentId" : "bcb373dc-0429-4c5d-8502-97445d44a94d",
        "author" : {
          "login" : "dasormeter",
          "name" : "Brian Healey",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25179017?u=80e3160e2447461bd5847fe928a3e6fa9f6793fc&v=4"
        },
        "body" : "Yes i tried to do this but got stuck in handling the Try wrapped in \\/ from the calling code.  I will do a removal of some duplication as a follow-up PR, if that sounds okay?",
        "createdAt" : "2020-01-08T02:35:35Z",
        "updatedAt" : "2020-01-08T17:32:49Z",
        "lastEditedBy" : {
          "login" : "dasormeter",
          "name" : "Brian Healey",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25179017?u=80e3160e2447461bd5847fe928a3e6fa9f6793fc&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "92dae860832d93cc5bd64273b897a7c169a46095",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +47,51 @@    * These usually have the .crt file extension.\n    */\n  def readECPublicKeyFromCrt(file: File): Try[ECPublicKey] = {\n    bracket(Try(new FileInputStream(file)))(is => Try(is.close())).flatMap { istream =>\n      Try("
  },
  {
    "id" : "3c7397bd-0c16-4fb3-87e2-b13bb06abc30",
    "prId" : 3526,
    "comments" : [
      {
        "id" : "9863b51f-3bca-42b2-bb0e-ac5c606533aa",
        "parentId" : null,
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "Not sure how often this method is called. If often, we should cache the `KeyFactory` instance? `getInstnace` creates a new object every time it is called.\r\n",
        "createdAt" : "2019-11-19T21:32:47Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b8435cf9-79e9-432b-8d6c-82a66ca8f9f4",
        "parentId" : "9863b51f-3bca-42b2-bb0e-ac5c606533aa",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "It's called whenever an RSA key needs to be loaded from a file, which is usually once per application life time.",
        "createdAt" : "2019-11-20T14:57:27Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "05954a0b4045904a799d2c604ce9a266692d6a07",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +70,74 @@        // Interpret the container content as PKCS#8\n        key <- Try {\n          val kf = KeyFactory.getInstance(\"RSA\")\n          val keySpec = new PKCS8EncodedKeySpec(decoded.getBytes)\n          kf.generatePrivate(keySpec).asInstanceOf[RSAPrivateKey]"
  }
]