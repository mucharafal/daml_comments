[
  {
    "id" : "140a9fe9-bb25-43cf-8ce4-0c18d0e734c9",
    "prId" : 3526,
    "comments" : [
      {
        "id" : "04fb26d6-2699-4b39-b26b-1ba222f59663",
        "parentId" : null,
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "right here before calling `build`, I thought you need to ask it to check for expiration with `acceptExpiresAt` or something else... might be wrong. Looked at the docs more than 4 months ago.",
        "createdAt" : "2019-11-20T15:44:25Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c1563097-f790-4e87-9efd-ee06e7e433de",
        "parentId" : "04fb26d6-2699-4b39-b26b-1ba222f59663",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "As per our conversation on slack, we explicitly check expiration ourselves in gRPC requests and their streaming responses.",
        "createdAt" : "2019-11-21T09:50:52Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "05954a0b4045904a799d2c604ce9a266692d6a07",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +75,79 @@\n      val algorithm = Algorithm.RSA256(keyProvider)\n      val verifier = JWT.require(algorithm).build()\n      new JwtVerifier(verifier)\n    }.leftMap(e => Error('RSA256, e.getMessage))"
  }
]