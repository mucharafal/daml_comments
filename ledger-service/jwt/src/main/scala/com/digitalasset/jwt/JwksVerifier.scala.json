[
  {
    "id" : "b2490467-7182-4196-9a80-bf965cb87bc4",
    "prId" : 3526,
    "comments" : [
      {
        "id" : "0eb8aa51-cd2a-445e-b6a2-a10707daa799",
        "parentId" : null,
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "10 hr expiration timeout... isn't it too long? If key is revoked, we would still allow tokens signed by this key until the cache expires.",
        "createdAt" : "2019-11-19T21:16:40Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6029f65e-7e45-4aba-90f0-56e5e1eb3012",
        "parentId" : "0eb8aa51-cd2a-445e-b6a2-a10707daa799",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Good point.\r\n\r\nIf you are worried about revocation, you can generate JWT tokens with a short expiration time (and check the validity of the key pair every time you sign a token).\r\n\r\nGiven that, do we still need a short expiration time on the key cache? Note that on a cache miss, the key has to be fetched from a remote URL in a blocking call, which will significantly increase the time to process the corresponding gRPC request.",
        "createdAt" : "2019-11-20T06:58:05Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "31ee6207-f3a5-4404-a99f-d050b43d1f0d",
        "parentId" : "0eb8aa51-cd2a-445e-b6a2-a10707daa799",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "Yep, that will do it.\r\nHowever I thought you need to create a verifier with one of `acceptLeeway`, `acceptNotBefore` or `acceptExpiresAt` in order to have it checking the expiration.",
        "createdAt" : "2019-11-20T15:32:58Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e8a91501-28de-480f-8404-3ccbc27dd6f0",
        "parentId" : "0eb8aa51-cd2a-445e-b6a2-a10707daa799",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "in any case it would be nice if we can have this timeout configurable via an explicit argument on the `JwksVerifier` constructor (without default value), this way we will force our users to think about this timeout. We should not be picking it for them.",
        "createdAt" : "2019-11-20T15:36:47Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4b18c607-0c27-473d-b563-1d6ad87aaa5c",
        "parentId" : "0eb8aa51-cd2a-445e-b6a2-a10707daa799",
        "author" : {
          "login" : "da-tanabe",
          "name" : "Davin K. Tanabe",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19478290?u=c4eed11976b50dbaed21ccb17371a74a7e802541&v=4"
        },
        "body" : "Not sure keys ever really \"expire\" in a JWKS contextâ€¦it's the tokens that are signed with those keys that expire. The only compelling reason I'd see to invalidate this cache is because of concerns on unmitigated memory growth, but since you set a `maximumSize`, that's probably good enough.\r\n\r\nIt should be considered a developer error to _ever_ reuse a key for the same `kid` (and also, terribly, our keys for Auth0 seem to have never been changed so far).",
        "createdAt" : "2019-11-20T15:52:29Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : {
          "login" : "da-tanabe",
          "name" : "Davin K. Tanabe",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19478290?u=c4eed11976b50dbaed21ccb17371a74a7e802541&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "79ec55f5-247a-40f2-b044-d9ba61456c84",
        "parentId" : "0eb8aa51-cd2a-445e-b6a2-a10707daa799",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "a key can be revoked, right?",
        "createdAt" : "2019-11-20T16:08:48Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "dab93817-84a0-4583-9171-6bab7808f0d3",
        "parentId" : "0eb8aa51-cd2a-445e-b6a2-a10707daa799",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "I agree with @da-tanabe that handling revocation of access rights should be done through tokens with a short expiration time. \r\n\r\nMoving the values to the constructor sounds like a good idea though.\r\n\r\nThe expiration values for the cache entries are copied from https://github.com/auth0/jwks-rsa-java/blob/master/src/main/java/com/auth0/jwk/GuavaCachedJwkProvider.java#L28. This class is very similar to that, except that we cache `Verfiers` and not just the `JWK` data. Also, it will allow us to better log authentication related events.",
        "createdAt" : "2019-11-21T10:09:07Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "83316fb3-172b-4a9f-9b79-9e4d60c9f313",
        "parentId" : "0eb8aa51-cd2a-445e-b6a2-a10707daa799",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : ":+1: ",
        "createdAt" : "2019-11-22T15:51:07Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "05954a0b4045904a799d2c604ce9a266692d6a07",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,65 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.jwt\n+\n+import java.net.{URI, URL}\n+import java.security.interfaces.RSAPublicKey\n+import java.util.concurrent.TimeUnit\n+\n+import com.auth0.jwk.UrlJwkProvider\n+import com.digitalasset.jwt.JwtVerifier.Error\n+import com.google.common.cache.{Cache, CacheBuilder}\n+import scalaz.{-\\/, Show, \\/}\n+import scalaz.syntax.show._\n+\n+/**\n+  * A JWK verifier, where the public keys are automatically fetched from the given JWKS URL.\n+  *\n+  */\n+class JwksVerifier(url: URL) extends JwtVerifierBase {\n+  private[this] val http = new UrlJwkProvider(url)\n+\n+  private[this] val cache: Cache[String, JwtVerifier] = CacheBuilder\n+    .newBuilder()\n+    .maximumSize(10)\n+    .expireAfterWrite(10, TimeUnit.HOURS)"
  }
]