[
  {
    "id" : "2770a746-7a3b-483c-a211-7246c8ef1208",
    "prId" : 6906,
    "comments" : [
      {
        "id" : "49241863-4caf-4954-8c65-faa719ae28af",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Maybe add a comment on what is in this token or even better don’t hardcode it but instead use the jwt encoding functions?",
        "createdAt" : "2020-08-04T14:36:25Z",
        "updatedAt" : "2020-08-04T17:25:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f0ece6d2-f6d5-47c2-840c-d58030b86733",
        "parentId" : "49241863-4caf-4954-8c65-faa719ae28af",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "I looked into how to make it configurable, not obvious... Gatling uses reflection to instantiate scenario:\r\n```\r\n$ ./bin/gatling.sh --simulations-folder=/home/leos/Projects/daml/ledger-service/http-json-perf/src/main/scala/com/daml/http/perf/scenario --simulation=com.daml.http.perf.scenario.SyncQueryVariableAcs\r\n```\r\n\r\nThere is no obvious way to pass something via constructor... need to read it from an external config file.",
        "createdAt" : "2020-08-04T15:15:18Z",
        "updatedAt" : "2020-08-04T17:25:10Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "122cc949-8aec-4aac-9aea-4fe03ec1d690",
        "parentId" : "49241863-4caf-4954-8c65-faa719ae28af",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Sorry should have made that clearer. I don’t mind hardcoding. I just would like to hardcode the decoded JWT ideally so it’s easy to see which claims it has without having to decode it manually. I’m also fine just adding a a comment along the lines of `actAs: [\"Alice\"]`",
        "createdAt" : "2020-08-04T15:20:02Z",
        "updatedAt" : "2020-08-04T17:25:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "78a1d16ef7894971636a29990e45211adc9ff9cb",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,46 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+package com.daml.http.perf.scenario\n+\n+import io.gatling.core.Predef._\n+import io.gatling.http.Predef._\n+\n+@SuppressWarnings(Array(\"org.wartremover.warts.NonUnitStatements\"))\n+class CreateAndExerciseCommand extends Simulation {\n+\n+  private val httpProtocol = http.disableWarmUp\n+    .baseUrl(\"http://localhost:7575\")\n+    .inferHtmlResources()\n+    .acceptHeader(\"*/*\")\n+    .acceptEncodingHeader(\"gzip, deflate\")\n+    .authorizationHeader(\n+      \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwczovL2RhbWwuY29tL2xlZGdlci1hcGkiOnsibGVkZ2VySWQiOiJNeUxlZGdlciIsImFwcGxpY2F0aW9uSWQiOiJmb29iYXIiLCJhY3RBcyI6WyJBbGljZSJdfX0.VdDI96mw5hrfM5ZNxLyetSVwcD7XtLT4dIdHIOa9lcU\")"
  }
]