[
  {
    "id" : "f91a0448-5ee7-41e6-a10c-ffb287013f6e",
    "prId" : 6906,
    "comments" : [
      {
        "id" : "76e101dd-4685-487d-9d59-af763fb55a1e",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "And here and for all other tokens.",
        "createdAt" : "2020-08-04T14:39:20Z",
        "updatedAt" : "2020-08-04T17:25:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "78a1d16ef7894971636a29990e45211adc9ff9cb",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,63 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+package com.daml.http.perf.scenario\n+\n+import io.gatling.core.Predef._\n+import io.gatling.http.Predef._\n+\n+@SuppressWarnings(Array(\"org.wartremover.warts.NonUnitStatements\"))\n+class SyncQueryConstantAcs extends Simulation {\n+\n+  private val rng = new scala.util.Random(123456789)\n+\n+  private def randomAmount(): Int = {\n+    rng.nextInt(10) + 5 // [5, 15)\n+  }\n+\n+  private val httpProtocol = http.disableWarmUp\n+    .baseUrl(\"http://localhost:7575\")\n+    .inferHtmlResources()\n+    .acceptHeader(\"*/*\")\n+    .acceptEncodingHeader(\"gzip, deflate\")\n+    .authorizationHeader(\n+      \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwczovL2RhbWwuY29tL2xlZGdlci1hcGkiOnsibGVkZ2VySWQiOiJNeUxlZGdlciIsImFwcGxpY2F0aW9uSWQiOiJmb29iYXIiLCJhY3RBcyI6WyJBbGljZSJdfX0.VdDI96mw5hrfM5ZNxLyetSVwcD7XtLT4dIdHIOa9lcU\")"
  },
  {
    "id" : "319c2afe-ba50-4be6-a082-b6796ee2af4f",
    "prId" : 6906,
    "comments" : [
      {
        "id" : "44f9446f-cd7a-4261-997e-00b841d1e7e6",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Are you intentionally including queries in this PR? Totally fine with me, just didnâ€™t expect it since your PR title is only about command submissions.",
        "createdAt" : "2020-08-04T14:41:07Z",
        "updatedAt" : "2020-08-04T17:25:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9623f5f0-8fd4-45be-97ed-88366c93ad82",
        "parentId" : "44f9446f-cd7a-4261-997e-00b841d1e7e6",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "yep, intentionally.",
        "createdAt" : "2020-08-04T15:12:36Z",
        "updatedAt" : "2020-08-04T17:25:10Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "78a1d16ef7894971636a29990e45211adc9ff9cb",
    "line" : 31,
    "diffHunk" : "@@ -0,0 +1,63 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+package com.daml.http.perf.scenario\n+\n+import io.gatling.core.Predef._\n+import io.gatling.http.Predef._\n+\n+@SuppressWarnings(Array(\"org.wartremover.warts.NonUnitStatements\"))\n+class SyncQueryConstantAcs extends Simulation {\n+\n+  private val rng = new scala.util.Random(123456789)\n+\n+  private def randomAmount(): Int = {\n+    rng.nextInt(10) + 5 // [5, 15)\n+  }\n+\n+  private val httpProtocol = http.disableWarmUp\n+    .baseUrl(\"http://localhost:7575\")\n+    .inferHtmlResources()\n+    .acceptHeader(\"*/*\")\n+    .acceptEncodingHeader(\"gzip, deflate\")\n+    .authorizationHeader(\n+      \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwczovL2RhbWwuY29tL2xlZGdlci1hcGkiOnsibGVkZ2VySWQiOiJNeUxlZGdlciIsImFwcGxpY2F0aW9uSWQiOiJmb29iYXIiLCJhY3RBcyI6WyJBbGljZSJdfX0.VdDI96mw5hrfM5ZNxLyetSVwcD7XtLT4dIdHIOa9lcU\")\n+    .contentTypeHeader(\"application/json\")\n+\n+  private val createRequest =\n+    http(\"CreateCommand\")\n+      .post(\"/v1/create\")\n+      .body(StringBody(\"\"\"{\n+  \"templateId\": \"Iou:Iou\",\n+  \"payload\": {\n+    \"issuer\": \"Alice\",\n+    \"owner\": \"Alice\",\n+    \"currency\": \"USD\",\n+    \"amount\": \"${amount}\",\n+    \"observers\": []\n+  }\n+}\"\"\"))\n+\n+  private val queryRequest ="
  }
]