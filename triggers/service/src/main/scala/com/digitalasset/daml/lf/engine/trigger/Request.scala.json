[
  {
    "id" : "8ef1097b-43a5-4668-ae1a-8a20817c1808",
    "prId" : 6528,
    "comments" : [
      {
        "id" : "a427dc13-1d07-41e6-9491-4cc8000bbcbf",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I could have sworn that there was a warning for this that you could enable and enforce but now I cannot find it anymore :thinking: ",
        "createdAt" : "2020-06-29T17:09:07Z",
        "updatedAt" : "2020-06-29T17:09:25Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1ef2e345-1649-4431-940f-caa6c5193a8c",
        "parentId" : "a427dc13-1d07-41e6-9491-4cc8000bbcbf",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Yeah, not sure why but IntelliJ's scalafmt highlights more things than scalafmt in our dev env enforces.",
        "createdAt" : "2020-06-29T17:25:02Z",
        "updatedAt" : "2020-06-29T17:25:02Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ea7a0bc7-c6ff-4729-8884-44d6c312d175",
        "parentId" : "a427dc13-1d07-41e6-9491-4cc8000bbcbf",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "scalafmt is purely a formatter. IntelliJ can run scalafmt, and we configure it to do so. _Unrelatedly_, IntelliJ has a ton of (mostly useful, sometimes broken) static analysis (which it calls \"code inspections\") that it can perform. This includes one that tells you to add a return type to any non-private function definition, which is on by default.\r\n\r\nWe could, in theory, [run IntelliJ code inspections from the command line](https://www.jetbrains.com/help/idea/command-line-code-inspector.html), and therefore in CI, but I've never tried it and I'm pretty sure @S11001001's head would explode if I did.",
        "createdAt" : "2020-06-30T09:31:00Z",
        "updatedAt" : "2020-06-30T09:31:01Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2c52a67e-1031-4f46-8f31-ba876b9fe0ae",
        "parentId" : "a427dc13-1d07-41e6-9491-4cc8000bbcbf",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "And this is a case where requiring the annotation is silly. It's implied by `read` being an override; `override`, if used, even imposes an expected type context on the body. Moreover, if this was an implicit val, the \"public\" signature would actually be private.",
        "createdAt" : "2020-06-30T15:38:43Z",
        "updatedAt" : "2020-06-30T15:38:44Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "dfb0b3b9f1e2d33f2c506284b31907dac1277a5e",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +10,14 @@object Request {\n  implicit object IdentifierFormat extends JsonFormat[Identifier] {\n    def read(value: JsValue): Identifier = value match {\n      case JsString(s) =>\n        val components = s.split(\":\")"
  },
  {
    "id" : "89340d85-4600-4610-99e3-0a7a0b277575",
    "prId" : 5808,
    "comments" : [
      {
        "id" : "dd8b1fb6-5a02-4172-9896-958a33c72c88",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "iirc since I wrote this we added a `toString` method for `Identifier` so you might be able to simply this now.",
        "createdAt" : "2020-05-01T14:14:54Z",
        "updatedAt" : "2020-05-01T14:20:43Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "90f8df6c2c2e02c0fc86275c0a6f6fc0d058a9e6",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@      case _ => deserializationError(\"Expected trigger identifier of the form pkgid:mod:name\")\n    }\n    def write(id: Identifier) = JsString(s\"${id.packageId}:${id.qualifiedName}\")\n  }\n"
  },
  {
    "id" : "72fa09a0-da17-4f71-a564-553582ef0a4e",
    "prId" : 5808,
    "comments" : [
      {
        "id" : "9ad811ee-512c-4149-b1ff-13b0999c425e",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Similar question as on the other PR (but no need to address now): We should be using the `Party` newtype.",
        "createdAt" : "2020-05-01T14:20:38Z",
        "updatedAt" : "2020-05-01T14:20:43Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a5f68eee-913a-40f7-9661-8dd56a922f37",
        "parentId" : "9ad811ee-512c-4149-b1ff-13b0999c425e",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Implemented this but it's a bit bigger than I expected, so will raise a separate PR for it",
        "createdAt" : "2020-05-01T16:59:48Z",
        "updatedAt" : "2020-05-01T16:59:49Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "90f8df6c2c2e02c0fc86275c0a6f6fc0d058a9e6",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +32,36 @@  }\n\n  case class StartParams(identifier: Identifier, party: String)\n  implicit val startParamsFormat = jsonFormat2(StartParams)\n"
  }
]