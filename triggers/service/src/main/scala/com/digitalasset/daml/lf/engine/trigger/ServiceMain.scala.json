[
  {
    "id" : "347a8125-c55c-4dbd-8190-c92dcc8f52cd",
    "prId" : 6491,
    "comments" : [
      {
        "id" : "1ebb5334-82ed-419b-a65b-2d9a4dbca5aa",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I'm all for making this stuff top-level if it makes your life easier, but perhaps put it in _Message.scala_.",
        "createdAt" : "2020-06-25T07:54:07Z",
        "updatedAt" : "2020-06-25T07:57:31Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "69b1addc-0cf3-4c31-a156-da76d1745fa2",
        "parentId" : "1ebb5334-82ed-419b-a65b-2d9a4dbca5aa",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Yeah, will do in a follow-up.",
        "createdAt" : "2020-06-25T14:15:21Z",
        "updatedAt" : "2020-06-25T14:15:21Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c3311337d595f77f26a888e3fbed8133a8761a27",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +87,91 @@    runningTrigger: RunningTrigger,\n    cause: String\n) extends Message\n\nclass Server("
  },
  {
    "id" : "fe476846-a1c6-4c31-b127-8df2f8614c14",
    "prId" : 6491,
    "comments" : [
      {
        "id" : "e42d90e5-65c4-4b84-a9de-02842ae13dd2",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Likewise, these and other surrounding case classes can be moved to the package object in _package.scala_.",
        "createdAt" : "2020-06-25T07:54:32Z",
        "updatedAt" : "2020-06-25T07:57:31Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c3311337d595f77f26a888e3fbed8133a8761a27",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +62,66 @@\nfinal case class SecretKey(value: String)\nfinal case class UserCredentials(token: EncryptedToken)\n\nfinal case class RunningTrigger("
  },
  {
    "id" : "a8367631-5ae5-4d4e-a61d-6f82146170d9",
    "prId" : 6491,
    "comments" : [
      {
        "id" : "fc45914d-c11e-4ebf-9b82-99fabef2fb8f",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Did any of the methods here change or did you just shuffle them around? Unfortunately hard to spot in the diff.",
        "createdAt" : "2020-06-25T08:15:03Z",
        "updatedAt" : "2020-06-25T08:16:33Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b4e4f56d-8546-4b42-ad9d-62d66a6aa955",
        "parentId" : "fc45914d-c11e-4ebf-9b82-99fabef2fb8f",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Just shuffled!",
        "createdAt" : "2020-06-25T14:16:11Z",
        "updatedAt" : "2020-06-25T14:16:11Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c3311337d595f77f26a888e3fbed8133a8761a27",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +142,146 @@      .asInstanceOf[Option[ActorRef[TriggerRunner.Message]]]\n\n  private def startTrigger(\n      credentials: UserCredentials,\n      triggerName: Identifier): Either[String, JsValue] = {"
  },
  {
    "id" : "892076d8-9414-4afb-927e-1bfc13ad05be",
    "prId" : 6309,
    "comments" : [
      {
        "id" : "e1a92b4b-8a77-4245-b4b7-c5524aee2f59",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "I would give slightly different warnings in each of the cases below, rather than saying \"if you haven't used 'no-secret-key'\", since you have that information on hand.",
        "createdAt" : "2020-06-11T22:15:51Z",
        "updatedAt" : "2020-06-11T22:19:34Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "df38038340aa1699372867c97fee63f61f3bd093",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +201,205 @@        case None => {\n          ctx.log.warn(\n            \"The environment variable 'TRIGGER_SERVICE_SECRET_KEY' is not defined. It is highly recommended that a non-empty value for this variable be set. If the service startup parameters do not include the '--no-secret-key' option, the service will now terminate.\")\n          if (noSecretKey) {\n            \"secret key\" // Provided for testing."
  },
  {
    "id" : "8fced024-71fa-4d60-aa51-b99396f07dcc",
    "prId" : 6296,
    "comments" : [
      {
        "id" : "1fb33e27-32e4-4ab6-ad23-b7476f6157d9",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "This gives an Unauthorized error when the party string fails validation as well. Seems reasonable but pointing out in case it's unintended",
        "createdAt" : "2020-06-10T20:02:50Z",
        "updatedAt" : "2020-06-10T20:58:15Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "55b6854d7b7c96e69bc1c9cd22b4ed7f8dffb80f",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +373,377 @@                  .findCredentials(key, request)\n                  .fold(\n                    message => complete(errorResponse(StatusCodes.Unauthorized, message)),\n                    credentials =>\n                      stopTrigger(uuid, credentials) match {"
  },
  {
    "id" : "1335b11d-6210-4391-8fff-a64d0d2dc7f5",
    "prId" : 6296,
    "comments" : [
      {
        "id" : "5506f97d-a924-4f69-abef-f3fbd288d4ed",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "We could abstract out this pattern in a `withAuthorization` function in future. Also, do we not need this for upload_dar requests as well? (though the format is a bit funky there)",
        "createdAt" : "2020-06-10T20:06:58Z",
        "updatedAt" : "2020-06-10T20:58:15Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "55b6854d7b7c96e69bc1c9cd22b4ed7f8dffb80f",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +348,352 @@                  .findCredentials(key, request)\n                  .fold(\n                    message => complete(errorResponse(StatusCodes.Unauthorized, message)),\n                    credentials =>\n                      listTriggers(credentials) match {"
  },
  {
    "id" : "079457af-1103-4e43-b2fc-5debd345ee8e",
    "prId" : 6296,
    "comments" : [
      {
        "id" : "2135c4e4-4eb1-436d-91fc-1418e4ceee1b",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "At this point do we need this type? Seems like there is now only `EncryptedToken`, `DecryptedToken` and the `(Party, String)` pair that we care about. This is not doing any harm atm though.",
        "createdAt" : "2020-06-10T20:10:33Z",
        "updatedAt" : "2020-06-10T20:58:15Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "55b6854d7b7c96e69bc1c9cd22b4ed7f8dffb80f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +58,62 @@)\n\nfinal case class UserCredentials(token: EncryptedToken)\n\nfinal case class RunningTrigger("
  },
  {
    "id" : "9d8e8aac-c281-4758-b3db-7dbaee71c111",
    "prId" : 6279,
    "comments" : [
      {
        "id" : "e6e931e6-3dc9-4033-b868-0669b7521a5a",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Just to confirm, this will later map from some `EncryptedToken` type right?",
        "createdAt" : "2020-06-10T13:27:51Z",
        "updatedAt" : "2020-06-10T13:34:38Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bdc4e09a-2867-40d1-b823-eb0c9afe50b3",
        "parentId" : "e6e931e6-3dc9-4033-b868-0669b7521a5a",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "yes\r\n",
        "createdAt" : "2020-06-10T13:37:11Z",
        "updatedAt" : "2020-06-10T13:37:11Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b9464687f8f030036b33ef328663eeb5ef13160c",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +73,77 @@\n  private var triggers: Map[UUID, RunningTrigger] = Map.empty;\n  private var triggersByParty: Map[UserCredentials, Set[UUID]] = Map.empty;\n  private var triggerLog: Map[UUID, Vector[(LocalDateTime, String)]] = Map.empty;\n"
  },
  {
    "id" : "4faf8e5e-4684-485c-8ca2-d8cf9d762588",
    "prId" : 6219,
    "comments" : [
      {
        "id" : "a6988485-bc34-40fd-8505-c02c4a3a3052",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I don’t think you need the `.right` here. `Either` has been right-biased for a while.",
        "createdAt" : "2020-06-04T06:47:57Z",
        "updatedAt" : "2020-06-04T06:48:05Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "899cdc55868a70a5815562628785f3f7b413188b",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +200,204 @@    def startTrigger(token: (Jwt, JwtPayload), triggerName: Identifier): Either[String, JsValue] = {\n      for {\n        trigger <- Trigger.fromIdentifier(server.compiledPackages, triggerName).right\n        jwt = token._1\n        jwtPayload = token._2"
  },
  {
    "id" : "4a4b86a2-7919-4e35-8aac-b318838919e4",
    "prId" : 6180,
    "comments" : [
      {
        "id" : "8b820e1f-4820-45e7-9975-0fff23b7768f",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Since we're returning the whole history here, would it make more sense to call this endpoint `history` or `log`?",
        "createdAt" : "2020-06-01T19:14:38Z",
        "updatedAt" : "2020-06-01T20:06:10Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c620b464-b3d8-4df7-b722-dffb5d5e465e",
        "parentId" : "8b820e1f-4820-45e7-9975-0fff23b7768f",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "I have thought about that. Don't want to get analysis paralysis on something so trivial. I think status is the right word (even acknowledging that the entire history is returned).",
        "createdAt" : "2020-06-01T19:46:03Z",
        "updatedAt" : "2020-06-01T20:06:10Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "83521744518854aaa6eb08638a03c747bd6bb707",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +334,338 @@          },\n          // Produce logs for the given trigger.\n          pathPrefix(\"v1\" / \"status\" / JavaUUID) { uuid =>\n            complete(successResponse(JsObject((\"logs\", server.getTriggerStatus(uuid).toJson))))\n          }"
  },
  {
    "id" : "579f50c9-6824-4bfa-859e-e4536652ab11",
    "prId" : 6180,
    "comments" : [
      {
        "id" : "1b6b9a23-295a-47e7-bd4e-553ca8706745",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I would recommend to store at least `(LocalDateTime, String)` and render it as a string when you need to.",
        "createdAt" : "2020-06-02T06:39:48Z",
        "updatedAt" : "2020-06-02T07:02:29Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "aba8b97b-bfa1-4044-8367-f463ef842db3",
        "parentId" : "1b6b9a23-295a-47e7-bd4e-553ca8706745",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Yes, @rohanjr advocated for this as well. I'll take care of it.",
        "createdAt" : "2020-06-02T11:13:01Z",
        "updatedAt" : "2020-06-02T11:13:01Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "83521744518854aaa6eb08638a03c747bd6bb707",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +73,77 @@  private var triggers: Map[UUID, RunningTrigger] = Map.empty;\n  private var triggersByToken: Map[Jwt, Set[UUID]] = Map.empty;\n  private var triggerLog: Map[UUID, Vector[(String, String)]] = Map.empty;\n\n  val compiledPackages: MutableCompiledPackages = ConcurrentCompiledPackages()"
  },
  {
    "id" : "b8fbca3c-540b-41bf-a87b-e8bd886bc76f",
    "prId" : 6180,
    "comments" : [
      {
        "id" : "714c0cf6-46ec-4dfa-8ccf-7165a1b94969",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Please don’t invent your own date/time format. Use RFC 3339 (or ISO 8601 they are basically identical).",
        "createdAt" : "2020-06-02T06:42:27Z",
        "updatedAt" : "2020-06-02T07:02:29Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1d4520a5-6abd-4570-884b-f02c1db12caa",
        "parentId" : "714c0cf6-46ec-4dfa-8ccf-7165a1b94969",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Dang SO :) Ok.",
        "createdAt" : "2020-06-02T11:13:38Z",
        "updatedAt" : "2020-06-02T11:13:38Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "83521744518854aaa6eb08638a03c747bd6bb707",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +118,122 @@\n  private def timeStamp(): String = {\n    DateTimeFormatter.ofPattern(\"yyyy-MM-dd_HH:mmss\").format(LocalDateTime.now)\n  }\n"
  },
  {
    "id" : "eede3751-9cae-4023-bb82-5fe33469625f",
    "prId" : 6180,
    "comments" : [
      {
        "id" : "2eee794b-905d-48d6-8cb8-fb1b8631982a",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "It looks like your logs are a memory leak. You only ever write to them but never delete anything. This is probably not a huge issue atm but we should move them to postgres to avoid that.",
        "createdAt" : "2020-06-02T07:01:48Z",
        "updatedAt" : "2020-06-02T07:02:29Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bcfff4c5-57de-4766-a606-2608fa0bef67",
        "parentId" : "2eee794b-905d-48d6-8cb8-fb1b8631982a",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Yes, there is no attempt to control the memory here at this time. I hadn't considered having this data written to the DB - not against it.",
        "createdAt" : "2020-06-02T11:16:19Z",
        "updatedAt" : "2020-06-02T11:16:19Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a20a7323-d9f3-4e32-853a-65f5ecf7b745",
        "parentId" : "2eee794b-905d-48d6-8cb8-fb1b8631982a",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "@rohanjr Thoughts?",
        "createdAt" : "2020-06-02T15:15:48Z",
        "updatedAt" : "2020-06-02T15:15:48Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ca6ee841-6ee1-49c8-8249-c123820c8c64",
        "parentId" : "2eee794b-905d-48d6-8cb8-fb1b8631982a",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Makes sense (if the user supplies a db connection)",
        "createdAt" : "2020-06-02T15:21:14Z",
        "updatedAt" : "2020-06-02T15:21:14Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "83521744518854aaa6eb08638a03c747bd6bb707",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +397,401 @@            // The trigger has failed. Remove it from the running\n            // triggers tables.\n            server.logTriggerStatus(runningTrigger, \"stopped: runtime failure\")\n            server.removeRunningTrigger(runningTrigger)\n            // Don't send any messages to the runner. Its supervision"
  },
  {
    "id" : "9eb3a930-11f2-45a8-8819-c90748fa5283",
    "prId" : 6153,
    "comments" : [
      {
        "id" : "092662b4-17cf-4b5b-8dea-80768a39191d",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "If you don’t want to go down the route of using sqlite with an in-memory backend so you always have a DB, I think it would be useful to have an abstraction layer somewhere. Inlining this every time we write to the DB is going to become a mess and it’s super easy to have the in-memory mode diverge from the DB-backed mode.",
        "createdAt" : "2020-06-02T07:16:09Z",
        "updatedAt" : "2020-06-02T16:34:36Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6afd033d-1460-4a87-9d8e-f747e48cd170",
        "parentId" : "092662b4-17cf-4b5b-8dea-80768a39191d",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Yes, I'll refactor the in-memory logic into the TriggerDao in a future PR (either next or after `stop` is implemented).",
        "createdAt" : "2020-06-02T15:56:33Z",
        "updatedAt" : "2020-06-02T16:34:36Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2e27d8a43e27c8fcdaccc26c506fee4f3359edba",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +110,114 @@\n  private def addRunningTrigger(t: RunningTrigger): Either[String, Unit] = {\n    triggerDao match {\n      case None =>\n        triggers = triggers + (t.triggerInstance -> t)"
  },
  {
    "id" : "d29cad81-4bbd-4479-8d87-d11a7f814938",
    "prId" : 6153,
    "comments" : [
      {
        "id" : "82951b78-b702-4571-b2d1-96a62a75d0a4",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I guess you are leaving this for a separate PR?",
        "createdAt" : "2020-06-02T07:22:12Z",
        "updatedAt" : "2020-06-02T16:34:36Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "20851590-28bf-426e-9911-7009adf25d25",
        "parentId" : "82951b78-b702-4571-b2d1-96a62a75d0a4",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Yeah.",
        "createdAt" : "2020-06-02T15:56:50Z",
        "updatedAt" : "2020-06-02T16:34:36Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2e27d8a43e27c8fcdaccc26c506fee4f3359edba",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +126,130 @@  private def removeRunningTrigger(t: RunningTrigger): Unit = {\n    triggers = triggers - t.triggerInstance\n    triggersByToken = triggersByToken + (t.jwt -> (triggersByToken(t.jwt) - t.triggerInstance))\n  }\n"
  },
  {
    "id" : "7637abe8-47c5-42f0-a5a0-fd38d50a7809",
    "prId" : 6134,
    "comments" : [
      {
        "id" : "bd3c303f-4cef-4c40-9889-a647023db075",
        "parentId" : null,
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "I think it's time to have a parameter pack here. The list of parameters just keeps growing. Maybe not in this PR but if it were to be it would be very much in keeping with the rest.",
        "createdAt" : "2020-05-28T13:28:14Z",
        "updatedAt" : "2020-05-28T17:27:58Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5e0206ac92946e702b287c50cac840706caa3d8e",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +147,151 @@      failureRetryTimeRange: Duration,\n      dar: Option[Dar[(PackageId, Package)]],\n      jdbcConfig: Option[JdbcConfig],\n  ): Behavior[Message] = Behaviors.setup { ctx =>\n    val server = new Server(dar, jdbcConfig)"
  },
  {
    "id" : "f8029827-a2f2-4786-aec2-1a6eed5262b4",
    "prId" : 6134,
    "comments" : [
      {
        "id" : "9581013b-290f-4cd5-85ba-8527b5b54b27",
        "parentId" : null,
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "There's quite a lot of options going in here now. There are roughly 3 or 4 parameter groups. It would be nice in the fullness of time to have a little more structure.",
        "createdAt" : "2020-05-28T13:29:58Z",
        "updatedAt" : "2020-05-28T17:27:58Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5e0206ac92946e702b287c50cac840706caa3d8e",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +173,177 @@      val ref = ctx.spawn(\n        TriggerRunner(\n          new TriggerRunner.Config(\n            ctx.self,\n            triggerInstance,"
  },
  {
    "id" : "7679adef-e009-4aeb-8e90-f2292d88688d",
    "prId" : 6134,
    "comments" : [
      {
        "id" : "351b2255-ee1e-45a3-a8f0-afb053b9a73d",
        "parentId" : null,
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "As mentioned above, a parameter pack here would be tidy.",
        "createdAt" : "2020-05-28T13:34:12Z",
        "updatedAt" : "2020-05-28T17:27:58Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5e0206ac92946e702b287c50cac840706caa3d8e",
    "line" : 309,
    "diffHunk" : "@@ -1,1 +500,504 @@              config.failureRetryTimeRange,\n              dar,\n              config.jdbcConfig\n            ),\n            \"TriggerService\""
  },
  {
    "id" : "982bb4bd-4949-44ff-9d04-750e82b11902",
    "prId" : 6079,
    "comments" : [
      {
        "id" : "b69609d4-10a7-4acc-9bb1-b99ea7af2692",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Do you have a plan for how to do better than this?",
        "createdAt" : "2020-05-25T14:23:03Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "315a1ffb-3b96-4d0f-9fba-2c5b6ed1fff7",
        "parentId" : "b69609d4-10a7-4acc-9bb1-b99ea7af2692",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "As a matter of a fact I think I do. My idea is that if presented with a token that doesn't match the start token, if the old and new token agree in party, the old token has expired and (in the absence of a better API) we can use the new token to get an ACS (or establish the conditions that starting a trigger would entail), we might conclude we are indeed looking at a valid stop. ",
        "createdAt" : "2020-05-25T14:41:45Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a7adff45-7cd0-448d-aa3a-fa95ac4b0c9b",
        "parentId" : "b69609d4-10a7-4acc-9bb1-b99ea7af2692",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "This idea has the nice property that it does not require the user presenting a token that has expired. Anyway, what do you think of that?",
        "createdAt" : "2020-05-25T14:45:34Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "cbdb87590a19aa1bb81b8b704105db5a774d8efd",
    "line" : 205,
    "diffHunk" : "@@ -1,1 +200,204 @@      //TODO(SF, 2020-05-20): At least check that the provided token\n      //is the same as the one used to start the trigger and fail with\n      //'Unauthorized' if not (expect we'll be able to do better than\n      //this).\n      val actorWithToken = server.actorWithToken(uuid)"
  },
  {
    "id" : "b79496c2-b7fe-4030-9d3b-f5019f29180f",
    "prId" : 6079,
    "comments" : [
      {
        "id" : "bf120427-5a9d-4299-895b-a8856ff4cabe",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Is there a timeout on the time between starting and started? If not, should there be one? (not in this PR)",
        "createdAt" : "2020-05-25T14:24:24Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9c2e12ef-d500-4efc-abc1-10798c179cce",
        "parentId" : "bf120427-5a9d-4299-895b-a8856ff4cabe",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "There currently isn't. Not a bad idea.",
        "createdAt" : "2020-05-25T14:42:38Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "cbdb87590a19aa1bb81b8b704105db5a774d8efd",
    "line" : 267,
    "diffHunk" : "@@ -1,1 +354,358 @@      Behaviors\n        .receiveMessage[Message] {\n          case TriggerStarting(uuid, jwt, runner) =>\n            // Nothing to do at this time.\n            Behaviors.same"
  },
  {
    "id" : "86431d7c-e028-4dd8-bdba-d2f0b4e83c5d",
    "prId" : 6079,
    "comments" : [
      {
        "id" : "2cd22d72-6077-4af5-97bb-99f3177e19b6",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "```suggestion\r\n    // The running server.\r\n```",
        "createdAt" : "2020-05-26T16:00:12Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "cbdb87590a19aa1bb81b8b704105db5a774d8efd",
    "line" : 261,
    "diffHunk" : "@@ -1,1 +350,354 @@    }\n\n    // The server running server.\n    def running(binding: ServerBinding): Behavior[Message] =\n      Behaviors"
  },
  {
    "id" : "0bc172d8-2631-470c-9c9f-80121ef0e242",
    "prId" : 6055,
    "comments" : [
      {
        "id" : "82950ed6-d318-4e51-8e1d-4558387ffad1",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I don’t think the abbreviation helps here.",
        "createdAt" : "2020-05-20T17:55:06Z",
        "updatedAt" : "2020-05-20T19:05:20Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "62f0766f-fc03-410e-a271-376af0c61d73",
        "parentId" : "82950ed6-d318-4e51-8e1d-4558387ffad1",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "I could call this `Token` or `TokenManagement`. In the json-api, I think they use `EndpointsCompaion` for this code. Let's go with `TokenManagement` for now?",
        "createdAt" : "2020-05-20T18:12:34Z",
        "updatedAt" : "2020-05-20T19:05:20Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "34d1295521392ecc8352dedf4c334bbf942ec958",
    "line" : 266,
    "diffHunk" : "@@ -1,1 +425,429 @@}\n\nobject TokenMgt {\n\n  case class Unauthorized(message: String) extends Error(message)"
  },
  {
    "id" : "437cb561-a417-4e5f-b3d7-e0c5279e76ad",
    "prId" : 6055,
    "comments" : [
      {
        "id" : "1b5b26e4-0030-4054-91d5-66748163e0a2",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "You import this here but then you use `TokenMgt.*` most of the time. Can we just kill the import and use the object-qualified version everywhere?",
        "createdAt" : "2020-05-20T17:56:55Z",
        "updatedAt" : "2020-05-20T19:05:20Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e43bde1b-8a32-4e30-935e-df0bd14a0252",
        "parentId" : "1b5b26e4-0030-4054-91d5-66748163e0a2",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Yes. I mean in a refactoring - I'll get this done today - to move that code out into a dedicated module. I'll sort this at the same time.",
        "createdAt" : "2020-05-20T18:11:36Z",
        "updatedAt" : "2020-05-20T19:05:20Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "34d1295521392ecc8352dedf4c334bbf942ec958",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +80,84 @@  final case object Stop extends Message\n\n  import TokenMgt._\n\n  private def addDar(compiledPackages: MutableCompiledPackages, dar: Dar[(PackageId, Package)]) = {"
  },
  {
    "id" : "5c8edac6-7254-488e-ae29-1651dc7b482d",
    "prId" : 6055,
    "comments" : [
      {
        "id" : "41402217-b35a-4cd7-9c3d-06d4f66f35be",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Note that the triggers per party will almost certainly not be correct since I can create the actor without having a valid token.",
        "createdAt" : "2020-05-20T17:57:34Z",
        "updatedAt" : "2020-05-20T19:05:20Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b328324c-0971-4141-99a6-0d018aadd989",
        "parentId" : "41402217-b35a-4cd7-9c3d-06d4f66f35be",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Indeed. Fully agree that only successfully started triggers should get added to any running triggers table. Will work on it.",
        "createdAt" : "2020-05-20T18:10:56Z",
        "updatedAt" : "2020-05-20T19:05:20Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "34d1295521392ecc8352dedf4c334bbf942ec958",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +105,109 @@\n  private var triggers: Map[UUID, TriggerRunnerWithParty] = Map.empty\n  private var triggersByParty: Map[Party, Set[UUID]] = Map.empty\n  private val compiledPackages: MutableCompiledPackages = ConcurrentCompiledPackages()\n"
  },
  {
    "id" : "0baa1a98-7c4c-490b-8b76-a9a67c43b0b5",
    "prId" : 6055,
    "comments" : [
      {
        "id" : "41ae5666-7da6-4d29-8edd-69067fafa1b8",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This will also need to validate the token and by my comment above, you probably want to make sure that this only returns triggers that have been started with a valid token.",
        "createdAt" : "2020-05-20T17:59:34Z",
        "updatedAt" : "2020-05-20T19:05:20Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c5da673f-b9cd-42fe-8792-2032b4374e0a",
        "parentId" : "41ae5666-7da6-4d29-8edd-69067fafa1b8",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Yes.",
        "createdAt" : "2020-05-20T18:10:27Z",
        "updatedAt" : "2020-05-20T19:05:20Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "34d1295521392ecc8352dedf4c334bbf942ec958",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +155,159 @@  }\n\n  private def listTriggers(token: (Jwt, JwtPayload))(\n      implicit esf: ExecutionSequencerFactory,\n      mat: Materializer): JsValue = {"
  },
  {
    "id" : "533ace1b-a99f-4c6b-a326-3901aef3fd4c",
    "prId" : 5970,
    "comments" : [
      {
        "id" : "f25bf383-57c1-4a91-a4d5-c8bf4a534ff9",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Should we factor this out instead of duplicating it everywhere?",
        "createdAt" : "2020-05-13T18:33:42Z",
        "updatedAt" : "2020-05-13T18:33:58Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "54453c97-a37e-4b2a-95e6-163d1e4739e6",
        "parentId" : "f25bf383-57c1-4a91-a4d5-c8bf4a534ff9",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "I've done something in that direction. Have to say, a completely unreasonable amount of time was spent on working out something so simple 😢 ",
        "createdAt" : "2020-05-13T19:59:30Z",
        "updatedAt" : "2020-05-13T19:59:31Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "db7bee544f8aeaf1fc188dafc0daf000afe5166f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +115,119 @@          // should be running as.  Returns a UUID for the newly\n          // started trigger.\n          path(\"v1\" / \"start\") {\n            entity(as[StartParams]) {\n              params =>"
  },
  {
    "id" : "57845a98-8077-4407-b638-18a169127eb2",
    "prId" : 5951,
    "comments" : [
      {
        "id" : "74925df2-cb66-4524-8f59-86fbe27db331",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Sorry I just saw this, but this response format is not quite right. The `\"status\"` field is supposed to mirror the status code, and there should be a `\"result\"` field with whatever successful response body you want, i.e. `{\"status\": 200, \"result\": value}`. I suggest using the `successResponse` helper function as in the `list` command, where you pass in the JSON `value` you want (could be the string \"pass\" in this case).",
        "createdAt" : "2020-05-13T16:40:14Z",
        "updatedAt" : "2020-05-13T16:40:14Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c354805d-b629-48ed-918f-f822c58c6b41",
        "parentId" : "74925df2-cb66-4524-8f59-86fbe27db331",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "> Sorry I just saw this, but this response format is not quite right. The `\"status\"` field is supposed to mirror the status code, and there should be a `\"result\"` field with whatever successful response body you want, i.e. `{\"status\": 200, \"result\": value}`. I suggest using the `successResponse` helper function as in the `list` command, where you pass in the JSON `value` you want (could be the string \"pass\" in this case).\r\n\r\nThis case intentionally breaks with our internal conventions in order to conform to the referenced RFC (internet standard proposal).",
        "createdAt" : "2020-05-13T16:43:35Z",
        "updatedAt" : "2020-05-13T16:43:35Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "88440beeca4e2e8e9bb47a6356a58b006670b0f3",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +174,178 @@        concat(\n          path(\"health\") {\n            complete((StatusCodes.OK, JsObject((\"status\", \"pass\".toJson))))\n          },\n          // List triggers currently running for the given party"
  },
  {
    "id" : "ed7a8e82-1f1a-4510-abf9-bfe4f4e06d66",
    "prId" : 5916,
    "comments" : [
      {
        "id" : "f2851675-bc5e-437c-9d2e-11bfd6a48ab2",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "I think you don't need `new` here because it's a case class, but I don't think it matters either.",
        "createdAt" : "2020-05-08T18:57:32Z",
        "updatedAt" : "2020-05-08T19:08:40Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "dcf44c50-5981-40e3-9b5d-9735ec3a5691",
        "parentId" : "f2851675-bc5e-437c-9d2e-11bfd6a48ab2",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "I found in practice that you do. If you don't put a `new` on it the compiler goes looking for a *value* in `object TriggerRunner` called `Config`.",
        "createdAt" : "2020-05-08T19:17:04Z",
        "updatedAt" : "2020-05-08T19:17:04Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "130ef20e-8a73-4c16-97f7-a25c39b48903",
        "parentId" : "f2851675-bc5e-437c-9d2e-11bfd6a48ab2",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "ah, ok thanks",
        "createdAt" : "2020-05-08T19:24:46Z",
        "updatedAt" : "2020-05-08T19:24:46Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "af232941b942e74dba8060b1a9b12c00425ead19",
    "line" : 211,
    "diffHunk" : "@@ -1,1 +127,131 @@                    val ref = ctx.spawn(\n                      TriggerRunner(\n                        new TriggerRunner.Config(compiledPackages, trigger, ledgerConfig, party),\n                        ident),\n                      ident + \"-monitor\")"
  },
  {
    "id" : "977f4f5f-4917-4f1e-b7fe-c90a2e64ce93",
    "prId" : 5916,
    "comments" : [
      {
        "id" : "74bae3b3-e921-4117-9132-50d6e076aaca",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Maybe something like `triggerId` would be more descriptive here?",
        "createdAt" : "2020-05-08T18:58:04Z",
        "updatedAt" : "2020-05-08T19:08:40Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "af232941b942e74dba8060b1a9b12c00425ead19",
    "line" : 203,
    "diffHunk" : "@@ -1,1 +124,128 @@                    val party = params.party\n                    val uuid = UUID.randomUUID\n                    val ident = uuid.toString\n                    val ref = ctx.spawn(\n                      TriggerRunner("
  },
  {
    "id" : "8d817886-b994-495d-8e8d-2b37c23446fd",
    "prId" : 5916,
    "comments" : [
      {
        "id" : "4dbfea9c-dfa9-4f8d-8a4e-2d2123c53a4e",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This makes less sense to me than before? it’s not just the runner. It’s a reference to an actor for the runner. Either way, please separate refactorings from the actual change.",
        "createdAt" : "2020-05-11T07:14:11Z",
        "updatedAt" : "2020-05-11T07:30:19Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d5f34483-f875-488d-a365-c50acd5fc9e5",
        "parentId" : "4dbfea9c-dfa9-4f8d-8a4e-2d2123c53a4e",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "The reference it contains is now a `TriggerRunner`.",
        "createdAt" : "2020-05-11T12:48:22Z",
        "updatedAt" : "2020-05-11T12:48:23Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "af232941b942e74dba8060b1a9b12c00425ead19",
    "line" : 166,
    "diffHunk" : "@@ -1,1 +82,86 @@  }\n\n  case class TriggerRunnerWithParty(\n      ref: ActorRef[TriggerRunner.Message],\n      party: Party,"
  },
  {
    "id" : "2f5ee52c-dac4-4a93-8af0-12c1f53e7093",
    "prId" : 5829,
    "comments" : [
      {
        "id" : "29141c0e-3b1c-4af3-8e61-a4580554d926",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This should probably be changed at some point to a more structured response instead of a simple string but let’s leave it for this PR.",
        "createdAt" : "2020-05-05T08:13:33Z",
        "updatedAt" : "2020-05-05T08:13:38Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e940d412-5b55-47fb-ac0f-626ba1512feb",
        "parentId" : "29141c0e-3b1c-4af3-8e61-a4580554d926",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Maybe a simple object `{\"mainPackageId\": ...}` within the `results` field would suffice?",
        "createdAt" : "2020-05-05T15:33:08Z",
        "updatedAt" : "2020-05-05T15:33:08Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "51ec255dc5d871ada52ec3bdd29d9a6308db6c8c",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +270,274 @@                          addDar(compiledPackages, dar)\n                          complete(\n                            successResponse(s\"DAR uploaded, main package id: ${dar.main._1}\"))\n                        } catch {\n                          case err: ParseError =>"
  },
  {
    "id" : "5498d771-a268-429a-a886-d691885ed467",
    "prId" : 5770,
    "comments" : [
      {
        "id" : "2df63b47-d2db-480f-bece-d6b484e384f1",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Something like `RunningTrigger` might be a better name. I wouldn’t be surprised if you end up adding more metadata here.",
        "createdAt" : "2020-04-29T18:21:42Z",
        "updatedAt" : "2020-04-29T18:24:05Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9b141236e74168079b83c0ed40b234a5f7119dcb",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +208,212 @@  }\n\n  case class TriggerActorWithParty(\n      ref: ActorRef[TriggerActor.Message],\n      party: String,"
  },
  {
    "id" : "0e0f2b0c-d806-4252-bc74-35eebaca363d",
    "prId" : 5770,
    "comments" : [
      {
        "id" : "b1a178d2-b66d-4bb1-ad5f-5ce8cae135a0",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "There is a `Party` newtype in `com.daml.ledger.api.refinements`",
        "createdAt" : "2020-04-29T18:22:39Z",
        "updatedAt" : "2020-04-29T18:24:05Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7de1ff96-40e6-4582-bdce-effb5c71189e",
        "parentId" : "b1a178d2-b66d-4bb1-ad5f-5ce8cae135a0",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Thanks, will look into it in a follow on PR",
        "createdAt" : "2020-04-29T18:43:52Z",
        "updatedAt" : "2020-04-29T18:43:52Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9b141236e74168079b83c0ed40b234a5f7119dcb",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +226,230 @@\n    var triggers: Map[UUID, TriggerActorWithParty] = Map.empty\n    var triggersByParty: Map[String, Set[UUID]] = Map.empty\n\n    // Mutable in preparation for dynamic package upload."
  },
  {
    "id" : "24c07e24-b5b9-40e2-99cd-fee6484559eb",
    "prId" : 5038,
    "comments" : [
      {
        "id" : "9801295c-6cc7-4072-ab0a-777eeb2a9a0c",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This deliberately doesn’t use `fromDar` in preparation for dynamic package uploads.",
        "createdAt" : "2020-03-17T09:54:18Z",
        "updatedAt" : "2020-03-17T09:54:26Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5cff5df7c8ddada578757bb1298720a07e4aa66a",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +135,139 @@          .flatMap { client =>\n            val trigger = Runner.getTrigger(compiledPackages, config.triggerId)\n            val runner = new Runner(\n              client,\n              config.ledgerConfig.timeProvider,"
  }
]