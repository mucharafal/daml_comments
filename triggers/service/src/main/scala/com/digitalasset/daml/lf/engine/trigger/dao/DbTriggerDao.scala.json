[
  {
    "id" : "987c7973-085d-4663-bcec-eea761989b8b",
    "prId" : 7750,
    "comments" : [
      {
        "id" : "2b29f1aa-ad55-4a37-bddb-53a52530a6b8",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Note, this part is not tested, yet. This depends on https://github.com/digital-asset/daml/issues/7720.",
        "createdAt" : "2020-10-20T15:16:04Z",
        "updatedAt" : "2020-10-20T15:16:04Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "911b10a70cc6890841b96b11280469778a11baeb",
    "line" : 55,
    "diffHunk" : "@@ -174,6 +194,9 @@ final class DbTriggerDao private (dataSource: DataSource with Closeable, xa: Con\n   override def addRunningTrigger(t: RunningTrigger): Either[String, Unit] =\n     run(insertRunningTrigger(t))\n \n+  override def getRunningTrigger(triggerInstance: UUID): Either[String, Option[RunningTrigger]] =\n+    run(queryRunningTrigger(triggerInstance))"
  },
  {
    "id" : "63dde947-ed6b-47c1-9203-c487d8e1dbba",
    "prId" : 7654,
    "comments" : [
      {
        "id" : "5222500f-c3ed-4bc5-85e0-f5ad68190249",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Probably worth starting to open a few issues for the things that are still missing around auth (persistence, refresh, missing endpoints, …) so we can keep track of it.",
        "createdAt" : "2020-10-16T14:55:42Z",
        "updatedAt" : "2020-10-16T15:18:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0b1adc8e2e9d1b4d7828d6b222879ebaabd6947a",
    "line" : 5,
    "diffHunk" : "@@ -143,7 +143,8 @@ final class DbTriggerDao private (dataSource: DataSource with Closeable, xa: Con\n       triggerInstance: UUID,\n       party: String,\n       fullTriggerName: String): Either[String, RunningTrigger] = {\n-    Identifier.fromString(fullTriggerName).map(RunningTrigger(triggerInstance, _, Tag(party)))\n+    // TODO[AH] Persist the access and refresh token."
  },
  {
    "id" : "e120e80c-7920-484a-8207-594062c97427",
    "prId" : 6556,
    "comments" : [
      {
        "id" : "d0d40932-d322-41d5-81c1-2c4398ef4318",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Wildcard selects with no ordering creep me out a bit. That is easy to mess up if something changes.",
        "createdAt" : "2020-07-01T07:03:43Z",
        "updatedAt" : "2020-07-01T13:04:53Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "899a4fc5-16a3-457c-9599-62106096a91c",
        "parentId" : "d0d40932-d322-41d5-81c1-2c4398ef4318",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Happy to order by trigger instance (uuid), but I don't know what might get messed up by a change in ordering. We would restart triggers in a different order, which should be fine. I am fine with ordering if that is generally best practice.",
        "createdAt" : "2020-07-01T12:45:32Z",
        "updatedAt" : "2020-07-01T13:04:53Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "41053723-3e7a-4c89-aebe-f88c9e2c3abf",
        "parentId" : "d0d40932-d322-41d5-81c1-2c4398ef4318",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Might not matter much today but  ime it’s easy to fall into the trap where you assume things are ordered and it works fine in your tests but then explodes later so imho ordering everything is a good idea.",
        "createdAt" : "2020-07-01T12:54:47Z",
        "updatedAt" : "2020-07-01T13:04:53Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9a6c5609-018c-4816-9fc5-e4e994cfa9a8",
        "parentId" : "d0d40932-d322-41d5-81c1-2c4398ef4318",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Ok, will do then.",
        "createdAt" : "2020-07-01T12:58:21Z",
        "updatedAt" : "2020-07-01T13:04:53Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "44fd02678b0cd8c79abe85f459fcddbe31dca900",
    "line" : null,
    "diffHunk" : "@@ -127,6 +127,19 @@ class DbTriggerDao(xa: Connection.T) extends RunningTriggerDao {\n       }\n     } yield (pkgId, payload)\n \n+  private def selectRunningTriggers: ConnectionIO[Vector[(UUID, String, String)]] = {\n+    val select: Fragment = sql\"select * from running_triggers\""
  }
]