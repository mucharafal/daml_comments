[
  {
    "id" : "19554a0e-c2b9-4c84-a814-cec2c312c60e",
    "prId" : 7654,
    "comments" : [
      {
        "id" : "4ad12f10-fc47-4d8e-ba9b-df650c7502fe",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Having the test config outside of the test specific code seems a bit scary.",
        "createdAt" : "2020-10-16T14:54:29Z",
        "updatedAt" : "2020-10-16T15:18:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "cefd0ef9-38ca-4848-a455-dd66f5b8b61f",
        "parentId" : "4ad12f10-fc47-4d8e-ba9b-df650c7502fe",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Good catch, I've moved it next to the test fixture where it's used.",
        "createdAt" : "2020-10-16T15:13:30Z",
        "updatedAt" : "2020-10-16T15:18:19Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0b1adc8e2e9d1b4d7828d6b222879ebaabd6947a",
    "line" : null,
    "diffHunk" : "@@ -36,6 +39,13 @@ final case class JdbcConfig(\n     password: String,\n )\n \n+private[trigger] final case class AuthTestConfig("
  },
  {
    "id" : "67fc9070-d812-436f-81d6-687e04ee026a",
    "prId" : 7090,
    "comments" : [
      {
        "id" : "5ecff6dc-6356-43c4-9e7e-f28184b35bf3",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Side note: We should add a port file option but let’s keep that for a later PR. I’ll add an issue.",
        "createdAt" : "2020-08-12T08:55:05Z",
        "updatedAt" : "2020-08-12T16:14:23Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "de914c456c01e489580cb73d807dffb3acd3c6bc",
    "line" : 46,
    "diffHunk" : "@@ -89,10 +91,12 @@ object ServiceConfig {\n       .action((f, c) => c.copy(darPath = Some(Paths.get(f))))\n       .text(\"Path to the dar file containing the trigger.\")\n \n-    opt[Int](\"http-port\")\n-      .optional()\n-      .action((t, c) => c.copy(httpPort = t))\n-      .text(s\"Optional HTTP port. Defaults to ${DefaultHttpPort}.\")\n+    cliopts.Http.serverParse(this, serviceName = \"Trigger\")(\n+      address = (f, c) => c.copy(address = f(c.address)),\n+      httpPort = (f, c) => c.copy(httpPort = f(c.httpPort)),\n+      defaultHttpPort = Some(DefaultHttpPort),\n+      portFile = None,"
  },
  {
    "id" : "3f2d7775-ea76-4149-bf72-db4ef89e2149",
    "prId" : 6309,
    "comments" : [
      {
        "id" : "fd199417-2ae7-4d3b-9161-cf7b524a2a60",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "I think you can specify the default value here, like\r\n```suggestion\r\n    noSecretKey: Boolean = false,\r\n```",
        "createdAt" : "2020-06-11T22:07:22Z",
        "updatedAt" : "2020-06-11T22:19:34Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "df38038340aa1699372867c97fee63f61f3bd093",
    "line" : 4,
    "diffHunk" : "@@ -24,6 +24,7 @@ case class ServiceConfig(\n     timeProviderType: TimeProviderType,\n     commandTtl: Duration,\n     init: Boolean,\n+    noSecretKey: Boolean, // Default false"
  },
  {
    "id" : "3900883e-83ce-4073-bf9c-1703e43506e9",
    "prId" : 6309,
    "comments" : [
      {
        "id" : "2363f852-c62f-4735-90af-432c3230a7bd",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Some more warning here might be helpful, e.g.\r\n```suggestion\r\n      .text(\"Allow running without a secret encryption key. This means that user credentials are not secure so this should not be used if security is a concern.\")\r\n```",
        "createdAt" : "2020-06-11T22:12:15Z",
        "updatedAt" : "2020-06-11T22:19:34Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "df38038340aa1699372867c97fee63f61f3bd093",
    "line" : 41,
    "diffHunk" : "@@ -139,9 +140,14 @@ object ServiceConfig {\n       .valueName(JdbcConfig.usage)\n       .text(\"JDBC configuration parameters. If omitted the service runs without a database.\")\n \n+    opt[Unit](\"no-secret-key\")\n+      .action((_, c) => c.copy(noSecretKey = true))\n+      .text(\"Allow running without a secret key.\")"
  },
  {
    "id" : "801ef369-fc95-40c4-9bc7-fd68bde5099c",
    "prId" : 6079,
    "comments" : [
      {
        "id" : "9d436769-8842-4fa5-ab44-a4906a7ef82c",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "```suggestion\r\n        \"Allow up to max number of restarts of a failing trigger within this many seconds. Defaults to \" + DefaultFailureRetryTimeRange.getSeconds.toString + \"s.\")\r\n```",
        "createdAt" : "2020-05-26T14:55:00Z",
        "updatedAt" : "2020-05-26T19:55:32Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "cbdb87590a19aa1bb81b8b704105db5a774d8efd",
    "line" : null,
    "diffHunk" : "@@ -99,7 +105,20 @@ object ServiceConfig {\n       .action((x, c) => c.copy(maxInboundMessageSize = x))\n       .optional()\n       .text(\n-        s\"Optional max inbound message size in bytes. Defaults to ${DefaultMaxInboundMessageSize}\")\n+        s\"Optional max inbound message size in bytes. Defaults to ${DefaultMaxInboundMessageSize}.\")\n+\n+    opt[Int](\"max-failure-number-of-retries\")\n+      .action((x, c) => c.copy(maxFailureNumberOfRetries = x))\n+      .optional()\n+      .text(\n+        s\"Max number of times to try to restart a failing trigger (within allowed time range). Defaults to ${DefaultMaxFailureNumberOfRetries}.\")\n+\n+    opt[Long](\"failure-retry-time-range\")\n+      .action { (t, c) =>\n+        c.copy(failureRetryTimeRange = Duration.ofSeconds(t))\n+      }\n+      .text(\n+        \"Allow up to max number of retarts of a failing trigger within this many seconds. Defaults to \" + DefaultFailureRetryTimeRange.getSeconds.toString + \"s.\")"
  },
  {
    "id" : "0352b5cb-605a-481e-95e5-1583a4400453",
    "prId" : 6062,
    "comments" : [
      {
        "id" : "32411c42-7505-41da-b65b-f5fb11ae7133",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I assume you copied this from some other place in our codebase? Can we share this?",
        "createdAt" : "2020-05-21T06:36:47Z",
        "updatedAt" : "2020-05-21T22:33:56Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b56960a0-6653-4bf9-88cd-057177a10851",
        "parentId" : "32411c42-7505-41da-b65b-f5fb11ae7133",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Copied from the JSON API but slightly reduced to omit the driver (which can only be one thing in the JSON API as well) and a flag they use to indicate initialization in place of my `init-db` command. I'm sure there should be reuse here but I wanted to figure out the right format/interface for this thing first (including addressing your next comment).",
        "createdAt" : "2020-05-21T19:39:03Z",
        "updatedAt" : "2020-05-21T22:33:56Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "30baa950bdb2fc1851cd1b480587cacb471b9a2f",
    "line" : 22,
    "diffHunk" : "@@ -18,8 +19,55 @@ case class ServiceConfig(\n     maxInboundMessageSize: Int,\n     timeProviderType: TimeProviderType,\n     commandTtl: Duration,\n+    init: Boolean,\n+    jdbcConfig: Option[JdbcConfig],\n )\n \n+final case class JdbcConfig(\n+    url: String,\n+    user: String,\n+    password: String,\n+)\n+\n+object JdbcConfig {"
  },
  {
    "id" : "2cbd8eae-92d2-49f0-88e0-268439a5d6ee",
    "prId" : 6062,
    "comments" : [
      {
        "id" : "e22c0ceb-d291-47e8-84f8-a9488e9868b7",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "We now have `--jdbc` for the trigger service, `--query-store-jdbc-config` for the JSON API and `--sql-backend-jdbcurl` for sandbox the latter even has a different format :crying_cat_face: ",
        "createdAt" : "2020-05-21T06:40:37Z",
        "updatedAt" : "2020-05-21T22:33:56Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "abc8feda-5602-4782-9c37-e1a79cc90a0b",
        "parentId" : "e22c0ceb-d291-47e8-84f8-a9488e9868b7",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Good point, I could use the sandbox format and argument name, by including the username and password in the url string. I'll think about tweaking this in a later PR if that's ok.",
        "createdAt" : "2020-05-21T19:43:17Z",
        "updatedAt" : "2020-05-21T22:33:56Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "043be17d-0bc0-4e6e-b46b-a811870a8cf0",
        "parentId" : "e22c0ceb-d291-47e8-84f8-a9488e9868b7",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Happy to do it separately, I’d just like to not have to remember 3 different ways of specifying a jdbc url in the long term :slightly_smiling_face: ",
        "createdAt" : "2020-05-22T06:28:46Z",
        "updatedAt" : "2020-05-22T06:34:05Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "30baa950bdb2fc1851cd1b480587cacb471b9a2f",
    "line" : 69,
    "diffHunk" : "@@ -64,7 +112,19 @@ object ServiceConfig {\n         c.copy(commandTtl = Duration.ofSeconds(t))\n       }\n       .text(\"TTL in seconds used for commands emitted by the trigger. Defaults to 30s.\")\n+\n+    opt[Map[String, String]](\"jdbc\")"
  },
  {
    "id" : "39229b0a-28de-419d-88da-a673a6436a06",
    "prId" : 6062,
    "comments" : [
      {
        "id" : "7540610a-b008-48fc-b970-71f41f0f275c",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This is a bit confusing. You still require all the parameters that are required if you do not use the command due to the way `scopt` works so you have to pass in the ledger-host even though it is not used.",
        "createdAt" : "2020-05-21T06:41:44Z",
        "updatedAt" : "2020-05-21T22:33:56Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d829c336-1a5f-4279-afed-35a4579bf76e",
        "parentId" : "7540610a-b008-48fc-b970-71f41f0f275c",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Agreed. The problem I ran into is that the `TriggerDao` object requires an implicit execution context (for connecting to the database), and that is obtained from the actor system which is initialized with those config parameters.. Perhaps I could instead use the global execution context in the `init-db` case?",
        "createdAt" : "2020-05-21T19:56:25Z",
        "updatedAt" : "2020-05-21T22:33:56Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "427d8738-5a9e-4738-8b92-1515ea6a715c",
        "parentId" : "7540610a-b008-48fc-b970-71f41f0f275c",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Or a custom one. I never really understood which execution context you are supposed to use tbh :slightly_smiling_face:. Happy to keep it for now.",
        "createdAt" : "2020-05-22T06:31:35Z",
        "updatedAt" : "2020-05-22T06:34:05Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "30baa950bdb2fc1851cd1b480587cacb471b9a2f",
    "line" : 76,
    "diffHunk" : "@@ -64,7 +112,19 @@ object ServiceConfig {\n         c.copy(commandTtl = Duration.ofSeconds(t))\n       }\n       .text(\"TTL in seconds used for commands emitted by the trigger. Defaults to 30s.\")\n+\n+    opt[Map[String, String]](\"jdbc\")\n+      .action((x, c) =>\n+        c.copy(jdbcConfig = Some(JdbcConfig.create(x).fold(e => sys.error(e), identity))))\n+      .optional()\n+      .valueName(JdbcConfig.usage)\n+      .text(\"JDBC configuration parameters. If omitted the service runs without a database.\")\n+\n+    cmd(\"init-db\")"
  },
  {
    "id" : "4642f698-0322-4af3-8c8c-709e1077ae24",
    "prId" : 6000,
    "comments" : [
      {
        "id" : "c7fb4dec-3f57-4d89-99dd-304a97f21f43",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "You probably want to get this from `RunnerConfig.DefaultMaxInboundMessageSize` once you add it to the standalone runner instead of having the default specified twice.",
        "createdAt" : "2020-05-15T11:57:26Z",
        "updatedAt" : "2020-05-15T13:31:26Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a2241ac0-1dc7-44f8-9312-b3c787916a41",
        "parentId" : "c7fb4dec-3f57-4d89-99dd-304a97f21f43",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "✔️ ",
        "createdAt" : "2020-05-15T13:19:15Z",
        "updatedAt" : "2020-05-15T13:31:26Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "782906c89e3645f5113308c3d79b4d58b1e431b9",
    "line" : null,
    "diffHunk" : "@@ -15,11 +15,14 @@ case class ServiceConfig(\n     httpPort: Int,\n     ledgerHost: String,\n     ledgerPort: Int,\n+    maxInboundMessageSize: Int,\n     timeProviderType: TimeProviderType,\n     commandTtl: Duration,\n )\n \n object ServiceConfig {\n+  val DefaultMaxInboundMessageSize: Int = 4194304"
  },
  {
    "id" : "09342edc-53d7-4f7f-8fbf-641dbbd649a2",
    "prId" : 5951,
    "comments" : [
      {
        "id" : "61cc8730-f10f-4cfa-b1fb-cf404e4e6359",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Do we really want to require this? I think having some well-known port ala 6865 for sandbox or 7500 for the json API would be useful as a default.",
        "createdAt" : "2020-05-12T19:44:19Z",
        "updatedAt" : "2020-05-12T21:06:05Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "aa222cc8-98ee-4398-9482-c1ab6aacfc92",
        "parentId" : "61cc8730-f10f-4cfa-b1fb-cf404e4e6359",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Fair. I'll go with 8088",
        "createdAt" : "2020-05-12T20:01:42Z",
        "updatedAt" : "2020-05-12T21:06:05Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "88440beeca4e2e8e9bb47a6356a58b006670b0f3",
    "line" : null,
    "diffHunk" : "@@ -27,6 +28,11 @@ object ServiceConfig {\n       .action((f, c) => c.copy(darPath = Some(Paths.get(f))))\n       .text(\"Path to the dar file containing the trigger\")\n \n+    opt[Int](\"http-port\")\n+      .required()"
  },
  {
    "id" : "024e992c-1b07-4a80-8360-9d909f24e535",
    "prId" : 4287,
    "comments" : [
      {
        "id" : "e18a23b8-b85b-48ba-be1d-27a3026a7918",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Do we want to support loading DARs dynamically in the long run?",
        "createdAt" : "2020-01-31T08:55:57Z",
        "updatedAt" : "2020-01-31T09:30:36Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b5db1f7d-ed45-40c2-a22b-93aba01231a5",
        "parentId" : "e18a23b8-b85b-48ba-be1d-27a3026a7918",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Yep.",
        "createdAt" : "2020-01-31T09:23:03Z",
        "updatedAt" : "2020-01-31T09:30:36Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "066ec07af8b619d03c7d54bc324fed6b4ac7b4de",
    "line" : 12,
    "diffHunk" : "@@ -0,0 +1,62 @@\n+// Copyright (c) 2020 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.daml.lf.engine.trigger\n+\n+import java.nio.file.{Path, Paths}\n+import java.time.Duration\n+\n+import com.digitalasset.platform.services.time.TimeProviderType\n+\n+case class ServiceConfig(\n+    // For now, we only support one dar."
  }
]