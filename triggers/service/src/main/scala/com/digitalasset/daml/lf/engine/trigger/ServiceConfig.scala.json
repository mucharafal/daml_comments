[
  {
    "id" : "d3d6b7ef-7845-449a-908c-720b93a1d44a",
    "prId" : 7090,
    "comments" : [
      {
        "id" : "da6d8bf3-9d7e-4878-accc-7eeb4f7b1e5e",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Side note: We should add a port file option but let’s keep that for a later PR. I’ll add an issue.",
        "createdAt" : "2020-08-12T08:55:05Z",
        "updatedAt" : "2020-08-12T16:14:23Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "de914c456c01e489580cb73d807dffb3acd3c6bc",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +96,100 @@      httpPort = (f, c) => c.copy(httpPort = f(c.httpPort)),\n      defaultHttpPort = Some(DefaultHttpPort),\n      portFile = None,\n    )\n"
  },
  {
    "id" : "4c8ca0a4-7bac-4b8a-8e00-c152963f8870",
    "prId" : 6309,
    "comments" : [
      {
        "id" : "a9c2444c-8769-4048-86e3-657a73ea5815",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "I think you can specify the default value here, like\r\n```suggestion\r\n    noSecretKey: Boolean = false,\r\n```",
        "createdAt" : "2020-06-11T22:07:22Z",
        "updatedAt" : "2020-06-11T22:19:34Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "df38038340aa1699372867c97fee63f61f3bd093",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +25,29 @@    commandTtl: Duration,\n    init: Boolean,\n    noSecretKey: Boolean, // Default false\n    jdbcConfig: Option[JdbcConfig],\n)"
  },
  {
    "id" : "1ead6e63-edeb-4e06-89e5-0fc5f64207fb",
    "prId" : 6309,
    "comments" : [
      {
        "id" : "c6c1b326-dfc5-4d1f-b0c7-658b2f521b97",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Some more warning here might be helpful, e.g.\r\n```suggestion\r\n      .text(\"Allow running without a secret encryption key. This means that user credentials are not secure so this should not be used if security is a concern.\")\r\n```",
        "createdAt" : "2020-06-11T22:12:15Z",
        "updatedAt" : "2020-06-11T22:19:34Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "df38038340aa1699372867c97fee63f61f3bd093",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +143,147 @@    opt[Unit](\"no-secret-key\")\n      .action((_, c) => c.copy(noSecretKey = true))\n      .text(\"Allow running without a secret key.\")\n\n    cmd(\"init-db\")"
  },
  {
    "id" : "2e587651-08b9-4f72-871a-e574285e936f",
    "prId" : 6062,
    "comments" : [
      {
        "id" : "244cf18b-517e-4d68-8717-66baacb77083",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I assume you copied this from some other place in our codebase? Can we share this?",
        "createdAt" : "2020-05-21T06:36:47Z",
        "updatedAt" : "2020-05-21T22:33:56Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "649f1ca2-d7d8-4e60-945f-ccd170abd776",
        "parentId" : "244cf18b-517e-4d68-8717-66baacb77083",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Copied from the JSON API but slightly reduced to omit the driver (which can only be one thing in the JSON API as well) and a flag they use to indicate initialization in place of my `init-db` command. I'm sure there should be reuse here but I wanted to figure out the right format/interface for this thing first (including addressing your next comment).",
        "createdAt" : "2020-05-21T19:39:03Z",
        "updatedAt" : "2020-05-21T22:33:56Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "30baa950bdb2fc1851cd1b480587cacb471b9a2f",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +30,34 @@)\n\nobject JdbcConfig {\n  implicit val showInstance: Show[JdbcConfig] =\n    Show.shows(a => s\"JdbcConfig(url=${a.url}, user=${a.user})\")"
  },
  {
    "id" : "fc526d2e-2430-4d18-8652-79984233116e",
    "prId" : 6062,
    "comments" : [
      {
        "id" : "2245f121-96dc-4de9-91c6-a8bf41f750ad",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "We now have `--jdbc` for the trigger service, `--query-store-jdbc-config` for the JSON API and `--sql-backend-jdbcurl` for sandbox the latter even has a different format :crying_cat_face: ",
        "createdAt" : "2020-05-21T06:40:37Z",
        "updatedAt" : "2020-05-21T22:33:56Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "dd996f07-6e6b-40a7-94a5-d8601888638b",
        "parentId" : "2245f121-96dc-4de9-91c6-a8bf41f750ad",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Good point, I could use the sandbox format and argument name, by including the username and password in the url string. I'll think about tweaking this in a later PR if that's ok.",
        "createdAt" : "2020-05-21T19:43:17Z",
        "updatedAt" : "2020-05-21T22:33:56Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c364829b-0b82-4058-9652-5df05011cc3f",
        "parentId" : "2245f121-96dc-4de9-91c6-a8bf41f750ad",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Happy to do it separately, I’d just like to not have to remember 3 different ways of specifying a jdbc url in the long term :slightly_smiling_face: ",
        "createdAt" : "2020-05-22T06:28:46Z",
        "updatedAt" : "2020-05-22T06:34:05Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "30baa950bdb2fc1851cd1b480587cacb471b9a2f",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +114,118 @@      .text(\"TTL in seconds used for commands emitted by the trigger. Defaults to 30s.\")\n\n    opt[Map[String, String]](\"jdbc\")\n      .action((x, c) =>\n        c.copy(jdbcConfig = Some(JdbcConfig.create(x).fold(e => sys.error(e), identity))))"
  },
  {
    "id" : "0d7bab54-bced-49d9-99ed-c669b5782102",
    "prId" : 6062,
    "comments" : [
      {
        "id" : "4134e529-e073-4cbd-8848-f1ad88d12f44",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This is a bit confusing. You still require all the parameters that are required if you do not use the command due to the way `scopt` works so you have to pass in the ledger-host even though it is not used.",
        "createdAt" : "2020-05-21T06:41:44Z",
        "updatedAt" : "2020-05-21T22:33:56Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c2d467e3-d2ac-4c89-8712-2281d7eac667",
        "parentId" : "4134e529-e073-4cbd-8848-f1ad88d12f44",
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Agreed. The problem I ran into is that the `TriggerDao` object requires an implicit execution context (for connecting to the database), and that is obtained from the actor system which is initialized with those config parameters.. Perhaps I could instead use the global execution context in the `init-db` case?",
        "createdAt" : "2020-05-21T19:56:25Z",
        "updatedAt" : "2020-05-21T22:33:56Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8193080f-dec0-44bd-8bc4-0c44f2a3060c",
        "parentId" : "4134e529-e073-4cbd-8848-f1ad88d12f44",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Or a custom one. I never really understood which execution context you are supposed to use tbh :slightly_smiling_face:. Happy to keep it for now.",
        "createdAt" : "2020-05-22T06:31:35Z",
        "updatedAt" : "2020-05-22T06:34:05Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "30baa950bdb2fc1851cd1b480587cacb471b9a2f",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +121,125 @@      .text(\"JDBC configuration parameters. If omitted the service runs without a database.\")\n\n    cmd(\"init-db\")\n      .action((_, c) => c.copy(init = true))\n      .text(\"Initialize database and terminate.\")"
  },
  {
    "id" : "951184ac-4b3d-468c-aee9-96bef4d5aa42",
    "prId" : 4287,
    "comments" : [
      {
        "id" : "bb2420d8-d16d-49ff-b8b0-9b4e1c3fff6b",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Do we want to support loading DARs dynamically in the long run?",
        "createdAt" : "2020-01-31T08:55:57Z",
        "updatedAt" : "2020-01-31T09:30:36Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ceee80a7-d639-4d5b-9aa0-ca0b33086e7e",
        "parentId" : "bb2420d8-d16d-49ff-b8b0-9b4e1c3fff6b",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Yep.",
        "createdAt" : "2020-01-31T09:23:03Z",
        "updatedAt" : "2020-01-31T09:30:36Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "066ec07af8b619d03c7d54bc324fed6b4ac7b4de",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +10,14 @@\ncase class ServiceConfig(\n    // For now, we only support one dar.\n    darPath: Path,\n    ledgerHost: String,"
  }
]