[
  {
    "id" : "bc740de9-6cc0-4e87-96d3-65af59147a65",
    "prId" : 7226,
    "comments" : [
      {
        "id" : "0b5922d8-a570-4bb7-9cbc-f0fce7b87eb9",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "In principle, we could continue validating party formats in the trigger service. However, this feels like something that is better left to the ledger so Iâ€™ve removed it.",
        "createdAt" : "2020-08-25T13:08:57Z",
        "updatedAt" : "2020-08-25T14:41:26Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1a90302bc85ff7d182be1c98245830006b21de72",
    "line" : 117,
    "diffHunk" : "@@ -399,37 +397,6 @@ abstract class AbstractTriggerServiceTest extends AsyncFlatSpec with Eventually\n       } yield succeed\n   }\n \n-  it should \"give an 'unauthorized' response for a stop request without an authorization header\" in withTriggerService(\n-    None) { (uri: Uri, _, _) =>\n-    val uuid: String = \"ffffffff-ffff-ffff-ffff-ffffffffffff\"\n-    val req = HttpRequest(\n-      method = HttpMethods.DELETE,\n-      uri = uri.withPath(Uri.Path(s\"/v1/stop/$uuid\")),\n-    )\n-    for {\n-      resp <- Http().singleRequest(req)\n-      _ <- resp.status should equal(StatusCodes.Unauthorized)\n-      body <- responseBodyToString(resp)\n-      JsObject(fields) = body.parseJson\n-      _ <- fields.get(\"status\") should equal(Some(JsNumber(StatusCodes.Unauthorized.intValue)))\n-      _ <- fields.get(\"errors\") should equal(\n-        Some(JsArray(JsString(\"missing Authorization header with Basic Token\"))))\n-    } yield succeed\n-  }\n-\n-  it should \"give an 'unauthorized' response for a start request with an invalid party identifier\" in withTriggerService("
  }
]