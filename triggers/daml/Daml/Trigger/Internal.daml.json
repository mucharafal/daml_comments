[
  {
    "id" : "5141ec0b-badf-4cee-9520-a8a426d954ad",
    "prId" : 7632,
    "comments" : [
      {
        "id" : "b587d577-93ba-40dd-89b1-8da1647edfdb",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Why do we want or need the indirection between `implQuery` and `query`?",
        "createdAt" : "2020-10-13T07:18:29Z",
        "updatedAt" : "2020-10-13T16:38:48Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "19f85988-1c28-4ffc-91bd-ecf2707cab29",
        "parentId" : "b587d577-93ba-40dd-89b1-8da1647edfdb",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "As comment mentions, the type parameters to `implQuery` start with `m`; `query` fixes this.",
        "createdAt" : "2020-10-13T12:47:31Z",
        "updatedAt" : "2020-10-13T16:38:48Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bb2ccb3a-0813-4754-b2a5-f91e19ae416f",
        "parentId" : "b587d577-93ba-40dd-89b1-8da1647edfdb",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "duh, thanks for the explanation.",
        "createdAt" : "2020-10-13T12:50:10Z",
        "updatedAt" : "2020-10-13T16:38:48Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ff9c6cdb061569d69928ce65252f33699b9f793b",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +97,101 @@  -- | Extract the contracts of a given template from the ACS.  (However, the\n  -- type parameters are in the 'm a' order, so it is not exported.)\n  implQuery : forall a. Template a => m [(ContractId a, a)]\n\n-- Internal API"
  },
  {
    "id" : "4ca27500-f3ad-40f2-ba33-f2ca80bb4874",
    "prId" : 7632,
    "comments" : [
      {
        "id" : "9f39dc2d-bc4d-43e3-908a-18a9b4a87dbf",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "We probably also want `queryContractId` and maybe (less sure about that one) `queryContractKey` in here at some point but letâ€™s leave this out of this PR.",
        "createdAt" : "2020-10-13T07:19:16Z",
        "updatedAt" : "2020-10-13T16:38:48Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ff9c6cdb061569d69928ce65252f33699b9f793b",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +95,99 @@-- | Features possible in `initialize`, `updateState`, and `rule`.\nclass ActionTriggerAny m where\n  -- | Extract the contracts of a given template from the ACS.  (However, the\n  -- type parameters are in the 'm a' order, so it is not exported.)\n  implQuery : forall a. Template a => m [(ContractId a, a)]"
  },
  {
    "id" : "d532fc5d-bcbc-48b4-a403-3854ecc5099a",
    "prId" : 7365,
    "comments" : [
      {
        "id" : "b75dc1ff-b559-485f-98e1-c16efdfbb1ea",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Not for this PR but we could consider changing the list in the values to `Map AnyContractId AnyTemplate`. Then we can provide a fast lookup by contract id which is something you need fairly often.",
        "createdAt" : "2020-09-15T06:44:06Z",
        "updatedAt" : "2020-09-15T16:16:18Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "28bace9a-ec09-413a-bea6-530d3862ab0c",
        "parentId" : "b75dc1ff-b559-485f-98e1-c16efdfbb1ea",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "#7425 ",
        "createdAt" : "2020-09-16T18:32:12Z",
        "updatedAt" : "2020-09-16T18:32:12Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "27f3a96e389dfc2eede6162b56592858ea743a21",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +36,40 @@\n-- This will change to a Map once we have proper maps in DAML-LF\ndata ACS = ACS\n  { activeContracts :\n#ifdef DAML_GENMAP && DAML_GENERIC_COMPARISON"
  },
  {
    "id" : "50e7b243-594a-430c-bcea-30f95fb8e478",
    "prId" : 7365,
    "comments" : [
      {
        "id" : "0d8d4de2-53d3-4280-9bd1-3a3c41d803ca",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "@sofiafaro-da perhaps something worth adding to `DA.Map`? What do you think? (not in this PR)",
        "createdAt" : "2020-09-15T06:45:04Z",
        "updatedAt" : "2020-09-15T16:16:18Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0f2e386d-20fc-4927-a377-6f9a342f1f57",
        "parentId" : "0d8d4de2-53d3-4280-9bd1-3a3c41d803ca",
        "author" : {
          "login" : "sofiafaro-da",
          "name" : "Sofia Faro",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/63245722?u=b440e86239cc6cb4a8b4aacdc19fff8f1b61068d&v=4"
        },
        "body" : "yeah, that looks like a good function to have in DA.Map :) ",
        "createdAt" : "2020-09-15T09:57:13Z",
        "updatedAt" : "2020-09-15T16:16:18Z",
        "lastEditedBy" : {
          "login" : "sofiafaro-da",
          "name" : "Sofia Faro",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/63245722?u=b440e86239cc6cb4a8b4aacdc19fff8f1b61068d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ec2de5ff-40c8-4257-a6df-2da80ca22cdb",
        "parentId" : "0d8d4de2-53d3-4280-9bd1-3a3c41d803ca",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "#7427",
        "createdAt" : "2020-09-16T23:15:09Z",
        "updatedAt" : "2020-09-16T23:15:09Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "27f3a96e389dfc2eede6162b56592858ea743a21",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +57,61 @@\n#ifdef DAML_GENMAP && DAML_GENERIC_COMPARISON\nadjust : forall k v. Ord k => k -> (Optional v -> Optional v) -> GMap.Map k v -> GMap.Map k v\nadjust k f m =\n  let orig = GMap.lookup k m"
  }
]