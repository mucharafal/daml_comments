[
  {
    "id" : "76207b72-f37f-4717-b0e1-09e39fea867c",
    "prId" : 7456,
    "comments" : [
      {
        "id" : "18083e24-db05-4285-9827-aac31bd7ec2f",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Note that newtypes are not free in DAML so you are sometimes better off inlining this stuff (sadly). Not too worried about this for triggers for now but worth keeping in mind.",
        "createdAt" : "2020-10-01T08:07:03Z",
        "updatedAt" : "2020-10-02T16:27:21Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2e6de369-2d6d-4784-919f-c0411c346c97",
        "parentId" : "18083e24-db05-4285-9827-aac31bd7ec2f",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Also I just realized that we used a newtype before as well … Maybe at least worth merging it to one layer of newtypes at some point instead of having `TriggerA` on top of `TriggerRule` on top of `StateT` …. Doesn’t have to be in this PR though.",
        "createdAt" : "2020-10-01T08:16:31Z",
        "updatedAt" : "2020-10-02T16:27:21Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6de17194-e3aa-4711-a5c9-cddc57fb3ba2",
        "parentId" : "18083e24-db05-4285-9827-aac31bd7ec2f",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "I use them for three things in this PR:\r\n\r\n1. matching constraint signatures nicely,\r\n2. letting the functor layer go up and down when I haven't settled on which layer will operate where. e.g. TriggerSetup very nearly got elided for the final design, but it was needed for the low-level initialState as you wanted, so it survived causing very little trouble at the DAML layer (at the Scala layer is another story), and\r\n3. _not_ letting operations pollute upwards. For example it would be very undesirable for `ActionState TriggerAState TriggerA` to exist; it might even be desirable to remove `ActionTrigger TriggerA` so as to hide `submitCommands` from the high-level API.\r\n\r\n(2) is naturally just scaffolding, but we should take care about (3). And of course damlc will just yell at you for not thinking about (1).",
        "createdAt" : "2020-10-01T20:25:52Z",
        "updatedAt" : "2020-10-02T16:27:21Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9316e146-82dc-456e-82a4-0ed988869540",
        "parentId" : "18083e24-db05-4285-9827-aac31bd7ec2f",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Makes sense :+1: ",
        "createdAt" : "2020-10-02T07:21:25Z",
        "updatedAt" : "2020-10-02T16:27:21Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "27c8c9b1e1674688c7b1e08c329341d8e4615ef4",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +259,263 @@  }\n\nnewtype StateT s m a = StateT { runStateT : s -> m (a, s) }\n  deriving Functor\n"
  },
  {
    "id" : "fce97533-7599-42f7-8a38-d0f40169ef33",
    "prId" : 7456,
    "comments" : [
      {
        "id" : "d480e117-9b61-426a-83f5-0983b80a5143",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "As mentioned on the issue, one thing that we can do with this monadified version is to return a `CommandId` here so we don’t have to do this annoying back and forth translation between the random UUIDs in the trigger runner and what users specify here. Let’s leave that for a separate PR though.",
        "createdAt" : "2020-10-01T08:08:37Z",
        "updatedAt" : "2020-10-02T16:27:21Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "27c8c9b1e1674688c7b1e08c329341d8e4615ef4",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +295,299 @@data TriggerF a =\n  GetTime (Time -> a)\n  | Submit (Commands, () -> a)\n  deriving Functor\n"
  },
  {
    "id" : "b8225639-dddb-4cef-9b7a-3b177a27fea1",
    "prId" : 7456,
    "comments" : [
      {
        "id" : "e77aae42-a048-4c1d-ac98-854dae30e1d8",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "What exactly do you mean by “May lose information”?",
        "createdAt" : "2020-10-02T07:23:50Z",
        "updatedAt" : "2020-10-02T16:27:21Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ec4e5cc1-256c-4a90-977f-4a4b9d237b8c",
        "parentId" : "e77aae42-a048-4c1d-ac98-854dae30e1d8",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "You can't take the result of `simulateRule` and get back the original rule; for example, you might have a TriggerF case that's supposed to organize a parade and pass the number of attendees to the continuation, but `simulateRule` slacks off on the logistics and just passes 42.",
        "createdAt" : "2020-10-02T15:02:10Z",
        "updatedAt" : "2020-10-02T16:27:21Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c3834945-1ef0-4910-be09-634be7ec1d7d",
        "parentId" : "e77aae42-a048-4c1d-ac98-854dae30e1d8",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Makes sense :+1: ",
        "createdAt" : "2020-10-02T15:03:12Z",
        "updatedAt" : "2020-10-02T16:27:21Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "27c8c9b1e1674688c7b1e08c329341d8e4615ef4",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +304,308 @@  deriving (Functor, Applicative, Action)\n\n-- | Run a rule without running it.  May lose information from the rule;\n-- meant for testing purposes only.\nsimulateRule : TriggerRule s a -> Time -> s -> (s, [Commands], a)"
  },
  {
    "id" : "96013a3c-af37-40d1-8f3d-632a51b22bc6",
    "prId" : 7456,
    "comments" : [
      {
        "id" : "b415ee09-0ce1-4c1f-bfa6-eb6f08b01bd6",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "clever I like it!",
        "createdAt" : "2020-10-02T07:24:06Z",
        "updatedAt" : "2020-10-02T16:27:21Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "27c8c9b1e1674688c7b1e08c329341d8e4615ef4",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +308,312 @@simulateRule : TriggerRule s a -> Time -> s -> (s, [Commands], a)\nsimulateRule rule time s = (s', reverse cmds, a)\n  where ((a, s'), cmds) = State.runState (foldFree sim (runStateT (runTriggerRule rule) s)) []\n        sim : TriggerF x -> State.State [Commands] x\n        sim (GetTime f) = pure (f time)"
  }
]