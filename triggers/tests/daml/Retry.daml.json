[
  {
    "id" : "c5c3e155-51d4-4d38-bc89-820e5717c1f0",
    "prId" : 3239,
    "comments" : [
      {
        "id" : "6c6abb0b-ec42-4664-b667-b3b0efe5cdc2",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "It would be nice to also change the `CopyTrigger` and update the docs to no longer mention `runTrigger`. Probably also deserves an entry i nthe release notes.",
        "createdAt" : "2019-10-21T10:35:50Z",
        "updatedAt" : "2019-10-21T11:44:42Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "217af6d5160430df38838b3d5270fcc66dbf0364",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +12,16 @@import Daml.Trigger\n\nretryTrigger : Trigger Int\nretryTrigger = Trigger\n  { initialize = \\_acs -> 3"
  },
  {
    "id" : "e61025f4-c979-4ca7-bac3-481f0655abca",
    "prId" : 3226,
    "comments" : [
      {
        "id" : "104d1235-5790-439f-b992-a5ba045e1b98",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Can this bit be factored out? It might even be useful as part of the triggers library. Checking if a command is already in flight seems like a common operation.",
        "createdAt" : "2019-10-18T12:34:28Z",
        "updatedAt" : "2019-10-18T12:35:37Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "16bf6993-0b79-48e3-88cd-5c2050da91fa",
        "parentId" : "104d1235-5790-439f-b992-a5ba045e1b98",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Yeah, while writing this I also thought that this should be part of the high-level API. So something like `deduplicateCreate` and `deduplicateExercise`. Iâ€™ll leave that for a separate PR.",
        "createdAt" : "2019-10-18T12:45:31Z",
        "updatedAt" : "2019-10-18T12:45:32Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d0e33638f90f82c78482dad3b2b604ab156b9016",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +28,32 @@    let create = T { p = party }\n    let pending = concatMap (mapOptional toCreate . snd) $ Map.toList commandsInFlight\n    when (create `notElem` pending) $ void $ emitCommands [createCmd create]\n  | ((cid, _) :: _) <- getTemplates @T acs\n  , allowedRetries > 0 = do"
  }
]