[
  {
    "id" : "4c88ef17-c96e-4a3a-9e7f-e9c6fd880ec3",
    "prId" : 7532,
    "comments" : [
      {
        "id" : "d2b51257-f9d4-40b2-9d85-9b0fee08e38c",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "```suggestion\r\nof the `bazel` binary, by setting _Preferences_ -> _Bazel Settings_ -> _Bazel binary location_ to `./dev-env/bin/bazel`.\r\n```",
        "createdAt" : "2020-09-30T12:52:14Z",
        "updatedAt" : "2020-09-30T12:57:54Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9e417f96bc23692ad8550e7adac3b59da4fa9f92",
    "line" : null,
    "diffHunk" : "@@ -241,7 +241,12 @@ additional_languages:\n Click \"Next\" once you are ready. You will be able to modify the project view\n file whenever you like, so don't worry too much.\n  \n-IntelliJ will now import the project. This process will take a while.\n+The first import of the project might fail due to a resolution error of the `bazel` binary. \n+In order to solve this, configure the Bazel plugin settings with the location\n+of the `bazel` binary: `Preferences -> Bazel Settings -> Bazel binary location` (i.e. `./dev-env/bin/bazel`)"
  },
  {
    "id" : "bfce37a1-e83c-4345-bbba-09743444e1d9",
    "prId" : 7532,
    "comments" : [
      {
        "id" : "a77ef75e-314d-40ad-a636-ce98f6b514b1",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "```suggestion\r\nNow, re-trigger a sync of the workspace (IntelliJ Action: _Sync project with BUILD files_). \r\n```",
        "createdAt" : "2020-09-30T12:52:22Z",
        "updatedAt" : "2020-09-30T12:57:54Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9e417f96bc23692ad8550e7adac3b59da4fa9f92",
    "line" : null,
    "diffHunk" : "@@ -241,7 +241,12 @@ additional_languages:\n Click \"Next\" once you are ready. You will be able to modify the project view\n file whenever you like, so don't worry too much.\n  \n-IntelliJ will now import the project. This process will take a while.\n+The first import of the project might fail due to a resolution error of the `bazel` binary. \n+In order to solve this, configure the Bazel plugin settings with the location\n+of the `bazel` binary: `Preferences -> Bazel Settings -> Bazel binary location` (i.e. `./dev-env/bin/bazel`)\n+\n+Now, re-trigger a sync of the workspace (Intellij Action: _Sync project with BUILD files_). "
  },
  {
    "id" : "a315782f-6d46-4712-bebe-b2ae9e9f517c",
    "prId" : 7464,
    "comments" : [
      {
        "id" : "546202ed-5574-4889-8647-6b637321fc4b",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "You shouldn't need to do this unless you change _bazel-java-deps.bzl_. What does it achieve?\r\n\r\nI would have thought that asking the user to _Sync Project with BUILD Files_ would be enough.",
        "createdAt" : "2020-09-23T13:30:49Z",
        "updatedAt" : "2020-09-23T13:38:07Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "fa11432b-a84d-47d8-a93d-78d03b6ad80a",
        "parentId" : "546202ed-5574-4889-8647-6b637321fc4b",
        "author" : {
          "login" : "nmarton-da",
          "name" : "Marton Nagy",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/70937591?u=127a0f02afa694183fc6ef9970ce72e074d9efdd&v=4"
        },
        "body" : "Sounds great! removing it",
        "createdAt" : "2020-09-23T13:36:23Z",
        "updatedAt" : "2020-09-23T13:38:07Z",
        "lastEditedBy" : {
          "login" : "nmarton-da",
          "name" : "Marton Nagy",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/70937591?u=127a0f02afa694183fc6ef9970ce72e074d9efdd&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "fd2cbf3612c12034e733d540e9e992b066383310",
    "line" : null,
    "diffHunk" : "@@ -300,6 +300,14 @@ Bazel command (`run`, `test`, etc.). If applicable, you can also define Bazel\n command-line flags or command-line flags to the executable. Click on \"Apply\",\n or \"OK\" to add the run configuration.\n \n+#### Attaching sources to scala library\n+\n+If you do not have the scala library sources linked (you only see the decompiled\n+ sources only), you can attach it manually by selecting the `Choose sources...` \n+ button on the yellow bar at the top, and selecting `scala-library...-src.jar`. \n+(you might need to update dependencies beforehand by running \n+`bazel run @unpinned_maven//:pin`)"
  },
  {
    "id" : "b5d6c120-f74a-4b8d-98e7-4af7b6b63fb7",
    "prId" : 7464,
    "comments" : [
      {
        "id" : "a4bdbaae-5e99-490f-bc7c-2cffa99a85da",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "```suggestion\r\nIf you do not have the Scala library sources linked (you only see the decompiled\r\n```",
        "createdAt" : "2020-09-23T13:30:57Z",
        "updatedAt" : "2020-09-23T13:38:07Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "fd2cbf3612c12034e733d540e9e992b066383310",
    "line" : null,
    "diffHunk" : "@@ -300,6 +300,14 @@ Bazel command (`run`, `test`, etc.). If applicable, you can also define Bazel\n command-line flags or command-line flags to the executable. Click on \"Apply\",\n or \"OK\" to add the run configuration.\n \n+#### Attaching sources to scala library\n+\n+If you do not have the scala library sources linked (you only see the decompiled"
  },
  {
    "id" : "054a9f12-f66d-492d-974f-bb93f993feea",
    "prId" : 7464,
    "comments" : [
      {
        "id" : "ef870474-9da6-4df7-b1c7-a93aa194d268",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "```suggestion\r\n sources), you can attach it manually by selecting the `Choose sources...` \r\n```",
        "createdAt" : "2020-09-23T13:31:06Z",
        "updatedAt" : "2020-09-23T13:38:07Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "fd2cbf3612c12034e733d540e9e992b066383310",
    "line" : null,
    "diffHunk" : "@@ -300,6 +300,14 @@ Bazel command (`run`, `test`, etc.). If applicable, you can also define Bazel\n command-line flags or command-line flags to the executable. Click on \"Apply\",\n or \"OK\" to add the run configuration.\n \n+#### Attaching sources to scala library\n+\n+If you do not have the scala library sources linked (you only see the decompiled\n+ sources only), you can attach it manually by selecting the `Choose sources...` "
  },
  {
    "id" : "80a2a68c-c15e-4456-ad2b-18ae98c2e3f0",
    "prId" : 6328,
    "comments" : [
      {
        "id" : "22f16041-08a0-4d6b-9003-a1ed51bcf58a",
        "parentId" : null,
        "author" : {
          "login" : "dasormeter",
          "name" : "Brian Healey",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25179017?u=80e3160e2447461bd5847fe928a3e6fa9f6793fc&v=4"
        },
        "body" : "@SamirTalwar think this has been tested on Ultimate as well -- maybe mention both?",
        "createdAt" : "2020-06-15T14:23:48Z",
        "updatedAt" : "2020-06-15T14:29:23Z",
        "lastEditedBy" : {
          "login" : "dasormeter",
          "name" : "Brian Healey",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25179017?u=80e3160e2447461bd5847fe928a3e6fa9f6793fc&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "49cd519c-114f-4dde-97ef-195c740d1d90",
        "parentId" : "22f16041-08a0-4d6b-9003-a1ed51bcf58a",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Oh, that is linked in the previous sentence.\r\n\r\nPerhaps I'll just delete this sentence.",
        "createdAt" : "2020-06-15T14:27:45Z",
        "updatedAt" : "2020-06-15T14:29:23Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f86c345ed80933c1218fdb3905070f13cd3bf0ae",
    "line" : null,
    "diffHunk" : "@@ -148,8 +148,8 @@ plugin referencing [ij.bazel.build][intellij_plugin].\n If the correct plugin does not exist in the list, then your IntelliJ version\n might be too recent, and the Bazel plugin might not have been upgraded to\n support it, yet. Check for version compatibility on the [Jetbrains plugin\n-page][intellij_plugin_jetbrains]. At the time of writing the Bazel IntelliJ\n-plugin version 2018.10.08.0.2 has been tested on IDEA Community 2018.2.5.\n+page][intellij_plugin_jetbrains]. At the time of writing the Bazel plugin\n+version 2020.04.13.0.0 has been tested on IDEA Community 2019.3.5."
  },
  {
    "id" : "44cdf508-ae75-4a3d-ac82-91a964b20f8d",
    "prId" : 6328,
    "comments" : [
      {
        "id" : "66d82a66-ebc4-4cce-9de8-6166c2147039",
        "parentId" : null,
        "author" : {
          "login" : "dasormeter",
          "name" : "Brian Healey",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25179017?u=80e3160e2447461bd5847fe928a3e6fa9f6793fc&v=4"
        },
        "body" : "worth adding a link to bazel plugin intellij compatibility page too so it's clear what versions of bazel plugin and intellij play nice?  especially worth pointing out that the latest released version of intellij basically never works well with bazel plugin since the plugin lags https://plugins.jetbrains.com/plugin/8609-bazel so generally ignore intellij's auto-update nags if you want to live your best daml bazel life",
        "createdAt" : "2020-06-15T14:25:39Z",
        "updatedAt" : "2020-06-15T14:29:23Z",
        "lastEditedBy" : {
          "login" : "dasormeter",
          "name" : "Brian Healey",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25179017?u=80e3160e2447461bd5847fe928a3e6fa9f6793fc&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f86c345ed80933c1218fdb3905070f13cd3bf0ae",
    "line" : 11,
    "diffHunk" : "@@ -148,8 +148,8 @@ plugin referencing [ij.bazel.build][intellij_plugin].\n If the correct plugin does not exist in the list, then your IntelliJ version\n might be too recent, and the Bazel plugin might not have been upgraded to\n support it, yet. Check for version compatibility on the [Jetbrains plugin\n-page][intellij_plugin_jetbrains]. At the time of writing the Bazel IntelliJ\n-plugin version 2018.10.08.0.2 has been tested on IDEA Community 2018.2.5.\n+page][intellij_plugin_jetbrains]. At the time of writing the Bazel plugin\n+version 2020.04.13.0.0 has been tested on IDEA Community 2019.3.5.\n \n [intellij_plugin]: https://ij.bazel.build/\n [intellij_plugin_install]: https://ij.bazel.build/docs/bazel-plugin.html#getting-started"
  },
  {
    "id" : "483f41bb-0a35-458f-9de9-85b9ae4cf494",
    "prId" : 5272,
    "comments" : [
      {
        "id" : "d280a88e-8281-42db-9012-1e4160151b1b",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "~Would it make more sense to just use `com.daml` as a group identifier (asking for both here and down the PR)?~\r\n\r\nEDIT: leftover from a previous, uncommitted review.",
        "createdAt" : "2020-03-30T11:59:09Z",
        "updatedAt" : "2020-04-01T06:51:55Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "89330f7b27582cdb0a66d5353de307e46c5e2267",
    "line" : null,
    "diffHunk" : "@@ -70,7 +70,7 @@ da_scala_library(\n         ) + [\n             \"//:MVN_VERSION\",\n         ],\n-    tags = [\"maven_coordinates=com.digitalasset.platform:sandbox:__VERSION__\"],\n+    tags = [\"maven_coordinates=com.daml.sandbox:sandbox:__VERSION__\"],"
  },
  {
    "id" : "461e2530-9e1c-4a14-8475-8b81076d8268",
    "prId" : 3512,
    "comments" : [
      {
        "id" : "2123cf77-230b-41b1-952b-64eccf830678",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Perhaps add ` \\` to the end of each line (aside from the last one) to signal continuation?",
        "createdAt" : "2019-11-18T15:55:18Z",
        "updatedAt" : "2019-11-18T16:45:32Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "bf423244-d7de-4e68-b2c3-bc9b0d9b4f50",
        "parentId" : "2123cf77-230b-41b1-952b-64eccf830678",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Agreed, making the continuations more obvious would be good. `\\` line endings and maybe also indenting the continued lines a bit.",
        "createdAt" : "2019-11-18T16:08:20Z",
        "updatedAt" : "2019-11-18T16:45:32Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b93a9e95-9fc8-4685-be2e-b0e2fb1b03a8",
        "parentId" : "2123cf77-230b-41b1-952b-64eccf830678",
        "author" : {
          "login" : "dasormeter",
          "name" : "Brian Healey",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25179017?u=80e3160e2447461bd5847fe928a3e6fa9f6793fc&v=4"
        },
        "body" : "updated to include the slashes",
        "createdAt" : "2019-11-18T16:55:52Z",
        "updatedAt" : "2019-11-18T16:55:53Z",
        "lastEditedBy" : {
          "login" : "dasormeter",
          "name" : "Brian Healey",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25179017?u=80e3160e2447461bd5847fe928a3e6fa9f6793fc&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4bb6ec30df2c9a9cccc3a4247954b5af4b7cf6f5",
    "line" : null,
    "diffHunk" : "@@ -370,13 +370,18 @@ detailed information.\n - Execute a test with a specific name\n \n     ```\n-    bazel test //ledger/sandbox:sandbox-scala-tests_test_suite_src_test_suite_scala_com_digitalasset_platform_sandbox_stores_ledger_sql_JdbcLedgerDaoSpec.scala --test_arg=-t --test_arg=\"JDBC Ledger DAO should be able to persist and load contracts without external offset\"\n-    ```    \n+    bazel test \n+    //ledger/sandbox:sandbox-scala-tests_test_suite_src_test_suite_scala_com_digitalasset_platform_sandbox_stores_ledger_sql_JdbcLedgerDaoSpec.scala \n+    --test_arg=-t \n+    --test_arg=\"JDBC Ledger DAO should be able to persist and load contracts without external offset\"\n+    ```"
  },
  {
    "id" : "8f379aac-2502-45f5-ac77-0777d1e902fd",
    "prId" : 3512,
    "comments" : [
      {
        "id" : "6179c187-536b-43ab-9648-5ec3cb363127",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "I'm with @aherrmann-da in that it'd be nice to have the continued lines indented by 2 spaces, but mostly I'm happy.",
        "createdAt" : "2019-11-18T17:12:59Z",
        "updatedAt" : "2019-11-18T17:13:13Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4bb6ec30df2c9a9cccc3a4247954b5af4b7cf6f5",
    "line" : 117,
    "diffHunk" : "@@ -370,13 +382,18 @@ detailed information.\n - Execute a test with a specific name\n \n     ```\n-    bazel test //ledger/sandbox:sandbox-scala-tests_test_suite_src_test_suite_scala_com_digitalasset_platform_sandbox_stores_ledger_sql_JdbcLedgerDaoSpec.scala --test_arg=-t --test_arg=\"JDBC Ledger DAO should be able to persist and load contracts without external offset\"\n-    ```    \n+    bazel test \\\n+    //ledger/sandbox:sandbox-scala-tests_test_suite_src_test_suite_scala_com_digitalasset_platform_sandbox_stores_ledger_sql_JdbcLedgerDaoSpec.scala \\\n+    --test_arg=-t \\\n+    --test_arg=\"JDBC Ledger DAO should be able to persist and load contracts without external offset\""
  },
  {
    "id" : "b9913cc7-6e69-4be3-90f0-bcae3207d3a3",
    "prId" : 3494,
    "comments" : [
      {
        "id" : "9fa71519-8dd6-4ccc-85c8-1fdd721e64ac",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Don't you need two `--test-arg` switches here?",
        "createdAt" : "2019-11-16T14:30:01Z",
        "updatedAt" : "2019-11-18T01:59:00Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "41153db9-a135-4032-8c3a-c05d52b83d12",
        "parentId" : "9fa71519-8dd6-4ccc-85c8-1fdd721e64ac",
        "author" : {
          "login" : "dasormeter",
          "name" : "Brian Healey",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25179017?u=80e3160e2447461bd5847fe928a3e6fa9f6793fc&v=4"
        },
        "body" : "indeed! now corrected",
        "createdAt" : "2019-11-16T14:35:03Z",
        "updatedAt" : "2019-11-18T01:59:00Z",
        "lastEditedBy" : {
          "login" : "dasormeter",
          "name" : "Brian Healey",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25179017?u=80e3160e2447461bd5847fe928a3e6fa9f6793fc&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "95827b3a130002252b82ef6e3746e238b086edcb",
    "line" : null,
    "diffHunk" : "@@ -361,17 +361,24 @@ detailed information.\n     bazel test //ledger-client/ods:tests --nocache_test_results\n     ```\n \n-- Execute an individual test case in a Scala test-suite\n+- Execute a specific Scala test-suite class\n \n     ```\n-    bazel test //ledger-client/ods:tests_test_suite_src_test_scala_com_digitalasset_ods_slick_SqlUtilsTest.scala\n+    bazel test //ledger/sandbox:sandbox-scala-tests_test_suite_src_test_suite_scala_com_digitalasset_platform_sandbox_stores_ledger_sql_JdbcLedgerDaoSpec.scala\n     ```\n+    \n+- Execute a test with a specific name\n+\n+    ```\n+    bazel test//ledger/sandbox:sandbox-scala-tests_test_suite_src_test_suite_scala_com_digitalasset_platform_sandbox_stores_ledger_sql_JdbcLedgerDaoSpec.scala --test_arg=-t \"JDBC Ledger DAO should be able to persist and load contracts without external offset\""
  },
  {
    "id" : "13efa201-ddb0-4f04-b78b-4f1528c1b080",
    "prId" : 3494,
    "comments" : [
      {
        "id" : "d43ed5f2-cca2-48cf-b96a-0b4aa3e40d92",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Another typo: you need a space after `bazel test`.",
        "createdAt" : "2019-11-16T14:37:34Z",
        "updatedAt" : "2019-11-18T01:59:00Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "95827b3a130002252b82ef6e3746e238b086edcb",
    "line" : null,
    "diffHunk" : "@@ -361,17 +361,24 @@ detailed information.\n     bazel test //ledger-client/ods:tests --nocache_test_results\n     ```\n \n-- Execute an individual test case in a Scala test-suite\n+- Execute a specific Scala test-suite class\n \n     ```\n-    bazel test //ledger-client/ods:tests_test_suite_src_test_scala_com_digitalasset_ods_slick_SqlUtilsTest.scala\n+    bazel test //ledger/sandbox:sandbox-scala-tests_test_suite_src_test_suite_scala_com_digitalasset_platform_sandbox_stores_ledger_sql_JdbcLedgerDaoSpec.scala\n     ```\n+    \n+- Execute a test with a specific name\n+\n+    ```\n+    bazel test//ledger/sandbox:sandbox-scala-tests_test_suite_src_test_suite_scala_com_digitalasset_platform_sandbox_stores_ledger_sql_JdbcLedgerDaoSpec.scala --test_arg=-t --test_arg=\"JDBC Ledger DAO should be able to persist and load contracts without external offset\""
  },
  {
    "id" : "7a1f2dd9-87c1-4122-a1f9-c29ad2d418dc",
    "prId" : 3494,
    "comments" : [
      {
        "id" : "a19a70f6-0f18-4198-8704-a23e53984d3d",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Perhaps wrap `--test-arg` in backticks.",
        "createdAt" : "2019-11-16T14:37:51Z",
        "updatedAt" : "2019-11-18T01:59:00Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e7e2e2d4-3756-477c-91d2-7d12d34b7be9",
        "parentId" : "a19a70f6-0f18-4198-8704-a23e53984d3d",
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Capitalize \"Scala\" and \"ScalaTest\"?",
        "createdAt" : "2019-11-16T14:38:08Z",
        "updatedAt" : "2019-11-18T01:59:00Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "95827b3a130002252b82ef6e3746e238b086edcb",
    "line" : null,
    "diffHunk" : "@@ -361,17 +361,24 @@ detailed information.\n     bazel test //ledger-client/ods:tests --nocache_test_results\n     ```\n \n-- Execute an individual test case in a Scala test-suite\n+- Execute a specific Scala test-suite class\n \n     ```\n-    bazel test //ledger-client/ods:tests_test_suite_src_test_scala_com_digitalasset_ods_slick_SqlUtilsTest.scala\n+    bazel test //ledger/sandbox:sandbox-scala-tests_test_suite_src_test_suite_scala_com_digitalasset_platform_sandbox_stores_ledger_sql_JdbcLedgerDaoSpec.scala\n     ```\n+    \n+- Execute a test with a specific name\n+\n+    ```\n+    bazel test//ledger/sandbox:sandbox-scala-tests_test_suite_src_test_suite_scala_com_digitalasset_platform_sandbox_stores_ledger_sql_JdbcLedgerDaoSpec.scala --test_arg=-t --test_arg=\"JDBC Ledger DAO should be able to persist and load contracts without external offset\"\n+    ```    \n \n - Pass an argument to a test case in a Scala test-suite\n \n     ```\n     bazel test //ledger-client/ods:tests_test_suite_src_test_scala_com_digitalasset_ods_slick_SqlUtilsTest.scala --test_arg=-z --test_arg=\"should return true\"\n     ```\n+    More broadly, for scala tests you can pass through any of the args outlined in scalatest document, separating into two instances of the --test-arg parameter as shown in the two examples above.  See http://www.scalatest.org/user_guide/using_the_runner for a full list of args you can pass through."
  },
  {
    "id" : "7eb3d897-6998-4000-91f7-fd8adb2ea446",
    "prId" : 932,
    "comments" : [
      {
        "id" : "3874d86e-157a-4524-be0a-1b2c5f1f8ae5",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "```suggestion\r\nUnfortunately, [GHC builds are not deterministic](https://gitlab.haskell.org/ghc/ghc/issues/12262). This, coupled with the way Bazel works, may lead to Haskell libraries that have not been changed to be rebuilt. If the library sits at the base of the dependency graph, it may cause a ripple effect that forces you to rebuild most of the workspace without an actual need for it (`ghc-lib` is one example of this).\r\n```",
        "createdAt" : "2019-05-06T09:30:09Z",
        "updatedAt" : "2019-05-08T08:58:30Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1eb9e2bb-f34e-4dc4-9caa-c4aeef31761f",
        "parentId" : "3874d86e-157a-4524-be0a-1b2c5f1f8ae5",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Thanks, included it in the PR. :slightly_smiling_face: ",
        "createdAt" : "2019-05-06T11:24:00Z",
        "updatedAt" : "2019-05-08T08:58:30Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c29e0e7f730acf7476ab54677dc9e03e50f7ffd3",
    "line" : null,
    "diffHunk" : "@@ -1006,3 +1006,16 @@ program directly. Please refer to //daml-lf/archive/BUILD.bazel for example usag\n If you find yourself writing similar rules, please take a moment to write some Starlark to abstract\n it out and document it here. Note that proto3-suite isn't compatible with protoc, so it is not currently\n possible to hook it up into the \"proto_library\" tooling.\n+\n+## Known issues\n+\n+### Unchanged Haskell library being rebuilt\n+\n+Unfortunately, [GHC builds are not deterministic](https://gitlab.haskell.org/ghc/ghc/issues/12262). This, coupled with the way Bazel works, may lead to Haskell libraries that have not being changed to be rebuilt. If the library sits at the base of build, it may cause a ripple effect that forces you to rebuild most of the workspace without an actual need for it (`ghc-lib` is one example of this)."
  }
]