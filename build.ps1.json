[
  {
    "id" : "6b986ef8-cbe3-419e-a336-95de33cfff80",
    "prId" : 6870,
    "comments" : [
      {
        "id" : "e5440d4c-76b4-4510-95a2-055a1dd23093",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "The removal of the unused (and deprecated) `@bazel/bazel` package requires this. I’ll merge this later today to minimize the time we have this in.",
        "createdAt" : "2020-07-27T13:13:59Z",
        "updatedAt" : "2020-07-27T16:18:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "62e1c0e8-2798-491c-84d0-0031640c4236",
        "parentId" : "e5440d4c-76b4-4510-95a2-055a1dd23093",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Meaning this can be undone after the CI workers are back to a consistent state?",
        "createdAt" : "2020-07-27T13:21:06Z",
        "updatedAt" : "2020-07-27T16:18:10Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6fbbf7a2-76c5-432b-ba64-68b36f98ec20",
        "parentId" : "e5440d4c-76b4-4510-95a2-055a1dd23093",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Exactly, I’ll undo it tomorrow.",
        "createdAt" : "2020-07-27T13:26:15Z",
        "updatedAt" : "2020-07-27T16:18:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f892739781276e7facc8c21b59996c40648ebaab",
    "line" : 5,
    "diffHunk" : "@@ -48,6 +48,9 @@ function bazel() {\n # which later causes issues on Bazel init (source forest creation) on Windows. A shutdown closes workers,\n # which is a workaround for this problem.\n bazel shutdown\n+# Temporary to workaround rules_nodejs update.\n+bazel clean --expunge"
  },
  {
    "id" : "895e71af-3116-407e-9a41-79f60f50821b",
    "prId" : 5648,
    "comments" : [
      {
        "id" : "06e061d5-1f2b-4aef-9538-1d454c3a0ccd",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : ":shrug: ",
        "createdAt" : "2020-04-21T12:33:43Z",
        "updatedAt" : "2020-04-21T12:34:16Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "571a202b6411ef7af8064ac0dcc67863415f674b",
    "line" : 4,
    "diffHunk" : "@@ -1,7 +1,10 @@\n Set-StrictMode -Version latest\n $ErrorActionPreference = 'Stop'\n \n+# See https://github.com/lukesampson/scoop/issues/3859"
  },
  {
    "id" : "bf5632df-a71d-443e-8c75-a84b4a7377ca",
    "prId" : 4163,
    "comments" : [
      {
        "id" : "deaee8e3-fa1a-41e7-aba7-2a5cdb86412d",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Do we actually need this then?",
        "createdAt" : "2020-01-22T13:58:58Z",
        "updatedAt" : "2020-01-22T14:42:27Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "bb3b775c5a9cc8128cbc57b5ff5e8575f69e7314",
    "line" : 6,
    "diffHunk" : "@@ -46,6 +46,8 @@ function bazel() {\n # which is a workaround for this problem.\n bazel shutdown\n \n+# Hoping that this fixes the ELOOP errors on Windows\n+# See #4162\n bazel clean --expunge"
  },
  {
    "id" : "1735530c-cd24-46ba-ae0b-8030b7a14891",
    "prId" : 4161,
    "comments" : [
      {
        "id" : "2a0bfd25-bbba-4adc-9647-7fc01ce1f80c",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Maybe add a comment that this is a workaround and link to https://github.com/digital-asset/daml/issues/4162, so we don't forget to fix it.",
        "createdAt" : "2020-01-22T13:38:58Z",
        "updatedAt" : "2020-01-22T13:39:03Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "54551471-a3de-452f-a8f8-652d8c6c4e65",
        "parentId" : "2a0bfd25-bbba-4adc-9647-7fc01ce1f80c",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I’ll add it separately, I want to merge this sooner rather than later :slightly_smiling_face: ",
        "createdAt" : "2020-01-22T13:39:25Z",
        "updatedAt" : "2020-01-22T13:39:25Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9cbe628a-1b80-4f37-80e9-8ae68317d1b3",
        "parentId" : "2a0bfd25-bbba-4adc-9647-7fc01ce1f80c",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : ":+1: ",
        "createdAt" : "2020-01-22T13:40:10Z",
        "updatedAt" : "2020-01-22T13:40:10Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a32a8af52a430008d01124a29ca82458dcf056b2",
    "line" : 4,
    "diffHunk" : "@@ -46,6 +46,8 @@ function bazel() {\n # which is a workaround for this problem.\n bazel shutdown\n \n+bazel clean --expunge"
  },
  {
    "id" : "7ecbfbf5-6787-4967-94b9-6d78ec639140",
    "prId" : 1894,
    "comments" : [
      {
        "id" : "d838eb9f-d868-4554-8079-31cc22562516",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I think we can just kill this line. We have tests that exercise this code path now, e.g, the integration tests. This was only added when we first got damlc to compile.",
        "createdAt" : "2019-06-27T15:11:07Z",
        "updatedAt" : "2019-06-28T10:23:02Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "04c42d8fd5873e96f3f2e104af65a66436bf3ea1",
    "line" : null,
    "diffHunk" : "@@ -30,47 +30,12 @@ function bazel() {\n # which is a workaround for this problem.\n bazel shutdown\n \n-# FIXME: Until all bazel issues on Windows are resolved we will be testing only specific bazel targets\n-bazel build `-`-experimental_execution_log_file ${ARTIFACT_DIRS}/build_execution_windows.log `\n-    //:git-revision `\n-    @com_github_grpc_grpc//:grpc `\n-    @haskell_c2hs//... `\n-    //3rdparty/... `\n-    //compiler/... `\n-    //daml-assistant/... `\n-    //daml-foundations/... `\n-    //daml-lf/... `\n-    //extractor/... `\n-    //hazel/... `\n-    //language-support/... `\n-    //ledger/... `\n-    //ledger-api/... `\n-    //libs-haskell/... `\n-    //navigator/... `\n-    //nix/... `\n-    //notices-gen/... `\n-    //release/... `\n-    //rules_daml/... `\n-    //scala-protoc-plugins/... `\n-    //templates/...\n+bazel build `-`-experimental_execution_log_file ${ARTIFACT_DIRS}/build_execution_windows.log //...\n \n bazel shutdown\n \n-bazel run `\n-    //daml-foundations/daml-tools/da-hs-damlc-app `-`- `-h\n+bazel run //daml-foundations/daml-tools/da-hs-damlc-app `-`- `-h"
  },
  {
    "id" : "c5e1e3f4-630a-4ef4-8b46-ac68ca7db00e",
    "prId" : 1044,
    "comments" : [
      {
        "id" : "2f8a9781-8584-4cbb-9f5c-a11eec0f3a4b",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This can be removed, we now build various things that depend on it.",
        "createdAt" : "2019-05-09T12:28:17Z",
        "updatedAt" : "2019-05-10T10:46:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6fb894d3a5a626e67d060c588fa2ffe7db8e6f3f",
    "line" : 110,
    "diffHunk" : "@@ -27,117 +25,54 @@ function bazel() {\n     Write-Output \"<< bazel $args (ok)\"\n }\n \n-function build-partial() {\n-    bazel build `-`-experimental_execution_log_file ${ARTIFACT_DIRS}/build_partial_execution_windows.log `\n-        //:git-revision `\n-        //compiler/daml-lf-ast/... `\n-        //compiler/haskell-ide-core/... `\n-        //daml-lf/interface/... `\n-        //language-support/java/bindings/... `\n-        //navigator/backend/... `\n-        //navigator/frontend/...\n-\n-    bazel shutdown\n-\n-    bazel test `\n-        //daml-lf/interface/... `\n-        //language-support/java/bindings/... `\n-        //navigator/backend/...\n-}\n-\n-function build-full() {\n-    # FIXME: Until all bazel issues on Windows are resolved we will be testing only specific bazel targets\n-    bazel build `-`-experimental_execution_log_file ${ARTIFACT_DIRS}/build_full_execution_windows.log `\n-        //release:sdk-release-tarball `\n-        //release/windows-installer:windows-installer `\n-        //:git-revision `\n-        @com_github_grpc_grpc//:grpc `\n-        //3rdparty/... `\n-        //nix/third-party/gRPC-haskell:grpc-haskell `\n-        //daml-assistant:daml `\n-        //daml-foundations/daml-tools/daml-extension/... `\n-        //daml-foundations/daml-tools/da-hs-damlc-app:damlc-dist `\n-        //daml-foundations/daml-tools/docs/... `\n-        //daml-foundations/daml-tools/language-server-tests:lib-js `\n-        //daml-lf/archive:daml_lf_archive_scala `\n-        //daml-lf/archive:daml_lf_archive_protos_zip `\n-        //daml-lf/archive:daml_lf_archive_protos_tarball `\n-        //compiler/haskell-ide-core/... `\n-        //compiler/daml-lf-ast/... `\n-        //daml-lf/data/... `\n-        //daml-lf/engine:engine `\n-        //daml-lf/interface/... `\n-        //daml-lf/interpreter/... `\n-        //daml-lf/lfpackage/... `\n-        //daml-lf/parser/... `\n-        //daml-lf/repl/... `\n-        //daml-lf/scenario-interpreter/... `\n-        //daml-lf/transaction-scalacheck/... `\n-        //daml-lf/validation/... `\n-        //extractor:extractor-binary `\n-        //language-support/java/testkit:testkit `\n-        //language-support/java/bindings/... `\n-        //language-support/java/bindings-rxjava/... `\n-        //ledger/api-server-damlonx:api-server-damlonx `\n-        //ledger/api-server-damlonx/reference:reference `\n-        //ledger/backend-api/... `\n-        //ledger/ledger-api-akka/... `\n-        //ledger/ledger-api-client/... `\n-        //ledger/ledger-api-common/... `\n-        //ledger/ledger-api-domain/... `\n-        //ledger/ledger-api-server-example/... `\n-        //ledger/ledger-api-scala-logging/... `\n-        //ledger/ledger-api-server-example/... `\n-        //ledger/participant-state/... `\n-        //ledger/participant-state-index/... `\n-        //ledger/sandbox/... `\n-        //ledger-api/... `\n-        //navigator/backend/... `\n-        //navigator/frontend/... `\n-        //scala-protoc-plugins/...\n-\n-    # ScalaCInvoker, a Bazel worker, created by rules_scala opens some of the bazel execroot's files,\n-    # which later causes issues on Bazel init (source forest creation) on Windows. A shutdown closes workers,\n-    # which is a workaround for this problem.\n-    bazel shutdown\n-\n-    bazel run `\n-        //daml-foundations/daml-tools/da-hs-damlc-app `-`- `-h\n-\n-    # ScalaCInvoker, a Bazel worker, created by rules_scala opens some of the bazel execroot's files,\n-    # which later causes issues on Bazel init (source forest creation) on Windows. A shutdown closes workers,\n-    # which is a workaround for this problem.\n-    bazel shutdown\n+# ScalaCInvoker, a Bazel worker, created by rules_scala opens some of the bazel execroot's files,\n+# which later causes issues on Bazel init (source forest creation) on Windows. A shutdown closes workers,\n+# which is a workaround for this problem.\n+bazel shutdown\n \n-    bazel test `\n-        //daml-lf/data/... `\n-        //daml-lf/interface/... `\n-        //daml-lf/interpreter/... `\n-        //daml-lf/lfpackage/... `\n-        //daml-lf/parser/... `\n-        //daml-lf/validation/... `\n-        //language-support/java/bindings/... `\n-        //language-support/java/bindings-rxjava/... `\n-        //ledger/ledger-api-client/... `\n-        //ledger/ledger-api-common/... `\n-        //ledger-api/... `\n-        //navigator/backend/...\n-}\n+# FIXME: Until all bazel issues on Windows are resolved we will be testing only specific bazel targets\n+bazel build `-`-experimental_execution_log_file ${ARTIFACT_DIRS}/build_full_execution_windows.log `\n+    //release:sdk-release-tarball `\n+    //release/windows-installer:windows-installer `\n+    //:git-revision `\n+    @com_github_grpc_grpc//:grpc `"
  },
  {
    "id" : "0cfec588-efcf-416a-ae64-ac60f3a6235c",
    "prId" : 648,
    "comments" : [
      {
        "id" : "546cfc3a-c21c-42cf-91fd-426c6cb0c684",
        "parentId" : null,
        "author" : {
          "login" : "majcherm-da",
          "name" : "Michał Majcherski",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/43614029?u=8320ef35eb6289112c9c95df3e483f322c9aa60e&v=4"
        },
        "body" : "if `BUILD_ARTIFACTSTAGINGDIRECTORY` is an env. variable then it should be referenced in powershell as `${env:BUILD_ARTIFACTSTAGINGDIRECTORY}`",
        "createdAt" : "2019-04-24T09:04:14Z",
        "updatedAt" : "2019-04-25T22:05:21Z",
        "lastEditedBy" : {
          "login" : "majcherm-da",
          "name" : "Michał Majcherski",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/43614029?u=8320ef35eb6289112c9c95df3e483f322c9aa60e&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d4c25485-b898-436e-bfea-fc3d75442382",
        "parentId" : "546cfc3a-c21c-42cf-91fd-426c6cb0c684",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Thanks, I've added `env:`.",
        "createdAt" : "2019-04-24T09:19:34Z",
        "updatedAt" : "2019-04-25T22:05:21Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "33500977b030f463e2703bfbbc785ccb3b5c2803",
    "line" : null,
    "diffHunk" : "@@ -7,6 +7,8 @@ $ErrorActionPreference = 'Stop'\n .\\dev-env\\windows\\bin\\dadew.ps1 sync\n .\\dev-env\\windows\\bin\\dadew.ps1 enable\n \n+$ARTIFACT_DIRS = if (\"$BUILD_ARTIFACTSTAGINGDIRECTORY\") { $BUILD_ARTIFACTSTAGINGDIRECTORY } else { Get-Location }"
  },
  {
    "id" : "5a3f6b27-e4da-46cf-b308-a2247bd2f65d",
    "prId" : 648,
    "comments" : [
      {
        "id" : "80c914f8-f7df-4e1a-95c9-edf71317d43d",
        "parentId" : null,
        "author" : {
          "login" : "majcherm-da",
          "name" : "Michał Majcherski",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/43614029?u=8320ef35eb6289112c9c95df3e483f322c9aa60e&v=4"
        },
        "body" : "hyphens might need escaping via backticks - see `bazel run` below",
        "createdAt" : "2019-04-24T09:05:58Z",
        "updatedAt" : "2019-04-25T22:05:21Z",
        "lastEditedBy" : {
          "login" : "majcherm-da",
          "name" : "Michał Majcherski",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/43614029?u=8320ef35eb6289112c9c95df3e483f322c9aa60e&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8b8f5404-4252-4931-a492-574d62cbc48d",
        "parentId" : "80c914f8-f7df-4e1a-95c9-edf71317d43d",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Thanks! I've escaped the hyphens.",
        "createdAt" : "2019-04-24T09:19:49Z",
        "updatedAt" : "2019-04-25T22:05:21Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "33500977b030f463e2703bfbbc785ccb3b5c2803",
    "line" : null,
    "diffHunk" : "@@ -22,7 +24,7 @@ function bazel() {\n }\n \n function build-partial() {\n-    bazel build `\n+    bazel build --experimental_execution_log_file ${ARTIFACT_DIRS}/build_partial_execution_windows.log `"
  },
  {
    "id" : "63b16ec6-6a41-4069-9972-1992b42ae348",
    "prId" : 596,
    "comments" : [
      {
        "id" : "7072b6dd-23ce-44af-a232-7bd25dafe9a5",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I think the exitcode logic here is still required.",
        "createdAt" : "2019-04-18T09:53:19Z",
        "updatedAt" : "2019-04-18T11:21:48Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "acbed163-2085-4cc1-8114-bd67b3656a08",
        "parentId" : "7072b6dd-23ce-44af-a232-7bd25dafe9a5",
        "author" : null,
        "body" : "This logic is probably broken. I have seen it continue successfully when bazel.exe was missing on the PATH.\r\n\r\nRestored for now as it's not essential to this PR.",
        "createdAt" : "2019-04-18T10:22:20Z",
        "updatedAt" : "2019-04-18T11:21:48Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b2760567cc40629ef12412554c8c57bef827e71b",
    "line" : null,
    "diffHunk" : "@@ -7,20 +7,6 @@ $ErrorActionPreference = 'Stop'\n .\\dev-env\\windows\\bin\\dadew.ps1 sync\n .\\dev-env\\windows\\bin\\dadew.ps1 enable\n \n-function bazel() {\n-    Write-Output \">> bazel $args\"\n-    $global:lastexitcode = 0\n-    $backupErrorActionPreference = $script:ErrorActionPreference\n-    $script:ErrorActionPreference = \"Continue\"\n-    & bazel.exe --bazelrc=.\\nix\\bazelrc @args 2>&1 | %{ \"$_\" }\n-    $script:ErrorActionPreference = $backupErrorActionPreference\n-    if ($global:lastexitcode -ne 0 -And $args[0] -ne \"shutdown\") {"
  },
  {
    "id" : "6d8cdc2e-dac1-43ba-aa61-abc280dbc09b",
    "prId" : 485,
    "comments" : [
      {
        "id" : "c4fc2a56-6ca2-409a-bc07-dc670d5dfdee",
        "parentId" : null,
        "author" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "body" : "Is there anything in `//navigator` that doesn’t build yet? If not we could just use `//navigator/...`.",
        "createdAt" : "2019-04-15T12:07:05Z",
        "updatedAt" : "2019-04-15T14:30:33Z",
        "lastEditedBy" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a38eddbd-e61f-4131-8e03-a8fd483ba6fe",
        "parentId" : "c4fc2a56-6ca2-409a-bc07-dc670d5dfdee",
        "author" : {
          "login" : "majcherm-da",
          "name" : "Michał Majcherski",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/43614029?u=8320ef35eb6289112c9c95df3e483f322c9aa60e&v=4"
        },
        "body" : "Yes, integration-tests reference `damlc-dist`",
        "createdAt" : "2019-04-15T13:06:01Z",
        "updatedAt" : "2019-04-15T14:30:33Z",
        "lastEditedBy" : {
          "login" : "majcherm-da",
          "name" : "Michał Majcherski",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/43614029?u=8320ef35eb6289112c9c95df3e483f322c9aa60e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ba279a7b-f98c-4355-b7c6-1be33d747143",
        "parentId" : "c4fc2a56-6ca2-409a-bc07-dc670d5dfdee",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "If it helps, the integration test needs something to compile DAML to DAR, but we can change how exactly this is achieved.\r\nI see:\r\n- https://github.com/digital-asset/daml/blob/master/navigator/integration-test/src/main/scala/com/digitalasset/navigator/test/runner/PackagedDamlc.scala, using `com.digitalasset.damlc.Runner`\r\n- https://github.com/digital-asset/daml/blob/master/navigator/integration-test/src/main/scala/com/digitalasset/navigator/test/runner/HeadDamli.scala, using `bazel run damlc`\r\n- I think I saw I some other project that compiled DAML to DAR at compile time, and included the DAR file as a resource.\r\n\r\nThe different files at `navigator/test/runner` are from before we had head based development and should be cleaned up.",
        "createdAt" : "2019-04-15T13:19:08Z",
        "updatedAt" : "2019-04-15T14:30:33Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d336478e60931e36fef4a3d49832fa0b804086c5",
    "line" : 6,
    "diffHunk" : "@@ -26,13 +26,16 @@ function build-partial() {\n         //:git-revision `\n         //compiler/daml-lf-ast/... `\n         //daml-lf/interface/... `\n-        //language-support/java/bindings/...\n+        //language-support/java/bindings/... `\n+        //navigator/backend/... `"
  }
]