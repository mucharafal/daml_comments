[
  {
    "id" : "574e6c3e-ac0c-4e47-97e1-0ea998a736a5",
    "prId" : 6366,
    "comments" : [
      {
        "id" : "a1f9b9f2-c8ad-4ad2-8869-845780369a7d",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I'm about to add a third test, would it be better to interleave a list of tests.",
        "createdAt" : "2020-06-16T15:06:19Z",
        "updatedAt" : "2020-06-16T15:07:03Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "994dbe3a-3c2c-49c0-822b-cd6cfd13d786",
        "parentId" : "a1f9b9f2-c8ad-4ad2-8869-845780369a7d",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "You can just nest this, `x `interleave` y `interleave` z` or if you have a list use a fold for it.",
        "createdAt" : "2020-06-16T15:09:17Z",
        "updatedAt" : "2020-06-16T15:09:17Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "75a5c0b7a6e4fe42773b44428ebc102b1a9c4035",
    "line" : 12,
    "diffHunk" : "@@ -29,6 +30,17 @@ data Test s r = Test\n   -- ^ The initial state to start with.\n   }\n \n+interleave :: Test s r -> Test s' r' -> Test (s, s') (r, r')"
  },
  {
    "id" : "cd36c2df-a1fb-499b-a77d-930d34f3b750",
    "prId" : 6360,
    "comments" : [
      {
        "id" : "2f683a8e-10a3-421d-878f-45a3f3df6208",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "What does the `!` stand for?",
        "createdAt" : "2020-06-16T08:36:37Z",
        "updatedAt" : "2020-06-16T08:47:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "83ed63e0-6fdc-443a-b10c-5e2a085ba265",
        "parentId" : "2f683a8e-10a3-421d-878f-45a3f3df6208",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "It makes the field strict rather than lazy which is the default. Shouldnâ€™t matter much here but I consider it good practice to mark fields strict when it makes sense.",
        "createdAt" : "2020-06-16T08:47:36Z",
        "updatedAt" : "2020-06-16T08:47:36Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2dd1680b-db4b-4322-9733-302377b2eed5",
        "parentId" : "2f683a8e-10a3-421d-878f-45a3f3df6208",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Got it, thanks.",
        "createdAt" : "2020-06-16T10:11:23Z",
        "updatedAt" : "2020-06-16T10:11:23Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5cff7dd79662c53b0d2c9d94af645e4ff856f3a8",
    "line" : 42,
    "diffHunk" : "@@ -42,4 +46,33 @@ data Tuple2 a b = Tuple2\n   , _2 :: b\n   } deriving (Eq, Generic, Show)\n \n-instance (A.FromJSON a, A.FromJSON b) => A.FromJSON (Tuple2 a b)\n\\ No newline at end of file\n+instance (A.FromJSON a, A.FromJSON b) => A.FromJSON (Tuple2 a b)\n+\n+data TemplateId = TemplateId\n+  { moduleName :: !String\n+  , entityName :: !String\n+  } deriving (Eq, Show)\n+\n+data Event\n+  = Created !ContractId !TemplateId !A.Value"
  },
  {
    "id" : "43134b03-a34f-4240-b9c3-5f20cf3cf9dc",
    "prId" : 6360,
    "comments" : [
      {
        "id" : "4e8bf1cb-fdff-4f98-8f5e-ad1bd8c1b033",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Is it worth mentioning in a comment why we don't have the package identifier in here?",
        "createdAt" : "2020-06-16T08:37:14Z",
        "updatedAt" : "2020-06-16T08:47:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e30b2543-2a96-4c46-8828-57ac0a425ef2",
        "parentId" : "4e8bf1cb-fdff-4f98-8f5e-ad1bd8c1b033",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Added a comment that this is only for testing and we therefore omit the package id for convenience.",
        "createdAt" : "2020-06-16T08:48:00Z",
        "updatedAt" : "2020-06-16T08:48:01Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5cff7dd79662c53b0d2c9d94af645e4ff856f3a8",
    "line" : 36,
    "diffHunk" : "@@ -42,4 +46,33 @@ data Tuple2 a b = Tuple2\n   , _2 :: b\n   } deriving (Eq, Generic, Show)\n \n-instance (A.FromJSON a, A.FromJSON b) => A.FromJSON (Tuple2 a b)\n\\ No newline at end of file\n+instance (A.FromJSON a, A.FromJSON b) => A.FromJSON (Tuple2 a b)\n+\n+data TemplateId = TemplateId"
  }
]