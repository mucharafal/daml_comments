[
  {
    "id" : "47cc18d9-764e-4613-bf4a-47870c20e77e",
    "prId" : 6360,
    "comments" : [
      {
        "id" : "89d61697-7578-4fc5-84a5-180388673f78",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Is `pattern` a GHC-specific feature?",
        "createdAt" : "2020-06-16T08:37:50Z",
        "updatedAt" : "2020-06-16T08:47:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c26c8ae4-5d56-4886-b60b-14ce61b2b4e8",
        "parentId" : "89d61697-7578-4fc5-84a5-180388673f78",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "GHC-specific as in not supported in DAML? No! You can use pattern synonyms in DAML as well (that’s how `Just` works as a synonym for `Some`). However, it can potentially slow your code down over inlining it since our optimizer is shit. For GHC, the optimizer will usually optimize it to the same code.",
        "createdAt" : "2020-06-16T08:49:44Z",
        "updatedAt" : "2020-06-16T08:49:44Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ea417226-c661-4239-a6ba-4266d3548a9f",
        "parentId" : "89d61697-7578-4fc5-84a5-180388673f78",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "> GHC-specific as in not supported in DAML?\r\n\r\nNo, as in, part of the extension GHC has on top of standard Haskell.\r\n\r\nJust asking, I never saw this. :slightly_smiling_face: ",
        "createdAt" : "2020-06-16T10:11:04Z",
        "updatedAt" : "2020-06-16T10:11:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "18069055-032c-4f53-b1eb-0ae2b46180d0",
        "parentId" : "89d61697-7578-4fc5-84a5-180388673f78",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Ah yes it is. I don’t differentiate between GHC and standard Haskell. Given that GHC is the only usable Haskell implementation the standard is pretty much irrelevant and it matters much more what GHC does.",
        "createdAt" : "2020-06-16T10:15:06Z",
        "updatedAt" : "2020-06-16T10:15:06Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5cff7dd79662c53b0d2c9d94af645e4ff856f3a8",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +118,122 @@\n\npattern CreatedProposeDeal :: ContractId -> ProposeDeal -> Event\npattern CreatedProposeDeal cid asset <- Created cid (TemplateId \"ProposeAccept\" \"ProposeDeal\") (A.fromJSON -> A.Success asset)\n"
  }
]