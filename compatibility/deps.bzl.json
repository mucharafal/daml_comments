[
  {
    "id" : "b9b4944c-d26c-4fa9-9d19-e3534f464b8c",
    "prId" : 6889,
    "comments" : [
      {
        "id" : "7b41ed70-e8ef-420a-b75a-c9bd417ee96e",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "unrelated but also broken :cry: ",
        "createdAt" : "2020-07-28T05:43:48Z",
        "updatedAt" : "2020-07-28T05:43:49Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7b647abc0f904f6ad515d24bc9481b29477f80a1",
    "line" : 5,
    "diffHunk" : "@@ -90,7 +90,7 @@ def daml_deps():\n             name = \"com_github_madler_zlib\",\n             build_file = \"@daml//3rdparty/c:zlib.BUILD\",\n             strip_prefix = \"zlib-{}\".format(zlib_version),\n-            urls = [\"https://github.com/madler/zlib/archive/{}.tar.gz\".format(zlib_version)],\n+            urls = [\"https://github.com/madler/zlib/archive/v{}.tar.gz\".format(zlib_version)],"
  },
  {
    "id" : "d26d3682-b800-4f33-bc8a-1e630ef1b6f0",
    "prId" : 5665,
    "comments" : [
      {
        "id" : "e3518de5-fb6e-4e6c-aa15-5bdf68be1912",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Maybe import those from `@daml//:deps.bzl`? To make it easier to keep them in sync.",
        "createdAt" : "2020-04-23T09:59:42Z",
        "updatedAt" : "2020-04-23T10:46:39Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d8b6f1c1-341d-4e62-b1ba-6a2708059572",
        "parentId" : "e3518de5-fb6e-4e6c-aa15-5bdf68be1912",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Good idea, changed!",
        "createdAt" : "2020-04-23T10:09:31Z",
        "updatedAt" : "2020-04-23T10:46:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "fae715204e6fbce3b32c31c7d03f3ca3a5de8700",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,52 @@\n+# Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+#\n+# The dependencies of the daml workspace.\n+# This allows using the daml workspace externally\n+# from another bazel workspace.\n+#\n+# For example, another Bazel project can depend on\n+# targets in the daml repository by doing:\n+# ---\n+# local_repository(\n+#   name = \"com_github_digital_asset_daml\",\n+#   path = \"/path/to/daml\"\n+# )\n+# load(\"@com_github_digital_asset_daml//:deps.bzl\", \"daml_deps\")\n+# daml_deps()\n+# ---\n+#\n+# A 3rd-party consumer would also need to register relevant\n+# toolchains and repositories in order to build targets.\n+# That is, copy some setup calls from WORKSPACE into the\n+# other WORKSPACE.\n+#\n+# Make sure to reference repository local files with the full\n+# prefix: @com_github_digital_asset_daml//..., as these won't\n+# be resolvable from external workspaces otherwise.\n+\n+load(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\", \"http_file\")\n+load(\"@bazel_tools//tools/build_defs/repo:git.bzl\", \"git_repository\")\n+\n+rules_haskell_version = \"cf6beb4e3748dce6dc401a95ab8cacb803c5d944\"\n+rules_haskell_sha256 = \"cadb4ceb63994d86343fb407a9b5eaab363af428850d1698d6c6132690ccfb71\"\n+rules_nixpkgs_version = \"c966bb8bd335f1e244c03efe6e7a1afa9784038e\"\n+rules_nixpkgs_sha256 = \"ccafea4fc4d5fa2ddba2882f76728558bfe2c12657f7f56078ece43a31761148\""
  }
]