[
  {
    "id" : "5dc35a61-266d-448f-8c7f-b08e0f1106be",
    "prId" : 6112,
    "comments" : [
      {
        "id" : "63bfa9e1-65c1-42e6-86e2-297bc750e311",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n```",
        "createdAt" : "2020-05-27T10:34:26Z",
        "updatedAt" : "2020-05-27T11:56:25Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4ad341a1b6e99a9daf01df515ae4f5092f22bb5e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,140 @@\n+# Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+load(\n+    \"@daml//bazel_tools/client_server:client_server_test.bzl\",\n+    \"client_server_test\",\n+)\n+load(\"//bazel_tools:versions.bzl\", \"version_to_name\")\n+\n+def daml_trigger_dar(sdk_version):\n+    daml = \"@daml-sdk-{sdk_version}//:daml\".format(\n+        sdk_version = sdk_version,\n+    )\n+    native.genrule(\n+        name = \"trigger-example-dar-{sdk_version}\".format(\n+            sdk_version = version_to_name(sdk_version),\n+        ),\n+        srcs = [\n+            \"//bazel_tools/daml_trigger:example/src/CopyTrigger.daml\",\n+            \"//bazel_tools/daml_trigger:example/src/TestScript.daml\",\n+        ],\n+        outs = [\"trigger-example-{sdk_version}.dar\".format(\n+            sdk_version = version_to_name(sdk_version),\n+        )],\n+        tools = [daml],\n+        cmd = \"\"\"\\\n+set -euo pipefail\n+TMP_DIR=$$(mktemp -d)\n+cleanup() {{ rm -rf $$TMP_DIR; }}\n+trap cleanup EXIT\n+mkdir -p $$TMP_DIR/src\n+cp -L $(location //bazel_tools/daml_trigger:example/src/CopyTrigger.daml) $$TMP_DIR/src/\n+cp -L $(location //bazel_tools/daml_trigger:example/src/TestScript.daml) $$TMP_DIR/src/\n+cat <<EOF >$$TMP_DIR/daml.yaml\n+sdk-version: {sdk_version}\n+name: trigger-example\n+source: src\n+parties:\n+  - Alice\n+  - Bob"
  },
  {
    "id" : "dddbc3be-dcf0-4804-a3e6-483a034eba5c",
    "prId" : 6112,
    "comments" : [
      {
        "id" : "5514e3a7-db94-4685-b853-b2f977a492ef",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n```",
        "createdAt" : "2020-05-27T10:34:45Z",
        "updatedAt" : "2020-05-27T11:56:25Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4ad341a1b6e99a9daf01df515ae4f5092f22bb5e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,140 @@\n+# Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+load(\n+    \"@daml//bazel_tools/client_server:client_server_test.bzl\",\n+    \"client_server_test\",\n+)\n+load(\"//bazel_tools:versions.bzl\", \"version_to_name\")\n+\n+def daml_trigger_dar(sdk_version):\n+    daml = \"@daml-sdk-{sdk_version}//:daml\".format(\n+        sdk_version = sdk_version,\n+    )\n+    native.genrule(\n+        name = \"trigger-example-dar-{sdk_version}\".format(\n+            sdk_version = version_to_name(sdk_version),\n+        ),\n+        srcs = [\n+            \"//bazel_tools/daml_trigger:example/src/CopyTrigger.daml\",\n+            \"//bazel_tools/daml_trigger:example/src/TestScript.daml\",\n+        ],\n+        outs = [\"trigger-example-{sdk_version}.dar\".format(\n+            sdk_version = version_to_name(sdk_version),\n+        )],\n+        tools = [daml],\n+        cmd = \"\"\"\\\n+set -euo pipefail\n+TMP_DIR=$$(mktemp -d)\n+cleanup() {{ rm -rf $$TMP_DIR; }}\n+trap cleanup EXIT\n+mkdir -p $$TMP_DIR/src\n+cp -L $(location //bazel_tools/daml_trigger:example/src/CopyTrigger.daml) $$TMP_DIR/src/\n+cp -L $(location //bazel_tools/daml_trigger:example/src/TestScript.daml) $$TMP_DIR/src/\n+cat <<EOF >$$TMP_DIR/daml.yaml\n+sdk-version: {sdk_version}\n+name: trigger-example\n+source: src\n+parties:\n+  - Alice\n+  - Bob\n+version: 0.0.1\n+dependencies:\n+  - daml-prim\n+  - daml-script\n+  - daml-stdlib\n+  - daml-trigger\n+sandbox-options:\n+  - --wall-clock-time"
  },
  {
    "id" : "6b6b5b99-d791-449b-af83-90ec899062b6",
    "prId" : 6112,
    "comments" : [
      {
        "id" : "6f1a62e0-b000-4e79-a342-df6e94d53ecf",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I wonder if it would make sense to do the normalization in the runfiles library itself. Obviously that doesnâ€™t help us in the short term until it lands but it seems weird that Bazel requires this hack.",
        "createdAt" : "2020-05-27T10:36:43Z",
        "updatedAt" : "2020-05-27T11:56:25Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f440c11f-72b1-4e00-bf2e-e38e5e03e6ab",
        "parentId" : "6f1a62e0-b000-4e79-a342-df6e94d53ecf",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Yes, agreed, that should be fixed somewhere higher upstream. I'll look into whether there's a ticket already or raise one upstream.",
        "createdAt" : "2020-05-27T11:58:46Z",
        "updatedAt" : "2020-05-27T11:58:46Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4ad341a1b6e99a9daf01df515ae4f5092f22bb5e",
    "line" : 70,
    "diffHunk" : "@@ -0,0 +1,140 @@\n+# Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+load(\n+    \"@daml//bazel_tools/client_server:client_server_test.bzl\",\n+    \"client_server_test\",\n+)\n+load(\"//bazel_tools:versions.bzl\", \"version_to_name\")\n+\n+def daml_trigger_dar(sdk_version):\n+    daml = \"@daml-sdk-{sdk_version}//:daml\".format(\n+        sdk_version = sdk_version,\n+    )\n+    native.genrule(\n+        name = \"trigger-example-dar-{sdk_version}\".format(\n+            sdk_version = version_to_name(sdk_version),\n+        ),\n+        srcs = [\n+            \"//bazel_tools/daml_trigger:example/src/CopyTrigger.daml\",\n+            \"//bazel_tools/daml_trigger:example/src/TestScript.daml\",\n+        ],\n+        outs = [\"trigger-example-{sdk_version}.dar\".format(\n+            sdk_version = version_to_name(sdk_version),\n+        )],\n+        tools = [daml],\n+        cmd = \"\"\"\\\n+set -euo pipefail\n+TMP_DIR=$$(mktemp -d)\n+cleanup() {{ rm -rf $$TMP_DIR; }}\n+trap cleanup EXIT\n+mkdir -p $$TMP_DIR/src\n+cp -L $(location //bazel_tools/daml_trigger:example/src/CopyTrigger.daml) $$TMP_DIR/src/\n+cp -L $(location //bazel_tools/daml_trigger:example/src/TestScript.daml) $$TMP_DIR/src/\n+cat <<EOF >$$TMP_DIR/daml.yaml\n+sdk-version: {sdk_version}\n+name: trigger-example\n+source: src\n+parties:\n+  - Alice\n+  - Bob\n+version: 0.0.1\n+dependencies:\n+  - daml-prim\n+  - daml-script\n+  - daml-stdlib\n+  - daml-trigger\n+sandbox-options:\n+  - --wall-clock-time\n+EOF\n+$(location {daml}) build --project-root=$$TMP_DIR -o $$PWD/$(OUTS)\n+\"\"\".format(\n+            daml = daml,\n+            sdk_version = sdk_version,\n+        ),\n+    )\n+\n+def daml_trigger_test(compiler_version, runner_version):\n+    compiled_dar = \"//:trigger-example-dar-{version}\".format(\n+        version = version_to_name(compiler_version),\n+    )\n+    daml_runner = \"@daml-sdk-{version}//:daml\".format(\n+        version = runner_version,\n+    )\n+    name = \"daml-trigger-test-compiler-{compiler_version}-runner-{runner_version}\".format(\n+        compiler_version = version_to_name(compiler_version),\n+        runner_version = version_to_name(runner_version),\n+    )\n+    native.genrule(\n+        name = \"{}-client-sh\".format(name),\n+        outs = [\"{}-client.sh\".format(name)],\n+        cmd = \"\"\"\\\n+cat >$(OUTS) <<'EOF'\n+#!/usr/bin/env bash\n+set -euo pipefail\n+canonicalize_rlocation() {{"
  }
]