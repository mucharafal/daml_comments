[
  {
    "id" : "fbfd0848-cacc-458b-8e93-296ae89a0acb",
    "prId" : 5732,
    "comments" : [
      {
        "id" : "85d196c9-d08c-4a86-8ba0-63ce9e37fbb8",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Can that todo note be removed?",
        "createdAt" : "2020-04-28T13:46:31Z",
        "updatedAt" : "2020-04-28T13:55:45Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "26965510-e012-4f3c-b4c5-3f080d510362",
        "parentId" : "85d196c9-d08c-4a86-8ba0-63ce9e37fbb8",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : ":facepalm: removed",
        "createdAt" : "2020-04-28T13:57:29Z",
        "updatedAt" : "2020-04-28T13:57:29Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9a02dc4431886e43afc54ca6a0bc663365cc2ed6",
    "line" : null,
    "diffHunk" : "@@ -14,21 +16,25 @@ source \"${RUNFILES_DIR:-/dev/null}/$f\" 2>/dev/null || \\\n \"\"\"\n \n def _daml_sdk_impl(ctx):\n+    # The DAML assistant will mark the installed SDK read-only.\n+    # This breaks Bazel horribly on Windows to the point where\n+    # even `bazel clean --expunge` fails because it cannot remove\n+    # the installed SDK. Therefore, we do not use the assistant to\n+    # install the SDK but instead simply extract the SDK to the right\n+    # location and set the symlink ourselves.\n+    out_dir = ctx.path(\"sdk\").get_child(\"sdk\").get_child(ctx.attr.version)\n     if ctx.attr.sdk_tarball:\n         ctx.extract(\n             ctx.attr.sdk_tarball,\n-            output = \"extracted-sdk\",\n+            output = out_dir,\n             stripPrefix = \"sdk-{}\".format(ctx.attr.version),\n         )\n     elif ctx.attr.sdk_sha256:\n         ctx.download_and_extract(\n-            output = \"extracted-sdk\",\n+            output = out_dir,\n             # TODO (MK) Make this work on other platforms."
  },
  {
    "id" : "11787960-0f9b-4535-945d-bb14f06f469b",
    "prId" : 5732,
    "comments" : [
      {
        "id" : "590c45ce-81b4-4914-9293-f9a366f8bc38",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Hmm, isn't there a risk of these tests testing something else than what users what experience? E.g. if the DAML assistant performs some configuration at installation at some point. Would it work to remove the read-only flag after install? Maybe in a trap to avoid leaving the bazel tree in a bad state if installation fails.",
        "createdAt" : "2020-04-28T13:51:35Z",
        "updatedAt" : "2020-04-28T13:55:45Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3cad8c6c-9e6a-4355-82ec-9fbbc8cc9bec",
        "parentId" : "590c45ce-81b4-4914-9293-f9a366f8bc38",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Yes there is a small risk here but after having spend way too much time trying to make this work otherwise, this seemed like the most reasonable option to me. Testing the SDK installation isn’t really a compatibility thing anyway and we do still have the actual SDK integration tests for that (at least for now).",
        "createdAt" : "2020-04-28T13:57:22Z",
        "updatedAt" : "2020-04-28T13:57:22Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9a02dc4431886e43afc54ca6a0bc663365cc2ed6",
    "line" : 18,
    "diffHunk" : "@@ -14,21 +16,25 @@ source \"${RUNFILES_DIR:-/dev/null}/$f\" 2>/dev/null || \\\n \"\"\"\n \n def _daml_sdk_impl(ctx):\n+    # The DAML assistant will mark the installed SDK read-only.\n+    # This breaks Bazel horribly on Windows to the point where\n+    # even `bazel clean --expunge` fails because it cannot remove\n+    # the installed SDK. Therefore, we do not use the assistant to\n+    # install the SDK but instead simply extract the SDK to the right\n+    # location and set the symlink ourselves."
  },
  {
    "id" : "c75a64c8-40c6-48dc-b25c-c51d825ffdeb",
    "prId" : 5705,
    "comments" : [
      {
        "id" : "bebe817f-088c-4ac6-8527-319850fb1ee9",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "The remainder of this snippet uses double braces when it should use single braces. Best take a fresh copy from `BAZEL-bash.md`.",
        "createdAt" : "2020-04-24T09:53:17Z",
        "updatedAt" : "2020-04-24T10:01:19Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5cdb3abb-a424-4c63-8ec1-62da0f2616c8",
        "parentId" : "bebe817f-088c-4ac6-8527-319850fb1ee9",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Oh good catch, thank you! That’s leftover from when I still had this inlined.",
        "createdAt" : "2020-04-24T10:01:42Z",
        "updatedAt" : "2020-04-24T10:03:20Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ded6b68b4154f8f0a95eedd02f7655b0ea279eb3",
    "line" : null,
    "diffHunk" : "@@ -3,7 +3,7 @@\n \n runfiles_library = \"\"\"\n # Copy-pasted from the Bazel Bash runfiles library v2.\n-set -uox pipefail; f=bazel_tools/tools/bash/runfiles/runfiles.bash\n+set -uo pipefail; f=bazel_tools/tools/bash/runfiles/runfiles.bash\n source \"${{RUNFILES_DIR:-/dev/null}}/$f\" 2>/dev/null || \\"
  }
]