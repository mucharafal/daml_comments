[
  {
    "id" : "2083a728-248e-45c6-b9e3-961ecb8473a0",
    "prId" : 6283,
    "comments" : [
      {
        "id" : "3499092b-ed8b-4759-8b0f-a6d5632c967e",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n                  waitForProcess mvnHandle\r\n```",
        "createdAt" : "2020-06-10T09:04:27Z",
        "updatedAt" : "2020-06-10T09:11:22Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b7a34f0e-c311-4485-a731-e190e8b5508d",
        "parentId" : "3499092b-ed8b-4759-8b0f-a6d5632c967e",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Done.",
        "createdAt" : "2020-06-10T09:11:38Z",
        "updatedAt" : "2020-06-10T09:11:38Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ffa5069f3072e40f12f134ba49fed3b5e3a78427",
    "line" : null,
    "diffHunk" : "@@ -131,17 +140,18 @@ main = do\n                 (forM_ npmPackages\n                   $ \\rule -> liftIO $ callCommand $ \"bazel run \" <> rule <> \":npm_package.publish -- --access public\")\n \n-         | optsLocallyInstallJars -> do\n-              let lib_jars = filter (\\(mvn,_) -> (artifactType mvn == \"jar\" || artifactType mvn == \"pom\") && Maybe.isNothing (classifier mvn)) mvnUploadArtifacts\n-              forM_ lib_jars $ \\(mvn_coords, path) -> do\n-                  let args = [\"install:install-file\",\n-                              \"-Dfile=\" <> pathToString releaseDir <> pathToString path,\n-                              \"-DgroupId=\" <> (groupIdString $ groupId mvn_coords),\n-                              \"-DartifactId=\" <> (T.unpack $ artifactId mvn_coords),\n-                              \"-Dversion=0.0.0\",\n-                              \"-Dpackaging=\" <> (T.unpack $ artifactType mvn_coords)]\n-                  liftIO $ callProcess \"mvn\" args\n-         | otherwise -> $logInfo \"Dry run selected: not uploading, not installing\"\n+          | optsLocallyInstallJars -> do\n+              pom <- generateAggregatePom bazelLocations mvnArtifacts\n+              pomPath <- (releaseDir </>) <$> parseRelFile \"pom.xml\"\n+              liftIO $ T.IO.writeFile (toFilePath pomPath) pom\n+              exitCode <- liftIO $ withCreateProcess ((proc \"mvn\" [\"initialize\"]) { cwd = Just (toFilePath releaseDir) }) $ \\_ _ _ mvnHandle ->\n+                  liftIO $ waitForProcess mvnHandle"
  },
  {
    "id" : "0657f96c-0d30-4bc9-8c00-d9c56a77c5da",
    "prId" : 5272,
    "comments" : [
      {
        "id" : "3b2c212a-5f08-4c5a-a0c0-a4a776279cad",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n      let nonComDamlGroupId = filter (\\a -> \"com.daml\" /= List.intercalate \".\" (map T.unpack $ pomGroupId $ artMetadata a)) mavenUploadArtifacts\r\n```\r\nPlease don’t ask me how you should remember the difference between `intercalate` and `intersperse`. I just randomly try both until it works.",
        "createdAt" : "2020-03-31T19:09:44Z",
        "updatedAt" : "2020-04-01T06:51:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "26153e4e-fc06-47c4-be4c-03c2cad7c497",
        "parentId" : "3b2c212a-5f08-4c5a-a0c0-a4a776279cad",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Thanks. I mostly copy-pasta-ed this from some code further below. Wasn't super happy with it, but also none the wiser. I'll fix it there as well.",
        "createdAt" : "2020-04-01T06:35:38Z",
        "updatedAt" : "2020-04-01T06:51:55Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "89330f7b27582cdb0a66d5353de307e46c5e2267",
    "line" : null,
    "diffHunk" : "@@ -50,7 +50,26 @@ main = do\n       let nonDeployJars = filter (not . isDeployJar . artReleaseType) mavenUploadArtifacts\n       let allMavenTargets = Set.fromList $ fmap (T.unpack . getBazelTarget . artTarget) mavenUploadArtifacts\n \n-      -- first find out all the missing internal dependencies\n+      -- check that all maven artifacts use com.daml as groupId\n+      let nonComDamlGroupId = filter (\\a -> (\"com.daml\" /=) $ foldr (<>) \"\" (List.intersperse \".\" $ map T.unpack $ pomGroupId $ artMetadata a)) mavenUploadArtifacts"
  },
  {
    "id" : "74a5fb00-a7ab-44b1-a7a2-29bac79fced8",
    "prId" : 5272,
    "comments" : [
      {
        "id" : "5dbb75dd-075c-4016-835d-b67fa704f5ee",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n      let groupedArtifacts = List.groupOn (pomArtifactId . artMetadata) mavenUploadArtifacts\r\n```\r\nNeeds a change in the import from `Data.List` to `Data.List.Extra` but we already depend on `extra` anyway so no reason not to use it.",
        "createdAt" : "2020-03-31T19:16:39Z",
        "updatedAt" : "2020-04-01T06:51:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "223961c4-5b94-4eed-86f1-9165e8f9fde2",
        "parentId" : "5dbb75dd-075c-4016-835d-b67fa704f5ee",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Thank you. This was annoying me as well, but didn't know about `groupOn`.",
        "createdAt" : "2020-04-01T06:40:38Z",
        "updatedAt" : "2020-04-01T06:51:55Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "89330f7b27582cdb0a66d5353de307e46c5e2267",
    "line" : null,
    "diffHunk" : "@@ -50,7 +50,26 @@ main = do\n       let nonDeployJars = filter (not . isDeployJar . artReleaseType) mavenUploadArtifacts\n       let allMavenTargets = Set.fromList $ fmap (T.unpack . getBazelTarget . artTarget) mavenUploadArtifacts\n \n-      -- first find out all the missing internal dependencies\n+      -- check that all maven artifacts use com.daml as groupId\n+      let nonComDamlGroupId = filter (\\a -> (\"com.daml\" /=) $ foldr (<>) \"\" (List.intersperse \".\" $ map T.unpack $ pomGroupId $ artMetadata a)) mavenUploadArtifacts\n+      when (not (null nonComDamlGroupId)) $ do\n+          $logError \"Some artifacts don't use com.daml as groupId!\"\n+          forM_ nonComDamlGroupId $ \\artifact -> do\n+              $logError (\"\\t- \"# getBazelTarget (artTarget artifact))\n+          liftIO exitFailure\n+\n+      -- check that no artifact id is used more than once\n+      let groupedArtifacts = List.groupBy (\\a b -> (pomArtifactId $ artMetadata a) == (pomArtifactId $ artMetadata b)) mavenUploadArtifacts"
  },
  {
    "id" : "b100821a-5387-4f6d-b5e9-906022903d4f",
    "prId" : 4513,
    "comments" : [
      {
        "id" : "7386bcb6-1e05-46e8-a304-5b8f410a4d5c",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "The changes to `//release` are mixing up a bunch of refactorings (hardcoding the artifacts.yaml, newtyping `TextVersion`). Given that this PR is already very large (by necessity mostly), it might be worth considering to split that out.",
        "createdAt" : "2020-02-19T10:52:30Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1e048d37-e234-478d-803a-310808b97763",
        "parentId" : "7386bcb6-1e05-46e8-a304-5b8f410a4d5c",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I'll try. The refactorings were mostly to make my life easier in making the \"real\" changes so they may be a bit difficult to extract.",
        "createdAt" : "2020-02-19T12:51:39Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "628b160b-56bc-4779-ba6f-ef64950ca03f",
        "parentId" : "7386bcb6-1e05-46e8-a304-5b8f410a4d5c",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Thinking about it again, I’m fine with keeping this. I don’t want to cause even more work for you :slightly_smiling_face: ",
        "createdAt" : "2020-02-19T15:25:50Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "81246bd2733ace93653cb663dca5a0cdaf7c11e9",
    "line" : 24,
    "diffHunk" : "@@ -25,33 +25,26 @@ import Types\n import Upload\n import Util\n \n+import qualified SdkVersion\n+\n main :: IO ()\n main = do\n   opts@Options{..} <- parseOptions\n   runLog opts $ do\n       releaseDir <- parseAbsDir =<< liftIO (Dir.makeAbsolute optsReleaseDir)\n       liftIO $ createDirIfMissing True releaseDir\n-      $logInfo \"Checking if we should release\"\n-      sdkVersion <- readVersionAt \"HEAD\"\n-      release <- isReleaseCommit\n-      let upload = if release then optsPerformUpload else PerformUpload False\n-      -- NOTE(MH): We add 100 to get version numbers for the individual\n-      -- components which are bigger than all version numbers we used\n-      -- before moving to the new daml repo.\n-      let compVersion = sdkVersion{versionMajor = 100 + versionMajor sdkVersion}\n-\n-      artifacts :: [Artifact (Maybe ArtifactLocation)] <- decodeFileThrow optsArtifacts\n-\n-      let targets = concatMap buildTargets artifacts\n+      mvnArtifacts :: [Artifact (Maybe ArtifactLocation)] <- decodeFileThrow \"release/artifacts.yaml\""
  },
  {
    "id" : "7212dcba-b300-430a-bd4b-bc4fc3a3b840",
    "prId" : 4275,
    "comments" : [
      {
        "id" : "6fe99f3b-eda9-4b72-8ee9-493204081812",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n                liftIO $ bracket_\r\n```",
        "createdAt" : "2020-01-29T19:19:46Z",
        "updatedAt" : "2020-01-30T09:14:28Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a259f2c83a78de613fcbb202c9ae095a36490788",
    "line" : null,
    "diffHunk" : "@@ -116,12 +116,14 @@ main = do\n               -- We can't put an .npmrc file in the root of the directory because other bazel npm\n               -- code picks it up and looks for the token which is not yet set before the release\n               -- phase.\n-              $logDebug \"Uploading npm packages\"\n-              liftIO $ bracket\n-                (writeFile npmrcPath \"//registry.npmjs.org/:_authToken=${NPM_TOKEN}\")\n-                (\\() -> Dir.removeFile npmrcPath)\n-                (\\() -> forM_ npmPackages\n-                  $ \\rule -> liftIO $ callCommand $ \"bazel run \" <> rule <> \":npm_package.publish --access public\")\n+              -- Only upload from the linux machine.\n+              when (osName == \"linux\") $ do\n+                $logDebug \"Uploading npm packages\"\n+                liftIO $ bracket"
  },
  {
    "id" : "41353073-5c50-4e3f-8fe8-dbfd51ce6144",
    "prId" : 4275,
    "comments" : [
      {
        "id" : "20821d31-93eb-46bc-9e6e-1dd068a7fe6e",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n                  (Dir.removeFile npmrcPath)\r\n```",
        "createdAt" : "2020-01-29T19:20:00Z",
        "updatedAt" : "2020-01-30T09:14:28Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a259f2c83a78de613fcbb202c9ae095a36490788",
    "line" : null,
    "diffHunk" : "@@ -116,12 +116,14 @@ main = do\n               -- We can't put an .npmrc file in the root of the directory because other bazel npm\n               -- code picks it up and looks for the token which is not yet set before the release\n               -- phase.\n-              $logDebug \"Uploading npm packages\"\n-              liftIO $ bracket\n-                (writeFile npmrcPath \"//registry.npmjs.org/:_authToken=${NPM_TOKEN}\")\n-                (\\() -> Dir.removeFile npmrcPath)\n-                (\\() -> forM_ npmPackages\n-                  $ \\rule -> liftIO $ callCommand $ \"bazel run \" <> rule <> \":npm_package.publish --access public\")\n+              -- Only upload from the linux machine.\n+              when (osName == \"linux\") $ do\n+                $logDebug \"Uploading npm packages\"\n+                liftIO $ bracket\n+                  (writeFile npmrcPath \"//registry.npmjs.org/:_authToken=${NPM_TOKEN}\")\n+                  (\\() -> Dir.removeFile npmrcPath)"
  },
  {
    "id" : "629f7f28-4819-481b-af5b-7f9c65e0fec0",
    "prId" : 4275,
    "comments" : [
      {
        "id" : "b3a888b6-ec71-4247-ab58-77bec84bc605",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n                  (forM_ npmPackages\r\n```",
        "createdAt" : "2020-01-29T19:20:16Z",
        "updatedAt" : "2020-01-30T09:14:28Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a259f2c83a78de613fcbb202c9ae095a36490788",
    "line" : null,
    "diffHunk" : "@@ -116,12 +116,14 @@ main = do\n               -- We can't put an .npmrc file in the root of the directory because other bazel npm\n               -- code picks it up and looks for the token which is not yet set before the release\n               -- phase.\n-              $logDebug \"Uploading npm packages\"\n-              liftIO $ bracket\n-                (writeFile npmrcPath \"//registry.npmjs.org/:_authToken=${NPM_TOKEN}\")\n-                (\\() -> Dir.removeFile npmrcPath)\n-                (\\() -> forM_ npmPackages\n-                  $ \\rule -> liftIO $ callCommand $ \"bazel run \" <> rule <> \":npm_package.publish --access public\")\n+              -- Only upload from the linux machine.\n+              when (osName == \"linux\") $ do\n+                $logDebug \"Uploading npm packages\"\n+                liftIO $ bracket\n+                  (writeFile npmrcPath \"//registry.npmjs.org/:_authToken=${NPM_TOKEN}\")\n+                  (\\() -> Dir.removeFile npmrcPath)\n+                  (\\() -> forM_ npmPackages"
  },
  {
    "id" : "8447e73d-8a61-4c67-ab20-ed66e6c19abf",
    "prId" : 4185,
    "comments" : [
      {
        "id" : "6f6f4803-f127-45c4-a4c6-6573c11636cc",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Maybe always build these to detect typos before an upload?",
        "createdAt" : "2020-01-23T15:21:17Z",
        "updatedAt" : "2020-01-23T16:38:07Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b8704e62-3ab2-477a-ba12-d650aa300ab5",
        "parentId" : "6f6f4803-f127-45c4-a4c6-6573c11636cc",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "that makes sense!",
        "createdAt" : "2020-01-23T15:22:17Z",
        "updatedAt" : "2020-01-23T16:38:07Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "38d6dd34355799f8b23684722e1720629a6c05ad",
    "line" : null,
    "diffHunk" : "@@ -86,6 +86,10 @@ main = do\n       uploadArtifacts <- concatMapM (mavenArtifactCoords optsAllArtifacts) mavenUploadArtifacts\n       validateMavenArtifacts releaseDir uploadArtifacts\n \n+      let npmPackages =\n+            [ \"//language-support/ts/daml-ledger:npm_package\""
  },
  {
    "id" : "d459f1df-06bd-460b-9939-59064e0a9ace",
    "prId" : 4185,
    "comments" : [
      {
        "id" : "10a2bd5f-cfe4-4303-aba5-19656efb9cb4",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "We might need to upload these packages in reverse order since the former depends on the latter. I suggest we reverse the list to be on the safe side.",
        "createdAt" : "2020-01-23T16:28:41Z",
        "updatedAt" : "2020-01-23T16:38:07Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2247a1c8-3251-4961-912f-26b6004e2ea4",
        "parentId" : "10a2bd5f-cfe4-4303-aba5-19656efb9cb4",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "I'll change it to be on the safe side.",
        "createdAt" : "2020-01-23T16:32:35Z",
        "updatedAt" : "2020-01-23T16:38:07Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "38d6dd34355799f8b23684722e1720629a6c05ad",
    "line" : null,
    "diffHunk" : "@@ -86,6 +87,14 @@ main = do\n       uploadArtifacts <- concatMapM (mavenArtifactCoords optsAllArtifacts) mavenUploadArtifacts\n       validateMavenArtifacts releaseDir uploadArtifacts\n \n+      -- npm packages we want to publish.\n+      let npmPackages =\n+            [ \"//language-support/ts/daml-ledger\""
  },
  {
    "id" : "950a454e-703d-4fb8-b9da-2b225d4040d6",
    "prId" : 3454,
    "comments" : [
      {
        "id" : "08a2d8ec-8071-4dc9-85a3-352a2cd03696",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Definitely not important here given that this whole script is somewhat adhoc but if you are interested in some Haskell design patterns, I prefer having this kind of filtering change the type, e.g., here you could use something like `mapMaybe (\\(a, missing) -> (a,) <$> Data.List.NonEmpty.nonEmpty missing)`. That makes it clearer what guarantees hold afterwards. (Again, I’m totally fine not doing this here).",
        "createdAt" : "2019-11-14T08:42:04Z",
        "updatedAt" : "2019-11-14T08:42:24Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "70e7b2b6-af09-4410-a278-81d314b9ccc9",
        "parentId" : "08a2d8ec-8071-4dc9-85a3-352a2cd03696",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Thanks 👍 ",
        "createdAt" : "2019-11-14T09:19:41Z",
        "updatedAt" : "2019-11-14T09:19:42Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3382e06a9bea96678395a4d86f576537d46a8409",
    "line" : 34,
    "diffHunk" : "@@ -47,12 +49,34 @@ main = do\n       $logInfo \"Reading metadata from pom files\"\n       artifacts <- liftIO $ mapM (resolvePomData bazelLocations sdkVersion compVersion) artifacts\n \n+      let mavenUploadArtifacts = filter (\\a -> getMavenUpload $ artMavenUpload a) artifacts\n+\n+      -- all known targets uploaded to maven\n+      let allMavenTargets = Set.fromList $ fmap (T.unpack . getBazelTarget . artTarget) mavenUploadArtifacts\n+\n+      -- first find out all the missing internal dependencies\n+      missingDepsForAllArtifacts <- forM mavenUploadArtifacts $ \\a -> do\n+          -- run a bazel query to find all internal java and scala library dependencies\n+          let bazelQueryCommand = shell $ \"bazel query 'kind(\\\"(scala|java)_library\\\", deps(\" ++ (T.unpack . getBazelTarget . artTarget) a ++ \")) intersect //...'\"\n+          internalDeps <- liftIO $ lines <$> readCreateProcess bazelQueryCommand \"\"\n+          -- check if a dependency is not already a maven target from artifacts.yaml\n+          let missingDeps = filter (`Set.notMember` allMavenTargets) internalDeps\n+          return (a, missingDeps)\n+\n+      let onlyMissing = filter (not . null . snd) missingDepsForAllArtifacts"
  },
  {
    "id" : "1100ad48-df81-40f1-b670-16a39c35e50e",
    "prId" : 2652,
    "comments" : [
      {
        "id" : "970bad5c-0b3d-4436-94b3-2a8fdd974e6f",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "A `MultiWayIf` would work nicely here.",
        "createdAt" : "2019-08-23T14:50:27Z",
        "updatedAt" : "2019-08-27T11:51:21Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3eb93678-eca4-49e1-a0a6-28a0566a7aad",
        "parentId" : "970bad5c-0b3d-4436-94b3-2a8fdd974e6f",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I was not aware of that. Thanks!",
        "createdAt" : "2019-08-23T15:13:23Z",
        "updatedAt" : "2019-08-27T11:51:21Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "761c777845acc4d398544086d5fec79c4a2a5b56",
    "line" : null,
    "diffHunk" : "@@ -70,8 +72,19 @@ main = do\n               -- set variables for next steps in Azure pipelines\n               liftIO . putStrLn $ \"##vso[task.setvariable variable=has_released;isOutput=true]true\"\n               liftIO . putStrLn . T.unpack $ \"##vso[task.setvariable variable=release_tag]\" # renderVersion sdkVersion\n-          else $logInfo \"Make dry run of release\"\n-\n+          else if optsLocallyInstallJars"
  },
  {
    "id" : "961d149c-211e-4165-9505-5c99c02fee62",
    "prId" : 2652,
    "comments" : [
      {
        "id" : "17ebb30b-27c1-47c7-9e97-e5dc5ff4f44a",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I don’t understand what you are trying to do here. Why capture stdout only to then print it again via `putStrLn`? I would just use `callProcess` which will also make sure to throw an exception if the process exits with a non-zero exit code.",
        "createdAt" : "2019-08-23T14:53:54Z",
        "updatedAt" : "2019-08-27T11:51:21Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "43c320a8-0b86-4a8c-a208-1b8f951567f5",
        "parentId" : "17ebb30b-27c1-47c7-9e97-e5dc5ff4f44a",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I guess I'm trying to do exactly what `callProcess` does. Will update to use that.",
        "createdAt" : "2019-08-23T15:00:26Z",
        "updatedAt" : "2019-08-27T11:51:21Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "761c777845acc4d398544086d5fec79c4a2a5b56",
    "line" : null,
    "diffHunk" : "@@ -70,8 +72,19 @@ main = do\n               -- set variables for next steps in Azure pipelines\n               liftIO . putStrLn $ \"##vso[task.setvariable variable=has_released;isOutput=true]true\"\n               liftIO . putStrLn . T.unpack $ \"##vso[task.setvariable variable=release_tag]\" # renderVersion sdkVersion\n-          else $logInfo \"Make dry run of release\"\n-\n+          else if optsLocallyInstallJars\n+                  then liftIO $ do\n+                      forM_ (filter (\\(mvn,_) -> artifactType mvn == \"jar\") uploadArtifacts) $ \\(mvn_coords, path) -> do\n+                          let args = [\"install:install-file\",\n+                                      \"-Dfile=\" <> pathToString releaseDir <> pathToString path,\n+                                      \"-DgroupId=\" <> foldr (<>) \"\" (List.intersperse \".\" $ map T.unpack $ groupId mvn_coords),\n+                                      \"-DartifactId=\" <> (T.unpack $ artifactId mvn_coords),\n+                                      \"-Dversion=0.0.0-SNAPSHOT\",\n+                                      \"-Dpackaging=\" <> (T.unpack $ artifactType mvn_coords)]\n+                          (_, Just hout, _, _) <- createProcess (proc \"mvn\" args) {std_out = CreatePipe}"
  },
  {
    "id" : "2500097d-2f88-424d-943a-cb507a911a84",
    "prId" : 1205,
    "comments" : [
      {
        "id" : "07575797-39db-4e24-9ecc-76acc4af6eda",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This comment looks like it should be addressed before we merge this?",
        "createdAt" : "2019-05-17T06:35:26Z",
        "updatedAt" : "2019-06-17T13:09:52Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e3974534-073f-4fc9-adc5-768ad4ff0903",
        "parentId" : "07575797-39db-4e24-9ecc-76acc4af6eda",
        "author" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "body" : "Absolutely!",
        "createdAt" : "2019-05-17T06:53:41Z",
        "updatedAt" : "2019-06-17T13:09:52Z",
        "lastEditedBy" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4e921d1c4fbbaa2ed6afdae1675b3daaa6fa5ef3",
    "line" : null,
    "diffHunk" : "@@ -54,10 +55,26 @@ main = do\n           then do\n               $logInfo \"Make release\"\n               releaseToBintray upload releaseDir (map (\\(a, (_, outp)) -> (a, outp)) files)\n+          else $logInfo \"Make dry run of release\"\n+\n+      -- Uploading to Maven Central\n+      let mavenUploadArtifacts = filter (\\a -> getMavenUpload $ artMavenUpload a) artifacts\n+      uploadArtifacts <- fmap concat $ forM mavenUploadArtifacts $ \\a -> do\n+          fs <- artifactCoords optsAllArtifacts a\n+          pure fs\n+\n+      -- Remove permanent upload!!!\n+      uploadToMavenCentral (PerformUpload { getPerformUpload = True }) bazelLocations uploadArtifacts"
  },
  {
    "id" : "f90ad921-87d3-4fd8-b510-f8144a648e56",
    "prId" : 1205,
    "comments" : [
      {
        "id" : "9dfcb4a2-8160-4754-b250-33469297bd03",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n      uploadArtifacts <- concat <$> mapM (artifactCoords optsAllArtifacts) mavenUploadArtifacts\r\n```",
        "createdAt" : "2019-05-17T06:36:31Z",
        "updatedAt" : "2019-06-17T13:09:52Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4e921d1c4fbbaa2ed6afdae1675b3daaa6fa5ef3",
    "line" : null,
    "diffHunk" : "@@ -54,10 +55,26 @@ main = do\n           then do\n               $logInfo \"Make release\"\n               releaseToBintray upload releaseDir (map (\\(a, (_, outp)) -> (a, outp)) files)\n+          else $logInfo \"Make dry run of release\"\n+\n+      -- Uploading to Maven Central\n+      let mavenUploadArtifacts = filter (\\a -> getMavenUpload $ artMavenUpload a) artifacts\n+      uploadArtifacts <- fmap concat $ forM mavenUploadArtifacts $ \\a -> do"
  },
  {
    "id" : "3b9af2a0-5957-4900-ae37-416269e4fa5c",
    "prId" : 1205,
    "comments" : [
      {
        "id" : "996030d2-2c65-482b-8460-645ce4636edf",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "You can use `when b a` instead of `if b then a else pure ()`",
        "createdAt" : "2019-05-17T06:36:57Z",
        "updatedAt" : "2019-06-17T13:09:52Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f06b07b5-4ff1-4287-852e-49805fd7fad9",
        "parentId" : "996030d2-2c65-482b-8460-645ce4636edf",
        "author" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "body" : "Thanks for the tip.\r\nImplemented.",
        "createdAt" : "2019-05-29T09:34:45Z",
        "updatedAt" : "2019-06-17T13:09:52Z",
        "lastEditedBy" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4e921d1c4fbbaa2ed6afdae1675b3daaa6fa5ef3",
    "line" : null,
    "diffHunk" : "@@ -54,10 +55,26 @@ main = do\n           then do\n               $logInfo \"Make release\"\n               releaseToBintray upload releaseDir (map (\\(a, (_, outp)) -> (a, outp)) files)\n+          else $logInfo \"Make dry run of release\"\n+\n+      -- Uploading to Maven Central\n+      let mavenUploadArtifacts = filter (\\a -> getMavenUpload $ artMavenUpload a) artifacts\n+      uploadArtifacts <- fmap concat $ forM mavenUploadArtifacts $ \\a -> do\n+          fs <- artifactCoords optsAllArtifacts a\n+          pure fs\n+\n+      -- Remove permanent upload!!!\n+      uploadToMavenCentral (PerformUpload { getPerformUpload = True }) bazelLocations uploadArtifacts\n+\n+      $logInfo \"Finished\"\n+\n+      if getPerformUpload upload"
  },
  {
    "id" : "77661914-ec64-481a-be32-e2e51b0ffbb7",
    "prId" : 1205,
    "comments" : [
      {
        "id" : "b11501e0-20dc-4653-91fb-af47e5a4baa6",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "This line and the one above must be deleted after applying @cocreature's suggestion.",
        "createdAt" : "2019-05-17T07:44:25Z",
        "updatedAt" : "2019-06-17T13:09:52Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4e921d1c4fbbaa2ed6afdae1675b3daaa6fa5ef3",
    "line" : null,
    "diffHunk" : "@@ -54,10 +55,26 @@ main = do\n           then do\n               $logInfo \"Make release\"\n               releaseToBintray upload releaseDir (map (\\(a, (_, outp)) -> (a, outp)) files)\n+          else $logInfo \"Make dry run of release\"\n+\n+      -- Uploading to Maven Central\n+      let mavenUploadArtifacts = filter (\\a -> getMavenUpload $ artMavenUpload a) artifacts\n+      uploadArtifacts <- concat <$> mapM (artifactCoords optsAllArtifacts) mavenUploadArtifacts\n+          fs <- artifactCoords optsAllArtifacts a\n+          pure fs"
  },
  {
    "id" : "cf9da955-4920-4e8a-88ef-787164b8ed3e",
    "prId" : 1205,
    "comments" : [
      {
        "id" : "f60205b2-a58f-4c08-9a55-19748fe0e98e",
        "parentId" : null,
        "author" : null,
        "body" : "Perhaps `concatMapM` would work here:\r\n\r\n```Haskell\r\nuploadArtifacts <- concatMapM (artifactCoords optsAllArtifacts) mavenUploadArtifacts\r\n```",
        "createdAt" : "2019-06-14T13:01:58Z",
        "updatedAt" : "2019-06-17T13:09:52Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1511f0fe-dfc3-4e20-9e7f-6d6ff4d47808",
        "parentId" : "f60205b2-a58f-4c08-9a55-19748fe0e98e",
        "author" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "body" : "implemented In 2d9b593a6",
        "createdAt" : "2019-06-14T18:35:57Z",
        "updatedAt" : "2019-06-17T13:09:52Z",
        "lastEditedBy" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4e921d1c4fbbaa2ed6afdae1675b3daaa6fa5ef3",
    "line" : null,
    "diffHunk" : "@@ -54,10 +55,19 @@ main = do\n           then do\n               $logInfo \"Make release\"\n               releaseToBintray upload releaseDir (map (\\(a, (_, outp)) -> (a, outp)) files)\n+\n+              -- Uploading to Maven Central\n+              mavenUploadConfig <- mavenConfigFromEnv\n+\n+              let mavenUploadArtifacts = filter (\\a -> getMavenUpload $ artMavenUpload a) artifacts\n+              uploadArtifacts <- concat <$> mapM (artifactCoords optsAllArtifacts) mavenUploadArtifacts"
  },
  {
    "id" : "20faab70-9742-47b1-85e5-005b47bf3350",
    "prId" : 1205,
    "comments" : [
      {
        "id" : "59392c5a-0edb-4a0f-8b47-34a1f650e8cf",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This definitely needs to go back before we merge.",
        "createdAt" : "2019-06-17T09:46:28Z",
        "updatedAt" : "2019-06-17T13:09:52Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6f78bd8a-5ed9-4d2c-ae64-e70b516d880f",
        "parentId" : "59392c5a-0edb-4a0f-8b47-34a1f650e8cf",
        "author" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "body" : "Indeed! Should never of got commited!",
        "createdAt" : "2019-06-17T10:01:42Z",
        "updatedAt" : "2019-06-17T13:09:52Z",
        "lastEditedBy" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c108b5f6-0e6e-487c-9b5e-3b64b7e4924f",
        "parentId" : "59392c5a-0edb-4a0f-8b47-34a1f650e8cf",
        "author" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "body" : "Fixed in 7a8baf12b",
        "createdAt" : "2019-06-17T10:40:12Z",
        "updatedAt" : "2019-06-17T13:09:52Z",
        "lastEditedBy" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4e921d1c4fbbaa2ed6afdae1675b3daaa6fa5ef3",
    "line" : null,
    "diffHunk" : "@@ -28,7 +29,8 @@ main = do\n       liftIO $ createDirIfMissing True releaseDir\n       $logInfo \"Checking if we should release\"\n       sdkVersion <- readVersionAt \"HEAD\"\n-      release <- isReleaseCommit\n+      -- release <- isReleaseCommit\n+      let release = True"
  },
  {
    "id" : "7dcbe742-0344-40fe-9db4-8dad8c7ff67b",
    "prId" : 1205,
    "comments" : [
      {
        "id" : "58795a9d-e144-46b1-9017-9d4a5ca1b8bd",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I thought the plan was to keep uploading to Bintray as well? If we want to stop doing that, we should just delete this line and the code implementing it.",
        "createdAt" : "2019-06-17T09:49:31Z",
        "updatedAt" : "2019-06-17T13:09:52Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "147b18d9-2762-474d-9daf-914b0c04b728",
        "parentId" : "58795a9d-e144-46b1-9017-9d4a5ca1b8bd",
        "author" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "body" : "This was another change that should never of got commited.",
        "createdAt" : "2019-06-17T10:08:44Z",
        "updatedAt" : "2019-06-17T13:09:52Z",
        "lastEditedBy" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f50d5bfc-ca40-4499-956f-f76693c8dac5",
        "parentId" : "58795a9d-e144-46b1-9017-9d4a5ca1b8bd",
        "author" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "body" : "Fixed in 7a8baf12b",
        "createdAt" : "2019-06-17T10:40:17Z",
        "updatedAt" : "2019-06-17T13:09:52Z",
        "lastEditedBy" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4e921d1c4fbbaa2ed6afdae1675b3daaa6fa5ef3",
    "line" : null,
    "diffHunk" : "@@ -53,11 +55,20 @@ main = do\n       if getPerformUpload upload\n           then do\n               $logInfo \"Make release\"\n-              releaseToBintray upload releaseDir (map (\\(a, (_, outp)) -> (a, outp)) files)\n+--              releaseToBintray upload releaseDir (map (\\(a, (_, outp)) -> (a, outp)) files)"
  },
  {
    "id" : "e0ea7ac5-9d3c-4937-a298-1d0d042fa906",
    "prId" : 413,
    "comments" : [
      {
        "id" : "1e65f934-a0d9-4327-890d-bf79fe80d2bd",
        "parentId" : null,
        "author" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "body" : "It would be nice to add a comment that explains this/links to the docs. I had to google this to understand how it works :smile:\r\n\r\nI would also recommend that you use `putStrLn` instead of `$logInfo`. `$logInfo` might mess around with formatting and I am not sure how sensitive Azure is in that regard.\r\n",
        "createdAt" : "2019-04-11T18:44:30Z",
        "updatedAt" : "2019-04-12T09:46:26Z",
        "lastEditedBy" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4f12b671-5338-44f2-af01-15b48b92a626",
        "parentId" : "1e65f934-a0d9-4327-890d-bf79fe80d2bd",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "`putStrLn` was my first attempts, but I could not get it to typecheck. Any suggestion welcome; error message is: \r\n```\r\nrelease/src/Main.hs:47:19: error:\r\n    • Couldn't match type ‘IO’ with ‘LoggingT IO’\r\n      Expected type: LoggingT IO ()\r\n        Actual type: IO ()\r\n    • In a stmt of a 'do' block:\r\n        putStrLn \"##vso[task.setvariable variable=has_released]true\"\r\n      In the expression:\r\n        do ((((monadLoggerLog\r\n                 (((((Loc \"release/src/Main.hs\") \"main\") \"Main\") (42, 19))\r\n                    (42, 27)))\r\n                (T.pack \"\"))\r\n               LevelInfo\r\n               . (id :: T.Text -> T.Text)))\r\n             \"Make release\"\r\n           for_ optsSlackReleaseMessageFile $ \\ fp -> do ...\r\n           releaseToBintray upload releaseDir artifacts\r\n           putStrLn \"##vso[task.setvariable variable=has_released]true\"\r\n           ....\r\n```",
        "createdAt" : "2019-04-12T09:23:46Z",
        "updatedAt" : "2019-04-12T09:46:26Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8754ee5d-3e38-43a4-8cc4-0d355c902ecc",
        "parentId" : "1e65f934-a0d9-4327-890d-bf79fe80d2bd",
        "author" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "body" : "Try `liftIO $ putStrLn \"…\"`. `liftIO` allows you to lift an action of type `IO a` into anything that is an instance of `MonadIO` and `LoggingT IO` is an instance of `MonadIO`.",
        "createdAt" : "2019-04-12T09:26:05Z",
        "updatedAt" : "2019-04-12T09:46:26Z",
        "lastEditedBy" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6c92582e-1103-4972-bebf-d7c7fde17e20",
        "parentId" : "1e65f934-a0d9-4327-890d-bf79fe80d2bd",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Re: the comment I put an explanation in the commit message. Is that not a location people look at here?",
        "createdAt" : "2019-04-12T09:35:46Z",
        "updatedAt" : "2019-04-12T09:46:26Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9fb5588b-59cc-4c26-a729-57b64d7c9ea3",
        "parentId" : "1e65f934-a0d9-4327-890d-bf79fe80d2bd",
        "author" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "body" : "I generally prefer also having an inline source code comment instead of purely relying on information in commit messages.",
        "createdAt" : "2019-04-12T09:37:31Z",
        "updatedAt" : "2019-04-12T09:46:26Z",
        "lastEditedBy" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7aabefc4b888827c86900ea64a0ab34ec216c421",
    "line" : null,
    "diffHunk" : "@@ -44,6 +44,8 @@ main = do\n                       $logInfo (\"Writing slack release message to \"# T.pack fp)\n                       liftIO (BS.writeFile fp (T.encodeUtf8 (slackReleaseMessage os (renderVersion sdkVersion))))\n                   releaseToBintray upload releaseDir artifacts\n+                  $logInfo \"##vso[task.setvariable variable=has_released]true\""
  }
]