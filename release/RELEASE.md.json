[
  {
    "id" : "a7ce72e6-7da5-4597-a534-0dcd1d3a8a8b",
    "prId" : 7595,
    "comments" : [
      {
        "id" : "354d5879-3a4d-4ee6-b46c-c4304e5fcb86",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I don’t think this makes sense. This is the first call to `npm install`, you are generating the lockfile here.",
        "createdAt" : "2020-10-07T16:13:35Z",
        "updatedAt" : "2020-10-07T17:41:09Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3a81e2e9-1849-4cd4-a95c-093e56899cde",
        "parentId" : "354d5879-3a4d-4ee6-b46c-c4304e5fcb86",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "You're totally right. I was blindly following the GSG but apparently the GSG is wrong in this regard.",
        "createdAt" : "2020-10-07T17:40:46Z",
        "updatedAt" : "2020-10-07T17:41:09Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "8a2557ca94a5fa92e1a67af74f45dd2b40e860c4",
    "line" : null,
    "diffHunk" : "@@ -125,31 +125,32 @@ patches we backport to the 1.0 release branch).\n \n     1. `cd create-daml-app`\n \n-       1. `daml build`\n-\n-       1. `daml codegen js .daml/dist/create-daml-app-0.1.0.dar -o ui/daml.js`\n-\n        1. `daml start`\n \n     1. In a new terminal, from the `ui` folder:\n \n-       1. `npm install`\n+       1. `npm install --frozen-lockfile`"
  },
  {
    "id" : "2118e920-542c-482e-904f-8e2fa87893df",
    "prId" : 7595,
    "comments" : [
      {
        "id" : "f780e995-dc9f-49b4-b27f-584ed9c7ac0f",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Seems a bit excessive but if it helps :shrug: ",
        "createdAt" : "2020-10-07T16:14:20Z",
        "updatedAt" : "2020-10-07T17:41:09Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "8a2557ca94a5fa92e1a67af74f45dd2b40e860c4",
    "line" : null,
    "diffHunk" : "@@ -125,31 +125,32 @@ patches we backport to the 1.0 release branch).\n \n     1. `cd create-daml-app`\n \n-       1. `daml build`\n-\n-       1. `daml codegen js .daml/dist/create-daml-app-0.1.0.dar -o ui/daml.js`\n-\n        1. `daml start`\n \n     1. In a new terminal, from the `ui` folder:\n \n-       1. `npm install`\n+       1. `npm install --frozen-lockfile`\n \n        1. `npm start`\n \n     1. Open two browser windows (you want to see them simultaneously ideally) at `localhost:3000`.\n \n     1. Log in as `Alice` in the first window, log in as `Bob` in the second window.\n \n-    1. Make `Alice` follow `Bob`. Verify that `Bob` appears in the\n+    1. In the first window, where you are logged in as`Alice`,"
  },
  {
    "id" : "18719c75-1e94-4a9d-983f-68e16e2dfaef",
    "prId" : 7595,
    "comments" : [
      {
        "id" : "eaf49bb4-9137-4623-b2d9-a6c711e7d3d6",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "```suggestion\r\n    1. In the first window, where you are logged in as `Alice`,\r\n```",
        "createdAt" : "2020-10-07T16:32:32Z",
        "updatedAt" : "2020-10-07T17:41:09Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "8a2557ca94a5fa92e1a67af74f45dd2b40e860c4",
    "line" : null,
    "diffHunk" : "@@ -125,31 +125,32 @@ patches we backport to the 1.0 release branch).\n \n     1. `cd create-daml-app`\n \n-       1. `daml build`\n-\n-       1. `daml codegen js .daml/dist/create-daml-app-0.1.0.dar -o ui/daml.js`\n-\n        1. `daml start`\n \n     1. In a new terminal, from the `ui` folder:\n \n-       1. `npm install`\n+       1. `npm install --frozen-lockfile`\n \n        1. `npm start`\n \n     1. Open two browser windows (you want to see them simultaneously ideally) at `localhost:3000`.\n \n     1. Log in as `Alice` in the first window, log in as `Bob` in the second window.\n \n-    1. Make `Alice` follow `Bob`. Verify that `Bob` appears in the\n+    1. In the first window, where you are logged in as`Alice`,"
  },
  {
    "id" : "ecbfdb6a-7787-490b-b1d5-822a460ad9dc",
    "prId" : 7421,
    "comments" : [
      {
        "id" : "c16527c0-c372-4c95-a5b8-504a9af82fd7",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "```suggestion\r\n   1. Add `+` at the end of line 25 after `(PartyIdHint \"Alice\")` and verify that\r\n```",
        "createdAt" : "2020-09-16T15:11:22Z",
        "updatedAt" : "2020-09-16T15:14:06Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "009b8787-2828-4016-87f5-e30a60bb4860",
        "parentId" : "c16527c0-c372-4c95-a5b8-504a9af82fd7",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Ooops, thanks.",
        "createdAt" : "2020-09-16T15:13:57Z",
        "updatedAt" : "2020-09-16T15:14:06Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c30700af57af22fda0543ca1b5d5bf063822888d",
    "line" : null,
    "diffHunk" : "@@ -292,8 +297,8 @@ patches we backport to the 1.0 release branch).\n    1. Kill `daml start` with `Ctrl-C`.\n    1. Run `daml studio --replace=always` and open `daml/Main.daml`. Verify that\n       the scenario result appears within 30 seconds.\n-   1. Add `+` at the end of line 23 after `\"Alice\"` and verify that you get an\n-      error.\n+   1. Add `+` at the end of line 25 after `(PartIdHint \"Alice\")` and verify that"
  },
  {
    "id" : "fa6c304d-6c81-4aae-9de2-a0b23e60e013",
    "prId" : 7180,
    "comments" : [
      {
        "id" : "e8f68def-d913-4d85-9128-77e1930ec92d",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n   `#team-daml` to say it has finished building. If the PR was manually created,\r\n```",
        "createdAt" : "2020-08-20T07:16:26Z",
        "updatedAt" : "2020-08-20T11:40:18Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5178f4d1-514a-4668-8e98-1bbd6e35014d",
        "parentId" : "e8f68def-d913-4d85-9128-77e1930ec92d",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Done, and updated all other Slack channel references to match.",
        "createdAt" : "2020-08-20T11:40:33Z",
        "updatedAt" : "2020-08-20T11:40:33Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "937ac1c9637482d1a22d671ecd3ba47c93633072",
    "line" : null,
    "diffHunk" : "@@ -35,8 +35,9 @@ patches we backport to the 1.0 release branch).\n    label.\n \n 1. Once the PR has built, check that it was considered a release build by our\n-   CI. You can do that by looking at the output of the `check_for_release`\n-   build step.\n+   CI. If you are working from an automated PR, check that it sent a message to\n+   \\#team-daml to say it has finished building. If the PR was manually created,"
  },
  {
    "id" : "2d34fc37-6538-4601-90da-ff98b6cc3040",
    "prId" : 7180,
    "comments" : [
      {
        "id" : "a8a9c47b-a58f-46b2-aeba-e592852421e8",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Why is this all in a quote block?",
        "createdAt" : "2020-08-20T07:17:27Z",
        "updatedAt" : "2020-08-20T11:40:18Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "157b71e8-9fb0-4f9f-a2bc-c576c60ab708",
        "parentId" : "a8a9c47b-a58f-46b2-aeba-e592852421e8",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "My reasoning was that this is an aside. I expect at least one other person than me will have trouble using Windows, just because they don't use it very often, and this is a bit of help for them. But strictly speaking it has nothing to do with testing the release and can be safely ignored. It's a bit of advice, but not a prescription of what must be done for the test to be valid.\r\n\r\nThat said, happy to remove the quotes.",
        "createdAt" : "2020-08-20T11:13:18Z",
        "updatedAt" : "2020-08-20T11:40:18Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c585891c-4fb5-4956-a089-95c8ea3edb3c",
        "parentId" : "a8a9c47b-a58f-46b2-aeba-e592852421e8",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Sounds reasonable, happy to keep the quotes.",
        "createdAt" : "2020-08-20T11:25:09Z",
        "updatedAt" : "2020-08-20T11:40:18Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "937ac1c9637482d1a22d671ecd3ba47c93633072",
    "line" : 33,
    "diffHunk" : "@@ -55,6 +56,40 @@ patches we backport to the 1.0 release branch).\n    where `$VERSION` is the full version tag of the new release you are making,\n    i.e. the second column of the `LATEST` file.\n \n+   > ## Tips for Windows testing in an ad-hoc machine"
  },
  {
    "id" : "fc380a16-568c-4692-84cf-0a599aae0c00",
    "prId" : 7118,
    "comments" : [
      {
        "id" : "3f3cb121-d8d5-45df-9a97-def712eb1e6c",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Does the yarn install not bundle nodejs on Windows?",
        "createdAt" : "2020-08-13T10:26:34Z",
        "updatedAt" : "2020-08-13T12:23:41Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "be577cbc-4564-4df9-94ff-b07b60cf3441",
        "parentId" : "3f3cb121-d8d5-45df-9a97-def712eb1e6c",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I followed the instructions here so not sure. However, the node install is ~60MB and the yarn install is ~1.5MB, so my first guess would be no.",
        "createdAt" : "2020-08-13T11:11:57Z",
        "updatedAt" : "2020-08-13T12:23:41Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "49fa2b4dd5c66c7724d30adae9b88c6cdb5995bb",
    "line" : 157,
    "diffHunk" : "@@ -121,24 +55,20 @@ patches we backport to the 1.0 release branch).\n    where `$VERSION` is the full version tag of the new release you are making,\n    i.e. the second column of the `LATEST` file.\n \n-1. Windows prerequisites for running the tests:\n+1. Prerequisites for running the tests:\n     - [Visual Studio Code, Java-SDK](https://docs.daml.com/getting-started/installation.html)\n-      - The above link takes you docs.daml.com's \"getting started\" installation guide;\n-    - [Maven](https://maven.apache.org/install.html)\n-      - You may have to manually set the  environment variable `JAVA_HOME`;\n-      - For example, assuming the Zulu Java-SDK, something like\n-        `C:\\Program Files\\Zulu\\zulu-14`;\n     - [Node.js](https://nodejs.org/en/download/)\n-      - Just the bare install; you don't need Visual Studio build\n-        tools for compiling C dependencies (and trying to install them\n-        takes forever and in the end hangs it seems);\n+      - Just the bare install; no need to build C dependencies."
  },
  {
    "id" : "49d9352f-e836-42ca-bc79-080e22719318",
    "prId" : 6308,
    "comments" : [
      {
        "id" : "b96200f6-b64c-48d4-92ba-3ccba76fe9ac",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "```suggestion\r\n   before making the release. Note that the checklist is not available publicly.\r\n```",
        "createdAt" : "2020-06-11T14:15:59Z",
        "updatedAt" : "2020-06-11T14:20:10Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a39f728c2bea5dfc776aa1a5499412b3a39d054a",
    "line" : null,
    "diffHunk" : "@@ -29,6 +29,10 @@ patches we backport to the 1.0 release branch).\n    ./unreleased.sh $PREV_SHA $SHA\n    ```\n \n+1. **[STABLE]** Go through the checklist at\n+   https://docs.google.com/document/d/1RY2Qe9GwAUiiSJmq1lTzy6wu1N2ZSEILQ68M9n8CHgg\n+   before making the release. Note that the checklist is not available publically."
  },
  {
    "id" : "e8e7d91a-169a-4ba1-8ff8-d7fa84eea47f",
    "prId" : 6016,
    "comments" : [
      {
        "id" : "5c35c76a-4851-4274-a825-ad46015edaed",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n   - For a snapshot, run `./release.sh snapshot $SHA`. This will print the\r\n     corresponding snapshot suffix.\r\n     There are two cases to consider:\r\n     1. You are making a snapshot for a new release line, e.g., after cutting the snapshot RC for 1.0.0, the next regular snapshot will be `1.1.*`. In this case, add a new line to the LATEST file for this\r\n     release, of the form `$SHA $TARGET-$SUFFIX`, where `$SHA` is the sha of\r\n     the release commit you want to target, `$TARGET` is the intended target\r\n     release number, and `$SUFFIX` is the output of the script above.\r\n     2. There is already a release in the same release line. This could be a stable release, e.g. 1.0.0 when you are making a snapshot for 1.0.1 or an existing snapshot. In this case, update the corresponding line with the new commit and version.\r\n   - For a stable release, just remove the snapshot suffix from the latest\r\n     entry for that branch in the LATEST file.\r\n```",
        "createdAt" : "2020-05-19T07:59:01Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "14dbd9b6-3013-4356-ab5d-c55ad8bbe520",
        "parentId" : "5c35c76a-4851-4274-a825-ad46015edaed",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I'm not sure we agree here. If there is a 1.0.0 stable release and you are making the first 1.0.1-snapshot, I'd rather the 1.0.0 stay in there. I think. Happy to discuss.",
        "createdAt" : "2020-05-19T09:51:50Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2eec4792-2bae-433d-a27e-598b113e71e6",
        "parentId" : "5c35c76a-4851-4274-a825-ad46015edaed",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Keeping it there works for me as well. I mostly want to have the exact steps documented. Currently the text starts by telling you that you have to add a new line. Then it tells you that maybe you only need to replace something and not add a new line later but the conditions for that aren’t clear.",
        "createdAt" : "2020-05-19T09:55:54Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6966761c-d920-4228-942d-8139c3492260",
        "parentId" : "5c35c76a-4851-4274-a825-ad46015edaed",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I've tried to clarify.",
        "createdAt" : "2020-05-19T16:31:49Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5f991d71059dcd0bad10906e5ddf2f510803c993",
    "line" : null,
    "diffHunk" : "@@ -2,52 +2,54 @@\n \n First, you need to decide whether you are making a technical snapshot\n (\"prerelease\" at the github level, hereafter \"snapshot\") or an officially\n-supported release (hereafter \"stable release\").  For the latter, there are\n+supported release (hereafter \"stable release\"). For the latter, there are\n extra steps marked as **[STABLE]** in the following instructions. You have to\n skip those if you are making a snapshot release, that is, one intended mostly\n for internal use and early testing, but which makes no promises about future\n compatibility.\n \n In either case, before going through the following list, you need to know which\n commit you want to create the release from, `$SHA`. For a stable release, it is\n-highly recommended that this be the same commit as the latest existing\n-snapshot, so we \"bless\" an existing, tested version of the SDK rather than try\n-our luck with a random new one. For a snapshot, this should generally be the\n-latest commit on master.\n+highly recommended that this be the same commit as an existing snapshot, and\n+these instructions will be written from that perspective.\n+\n+Valid commits for a release should come from either the `master` branch or one\n+of the support `release/a.b.x` branches (e.g. `release/1.0.x` branch is for\n+patches we backport to the 1.0 release branch).\n \n > **IMPORTANT**: If the release fails, please do not just abandon it. There are\n > some cleanup steps that need to be taken.\n \n 1. **[STABLE]** Coordinate with the product and marketing teams to define\n    release highlights, tweets, blog posts, as well as timeline for publishing\n-   the release. Define a version number, `$VERSION`. The following command may\n-   be useful as a starting point; it will list all changes between the previous\n-   stable release and the latest snapshot release:\n-\n+   the release. Define a version number, `$VERSION`. As a starting point, find\n+   out the sha of the reference version (previous stable release in the same\n+   release branch), say `$PREV_SHA`, and run:\n    ```\n-   ./release.sh changes stable latest\n+   ./unreleased.sh $PREV_SHA $SHA\n    ```\n \n 1. Pull the latest master branch of the `daml` repository and create a new,\n    clean branch off it.\n \n-   - For a snapshot, run `./release.sh snapshot HEAD`.\n-     - If applicable (e.g. latest release was a stable one), edit `LATEST` to\n-       update the release \"version\". For example, change:\n-       ```\n-       6ea118d6142d2a937286b0a7bf9846dbcdb1751b 0.13.56-snapshot.20200318.3529.0.6ea118d6\n-       ```\n-       to:\n-       ```\n-       6ea118d6142d2a937286b0a7bf9846dbcdb1751b 0.13.57-snapshot.20200318.3529.0.6ea118d6\n-       ```\n-   - For a stable release, run `echo \"$SHA $VERSION\" > LATEST`.\n-     - Ideally, for a stable release, the resulting change is only to cut off\n-       the prerelease part of the version number (the `-snapshot...`).\n+   - For a snapshot, run `./release.sh snapshot $SHA`. This will print the\n+     corresponding snapshot suffix. Add a line to the LATEST file for this new\n+     release, of the form `$SHA $TARGET-$SUFFIX`, where `$SHA` is the sha of\n+     the release commit you want to target, `$TARGET` is the intended target\n+     release number, and `$SUFFIX` is the output of the script above. If there\n+     is already a snapshot targeting the same final release number, replace it;\n+     if not, add a new line at the top of the file.\n+   - For a stable release, just remove the snapshot suffix from the latest\n+     entry for that branch in the LATEST file."
  },
  {
    "id" : "715b013d-3185-4405-a420-1eff87a9df53",
    "prId" : 6016,
    "comments" : [
      {
        "id" : "530fa8b3-8b95-41e6-ab0e-a2e2bebba5dc",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This breaks very quickly if you have sphinx links in the release notes. This was already a terrible idea before and did actually break one PR due to a merge race but this makes it even more likely. We should probably go through and kill all sphinx links and then maybe add a check (who doesn’t love more regex checks) that you don’t include new ones. You might actually have to address this as part of this PR, otherwise I think the release notes for 0.13.55 won’t build anymore.",
        "createdAt" : "2020-05-19T07:59:23Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "598fb07b-8b6b-4b67-9f9d-d62ed8a4b863",
        "parentId" : "530fa8b3-8b95-41e6-ab0e-a2e2bebba5dc",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "The instructions already say all links in the release notes must be external links. Also note that the intention is to only be building new releases moving forward; unless I've made a mistake somewhere, existing documentation for previous releases should not be rebuilt.\r\n\r\nHappy to consider adding a regex check for that if I can figure one out. I'll make a pass through the release notes to externalize all links.",
        "createdAt" : "2020-05-19T09:55:02Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "428ad5a9-4269-423e-a673-70446624c992",
        "parentId" : "530fa8b3-8b95-41e6-ab0e-a2e2bebba5dc",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Ah good point, since we don’t rebuild old links, I would suggest leaving the cleanup for old sphinx links out of this PR.",
        "createdAt" : "2020-05-19T12:08:34Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "df93bf37-5923-47a7-86c6-ea93853b869d",
        "parentId" : "530fa8b3-8b95-41e6-ab0e-a2e2bebba5dc",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "👍 ",
        "createdAt" : "2020-05-19T16:37:36Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5f991d71059dcd0bad10906e5ddf2f510803c993",
    "line" : 75,
    "diffHunk" : "@@ -2,52 +2,54 @@\n \n First, you need to decide whether you are making a technical snapshot\n (\"prerelease\" at the github level, hereafter \"snapshot\") or an officially\n-supported release (hereafter \"stable release\").  For the latter, there are\n+supported release (hereafter \"stable release\"). For the latter, there are\n extra steps marked as **[STABLE]** in the following instructions. You have to\n skip those if you are making a snapshot release, that is, one intended mostly\n for internal use and early testing, but which makes no promises about future\n compatibility.\n \n In either case, before going through the following list, you need to know which\n commit you want to create the release from, `$SHA`. For a stable release, it is\n-highly recommended that this be the same commit as the latest existing\n-snapshot, so we \"bless\" an existing, tested version of the SDK rather than try\n-our luck with a random new one. For a snapshot, this should generally be the\n-latest commit on master.\n+highly recommended that this be the same commit as an existing snapshot, and\n+these instructions will be written from that perspective.\n+\n+Valid commits for a release should come from either the `master` branch or one\n+of the support `release/a.b.x` branches (e.g. `release/1.0.x` branch is for\n+patches we backport to the 1.0 release branch).\n \n > **IMPORTANT**: If the release fails, please do not just abandon it. There are\n > some cleanup steps that need to be taken.\n \n 1. **[STABLE]** Coordinate with the product and marketing teams to define\n    release highlights, tweets, blog posts, as well as timeline for publishing\n-   the release. Define a version number, `$VERSION`. The following command may\n-   be useful as a starting point; it will list all changes between the previous\n-   stable release and the latest snapshot release:\n-\n+   the release. Define a version number, `$VERSION`. As a starting point, find\n+   out the sha of the reference version (previous stable release in the same\n+   release branch), say `$PREV_SHA`, and run:\n    ```\n-   ./release.sh changes stable latest\n+   ./unreleased.sh $PREV_SHA $SHA\n    ```\n \n 1. Pull the latest master branch of the `daml` repository and create a new,\n    clean branch off it.\n \n-   - For a snapshot, run `./release.sh snapshot HEAD`.\n-     - If applicable (e.g. latest release was a stable one), edit `LATEST` to\n-       update the release \"version\". For example, change:\n-       ```\n-       6ea118d6142d2a937286b0a7bf9846dbcdb1751b 0.13.56-snapshot.20200318.3529.0.6ea118d6\n-       ```\n-       to:\n-       ```\n-       6ea118d6142d2a937286b0a7bf9846dbcdb1751b 0.13.57-snapshot.20200318.3529.0.6ea118d6\n-       ```\n-   - For a stable release, run `echo \"$SHA $VERSION\" > LATEST`.\n-     - Ideally, for a stable release, the resulting change is only to cut off\n-       the prerelease part of the version number (the `-snapshot...`).\n+   - For a snapshot, run `./release.sh snapshot $SHA`. This will print the\n+     corresponding snapshot suffix. Add a line to the LATEST file for this new\n+     release, of the form `$SHA $TARGET-$SUFFIX`, where `$SHA` is the sha of\n+     the release commit you want to target, `$TARGET` is the intended target\n+     release number, and `$SUFFIX` is the output of the script above. If there\n+     is already a snapshot targeting the same final release number, replace it;\n+     if not, add a new line at the top of the file.\n+   - For a stable release, just remove the snapshot suffix from the latest\n+     entry for that branch in the LATEST file.\n \n 1. **[STABLE]** In `docs/source/support/release-notes.rst`, add a new header\n    and label for the new version. (See previous releases as examples.)\n \n+   Note that the release notes page is not version dependent, i.e. you are"
  },
  {
    "id" : "ab82e2f6-54ef-4c10-bc54-662249cb9a73",
    "prId" : 5625,
    "comments" : [
      {
        "id" : "6f799db1-4517-49fd-b5a5-20a671887695",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "3 really are enough.\r\n1. daml sandbox\r\n2. daml script & daml navigator\r\n3. daml codegen java & mvn compile exec:java@run-quickstart\r\n",
        "createdAt" : "2020-04-20T10:33:50Z",
        "updatedAt" : "2020-04-20T10:37:25Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "331d43ad-0400-4c90-8061-b775d6d57fa0",
        "parentId" : "6f799db1-4517-49fd-b5a5-20a671887695",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Ah, well, the parenthesis needs changing then.",
        "createdAt" : "2020-04-20T10:35:48Z",
        "updatedAt" : "2020-04-20T10:37:25Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "98a8ee23-68c0-45d1-829c-dfa5d48d686b",
        "parentId" : "6f799db1-4517-49fd-b5a5-20a671887695",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "How does this look?\r\n\r\n```\r\n       1. In 3 separate terminals (since each command blocks), run:\r\n\r\n          1. `daml sandbox --wall-clock-time --port 6865 .daml/dist/quickstart-0.0.1.dar`\r\n          1. `daml script --dar .daml/dist/quickstart-0.0.1.dar --script-name Setup:initialize --ledger-host localhost --ledger-port 6865 --wall-clock-time && daml navigator server localhost 6865 --port 7500`\r\n          1. `daml codegen java && mvn compile exec:java@run-quickstart`\r\n```",
        "createdAt" : "2020-04-20T10:39:33Z",
        "updatedAt" : "2020-04-20T10:39:34Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8667325a-b43b-48a1-b043-710287f13dfc",
        "parentId" : "6f799db1-4517-49fd-b5a5-20a671887695",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : ":+1:",
        "createdAt" : "2020-04-20T10:40:57Z",
        "updatedAt" : "2020-04-20T10:40:57Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "11db17a128009168552a19d27979261045d14b12",
    "line" : null,
    "diffHunk" : "@@ -207,7 +207,7 @@ latest commit on master.\n \n        1. Run `daml build`.\n \n-       1. In 3 separate terminals (since each command except for `daml script …`\n+       1. In 5 separate terminals (since each command except for `daml script …`"
  },
  {
    "id" : "30d5a475-b3d2-4f97-bcb2-d8ed9837986d",
    "prId" : 5066,
    "comments" : [
      {
        "id" : "f189ae91-25ed-4ec6-8042-b1264ff91673",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "This is only needed if the last release was a stable one; otherwise we do not want to increment the \"stable\" part. Maybe:\r\n```suggestion\r\n     - If applicable (e.g. latest release was a stable one), edit `LATEST` to update the release \"version\". For example, change\r\n```",
        "createdAt" : "2020-03-18T12:31:01Z",
        "updatedAt" : "2020-03-18T12:39:14Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "abaa9d6b5da24cd50de40da33cc82d26389afa25",
    "line" : null,
    "diffHunk" : "@@ -26,10 +26,22 @@ latest commit on master.\n    ```\n \n 1. Pull the latest master branch of the `daml` repository and create a new,\n-   clean branch off it. For a snapshot, run `./release.sh snapshot HEAD`; for\n-   a stable release, run `echo \"$SHA $VERSION\" > LATEST`. Ideally, for a stable\n-   release, the resulting change is only to cut off the prerelease part of the\n-   version number (the `-snapshot...`).\n+   clean branch off it.\n+\n+   - For a snapshot run\n+     - `./release.sh snapshot HEAD`;\n+     - Edit `LATEST`, to update the release \"version\". For example, change"
  },
  {
    "id" : "02438c94-8b50-403a-96a1-90572914d574",
    "prId" : 5066,
    "comments" : [
      {
        "id" : "f30aa38e-f75e-4515-92da-88ddc715dc8e",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "You really shouldn't need to do that if you've defined `SHA` and `VERSION`.",
        "createdAt" : "2020-03-18T12:31:50Z",
        "updatedAt" : "2020-03-18T12:39:14Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7e2b4ff6-b470-4937-9e84-6dfff72a8a63",
        "parentId" : "f30aa38e-f75e-4515-92da-88ddc715dc8e",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Deleting clause.",
        "createdAt" : "2020-03-18T12:38:29Z",
        "updatedAt" : "2020-03-18T12:39:14Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "abaa9d6b5da24cd50de40da33cc82d26389afa25",
    "line" : null,
    "diffHunk" : "@@ -26,10 +26,22 @@ latest commit on master.\n    ```\n \n 1. Pull the latest master branch of the `daml` repository and create a new,\n-   clean branch off it. For a snapshot, run `./release.sh snapshot HEAD`; for\n-   a stable release, run `echo \"$SHA $VERSION\" > LATEST`. Ideally, for a stable\n-   release, the resulting change is only to cut off the prerelease part of the\n-   version number (the `-snapshot...`).\n+   clean branch off it.\n+\n+   - For a snapshot run\n+     - `./release.sh snapshot HEAD`;\n+     - Edit `LATEST`, to update the release \"version\". For example, change\n+       ```\n+       6ea118d6142d2a937286b0a7bf9846dbcdb1751b 0.13.56-snapshot.20200318.3529.0.6ea118d6\n+       ```\n+       to\n+       ```\n+       6ea118d6142d2a937286b0a7bf9846dbcdb1751b 0.13.57-snapshot.20200318.3529.0.6ea118d6\n+       ```\n+   - For a stable release, run\n+     - `echo \"$SHA $VERSION\" > LATEST`.\n+     - Edit `LATEST`, to update the release \"version\""
  },
  {
    "id" : "cb528026-87a1-4395-abd0-b61e1cee3a96",
    "prId" : 4905,
    "comments" : [
      {
        "id" : "7a1e22cd-0e46-47d8-99cb-2e342685c1f5",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n   You can produce the changes since the previous (snapshot or stable) release by running:\r\n```",
        "createdAt" : "2020-03-09T14:59:44Z",
        "updatedAt" : "2020-03-10T10:03:37Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "957d95f978b7247e36f47e9846dda033370b5969",
    "line" : null,
    "diffHunk" : "@@ -170,6 +176,15 @@ latest commit on master.\n    complete list of changes since the last stable release. Use the raw output\n    of `unreleased.sh`.\n \n+   You can produce the changes since the previous release by running:"
  },
  {
    "id" : "5f4ff281-8209-4ec1-bbca-869a5f5bd678",
    "prId" : 4871,
    "comments" : [
      {
        "id" : "76f1ffb6-c239-4b38-9b8d-138034327c9d",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Maybe worth pointing out that this only works if your local state is after the release PR has been merged.",
        "createdAt" : "2020-03-06T10:38:49Z",
        "updatedAt" : "2020-03-06T13:31:49Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ee69a0e34fc9886b1d0edd5b5dcd446ad394646f",
    "line" : null,
    "diffHunk" : "@@ -70,8 +72,8 @@ our luck with a random new one.\n \n 1. Run through the following test plan on one of Linux or MacOS:\n \n-   1. Install the new SDK using `curl -sSL https://get.daml.com/ | sh -s X.XX.XX`,\n-      where `X.XX.XX` is the new version number.\n+   1. Install the new SDK using `curl -sSL https://get.daml.com/ | sh -s $(cat"
  },
  {
    "id" : "00e0d603-891f-4f5f-babd-0c300fb87219",
    "prId" : 4871,
    "comments" : [
      {
        "id" : "b931b5e3-6496-48b9-8403-2f981f09da19",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I guess those separate messages are a preparation for maybe doing more lenient tests in the future for snapshot releases?",
        "createdAt" : "2020-03-06T10:42:42Z",
        "updatedAt" : "2020-03-06T13:31:49Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3c3ee422-16c0-406e-b8ca-3262c0c022cc",
        "parentId" : "b931b5e3-6496-48b9-8403-2f981f09da19",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "My goal was just to clarify the process that we already have. We've been supposed to put those messages on release PRs ever since we added the Standard-Change label.",
        "createdAt" : "2020-03-06T13:20:57Z",
        "updatedAt" : "2020-03-06T13:31:49Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ee69a0e34fc9886b1d0edd5b5dcd446ad394646f",
    "line" : 60,
    "diffHunk" : "@@ -130,23 +138,37 @@ our luck with a random new one.\n       Verify that the scenario result appears within 30 seconds.\n    1. Add `+` at the end of line 26 after `\"Alice\"` and verify that you get an error.\n \n-1. **[STABLE]** If there are no issues, the release can be made public.\n-   Go to [the releases page](https://github.com/digital-asset/daml/releases)\n-   and click on the `Edit` button for the new release. Combine the release\n-   notes from `docs/source/support/release-notes.rst` for all releases since the\n-   last public release, convert them from RST to Markdown format, and insert them\n-   in the textbox. Uncheck the `This is a pre-release` checkbox at the bottom and\n-   click `Update release`.\n+1. On your PR, add the comment\n+\n+   > Manual tests passed on Windows."
  },
  {
    "id" : "051f1d12-aba0-4dbf-a7c4-17c16a8445c9",
    "prId" : 4871,
    "comments" : [
      {
        "id" : "329a8d36-9e0a-4c17-9b23-a482a3a535ff",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "```suggestion\r\n   1. Install the new SDK using:\r\n      ```\r\n      curl -sSL https://get.daml.com/ | sh -s $(cat LATEST | awk '{print $2}')\r\n      ```\r\n```",
        "createdAt" : "2020-03-06T10:49:42Z",
        "updatedAt" : "2020-03-06T13:31:49Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ee69a0e34fc9886b1d0edd5b5dcd446ad394646f",
    "line" : null,
    "diffHunk" : "@@ -70,8 +72,8 @@ our luck with a random new one.\n \n 1. Run through the following test plan on one of Linux or MacOS:\n \n-   1. Install the new SDK using `curl -sSL https://get.daml.com/ | sh -s X.XX.XX`,\n-      where `X.XX.XX` is the new version number.\n+   1. Install the new SDK using `curl -sSL https://get.daml.com/ | sh -s $(cat\n+      LATEST | awk '{print $2}')`."
  },
  {
    "id" : "9c6683a0-2c68-47fa-8c17-a3dcf710f119",
    "prId" : 4871,
    "comments" : [
      {
        "id" : "a4da9fa4-aade-4716-899a-467df173e7b1",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Perhaps `cut -d' ' -f2 < LATEST` instead of `awk`?\r\n\r\nEither way, we should probably add either `coreutils` or `gawk` to the list of Nix dependencies.",
        "createdAt" : "2020-03-06T10:52:01Z",
        "updatedAt" : "2020-03-06T13:31:49Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "53ded4b3-2105-4251-b839-b0a3107ffee0",
        "parentId" : "a4da9fa4-aade-4716-899a-467df173e7b1",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "It may just be an upbringing difference, but I find `awk` more \"natural\" and `print $2` more explicit that w're printing the second field. Good point on adding to dev-env.",
        "createdAt" : "2020-03-06T13:25:21Z",
        "updatedAt" : "2020-03-06T13:31:49Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "896d671a-c702-4d9c-9ebe-0ef7141736c5",
        "parentId" : "a4da9fa4-aade-4716-899a-467df173e7b1",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Turns out `gawk` is already in dev-env. I should just use that then.",
        "createdAt" : "2020-03-06T13:27:55Z",
        "updatedAt" : "2020-03-06T13:31:49Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d0d7a36a-43f7-4932-8464-c3a8f6cf2b6e",
        "parentId" : "a4da9fa4-aade-4716-899a-467df173e7b1",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Fair enough. I prefer `awk` too, mostly because `cut -d' '` treats every space as a delimiter, but I'm told it's more confusing. Happy to stick with `awk`.",
        "createdAt" : "2020-03-06T13:28:42Z",
        "updatedAt" : "2020-03-06T13:31:49Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ee69a0e34fc9886b1d0edd5b5dcd446ad394646f",
    "line" : null,
    "diffHunk" : "@@ -70,8 +72,8 @@ our luck with a random new one.\n \n 1. Run through the following test plan on one of Linux or MacOS:\n \n-   1. Install the new SDK using `curl -sSL https://get.daml.com/ | sh -s X.XX.XX`,\n-      where `X.XX.XX` is the new version number.\n+   1. Install the new SDK using `curl -sSL https://get.daml.com/ | sh -s $(cat\n+      LATEST | awk '{print $2}')`."
  },
  {
    "id" : "9b665970-4340-4708-a752-babb8358bcc6",
    "prId" : 4513,
    "comments" : [
      {
        "id" : "17ba0af3-0b0e-46bd-a0f1-89adc1dd9205",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "It isn’t really clear to me what this means. If we publish releases as snapshot releases explicitly marked as `alpha` we probably don’t need to delete them ever? Which compatibility guarantees do we give and which do we not give? E.g., if I update sandbox to a nightly release do we tell users basically “you’re screwed now” and we don’t provide migrations to go back to the next stable release?",
        "createdAt" : "2020-02-19T10:28:42Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5f8d0847-35b0-4a37-b2d9-1a9aeac7b6f5",
        "parentId" : "17ba0af3-0b0e-46bd-a0f1-89adc1dd9205",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I don't know. This is up for discussion in the (broader) team. This PR is about making it possible to have alpha releases; what level of guarantee we give about them is, in my opinion, quite orthogonal.\r\n\r\nWhat I had in mind when writing that was things like changing the name of a new function in the API. I personally think people would be crazy to actually deploy an alpha/snapshot version in production where they have data they care about, but it's not up to me to decide, from a business perspective, what we do about it if it happens.",
        "createdAt" : "2020-02-19T12:44:16Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "81246bd2733ace93653cb663dca5a0cdaf7c11e9",
    "line" : null,
    "diffHunk" : "@@ -1,18 +1,34 @@\n # Making a Release\n \n-1. Pull the latest master branch of the `daml` repository and create a new branch off it.\n+First, you need to decide whether you are making a technical snapshot\n+(\"prerelease\") or an officially supported release (hereafter \"stable release\").\n+For the latter, there are extra steps marked as *[STABLE]* in the following\n+instructions. You can safely skip those if you are making a prerelease,\n+that is, one intended mostly for internal use and early testing, but which\n+makes no promises about future compatibility."
  },
  {
    "id" : "dbced919-c18f-46cd-93ad-60903dd34cd3",
    "prId" : 4513,
    "comments" : [
      {
        "id" : "f5c987c4-4979-4b69-908f-ce135c568783",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Is there anything stopping us from publishing documentation for alpha releases? Seems to be potentially useful as long as we sort things such that it doesn’t confuse users.",
        "createdAt" : "2020-02-19T10:54:54Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f9bcbad2-4d4f-4144-8ee2-a76379a3d60e",
        "parentId" : "f5c987c4-4979-4b69-908f-ce135c568783",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Not really, no. We'd just need to figure out how/where to publish them. My current thinking (but this can easily be changed after this PR) is that prereleases should stay marked as prereleases on GitHub, and that currently makes them invisible to the docs cron.",
        "createdAt" : "2020-02-19T12:55:34Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "81246bd2733ace93653cb663dca5a0cdaf7c11e9",
    "line" : 111,
    "diffHunk" : "@@ -122,10 +141,13 @@\n    \"All manual tests have passed\".\n \n 1. Finally, announce the release on the relevant internal Slack channels.\n-   An announcement on the external Slack channel linking to our blog should appear\n-   automatically.\n \n-1. Documentation is published automatically once the release is public on Github,\n-   however it takes up to an hour to complete.\n+1. *[STABLE]* Coordinate with product (& marketing) for the relevant public\n+   announcements (public Slack, Twitter, etc.).\n+   should appear automatically.\n+\n+1. *[STABLE]* Documentation is published automatically once the release is"
  },
  {
    "id" : "3c9fa178-6890-4301-a283-9381d34e1e3f",
    "prId" : 4513,
    "comments" : [
      {
        "id" : "63549385-e671-4909-8e17-867b0378f1ef",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Just to confirm: For an unstable release, we will just not have release notes?",
        "createdAt" : "2020-02-19T10:56:39Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "17b9c303-f237-46fc-ad8c-af5d0d9ae38f",
        "parentId" : "63549385-e671-4909-8e17-867b0378f1ef",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I'm not strongly decided on the matter. The instructions as written _would_ produce release notes for each alpha version, but the docs (and hence release notes) would only get published to docs.daml.com on stable releases. If followed, the current instructions would yield a release notes file with a series of entries for alpha releases and then an empty entry for the final release (provided it is just promoting the latest alpha to stable).\r\n\r\nMy current thinking (but this is very much up for debate) is that we should update the release notes file to have an entry for the latest alpha release. On a new alpha release, we should update that entry (i.e. not keep the old one if it was already an alpha), and when doing a stable release we should just change the title of the last entry.",
        "createdAt" : "2020-02-19T13:00:31Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "81246bd2733ace93653cb663dca5a0cdaf7c11e9",
    "line" : 37,
    "diffHunk" : "@@ -1,18 +1,34 @@\n # Making a Release\n \n-1. Pull the latest master branch of the `daml` repository and create a new branch off it.\n+First, you need to decide whether you are making a technical snapshot\n+(\"prerelease\") or an officially supported release (hereafter \"stable release\").\n+For the latter, there are extra steps marked as *[STABLE]* in the following\n+instructions. You can safely skip those if you are making a prerelease,\n+that is, one intended mostly for internal use and early testing, but which\n+makes no promises about future compatibility.\n+\n+In either case, before going through the following list, you need to know which\n+commit you want to create the release from, `$SHA`. For a stable release, it is\n+highly recommended that this be the same commit as the latest existing\n+prerelease.\n+\n+1. *[STABLE]* Coordinate with the product and marketing teams to define release\n+   highlights, tweets, blog posts, as well as timeline for publishing the\n+   release. Define a version number, `$VERSION`.\n+1. Pull the latest master branch of the `daml` repository and create a new,\n+   clean branch off it. For a prerelease, run `./release.sh snapshot $SHA`; for\n+   a stable release, run `echo \"$SHA $VERSION\" > LATEST`. Ideally, for a stable\n+   release, the resulting change is only to cut off the prerelease part of the\n+   version number (the `-alpha...`).\n \n-   Bump the version number in the `VERSION` file.\n    In `docs/source/support/release-notes.rst`, add a new header and label for\n    the new version. (See previous releases as examples.)\n \n    Retrieve the new release notes using the command\n \n-      `./unreleased.sh <revision range>`\n+      `./unreleased.sh $LAST_VERSION..$SHA`"
  },
  {
    "id" : "0003ad38-d8b8-463d-84eb-f06425e30cba",
    "prId" : 4513,
    "comments" : [
      {
        "id" : "2a20ff1d-bd96-4546-b5fe-7813e5af720c",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Comment for myself and other reviewers: Because this is only done for stable releases the assistant will not pick up alpha releases automagically.",
        "createdAt" : "2020-02-19T10:58:51Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c77348bb-d9ee-4c7a-b03f-c1df5756a201",
        "parentId" : "2a20ff1d-bd96-4546-b5fe-7813e5af720c",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Right. That's also what currently triggers publication on docs.daml.com, so as written only stable releases would be published there.",
        "createdAt" : "2020-02-19T13:01:12Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "81246bd2733ace93653cb663dca5a0cdaf7c11e9",
    "line" : null,
    "diffHunk" : "@@ -108,7 +127,7 @@\n       Verify that the scenario result appears within 30 seconds.\n    1. Add `+` at the end of line 26 after `\"Alice\"` and verify that you get an error.\n \n-1. If there are no issues, the release can be made public.\n+1. *[STABLE]* If there are no issues, the release can be made public."
  },
  {
    "id" : "9ce69825-e9e5-4300-b263-0da2a34accd7",
    "prId" : 4513,
    "comments" : [
      {
        "id" : "8e6dbd79-5c1d-45ad-9a92-86dd8e94b8bc",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Delete this line?",
        "createdAt" : "2020-02-20T14:22:29Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "81246bd2733ace93653cb663dca5a0cdaf7c11e9",
    "line" : null,
    "diffHunk" : "@@ -122,10 +141,13 @@\n    \"All manual tests have passed\".\n \n 1. Finally, announce the release on the relevant internal Slack channels.\n-   An announcement on the external Slack channel linking to our blog should appear\n-   automatically.\n \n-1. Documentation is published automatically once the release is public on Github,\n-   however it takes up to an hour to complete.\n+1. *[STABLE]* Coordinate with product (& marketing) for the relevant public\n+   announcements (public Slack, Twitter, etc.).\n+   should appear automatically."
  },
  {
    "id" : "0af2e186-feab-45ef-8a3c-1a65d678a4cf",
    "prId" : 3547,
    "comments" : [
      {
        "id" : "45695c8f-ddc5-4372-b58b-e3494e11e0ab",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "```suggestion\r\n   Note that `VERSION` and `release-notes.rst` must be modified even if\r\n```",
        "createdAt" : "2019-11-20T11:25:06Z",
        "updatedAt" : "2019-11-20T14:43:49Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6c9d795419b38e7c96f1084003ac6b3151d10d8b",
    "line" : null,
    "diffHunk" : "@@ -3,12 +3,17 @@\n 1. Make a PR that bumps the version number in the `VERSION`\n    file and adds a new header and label for the new version in\n    `docs/source/support/release-notes.rst` (see previous releases as examples).\n-   Release notes should be cut and pasted under the new header from `unreleased.rst`.\n-   Each change outlined in `unreleased.rst` is preceded by the section to\n+   Release notes additions can be retrieved from commits using the following command:\n+\n+     for sha in $(git log --format=%H <revision range>); do git show --format=%b $sha | awk '/^$/{next} /^CHANGELOG$/{flag=1; next} flag'; done\n+\n+   where `<revision range>` is the expressions (documented under `man gitrevisions`) to only read the relevant commits since the last release.\n+   If, for example, the previous release is tagged as `v0.13.36` the `<revision range>` for all commits since then is `v0.13.36..`.\n+   Each change outlined by the output of this command is preceded by the section to\n    which it belongs: create one entry per section and add all pertaining\n    items (without the section tag) to the release notes.\n-   It is important that the PR only changes `VERSION`, `release-notes.rst` and `unreleased.rst`.\n-   Note that `unreleased.rst` and `release-notes.rst` must be modified even if\n+   It is important that the PR only changes `VERSION`, `release-notes.rst`.\n+   Note that and `release-notes.rst` must be modified even if"
  },
  {
    "id" : "25bbea90-8a7d-4286-96d7-140c69e20358",
    "prId" : 3547,
    "comments" : [
      {
        "id" : "673faf75-8b26-49d6-be37-6b2d54463bb9",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Can we add that in a bash script?",
        "createdAt" : "2019-11-20T11:51:43Z",
        "updatedAt" : "2019-11-20T14:43:49Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "88f1aea2-b3a2-41ed-a8b2-1f8fa6501924",
        "parentId" : "673faf75-8b26-49d6-be37-6b2d54463bb9",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/3547/commits/0fe067ccfc4601fdd08e43d32391a35e3e643f63",
        "createdAt" : "2019-11-20T13:34:59Z",
        "updatedAt" : "2019-11-20T14:43:49Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d593e1b9-5434-44bf-90f3-b1f11073b50c",
        "parentId" : "673faf75-8b26-49d6-be37-6b2d54463bb9",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "This also gives a tool to check the sanity of the changelog additions of a PR by running `./unreleased.sh master..`",
        "createdAt" : "2019-11-20T13:35:34Z",
        "updatedAt" : "2019-11-20T14:43:49Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6c9d795419b38e7c96f1084003ac6b3151d10d8b",
    "line" : null,
    "diffHunk" : "@@ -3,12 +3,17 @@\n 1. Make a PR that bumps the version number in the `VERSION`\n    file and adds a new header and label for the new version in\n    `docs/source/support/release-notes.rst` (see previous releases as examples).\n-   Release notes should be cut and pasted under the new header from `unreleased.rst`.\n-   Each change outlined in `unreleased.rst` is preceded by the section to\n+   Release notes additions can be retrieved from commits using the following command:\n+\n+     for sha in $(git log --format=%H <revision range>); do git show --format=%b $sha | awk '/^$/{next} /^CHANGELOG$/{flag=1; next} flag'; done"
  },
  {
    "id" : "c3d7095e-38f1-48e4-a19b-6846d5201ab9",
    "prId" : 3547,
    "comments" : [
      {
        "id" : "45f02107-1a0d-4f47-9ae7-73afe43a9469",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "My awk is pretty bad, judging frm @garyverhaegen-da’s comments multiple changelog paragraphs should work but I think it would be good to point that out here.",
        "createdAt" : "2019-11-20T11:52:35Z",
        "updatedAt" : "2019-11-20T14:43:49Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2bf5cec5-2719-4d18-89c2-bceafa224612",
        "parentId" : "45f02107-1a0d-4f47-9ae7-73afe43a9469",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Unfortunately it won't if you have commit message bodies in between two commits with changelog additions as in the following example.\r\n```\r\nThis is the PR title (#42)\r\n\r\n* This is the first commit\r\n\r\nIt has a body\r\n\r\n* This is the second commit\r\n\r\nCHANGELOG\r\n\r\n- [Sandbox] More sand in the box\r\n\r\n* This is the third commit\r\n\r\nIn this commit message body I wrote a couple of lines to tell people how much I love Italian wine. It deserves to be persisted.\r\n\r\n* This is the fourth commit\r\n\r\nCHANGELOG\r\n\r\n- [Sandbox] Replace sand with block and box with chain\r\n```\r\nThe output of the script would be:\r\n```\r\n- [Sandbox] More sand in the box\r\nIn this commit message body I wrote a couple of lines to tell people how much I love Italian wine. It deserves to be persisted.\r\n- [Sandbox] Replace sand with block and box with chain\r\n```",
        "createdAt" : "2019-11-20T13:34:31Z",
        "updatedAt" : "2019-11-20T14:43:49Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6c9d795419b38e7c96f1084003ac6b3151d10d8b",
    "line" : null,
    "diffHunk" : "@@ -3,12 +3,17 @@\n 1. Make a PR that bumps the version number in the `VERSION`\n    file and adds a new header and label for the new version in\n    `docs/source/support/release-notes.rst` (see previous releases as examples).\n-   Release notes should be cut and pasted under the new header from `unreleased.rst`.\n-   Each change outlined in `unreleased.rst` is preceded by the section to\n+   Release notes additions can be retrieved from commits using the following command:\n+\n+     for sha in $(git log --format=%H <revision range>); do git show --format=%b $sha | awk '/^$/{next} /^CHANGELOG$/{flag=1; next} flag'; done"
  },
  {
    "id" : "6ed43bdb-a2e7-4942-876c-564a0441ea1d",
    "prId" : 3547,
    "comments" : [
      {
        "id" : "2ff83a8f-89f4-4d64-b3b1-f1231a37f1e6",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "The releaser will not have easy access to that information.",
        "createdAt" : "2019-11-20T13:37:00Z",
        "updatedAt" : "2019-11-20T14:43:49Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "cc62c6c0-eff4-4dad-a106-237d09d9e1ce",
        "parentId" : "2ff83a8f-89f4-4d64-b3b1-f1231a37f1e6",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I do agree, I wanted to keep it in but I'll change it since you're the second one to raise this.",
        "createdAt" : "2019-11-20T13:37:47Z",
        "updatedAt" : "2019-11-20T14:43:49Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6c9d795419b38e7c96f1084003ac6b3151d10d8b",
    "line" : null,
    "diffHunk" : "@@ -3,12 +3,27 @@\n 1. Make a PR that bumps the version number in the `VERSION`\n    file and adds a new header and label for the new version in\n    `docs/source/support/release-notes.rst` (see previous releases as examples).\n-   Release notes should be cut and pasted under the new header from `unreleased.rst`.\n-   Each change outlined in `unreleased.rst` is preceded by the section to\n+   Release notes additions can be retrieved from commits using the following command:\n+\n+     ./unreleased.sh <revision range>\n+\n+   where `<revision range>` is the expressions (documented under `man gitrevisions`) to only read the relevant commits since the last release.\n+   If, for example, the previous release is tagged as `v0.13.36` the `<revision range>` for all commits since then is `v0.13.36..`.\n+   Each change outlined by the output of this command is preceded by the section to\n    which it belongs: create one entry per section and add all pertaining\n    items (without the section tag) to the release notes.\n-   It is important that the PR only changes `VERSION`, `release-notes.rst` and `unreleased.rst`.\n-   Note that `unreleased.rst` and `release-notes.rst` must be modified even if\n+   Note that the changelog may also specify edits to existing changelog additions, in which case they will be reported with the following format\n+\n+       CHANGELOG_BEGIN\n+\n+       ** Replace changelog for PR #42 **"
  },
  {
    "id" : "d08233e9-d52a-4898-81ba-effda28bab57",
    "prId" : 1972,
    "comments" : [
      {
        "id" : "1c268842-86b8-4647-b6e0-156afafce72e",
        "parentId" : null,
        "author" : null,
        "body" : "yes! 👏 \r\n",
        "createdAt" : "2019-07-02T13:04:47Z",
        "updatedAt" : "2019-07-02T13:09:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "7566d0e937fbb5a0bd721646ff0e439c920280bd",
    "line" : 29,
    "diffHunk" : "@@ -4,28 +4,62 @@\n    file and adds a new header and label for the new version in\n    `docs/source/support/release-notes.rst` (see previous releases as examples).\n    Release notes should be cut and pasted under the new header from `unreleased.rst`.\n-   Each change outlined in `unreleased.rst` is preceded by the section to which it belongs: create one entry per section and add all pertaining items (without the section tag) to the release notes.\n+   Each change outlined in `unreleased.rst` is preceded by the section to\n+   which it belongs: create one entry per section and add all pertaining\n+   items (without the section tag) to the release notes.\n    It is important that the PR only changes `VERSION`, `release-notes.rst` and `unreleased.rst`.\n-1. \"Squash and merge\" the PR.\n+   Note that `unreleased.rst` and `release-notes.rst` must be modified even if\n+   there have been no changes that have been added to the release notes so far.\n+1. Merge the PR.\n 1. Once CI has passed for the corresponding master build, the release should be\n-   available on bintray and GitHub, as well as properly tagged.\n-1. Activate the new version with `da use VERSION`. Note that it will\n-   not be picked up by `da upgrade` at this point.\n-1. Run through the manual test plan described in https://docs.google.com/document/d/16amcy7bQodXSHjEmKhAUiaPf6O92gUbch1OyixDEvSM/edit?ts=5ca5be00.\n+   available on Bintray, Maven Central and GitHub and have a Git tag.\n+   Maven central has a slight delay of around 20 minutes until the\n+   new version is visible.\n+1. Run through the following test plan on Linux or MacOS:\n \n-   The test plan currently still targets the old `da` assistant. We\n-   will migrate the test plan fully to the new assistant soon but for\n-   now, there is a shorter test plan for the new assistant that\n-   you should run on Windows:\n+   1. Install the SDK using `curl -sSL https://get.daml.com/ | sh -s $SDK_VERSION`.\n+   1. Run `daml version --assistant=yes` and verify that `$SDK_VERSION` is the \n+      assistant version and the default version for new projects."
  },
  {
    "id" : "9030abf6-70b9-4706-81fb-cbd6b4c22829",
    "prId" : 1972,
    "comments" : [
      {
        "id" : "e58f6bfe-26bd-4f85-be88-7c8b9701da3a",
        "parentId" : null,
        "author" : null,
        "body" : "Is the `-o .daml/dist/quickstart.dar` necessary here, given that this is the default location?",
        "createdAt" : "2019-07-02T13:05:49Z",
        "updatedAt" : "2019-07-02T13:09:56Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a0acaa84-cc71-4779-b7d7-25e7d8049238",
        "parentId" : "e58f6bfe-26bd-4f85-be88-7c8b9701da3a",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Good point, removed.",
        "createdAt" : "2019-07-02T13:09:58Z",
        "updatedAt" : "2019-07-02T13:09:59Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7566d0e937fbb5a0bd721646ff0e439c920280bd",
    "line" : null,
    "diffHunk" : "@@ -4,28 +4,62 @@\n    file and adds a new header and label for the new version in\n    `docs/source/support/release-notes.rst` (see previous releases as examples).\n    Release notes should be cut and pasted under the new header from `unreleased.rst`.\n-   Each change outlined in `unreleased.rst` is preceded by the section to which it belongs: create one entry per section and add all pertaining items (without the section tag) to the release notes.\n+   Each change outlined in `unreleased.rst` is preceded by the section to\n+   which it belongs: create one entry per section and add all pertaining\n+   items (without the section tag) to the release notes.\n    It is important that the PR only changes `VERSION`, `release-notes.rst` and `unreleased.rst`.\n-1. \"Squash and merge\" the PR.\n+   Note that `unreleased.rst` and `release-notes.rst` must be modified even if\n+   there have been no changes that have been added to the release notes so far.\n+1. Merge the PR.\n 1. Once CI has passed for the corresponding master build, the release should be\n-   available on bintray and GitHub, as well as properly tagged.\n-1. Activate the new version with `da use VERSION`. Note that it will\n-   not be picked up by `da upgrade` at this point.\n-1. Run through the manual test plan described in https://docs.google.com/document/d/16amcy7bQodXSHjEmKhAUiaPf6O92gUbch1OyixDEvSM/edit?ts=5ca5be00.\n+   available on Bintray, Maven Central and GitHub and have a Git tag.\n+   Maven central has a slight delay of around 20 minutes until the\n+   new version is visible.\n+1. Run through the following test plan on Linux or MacOS:\n \n-   The test plan currently still targets the old `da` assistant. We\n-   will migrate the test plan fully to the new assistant soon but for\n-   now, there is a shorter test plan for the new assistant that\n-   you should run on Windows:\n+   1. Install the SDK using `curl -sSL https://get.daml.com/ | sh -s $SDK_VERSION`.\n+   1. Run `daml version --assistant=yes` and verify that `$SDK_VERSION` is the \n+      assistant version and the default version for new projects.\n+   1. Create a new project with `daml new quickstart quickstart-java`\n+      and switch to it using `cd quickstart`.\n+   1. Run `daml start`. Your browser should be opened automatically at\n+      `http://localhost:7500`. Login as `Alice` and verify that there is\n+      1 contract and 3 templates. Close the tab and kill `daml\n+      start` using `Ctrl-C`.\n+   1. Run `daml build -o .daml/dist/quickstart.dar`."
  },
  {
    "id" : "dc562009-fa69-4083-b0aa-b46f7b7450ac",
    "prId" : 205,
    "comments" : [
      {
        "id" : "42d6f010-b8fd-4aec-aa53-9d406d053ae3",
        "parentId" : null,
        "author" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "body" : "This sounds like it will require another CI roundtrip for every release which is something that I would like to avoid. Can we move this to the very end?",
        "createdAt" : "2019-04-04T12:18:31Z",
        "updatedAt" : "2019-04-04T14:41:08Z",
        "lastEditedBy" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "98552416-911b-4e2b-b97a-39e7bd553885",
        "parentId" : "42d6f010-b8fd-4aec-aa53-9d406d053ae3",
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "Not if we want to release the docs together with the SDK at some point.",
        "createdAt" : "2019-04-04T12:19:34Z",
        "updatedAt" : "2019-04-04T14:41:08Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cf4c227e-3810-4e1d-9048-41de3727714f",
        "parentId" : "42d6f010-b8fd-4aec-aa53-9d406d053ae3",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Even if we don't want to release/publish at the same time, the version in the docs should still get updated. Otherwise we run into the same situation again that we have changes released into the SDK with the release-notes not being updated.",
        "createdAt" : "2019-04-04T12:32:07Z",
        "updatedAt" : "2019-04-04T14:41:08Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b1848cca-3c87-45ab-8c8e-f0bb67a84553",
        "parentId" : "42d6f010-b8fd-4aec-aa53-9d406d053ae3",
        "author" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "body" : "Oh so this is about updating the number to the release that you are currently making. I understood this as adding a new header for changes after the one you are currently making. We should probably just adjust the release script to allow to do both at the same time.",
        "createdAt" : "2019-04-04T12:33:18Z",
        "updatedAt" : "2019-04-04T14:41:08Z",
        "lastEditedBy" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2cccaf18-6a58-4bfa-b03d-5810b3b97e1e",
        "parentId" : "42d6f010-b8fd-4aec-aa53-9d406d053ae3",
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "That'd be ideal. Can we merge this PR as is and do that in a second PR or would you like to help me do that as part of this PR?",
        "createdAt" : "2019-04-04T12:35:56Z",
        "updatedAt" : "2019-04-04T14:41:08Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1efedd8a76c87e959a08f4cccbb4ab8065795358",
    "line" : 3,
    "diffHunk" : "@@ -1,14 +1,17 @@\n # Making a Release\n \n-1. Make a PR that only bumps the version number in the VERSION\n+1. Update https://github.com/digital-asset/daml/docs/support/release-notes.rst"
  },
  {
    "id" : "ae4330c0-a600-431c-8f1d-b0260b96c951",
    "prId" : 205,
    "comments" : [
      {
        "id" : "6ff6d674-415f-4610-8b56-cce14fb7c63e",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "You can write the numeration with all `1`s, so the renderer does the numeration automatically:\r\n```markdown\r\n1. foo\r\n1. bar\r\n1. baz\r\n```",
        "createdAt" : "2019-04-04T12:21:25Z",
        "updatedAt" : "2019-04-04T14:41:08Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "969f0755-ab33-4491-b83a-d51ff32d6286",
        "parentId" : "6ff6d674-415f-4610-8b56-cce14fb7c63e",
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "I thought about it, but then it looks bad in raw. Would you strongly prefer all 1.s?",
        "createdAt" : "2019-04-04T12:33:14Z",
        "updatedAt" : "2019-04-04T14:41:08Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "29bab209-6be5-4635-ba0e-932be51c2c37",
        "parentId" : "6ff6d674-415f-4610-8b56-cce14fb7c63e",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Ah no, but given that github renders the markdown file whenever possible, I don't think it's too bad. It's just easier for future \"refactoring\" of the list :)",
        "createdAt" : "2019-04-04T12:38:00Z",
        "updatedAt" : "2019-04-04T14:41:08Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1efedd8a76c87e959a08f4cccbb4ab8065795358",
    "line" : 8,
    "diffHunk" : "@@ -1,14 +1,17 @@\n # Making a Release\n \n-1. Make a PR that only bumps the version number in the VERSION\n+1. Update https://github.com/digital-asset/daml/docs/support/release-notes.rst\n+   by adding a new header for the new version above any changes since the last\n+   version.\n+2. Make a PR that only bumps the version number in the VERSION\n    file. It is important that the PR only changes the VERSION file.\n-2. Merge the PR using a rebase merge."
  }
]