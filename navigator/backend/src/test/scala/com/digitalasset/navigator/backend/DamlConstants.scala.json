[
  {
    "id" : "6b3e1c63-a812-453b-acb2-bfe06e2e3f57",
    "prId" : 3525,
    "comments" : [
      {
        "id" : "93aef18a-226b-4c93-9fc6-de04d1acf65d",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Can you have duplicate keys in genmap?",
        "createdAt" : "2019-11-27T08:14:26Z",
        "updatedAt" : "2019-11-28T15:41:31Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1510b22d-7bec-4e65-ba44-66cb06d4832a",
        "parentId" : "93aef18a-226b-4c93-9fc6-de04d1acf65d",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "The ledger will never return duplicate key, but you can submit with duplicate key (the last one will override the formers)",
        "createdAt" : "2019-11-27T09:22:54Z",
        "updatedAt" : "2019-11-28T15:41:31Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e91a625553e69367d5fa487d46e728ab9557d4d4",
    "line" : null,
    "diffHunk" : "@@ -308,6 +306,17 @@ case object DamlConstants {\n     )\n   )\n \n+  def complexGenMapT(keyTyp: DamlLfIface.Type, valueTyp: DamlLfIface.Type) =\n+    DamlLfTypePrim(DamlLfPrimType.GenMap, DamlLfImmArraySeq(keyTyp, valueTyp))\n+\n+  val complexGenMapV = V.ValueGenMap(\n+    ImmArray(\n+      treeV -> V.ValueInt64(1),\n+      treeLeftV -> V.ValueInt64(2),\n+      treeLeftV -> V.ValueInt64(3)"
  }
]