[
  {
    "id" : "5597777c-3e78-40d0-8c94-72a770526134",
    "prId" : 1814,
    "comments" : [
      {
        "id" : "c6b2ccdd-bb57-477e-8911-51a8fa527a3b",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "I'm surprised this test passes. You should need to edit [navigator/query/project/package.scala](https://github.com/digital-asset/daml/blob/master/navigator/backend/src/main/scala/com/digitalasset/navigator/query/project/package.scala#L204) in order to support sorting, which I don't see in this PR.\r\n\r\nLooking at the code, sorting by `agreementText` should not work either.\r\n\r\nThe reason this test passes is probably that the local `test` method uses `theSameElementsAs` instead of `theSameElementsInOrderAs`, which makes this whole test suite useless.",
        "createdAt" : "2019-06-21T21:17:52Z",
        "updatedAt" : "2019-06-26T13:27:04Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2a04f8fc-e1b9-49be-8c7b-f85d60343f9d",
        "parentId" : "c6b2ccdd-bb57-477e-8911-51a8fa527a3b",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Very good catch, thanks! I fixed the test and this unveiled some apparently defective behavior in the existing code (in particular with regards to the agreement text and the argument), I'll include a fix as part of this PR.",
        "createdAt" : "2019-06-23T10:54:19Z",
        "updatedAt" : "2019-06-26T13:27:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "72b4f13c-25e4-4ddd-aa40-c55e40875c5e",
        "parentId" : "c6b2ccdd-bb57-477e-8911-51a8fa527a3b",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "### Update\r\n\r\nImplementing the projection for agreement text was trivial.\r\n\r\nFor arguments, I suspected the issue was rather that the test cases are formulated in a way that requires stable sorting, which is thought could not necessarily the case. After checking the Scala documentation (for version 2.12.8), [the underlying sorting algorithm is stated to be stable](https://www.scala-lang.org/api/2.12.8/scala/collection/Seq.html#sortBy[B](f:A=%3EB)(implicitord:scala.math.Ordering[B]):Repr), which is a guarantee I believe we can rely on.\r\n\r\nI then noticed that we are relying on the default ordering of `Option`s when comparing values that may not be compatible with the sorting criterion (e.g. sorting by a field in the argument which is not present in certain contracts). The default ordering which puts `None`s before `Some`s, as in the following example:\r\n```scala\r\nList(None, Some(4)).sorted\r\nList(Some(4), None).sorted\r\n// both evaluate to List(None, Some(4))\r\n```\r\n\r\nCertain test cases reasonably require the values that are compatible with a sorting criterion to appear before those who don't. Unfortunately simply reversing the ordering for missing values causes other test cases to fail. I'll try to better understand the issue and add a fix as mentioned.",
        "createdAt" : "2019-06-23T12:16:33Z",
        "updatedAt" : "2019-06-26T13:27:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "672d2e66-cfc9-4524-a714-3448f6a61eb2",
        "parentId" : "c6b2ccdd-bb57-477e-8911-51a8fa527a3b",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Unfortunately the fix doesn't seem to be trivial and I'd prefer this to not hold back this contribution. I'll make sense of the failing test cases, \"fix\" them to represent the current status and open a bug report about the current behavior.",
        "createdAt" : "2019-06-23T12:28:42Z",
        "updatedAt" : "2019-06-26T13:27:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bd99f494-548c-4102-8ebb-da57ff52a2f0",
        "parentId" : "c6b2ccdd-bb57-477e-8911-51a8fa527a3b",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/1814/commits/4eee5c7b0773984be9db6385537ea978bf3f7e88",
        "createdAt" : "2019-06-23T12:39:39Z",
        "updatedAt" : "2019-06-26T13:27:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "537cda6e4f290b219868ccfcbbf8534deed162d9",
    "line" : 82,
    "diffHunk" : "@@ -81,13 +89,18 @@ class ContractSortSpec extends FlatSpec with Matchers {\n     }\n   }\n \n+  implicit val sortParties: Ordering[Seq[String]] =\n+    Ordering.fromLessThan[Seq[String]](_.mkString < _.mkString)\n+\n   test(List(), contracts)\n   test(List(\"id\" -> ASCENDING), contracts.sortBy(_.id.unwrap))\n   test(List(\"id\" -> DESCENDING), contracts.sortBy(_.id.unwrap)(Ordering[String].reverse))\n   test(\n     List(\"agreementText\" -> ASCENDING),\n     contracts.sortBy(_.agreementText)\n   )\n+  test(List(\"signatories\" -> ASCENDING), contracts.sortBy(_.signatories))"
  },
  {
    "id" : "ada4a3e1-6477-4d8d-9780-458aea36abeb",
    "prId" : 1814,
    "comments" : [
      {
        "id" : "0e5fcdca-fdbe-4c37-a0d0-f418dd000582",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "```suggestion\r\n  test(List(\"observers\" -> ASCENDING), contracts.sortBy(_.observers))\r\n```",
        "createdAt" : "2019-06-21T21:18:03Z",
        "updatedAt" : "2019-06-26T13:27:04Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "049222a3-ba91-4c29-a3da-d680dfdb57f9",
        "parentId" : "0e5fcdca-fdbe-4c37-a0d0-f418dd000582",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Wow, this is very bad, thanks for catching this.",
        "createdAt" : "2019-06-21T21:49:00Z",
        "updatedAt" : "2019-06-26T13:27:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "537cda6e4f290b219868ccfcbbf8534deed162d9",
    "line" : null,
    "diffHunk" : "@@ -81,13 +89,18 @@ class ContractSortSpec extends FlatSpec with Matchers {\n     }\n   }\n \n+  implicit val sortParties: Ordering[Seq[String]] =\n+    Ordering.fromLessThan[Seq[String]](_.mkString < _.mkString)\n+\n   test(List(), contracts)\n   test(List(\"id\" -> ASCENDING), contracts.sortBy(_.id.unwrap))\n   test(List(\"id\" -> DESCENDING), contracts.sortBy(_.id.unwrap)(Ordering[String].reverse))\n   test(\n     List(\"agreementText\" -> ASCENDING),\n     contracts.sortBy(_.agreementText)\n   )\n+  test(List(\"signatories\" -> ASCENDING), contracts.sortBy(_.signatories))\n+  test(List(\"observers\" -> ASCENDING), contracts.sortBy(_.signatories))"
  }
]