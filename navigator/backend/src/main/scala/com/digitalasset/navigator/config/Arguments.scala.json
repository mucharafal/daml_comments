[
  {
    "id" : "fa38fb79-cd13-4e63-ae3a-3e4153f62977",
    "prId" : 5555,
    "comments" : [
      {
        "id" : "998b5e72-69e1-403e-bfe7-6ab324e2dc1e",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "This is deliberately left in; the change should be in a separate PR.",
        "createdAt" : "2020-04-15T21:52:49Z",
        "updatedAt" : "2020-04-16T16:17:50Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "31a1b17033d86def117a62f96a7cd58a56efb6f1",
    "line" : 4,
    "diffHunk" : "@@ -99,6 +99,8 @@ object Arguments {\n           .mkString(\", \")}. Default: ${Arguments.default.time.name}\")\n         .action((t, arguments) => arguments.copy(time = t))\n \n+      // TODO: the 4 following TLS options can be defined by TlsConfigurationCli instead"
  },
  {
    "id" : "7fe4993b-b8f9-4b77-80f6-f83176f1fea6",
    "prId" : 3138,
    "comments" : [
      {
        "id" : "9fe3eb05-ebee-40b7-9feb-abe3add88b54",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Do we need something like `See the the docs for how to generate the token file`, or is that obvious?",
        "createdAt" : "2019-10-18T09:05:22Z",
        "updatedAt" : "2019-10-18T13:12:04Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "610572f6-a37f-403e-87c7-dc0935304f86",
        "parentId" : "9fe3eb05-ebee-40b7-9feb-abe3add88b54",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I'm not sure the docs can tell much about generating the token file, maybe I can rephrase as `path from which the access token will be read, default...`.",
        "createdAt" : "2019-10-18T09:39:58Z",
        "updatedAt" : "2019-10-18T13:12:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "95a37fb8-db28-4a0b-b7b2-c7c9bdc09b34",
        "parentId" : "9fe3eb05-ebee-40b7-9feb-abe3add88b54",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/3138/commits/ef7a382a50e0bd6dd3e34d72318e6979fb9df764",
        "createdAt" : "2019-10-18T11:51:04Z",
        "updatedAt" : "2019-10-18T13:12:04Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "bb3817c9a66c72de085b1959aae0ac7ddc5f7a3d",
    "line" : null,
    "diffHunk" : "@@ -69,29 +72,29 @@ object Arguments {\n         Some(TlsConfiguration(true, Some(new File(path)), None, None)))(c =>\n         Some(c.copy(keyCertChainFile = Some(new File(path))))))\n \n-  private def argumentParser(defaultConfigFile: Path) =\n+  private def argumentParser(defaultConfigFile: Path, defaultAccessTokenFile: Path) =\n     new OptionParser[Arguments](\"navigator\") with ArgumentsHelper {\n       help(\"help\").abbr(\"h\").text(\"prints this usage text\")\n \n       opt[Int](\"port\")\n-        .text(\"port number on which the server should listen (default 4000)\")\n+        .text(s\"port number on which the server should listen (default ${Arguments.default.port})\")\n         .action((port, arguments) => arguments.copy(port = port))\n \n       opt[String](\"assets\")\n         .text(\"folder where frontend assets are available\")\n         .action((assets, arguments) => arguments.copy(assets = Some(assets)))\n \n-      opt[Unit]('w', \"require-password\")\n-        .text(\"if true then the password is required to login\")\n-        .action((_, arguments) => arguments.copy(requirePassword = true))\n+      opt[String]('t', \"access-token-file\")\n+        .text(s\"set the access token file, default: ${defaultAccessTokenFile}\")"
  }
]