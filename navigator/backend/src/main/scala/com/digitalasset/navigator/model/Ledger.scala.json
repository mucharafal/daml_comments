[
  {
    "id" : "61be3a45-878a-45c4-817a-3b48b10cefec",
    "prId" : 4594,
    "comments" : [
      {
        "id" : "86294a71-bac5-4ce3-b534-a46f17aa2d62",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Minor, not a necessary change: since the behavior is so different it could make sense to have to helpers that are invoked based on the value of `isStakeholder`.",
        "createdAt" : "2020-02-19T09:50:56Z",
        "updatedAt" : "2020-02-19T09:51:14Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d32fed21-811a-4b42-b8fd-eb79eef88490",
        "parentId" : "86294a71-bac5-4ce3-b534-a46f17aa2d62",
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Related: Long term, we should remove the in-memory store (along with all custom query functionality) and only keep the database.",
        "createdAt" : "2020-02-19T10:23:48Z",
        "updatedAt" : "2020-02-19T10:23:48Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5c2fa1b903ebc13fb1e248b697571d7cee109172",
    "line" : 16,
    "diffHunk" : "@@ -126,18 +127,24 @@ case class Ledger(\n     }\n \n   private def withContractCreatedInEvent(contract: Contract, event: ContractCreated): Ledger = {\n+    val isStakeHolder = contract.signatories.contains(forParty) || contract.observers.contains(\n+      forParty)\n     if (useDatabase) {\n-      db.insertContract(contract)\n+      if (isStakeHolder) db.insertContract(contract)"
  }
]