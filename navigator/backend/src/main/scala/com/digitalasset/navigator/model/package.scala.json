[
  {
    "id" : "ecda75f9-2eac-463f-95d8-a3202bf7cef8",
    "prId" : 2053,
    "comments" : [
      {
        "id" : "ab66dd1c-81cf-49ed-9d81-02b2b1cb3c50",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "I don't intend to keep all these aliases permanently, but it's helpful for the remainder of this PR's substance not to be drowned in the trivia of symbol renaming.",
        "createdAt" : "2019-07-10T20:25:41Z",
        "updatedAt" : "2019-07-15T17:48:24Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1699d1a72a141e994b450b4078470a298e34bab3",
    "line" : 49,
    "diffHunk" : "@@ -174,4 +175,42 @@ package object model {\n \n   def parseOpaqueIdentifier(id: TemplateStringId): Option[DamlLfRef.Identifier] =\n     parseOpaqueIdentifier(TemplateStringId.unwrap(id))\n+\n+  import scala.language.higherKinds\n+  type OfCid[V[_]] = V[String]\n+  type ApiValue = OfCid[V]\n+  type ApiRecordField = (Option[DamlLfRef.Name], ApiValue)\n+  val ApiRecordField = Tuple2\n+  type ApiRecord = OfCid[V.ValueRecord]\n+  val ApiRecord = V.ValueRecord\n+  type ApiVariant = OfCid[V.ValueVariant]\n+  val ApiVariant = V.ValueVariant\n+  type ApiEnum = V.ValueEnum\n+  val ApiEnum = V.ValueEnum\n+  type ApiList = OfCid[V.ValueList]\n+  val ApiList = V.ValueList\n+  type ApiOptional = OfCid[V.ValueOptional]\n+  val ApiOptional = V.ValueOptional\n+  type ApiMap = OfCid[V.ValueMap]\n+  val ApiMap = V.ValueMap\n+  type ApiContractId = OfCid[V.ValueContractId]\n+  val ApiContractId = V.ValueContractId\n+  type ApiInt64 = V.ValueInt64\n+  val ApiInt64 = V.ValueInt64\n+  type ApiDecimal = V.ValueDecimal\n+  val ApiDecimal = V.ValueDecimal\n+  type ApiText = V.ValueText\n+  val ApiText = V.ValueText\n+  type ApiParty = V.ValueParty\n+  val ApiParty = V.ValueParty\n+  type ApiBool = V.ValueBool\n+  val ApiBool = V.ValueBool\n+  type ApiUnit = V.ValueUnit.type\n+  val ApiUnit = V.ValueUnit\n+  type ApiTimestamp = V.ValueTimestamp\n+  val ApiTimestamp = V.ValueTimestamp\n+  type ApiDate = V.ValueDate\n+  val ApiDate = V.ValueDate\n+  type ApiImpossible = OfCid[V.ValueTuple]\n+  val ApiImpossible = V.ValueTuple"
  },
  {
    "id" : "7bb880f8-88da-42bd-a444-abfdc1e94b99",
    "prId" : 2053,
    "comments" : [
      {
        "id" : "0cc95f53-83bd-4876-8334-371092f83bb7",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Why `val ApiImpossible = V.ValueTuple` and not `val ApiTuple = V.ValueTuple`? There might be other impossible types in the future, but I assume it doesn't matter because we don't intend to keep these aliases long term?",
        "createdAt" : "2019-07-16T13:42:39Z",
        "updatedAt" : "2019-07-16T13:50:20Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fb7cd98c-939a-4d62-96a8-bc2969640535",
        "parentId" : "0cc95f53-83bd-4876-8334-371092f83bb7",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "As you say.",
        "createdAt" : "2019-07-16T14:53:41Z",
        "updatedAt" : "2019-07-16T14:53:41Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1699d1a72a141e994b450b4078470a298e34bab3",
    "line" : 49,
    "diffHunk" : "@@ -174,4 +175,42 @@ package object model {\n \n   def parseOpaqueIdentifier(id: TemplateStringId): Option[DamlLfRef.Identifier] =\n     parseOpaqueIdentifier(TemplateStringId.unwrap(id))\n+\n+  import scala.language.higherKinds\n+  type OfCid[V[_]] = V[String]\n+  type ApiValue = OfCid[V]\n+  type ApiRecordField = (Option[DamlLfRef.Name], ApiValue)\n+  val ApiRecordField = Tuple2\n+  type ApiRecord = OfCid[V.ValueRecord]\n+  val ApiRecord = V.ValueRecord\n+  type ApiVariant = OfCid[V.ValueVariant]\n+  val ApiVariant = V.ValueVariant\n+  type ApiEnum = V.ValueEnum\n+  val ApiEnum = V.ValueEnum\n+  type ApiList = OfCid[V.ValueList]\n+  val ApiList = V.ValueList\n+  type ApiOptional = OfCid[V.ValueOptional]\n+  val ApiOptional = V.ValueOptional\n+  type ApiMap = OfCid[V.ValueMap]\n+  val ApiMap = V.ValueMap\n+  type ApiContractId = OfCid[V.ValueContractId]\n+  val ApiContractId = V.ValueContractId\n+  type ApiInt64 = V.ValueInt64\n+  val ApiInt64 = V.ValueInt64\n+  type ApiDecimal = V.ValueDecimal\n+  val ApiDecimal = V.ValueDecimal\n+  type ApiText = V.ValueText\n+  val ApiText = V.ValueText\n+  type ApiParty = V.ValueParty\n+  val ApiParty = V.ValueParty\n+  type ApiBool = V.ValueBool\n+  val ApiBool = V.ValueBool\n+  type ApiUnit = V.ValueUnit.type\n+  val ApiUnit = V.ValueUnit\n+  type ApiTimestamp = V.ValueTimestamp\n+  val ApiTimestamp = V.ValueTimestamp\n+  type ApiDate = V.ValueDate\n+  val ApiDate = V.ValueDate\n+  type ApiImpossible = OfCid[V.ValueTuple]\n+  val ApiImpossible = V.ValueTuple"
  },
  {
    "id" : "86f58afe-544b-47bd-998e-fcac1df558d8",
    "prId" : 1950,
    "comments" : [
      {
        "id" : "41471c0d-6af9-4561-a83d-7241cd6c4cc7",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "Should probably be `[[DamlLfIdentifier]]`",
        "createdAt" : "2019-06-30T00:22:42Z",
        "updatedAt" : "2019-06-30T18:06:07Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8a74aae7-1342-41c2-9178-0786ac0b427e",
        "parentId" : "41471c0d-6af9-4561-a83d-7241cd6c4cc7",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/1950/commits/f9221048bb342e3e9e8303c8ed7b8a7fb8405575",
        "createdAt" : "2019-06-30T18:06:58Z",
        "updatedAt" : "2019-06-30T18:06:58Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f9221048bb342e3e9e8303c8ed7b8a7fb8405575",
    "line" : null,
    "diffHunk" : "@@ -15,6 +15,7 @@ package object model {\n   /**\n     * An opaque identifier used for templates.\n     * Templates are usually identified using a composite type (see [[DamlLfDefRef]]).\n+    * FIXME the reference to [[DamlLfDefRef]] is broken, where should it point?"
  }
]