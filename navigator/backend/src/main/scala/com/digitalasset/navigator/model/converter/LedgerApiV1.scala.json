[
  {
    "id" : "1edeebac-c070-4af7-9015-8c52d64ca871",
    "prId" : 1529,
    "comments" : [
      {
        "id" : "e8b64d9d-cc50-49f0-a26b-9363c6a8548b",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "```suggestion\r\n        GenericConversionError(s\"Unknown enum constructor ${enum.constructor}\"))\r\n```",
        "createdAt" : "2019-06-05T14:00:15Z",
        "updatedAt" : "2019-06-06T15:52:39Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b5c3ca40-5750-471c-804b-3e911dad8539",
        "parentId" : "e8b64d9d-cc50-49f0-a26b-9363c6a8548b",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2019-06-05T14:32:15Z",
        "updatedAt" : "2019-06-06T15:52:39Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "181ced0b995bc7875f05cc8260012e8f7fd9d6aa",
    "line" : 33,
    "diffHunk" : "@@ -372,6 +372,30 @@ case object LedgerApiV1 {\n     }\n   }\n \n+  private def readEnumArgument(\n+      enum: V1.value.Enum,\n+      typ: Model.DamlLfType,\n+      ctx: Context\n+  ): Result[Model.ApiEnum] =\n+    for {\n+      typeCon <- typ match {\n+        case t @ Model.DamlLfTypeCon(_, _) => Right(t)\n+        case _ => Left(GenericConversionError(s\"Cannot read $enum as $typ\"))\n+      }\n+      ddt <- ctx.templates\n+        .damlLfDefDataType(typeCon.name.identifier)\n+        .toRight(GenericConversionError(s\"Unknown type ${typeCon.name.identifier}\"))\n+      dt <- typeCon.instantiate(ddt) match {\n+        case v @ iface.Enum(_) => Right(v)\n+        case iface.Record(_) | iface.Variant(_) =>\n+          Left(GenericConversionError(s\"Enum expected\"))\n+      }\n+      _ <- Either.cond(\n+        dt.constructors.contains(enum.constructor),\n+        (),\n+        GenericConversionError(s\"Unknown choice ${enum.constructor}\"))"
  },
  {
    "id" : "6fcb175c-d310-44c5-80b6-7a97413146b0",
    "prId" : 204,
    "comments" : [
      {
        "id" : "29f5b265-0a56-461c-822b-2a29e951a980",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "```suggestion\r\n          t.headOption.toRight(GenericConversionError(\"Map type parameter missing\"))\r\n```",
        "createdAt" : "2019-04-09T09:29:59Z",
        "updatedAt" : "2019-04-10T15:57:15Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5dfaaa695898670824b20acf017518eda840e671",
    "line" : null,
    "diffHunk" : "@@ -286,10 +294,35 @@ case object LedgerApiV1 {\n     }\n   }\n \n+  private def readMapArgument(\n+      list: V1.value.Map,\n+      typ: Model.DamlLfType,\n+      ctx: Context\n+  ): Result[Model.ApiMap] = {\n+    for {\n+      elementType <- typ match {\n+        case Model.DamlLfTypePrim(Model.DamlLfPrimType.Map, t) =>\n+          t.headOption.toRight(GenericConversionError(\"List type parameter missing\"))"
  }
]