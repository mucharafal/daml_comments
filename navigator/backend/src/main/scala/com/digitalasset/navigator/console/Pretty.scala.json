[
  {
    "id" : "c86a5425-441d-4f07-b7b7-614f4fe66d8b",
    "prId" : 2053,
    "comments" : [
      {
        "id" : "10071f92-6c76-499b-9173-12d80a2793f1",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Do you think we can skip an extra iteration like this? \r\n```suggestion\r\n        elements.map(argument)(com.digitalasset.daml.lf.data.FrontStack.`FrontStack canBuildFrom`): _*\r\n```\r\nI used the fully qualified name so that this would have made sense as a self-contained single line suggestion, but please do feel free to throw this away and import the relevant class.",
        "createdAt" : "2019-07-12T09:07:52Z",
        "updatedAt" : "2019-07-15T17:48:24Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8f4d833d-0817-4e40-b556-c5982aa0f591",
        "parentId" : "10071f92-6c76-499b-9173-12d80a2793f1",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Not in this case; `elements` doesn't define `map` in CanBuildFrom terms. The `toSeq` here is practically free, so at least we only have two iterations.",
        "createdAt" : "2019-07-12T16:32:34Z",
        "updatedAt" : "2019-07-15T17:48:24Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ce0f8a14-c9f2-4a57-99cd-73896352f39c",
        "parentId" : "10071f92-6c76-499b-9173-12d80a2793f1",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "> I used the fully qualified name so that this would have made sense as a self-contained single line suggestion\r\n\r\nI would definitely only refer to these definitions via implicit resolution; that's the second intent of the space-y names, \"never talk about this directly\".",
        "createdAt" : "2019-07-12T16:55:38Z",
        "updatedAt" : "2019-07-15T17:48:24Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1699d1a72a141e994b450b4078470a298e34bab3",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +230,234 @@    case model.ApiList(elements) =>\n      PrettyArray(\n        elements.toImmArray.map(e => argument(e)).toSeq: _*\n      )\n    case model.ApiText(value) => PrettyPrimitive(value)"
  }
]