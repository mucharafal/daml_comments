[
  {
    "id" : "efaa6f00-1763-45e6-b3d4-f9c75b745e9e",
    "prId" : 2053,
    "comments" : [
      {
        "id" : "f7868e16-534d-455a-b981-41fd0c0a7198",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Do you think we can skip an extra iteration like this? \r\n```suggestion\r\n        elements.map(argument)(com.digitalasset.daml.lf.data.FrontStack.`FrontStack canBuildFrom`): _*\r\n```\r\nI used the fully qualified name so that this would have made sense as a self-contained single line suggestion, but please do feel free to throw this away and import the relevant class.",
        "createdAt" : "2019-07-12T09:07:52Z",
        "updatedAt" : "2019-07-15T17:48:24Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "dcd68b3e-5ab0-4258-9b01-8de9ac675f9c",
        "parentId" : "f7868e16-534d-455a-b981-41fd0c0a7198",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Not in this case; `elements` doesn't define `map` in CanBuildFrom terms. The `toSeq` here is practically free, so at least we only have two iterations.",
        "createdAt" : "2019-07-12T16:32:34Z",
        "updatedAt" : "2019-07-15T17:48:24Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1b514b83-cf49-4674-abac-e581a651b26b",
        "parentId" : "f7868e16-534d-455a-b981-41fd0c0a7198",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "> I used the fully qualified name so that this would have made sense as a self-contained single line suggestion\r\n\r\nI would definitely only refer to these definitions via implicit resolution; that's the second intent of the space-y names, \"never talk about this directly\".",
        "createdAt" : "2019-07-12T16:55:38Z",
        "updatedAt" : "2019-07-15T17:48:24Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1699d1a72a141e994b450b4078470a298e34bab3",
    "line" : 17,
    "diffHunk" : "@@ -226,23 +229,24 @@ object Pretty {\n       PrettyPrimitive(constructor)\n     case model.ApiList(elements) =>\n       PrettyArray(\n-        elements.map(e => argument(e))\n+        elements.toImmArray.map(e => argument(e)).toSeq: _*"
  },
  {
    "id" : "4dd1b157-d96f-49e6-9793-9572292fe706",
    "prId" : 2053,
    "comments" : [
      {
        "id" : "ac470207-c05f-4c3b-ba8c-afdd26f3b460",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Do you think it would make sense here to use `iterator` rather than `toSeq` and then `breakOut` at the end to not have and extra loop just to `zipWithIndex`?",
        "createdAt" : "2019-07-12T09:23:55Z",
        "updatedAt" : "2019-07-15T17:48:24Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "21f84d8c-4e91-4835-9ae2-550464941270",
        "parentId" : "ac470207-c05f-4c3b-ba8c-afdd26f3b460",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "5ce7df5d46567bdf789c19155dbd3911b1a45730",
        "createdAt" : "2019-07-15T17:53:54Z",
        "updatedAt" : "2019-07-15T17:53:54Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1699d1a72a141e994b450b4078470a298e34bab3",
    "line" : null,
    "diffHunk" : "@@ -216,7 +216,10 @@ object Pretty {\n   def argument(arg: model.ApiValue): PrettyNode = arg match {\n     case model.ApiRecord(id, fields) =>\n       PrettyObject(\n-        fields.map(f => PrettyField(f.label, argument(f.value)))\n+        fields.toSeq.zipWithIndex.map {"
  },
  {
    "id" : "dcf33e26-6ebc-4f05-915a-41bf802c8e96",
    "prId" : 204,
    "comments" : [
      {
        "id" : "9bea5fe5-52f2-4edd-a655-d5827b3bfaad",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "This outputs a list of objects, each with a single key-value pair. IMO it would be better to output a single object with several key-value pairs.\r\n\r\n```suggestion\r\n          PrettyObject(map.toList.map {case (key, value) => PrettyField(key, argument(value)) })\r\n```",
        "createdAt" : "2019-04-09T09:28:31Z",
        "updatedAt" : "2019-04-10T15:57:15Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5dfaaa695898670824b20acf017518eda840e671",
    "line" : null,
    "diffHunk" : "@@ -235,6 +235,10 @@ object Pretty {\n     case model.ApiUnit() => PrettyPrimitive(\"<unit>\")\n     case model.ApiOptional(None) => PrettyPrimitive(\"<none>\")\n     case model.ApiOptional(Some(v)) => PrettyObject(PrettyField(\"value\", argument(v)))\n+    case model.ApiMap(map) =>\n+      PrettyArray(map.toList.map {"
  }
]