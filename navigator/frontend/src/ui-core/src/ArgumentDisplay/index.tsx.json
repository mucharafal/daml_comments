[
  {
    "id" : "4fcc906a-f3f1-4d14-a83e-b9f7ff9827d9",
    "prId" : 204,
    "comments" : [
      {
        "id" : "7ad45e3f-2071-4c11-8323-d502646fa758",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "```suggestion\r\n          <LabeledElement key={entry.key} label={entry.key} className={className}>\r\n```\r\nNo need for string interpolation here.",
        "createdAt" : "2019-04-09T09:31:23Z",
        "updatedAt" : "2019-04-10T15:57:15Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5dfaaa695898670824b20acf017518eda840e671",
    "line" : null,
    "diffHunk" : "@@ -99,6 +99,18 @@ const ArgumentDisplay = (props: Props): JSX.Element => {\n     }\n     case 'bool': return <span>{argument.value ? 'TRUE' : 'FALSE'}</span>;\n     case 'unit': return <span>unit</span>;\n+    case 'map' : return (\n+      <NestedForm level={level}>\n+        {argument.value.length > 0 ? argument.value.map((entry, _) => (\n+          <LabeledElement key={entry.key} label={`${entry.key}`} className={className}>"
  }
]