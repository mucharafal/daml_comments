[
  {
    "id" : "929b6340-720d-4a29-bf5e-718ac16bd7ca",
    "prId" : 3396,
    "comments" : [
      {
        "id" : "be948fed-dc92-405e-b671-382124865461",
        "parentId" : null,
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "What's this about?",
        "createdAt" : "2019-11-08T10:31:14Z",
        "updatedAt" : "2019-11-08T16:52:09Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "26a4a3ce-452e-4209-a40b-b8d942bde277",
        "parentId" : "be948fed-dc92-405e-b671-382124865461",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Only temporary to test CI until I make a proper `ghc-lib` release.",
        "createdAt" : "2019-11-08T10:44:12Z",
        "updatedAt" : "2019-11-08T16:52:09Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5f0aba699aa25a6b67addacdb62bc8756680af04",
    "line" : null,
    "diffHunk" : "@@ -20,7 +20,7 @@ def hazel_ghclibs(version, shaParser, shaLibrary):\n         (\n             \"ghc-lib\",\n             {\n-                \"url\": \"https://digitalassetsdk.bintray.com/ghc-lib/ghc-lib-\" + version + \".tar.gz\",\n+                \"url\": \"https://purelyfunctional.org/downloads/ghc-lib-\" + version + \".tar.gz\","
  },
  {
    "id" : "ad091b04-a9b4-4146-b620-de8901b87357",
    "prId" : 2642,
    "comments" : [
      {
        "id" : "d35713b7-d5ae-4c98-9ae3-e2622e75cdf5",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "As mentioned above, Bazel gets unhappy about the symlink in the repo and this is a very easy fix for this.",
        "createdAt" : "2019-08-23T07:06:24Z",
        "updatedAt" : "2019-08-23T11:47:53Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c58c457c91219b4aa38c7297e5456fb27a62db51",
    "line" : 5,
    "diffHunk" : "@@ -36,7 +36,7 @@ def hazel_hackage(name, version, sha, **kwargs):\n # Things we override from GitHub\n def hazel_github_external(project, repoName, commit, sha, directory = \"\", name = None, **kwargs):\n     args = {\n-        \"url\": \"https://github.com/\" + project + \"/\" + repoName + \"/archive/\" + commit + \".zip\",\n+        \"url\": \"https://github.com/\" + project + \"/\" + repoName + \"/archive/\" + commit + \".tar.gz\","
  },
  {
    "id" : "09ade4b0-f4f3-43ae-bda2-fc5bda61d0ba",
    "prId" : 724,
    "comments" : [
      {
        "id" : "eab2cb73-cc90-419f-b02a-adeb8de55c24",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Is there no nicer way in Python of keeping the names optional and only passing those which are specified? Avoiding repeating the defaults twice?",
        "createdAt" : "2019-04-26T10:44:25Z",
        "updatedAt" : "2019-04-26T11:19:10Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ad18d114-67fc-4407-a578-a4b3f2d68e50",
        "parentId" : "eab2cb73-cc90-419f-b02a-adeb8de55c24",
        "author" : {
          "login" : "DavidM-D",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/11191170?u=3edc6e08b7c7f0d980a6dc81e5a2ce49dd1ef0f0&v=4"
        },
        "body" : "Yeah, I can add **kwargs to the next function, it might just end up pulling unexpected values into scope. I think maybe keeping the bazel functions simple might be a good idea as not everyone editing them is au fait with python",
        "createdAt" : "2019-04-26T11:38:13Z",
        "updatedAt" : "2019-04-26T11:38:13Z",
        "lastEditedBy" : {
          "login" : "DavidM-D",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/11191170?u=3edc6e08b7c7f0d980a6dc81e5a2ce49dd1ef0f0&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3e69891f-00fc-46df-a49c-adca8e7b7153",
        "parentId" : "eab2cb73-cc90-419f-b02a-adeb8de55c24",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Yeah, agreed - let's keep it simple.",
        "createdAt" : "2019-04-26T11:46:46Z",
        "updatedAt" : "2019-04-26T11:46:47Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "214e30babe5d470b67534d40584c7716be75c15f",
    "line" : null,
    "diffHunk" : "@@ -31,9 +31,13 @@ def hazel_hackage(name, version, sha, **kwargs):\n     return [(name, {\"version\": version, \"sha256\": sha} + kwargs)]\n \n # Things we override from GitHub\n-def hazel_github_external(project, name, commit, sha):\n-    return [(name, {\"url\": \"https://github.com/\" + project + \"/\" + name + \"/archive/\" + commit + \".zip\", \"sha256\": sha, \"stripPrefix\": name + \"-\" + commit})]\n+def hazel_github_external(project, repoName, commit, sha, directory=\"\", name=None):\n+    return [(name or repoName,\n+             {\"url\": \"https://github.com/\" + project + \"/\" + repoName + \"/archive/\" + commit + \".zip\",\n+              \"sha256\": sha,\n+              \"stripPrefix\": repoName + \"-\" + commit + directory\n+             })]\n \n # Things we get from the digital-asset GitHub\n-def hazel_github(name, commit, sha):\n-    return hazel_github_external(\"digital-asset\", name, commit, sha)\n+def hazel_github(repoName, commit, sha, directory=\"\", name=None):\n+    return hazel_github_external(\"digital-asset\", repoName, commit, sha, directory=directory, name=name)"
  }
]