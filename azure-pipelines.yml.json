[
  {
    "id" : "cc6d3a2a-45e3-4cf1-97c5-d2a5f300e318",
    "prId" : 7178,
    "comments" : [
      {
        "id" : "7f5b2389-4bc3-4c08-8cbe-7c71fc8a22d2",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Maybe add a `-f` in here so it fails properly.",
        "createdAt" : "2020-08-19T09:28:39Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3e051268-382a-4940-9b3c-a5ff3a7f4467",
        "parentId" : "7f5b2389-4bc3-4c08-8cbe-7c71fc8a22d2",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "It doesn't, though, because Bash doesn't propagate errors through pipes. You just end up with an empty `PR`. Maybe I should check for that? 🤔",
        "createdAt" : "2020-08-19T10:04:56Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "29aa4e3e-a85d-4130-9ef6-23608a9f5306",
        "parentId" : "7f5b2389-4bc3-4c08-8cbe-7c71fc8a22d2",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "It does if you `set -o pipefail`, which you have, doesn't it?",
        "createdAt" : "2020-08-19T10:25:55Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "009663f4-14e4-4a92-9fe9-7b7a86d6d8a6",
        "parentId" : "7f5b2389-4bc3-4c08-8cbe-7c71fc8a22d2",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Not in a subshell. `-o pipefail` works for pipes in the current script but in my experience (and I tested it for this one) it doesn't in subshells. Or maybe it is that Bash doesn't propagate errors through string interpolation? Not quite sure what the actual issue is, but it does succeed on that statement and sets the variable to an empty string. (I think; now that I say it I did not try to differentiate between empty string and unset.)",
        "createdAt" : "2020-08-19T11:03:30Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5d6a8044-6c86-4470-a313-564826611a51",
        "parentId" : "7f5b2389-4bc3-4c08-8cbe-7c71fc8a22d2",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "```\r\nbash-3.2$ set -euo pipefail\r\nbash-3.2$ echo \"hello $(exit 1) world\"\r\nhello  world\r\nbash-3.2$ \r\n```",
        "createdAt" : "2020-08-19T11:04:41Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1e4bcdb8-23a3-4965-83fb-0811a2660236",
        "parentId" : "7f5b2389-4bc3-4c08-8cbe-7c71fc8a22d2",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "🤔\r\nThe more I test this the more confused I get.",
        "createdAt" : "2020-08-19T11:09:33Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ffb745f6-dac9-466c-989a-d001c96aaaad",
        "parentId" : "7f5b2389-4bc3-4c08-8cbe-7c71fc8a22d2",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "So Bash does seem to fil as expected now. I'm pretty sure I tested it about an hour ago and it didn't, but 🤷 . Thinking more about it, though, in this case, I do not want it to fail, as the Slack notification is still useful even if the script does not manage to get the PR number.",
        "createdAt" : "2020-08-19T11:15:16Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "917afdb3-4e6e-437d-9dde-1d8a8c9a491b",
        "parentId" : "7f5b2389-4bc3-4c08-8cbe-7c71fc8a22d2",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Subshells are not pipes.\r\n\r\n```\r\n$ ((exit 1) | echo 'hello, world'); echo $?\r\nhello, world\r\n0\r\n$ (set -o pipefail; (exit 1) | echo 'hello, world'); echo $?\r\nhello, world\r\n1\r\n```\r\n",
        "createdAt" : "2020-08-19T11:39:33Z",
        "updatedAt" : "2020-08-19T11:39:33Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bba8527d-e3f7-4467-8c8e-9d0b2d5b7de0",
        "parentId" : "7f5b2389-4bc3-4c08-8cbe-7c71fc8a22d2",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "That said, I like your fix that just reports anyway. 🙂 ",
        "createdAt" : "2020-08-19T11:40:21Z",
        "updatedAt" : "2020-08-19T11:40:21Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2c7b41d95fa7fc6ae0e20ad4ecc3fab080c784e6",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +803,807 @@\n          AUTH=\"$(get-gh-auth-header)\"\n          PR=$(curl -H \"$AUTH\" \\\n                    -H \"Accept: application/vnd.github.groot-preview+json\" \\\n                    -s -f \\"
  },
  {
    "id" : "6c4b9d91-f1a0-4bb6-b7bd-4685e555e7cc",
    "prId" : 7178,
    "comments" : [
      {
        "id" : "6fa5c9ff-5032-40b9-97bc-beb133c0349b",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "do you care about the newline? If not `true` seems like a more natural choice here.",
        "createdAt" : "2020-08-20T06:56:55Z",
        "updatedAt" : "2020-08-20T06:57:03Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a26e584c-75d2-4114-97dc-b5641db4d6e4",
        "parentId" : "6fa5c9ff-5032-40b9-97bc-beb133c0349b",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I don't. I keep forgetting about `true` for some reason. Given that it's already merged I don't think this is worth changing, but I'll try to keep it in mind next time.",
        "createdAt" : "2020-08-20T10:02:08Z",
        "updatedAt" : "2020-08-20T10:02:08Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "47472706-e339-4ff0-8919-2b5c38e21226",
        "parentId" : "6fa5c9ff-5032-40b9-97bc-beb133c0349b",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Also note that the newline is actually discarded by the assignment here:\r\n```\r\nbash-3.2$ a=$(fail || echo \"\")\r\nbash: fail: command not found\r\nbash-3.2$ b=$(fail || true)\r\nbash: fail: command not found\r\nbash-3.2$ declare -p a\r\ndeclare -- a=\"\"\r\nbash-3.2$ declare -p b\r\ndeclare -- b=\"\"\r\nbash-3.2$ \r\n```",
        "createdAt" : "2020-08-20T10:04:43Z",
        "updatedAt" : "2020-08-20T10:04:44Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2c7b41d95fa7fc6ae0e20ad4ecc3fab080c784e6",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +808,812 @@                    \"https://api.github.com/repos/digital-asset/daml/commits/$(git rev-parse HEAD)/pulls\" \\\n               | jq '.[0].number' \\\n               || echo \"\")\n          # Note: if we somehow fail to resolve the PR number from the GitHub\n          # API, there is still value in getting the notification on Slack, as"
  },
  {
    "id" : "d4f24d97-a1ef-4b53-9a8e-6eb71156e6ea",
    "prId" : 7101,
    "comments" : [
      {
        "id" : "fdf4080c-8a60-498e-92eb-9b598662edfe",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Wait wait wait. Why is there a `$` there at all?\r\n\r\nIt should be `awk '{ print $1 }'`.",
        "createdAt" : "2020-08-12T10:31:25Z",
        "updatedAt" : "2020-08-12T10:31:26Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fa98ed65-d8fb-4203-8c5d-2975d8c6bfc8",
        "parentId" : "fdf4080c-8a60-498e-92eb-9b598662edfe",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "good catch, https://github.com/digital-asset/daml/pull/7104",
        "createdAt" : "2020-08-12T10:34:24Z",
        "updatedAt" : "2020-08-12T10:34:25Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a4f657a4c225f6504324bc900dce6678caa90daf",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +814,818 @@              local message pr_handler\n              message=$1\n              pr_handler=$(head -1 release/rotation | awk '${print $1}')\n              curl -XPOST \\\n                   -i \\"
  },
  {
    "id" : "cad1cae6-5e67-4788-b233-0347569066d5",
    "prId" : 7099,
    "comments" : [
      {
        "id" : "556f6851-bf60-428a-82b2-d81d241d75c3",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This will also trigger for manually opened release PRs right? I guess there is no harm in it but it also seems a bit redundant.",
        "createdAt" : "2020-08-12T09:40:57Z",
        "updatedAt" : "2020-08-12T09:55:38Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "65b71f1e-ab00-4ee7-9918-3998342b4000",
        "parentId" : "556f6851-bf60-428a-82b2-d81d241d75c3",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Good point. I've updated to condition to match the branch name created by the automated release PRs. It's obviously not completely tamper-proof, but should be good enough to prevent accidental triggers.",
        "createdAt" : "2020-08-12T09:56:29Z",
        "updatedAt" : "2020-08-12T09:56:29Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "868e3d9241416b515a5f57622514a9e0ea217e84",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +783,787 @@          PR_BRANCH: $(pr.branch)\n\n  - job: notify_release_pr\n    condition: and(not(canceled()),\n                   startsWith(variables['Build.SourceBranchName'], 'auto-release-pr-'),"
  },
  {
    "id" : "555eca69-de98-47a4-a0cd-a33a27d91f38",
    "prId" : 7011,
    "comments" : [
      {
        "id" : "54bf51fc-7356-42e4-8ef5-aba8c078d225",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "This step of the release process runs on the trigger commit on the master branch, so the `release/rotation` file is the right one. (As opposed to many steps in the release process that checkout the target commit.)",
        "createdAt" : "2020-08-05T13:30:13Z",
        "updatedAt" : "2020-08-05T16:25:24Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9f4599d35cb51733847572c3264d234d481fd349",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +476,480 @@      - bash: |\n          set -euo pipefail\n          pr_handler=$(head -1 release/rotation | awk \"${print $1}\")\n          curl -XPOST \\\n               -i \\"
  },
  {
    "id" : "b8e9fee8-1f62-4b8d-8fc3-132ca76ed3a6",
    "prId" : 7011,
    "comments" : [
      {
        "id" : "d5a46600-5b6e-44c7-b943-6b550583836b",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Was this always the case and we just didn’t hit it so far or did something change?",
        "createdAt" : "2020-08-05T14:22:31Z",
        "updatedAt" : "2020-08-05T16:25:24Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4e879100-db72-4646-827a-9b42d4942ee3",
        "parentId" : "d5a46600-5b6e-44c7-b943-6b550583836b",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I'm not sure. It's _probably_ a git version change between our GCP-hosted nodes and the Azure ones.\r\n\r\nMaking it work for both seemed like less effort than trying to figure out when I should support which one.",
        "createdAt" : "2020-08-05T15:58:43Z",
        "updatedAt" : "2020-08-05T16:25:24Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9f4599d35cb51733847572c3264d234d481fd349",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +526,530 @@        # This series of pipes extracts the `username:password` part.\n        #\n        # It looks like in some cases the credentials get stored separately as\n        # a header instead.\n        if header=$(git config 'http.https://github.com/digital-asset/daml.extraheader'); then"
  },
  {
    "id" : "11e2d34b-562d-4d95-ac6b-2bca7c5eda65",
    "prId" : 7011,
    "comments" : [
      {
        "id" : "f8b820c2-6334-4d9a-beb8-aedf1431c458",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Is `http.https` intentional?",
        "createdAt" : "2020-08-05T14:22:55Z",
        "updatedAt" : "2020-08-05T16:25:24Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "aefa768e-7eb2-4a67-8149-ceb107f0bef6",
        "parentId" : "f8b820c2-6334-4d9a-beb8-aedf1431c458",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "The git config format lets you have \"subsections\", for example\r\n```\r\n[branch master]\r\n  remote = ...\r\n[branch temp]\r\n  remote = ...\r\n```\r\nso all the `branch` things have the same structure, but a different name. For the `git config` command, you access them with `section.subsection.attribute`, so `git config branch.master.remote`.\r\n\r\nThere's an `http` section that uses the URL as the subsection, so the file looks like:\r\n```\r\n[http https://github.com/digital-asset/daml]\r\n  extraheader = Authorization: basic username:password\r\n```\r\nI expected I'd need some sort of escaping to include the URL in the `git config` call, but apparently not, despite the presence of a dot in the URL. 🤷 ",
        "createdAt" : "2020-08-05T16:02:08Z",
        "updatedAt" : "2020-08-05T16:25:24Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2082c03e-d252-4b92-8c9b-7b7b1a988f41",
        "parentId" : "f8b820c2-6334-4d9a-beb8-aedf1431c458",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "ah makes sense, thanks for the explanation!",
        "createdAt" : "2020-08-05T16:18:33Z",
        "updatedAt" : "2020-08-05T16:25:24Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9f4599d35cb51733847572c3264d234d481fd349",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +528,532 @@        # It looks like in some cases the credentials get stored separately as\n        # a header instead.\n        if header=$(git config 'http.https://github.com/digital-asset/daml.extraheader'); then\n            AUTH=\"$header\"\n        else"
  },
  {
    "id" : "9eaa74d6-2f73-48f3-80ac-04ddbc793548",
    "prId" : 6859,
    "comments" : [
      {
        "id" : "b0ede98b-37e1-4a0c-aff1-037f9f6f7aef",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Does this trigger on both the PR and on master?",
        "createdAt" : "2020-07-24T14:25:08Z",
        "updatedAt" : "2020-07-24T16:33:38Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8630da91-7da9-4c6d-89cb-4dda8a2d531a",
        "parentId" : "b0ede98b-37e1-4a0c-aff1-037f9f6f7aef",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "No, the `notify_user` job never runs on master.",
        "createdAt" : "2020-07-24T14:37:48Z",
        "updatedAt" : "2020-07-24T16:33:38Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1dcc002b38f1f101a91dffe08b4ac1a241a94085",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +822,826 @@          }\n\n          if [ \"$(is_release)\" == \"true\" ]; then\n              # releases matter to everyone\n              tell_daml \"$(status)\""
  },
  {
    "id" : "71946817-b315-4d74-91a2-6d3b3af4ffdd",
    "prId" : 6709,
    "comments" : [
      {
        "id" : "5ea57232-7c98-4c0e-a79f-b372fcc8fbb5",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This feels a bit off. Shouldn’t we consider this a blocking check and do something like using a special format for the update PR and match on that on every PR?",
        "createdAt" : "2020-07-13T15:40:59Z",
        "updatedAt" : "2020-07-13T15:41:04Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d33301be-3a8a-4008-b37a-933f55c6272d",
        "parentId" : "5ea57232-7c98-4c0e-a79f-b372fcc8fbb5",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I'm not sure I understand what you mean here. This will trigger an independent build that reports its status to the branch and thus blocks the PR, exactly as if you'd triggered it through the web UI.",
        "createdAt" : "2020-07-13T15:43:43Z",
        "updatedAt" : "2020-07-13T15:43:43Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d03905b4-541b-4e03-95da-07600267fdd3",
        "parentId" : "5ea57232-7c98-4c0e-a79f-b372fcc8fbb5",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Ah I didn’t know independent builds were considered blocking. Then this seems reasonable :+1:",
        "createdAt" : "2020-07-13T15:45:08Z",
        "updatedAt" : "2020-07-13T15:45:08Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4f4e4983-8ab4-47dd-bd5b-f562a8de7cf8",
        "parentId" : "5ea57232-7c98-4c0e-a79f-b372fcc8fbb5",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "My understanding is that:\r\n- We have a set number of builds that GH will wait for specifically; however\r\n- All builds reported for the \"tip\" commit of a PR are part of the PR status;\r\n- Any build reported as anything else than succeeded (i.e. pending or failed) blocks the PR from being merged.\r\n\r\nI'll keep an eye on this when we do the next snapshot.",
        "createdAt" : "2020-07-13T15:58:22Z",
        "updatedAt" : "2020-07-13T15:58:23Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b240269f6dcaebd5d2ce956ed89add947842628a",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +553,557 @@        trigger_sha: '$(trigger_sha)'\n\n  - job: compat_versions_pr_trigger_daily\n    dependsOn: compat_versions_pr\n    pool:"
  },
  {
    "id" : "497ddfd2-466d-4d83-803f-a5be80eb1ffd",
    "prId" : 6530,
    "comments" : [
      {
        "id" : "6c7e78ef-4db7-45b7-a128-42e43ec3f96f",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Maybe a comment that we do this to remove shared memory created by postgres would be useful in the future?",
        "createdAt" : "2020-06-29T19:19:29Z",
        "updatedAt" : "2020-06-29T19:20:06Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e2cfd6d92d22d33601f70cdf8e76e3a3325e4ef7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +140,144 @@      - template: ci/report-start.yml\n      - checkout: self\n      - bash:\n          for shmid in $(ipcs -m | sed 1,3d | awk '{print $2}' | sed '$d'); do ipcrm -m $shmid; done\n        name: clear_shm"
  },
  {
    "id" : "3a3e9686-00ae-46e8-8016-0c7332cf7ec3",
    "prId" : 6530,
    "comments" : [
      {
        "id" : "a80a2170-9c6d-44e4-8a3e-f283d1dbe630",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Can we pull this out into a script which can also be run locally easily when things go to hell? (Perhaps one with a useful name like `release-shared-memory.sh`?)",
        "createdAt" : "2020-06-30T07:42:10Z",
        "updatedAt" : "2020-06-30T07:42:10Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e2cfd6d92d22d33601f70cdf8e76e3a3325e4ef7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +141,145 @@      - checkout: self\n      - bash:\n          for shmid in $(ipcs -m | sed 1,3d | awk '{print $2}' | sed '$d'); do ipcrm -m $shmid; done\n        name: clear_shm\n      - bash: |"
  },
  {
    "id" : "724f2d85-5ae0-4ab1-a09e-bff7b4a85ee7",
    "prId" : 6479,
    "comments" : [
      {
        "id" : "4255365d-75a6-41ce-a7af-cd30dc3b8a8c",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Note: no need for extra condition checks here, this will only run if `release` has run.",
        "createdAt" : "2020-06-24T13:22:54Z",
        "updatedAt" : "2020-06-24T13:22:54Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c986337c-3b7b-4aa4-80c8-e95ece3ba43d",
        "parentId" : "4255365d-75a6-41ce-a7af-cd30dc3b8a8c",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Since I wondered that myself: If `release` has finished we’ve uploaded to maven, github releases and the gcp bucket.",
        "createdAt" : "2020-06-24T13:44:06Z",
        "updatedAt" : "2020-06-24T13:53:40Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b11c39af056cdb557bed8407e18c515d915a4317",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +479,483 @@  - job: compat_versions_pr\n    dependsOn:\n    - release\n    - check_for_release\n    pool:"
  },
  {
    "id" : "010a6800-aa7a-4b3c-b4a6-53147724f059",
    "prId" : 6016,
    "comments" : [
      {
        "id" : "0c66de7e-60ed-4b5a-8e66-814fb8c4c9d7",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "doesn’t this break this PR which adds more than one line?",
        "createdAt" : "2020-05-19T17:00:20Z",
        "updatedAt" : "2020-05-19T17:02:11Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d4e8c707-bbe2-4d54-8ddb-b8ca1172a7b6",
        "parentId" : "0c66de7e-60ed-4b5a-8e66-814fb8c4c9d7",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "No, because it also changes more than the 2 release files, so it doesn't get there.",
        "createdAt" : "2020-05-19T17:17:41Z",
        "updatedAt" : "2020-05-19T17:17:41Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "aa041274-c060-4f64-b97b-041788d5cc31",
        "parentId" : "0c66de7e-60ed-4b5a-8e66-814fb8c4c9d7",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "ah right, thanks for the explanation!",
        "createdAt" : "2020-05-19T17:18:42Z",
        "updatedAt" : "2020-05-19T17:18:42Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5f991d71059dcd0bad10906e5ddf2f510803c993",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +299,303 @@\n          if changes_release_files; then\n              if changes_one_line_in_latest; then\n                  setvar is_release true\n                  setvar trigger_sha $(branch_sha)"
  },
  {
    "id" : "7338081e-3650-4e14-baed-8c4c6c3d92c1",
    "prId" : 5891,
    "comments" : [
      {
        "id" : "9547d128-dabf-479e-9cbe-295a9078d70c",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "This only runs on \"individual CI\", i.e. not PRs, which means\r\n- It does not need to worry about Azure running merge commits; the current commit really is the one we're running for.\r\n- This is not tested as part of the PR checks. 🙏 driven development.",
        "createdAt" : "2020-05-07T10:28:35Z",
        "updatedAt" : "2020-05-07T11:44:20Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7f03492dd91f7e57d5b0bfc6d790163fc4243e2d",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +269,273 @@        TEST_SHA=$(cat ci/cron/perf/test_sha)\n        LAST_CHANGES=$(git log -n1 --format=%H daml-lf/scenario-interpreter/src/perf)\n        CURRENT_SHA=$(git rev-parse HEAD)\n        if [ \"$TEST_SHA\" != \"$LAST_CHANGES\" ]; then\n            if [ \"$LAST_CHANGES\" = \"$CURRENT_SHA\" ]; then"
  },
  {
    "id" : "b2202459-184b-47fc-9764-8c41cde7ebdf",
    "prId" : 5723,
    "comments" : [
      {
        "id" : "9844cf64-b98e-4a30-a66e-13bdc55736de",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Shouldn’t we also enable macos on the daily compat cron job?",
        "createdAt" : "2020-04-27T11:49:36Z",
        "updatedAt" : "2020-04-27T12:46:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0d242632-362a-4f2f-8daa-873eb9dbb9d3",
        "parentId" : "9844cf64-b98e-4a30-a66e-13bdc55736de",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Good catch, thanks. I had thought of that at some point but got lost in YAML.",
        "createdAt" : "2020-04-27T11:54:59Z",
        "updatedAt" : "2020-04-27T12:46:10Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d1ff343e9dbb546c7a82b0abde88dfdf0e823f64",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +190,194 @@      - template: ci/report-end.yml\n\n  - job: compatibility_macos\n    dependsOn:\n      - check_for_release"
  },
  {
    "id" : "7047d752-037f-4c2e-b637-09f9756c52f2",
    "prId" : 5723,
    "comments" : [
      {
        "id" : "d53c6aa3-d623-45f6-905e-ad728f9af024",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Let’s leave it like this for now but I wonder if it might make sense to separate building the platform-agnostic artifacts from building the SDK tarball and running the tests. That might make the logic a bit cleaner and we can start running the macos job sooner.",
        "createdAt" : "2020-04-27T11:51:00Z",
        "updatedAt" : "2020-04-27T12:46:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d1ff343e9dbb546c7a82b0abde88dfdf0e823f64",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +184,188 @@      - template: ci/report-start.yml\n      - checkout: self\n      - template: ci/compatibility.yml\n        parameters:\n          test_flags: '--quick'"
  },
  {
    "id" : "d7fa918e-187b-425a-b1f3-c00720fed40c",
    "prId" : 5665,
    "comments" : [
      {
        "id" : "beb9be48-ca8f-4bcd-91c3-156567e693c5",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Is the Bazel configuration done in the root WORKSPACE going to translate to the nested one?",
        "createdAt" : "2020-04-23T09:36:08Z",
        "updatedAt" : "2020-04-23T10:46:39Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "93cb0c24-c757-4bb2-acfd-517d7f22b86f",
        "parentId" : "beb9be48-ca8f-4bcd-91c3-156567e693c5",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Good catch! I’ve added an environment variable and modified the script to write to the bazelrc.local in that directory. Hopefully that should work.",
        "createdAt" : "2020-04-23T09:48:02Z",
        "updatedAt" : "2020-04-23T10:46:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "fae715204e6fbce3b32c31c7d03f3ca3a5de8700",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +192,196 @@          IS_FORK: $(System.PullRequest.IsFork)\n          # to upload to the bazel cache\n          GOOGLE_APPLICATION_CREDENTIALS_CONTENT: $(GOOGLE_APPLICATION_CREDENTIALS_CONTENT)\n      - bash: |\n          set -euo pipefail"
  },
  {
    "id" : "62f5040e-5717-4fe0-8333-390c48d059c4",
    "prId" : 4701,
    "comments" : [
      {
        "id" : "c7a5ec4f-161b-49a7-885e-e2948ef484ee",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Note: `branch_sha` is defined as the current commit when running from master, and as the branch sha (as opposed to the merge sha) on a PR.",
        "createdAt" : "2020-02-25T20:18:01Z",
        "updatedAt" : "2020-02-25T20:18:02Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "59d4f65b32c73c8985e3acdbc94f295bf949682c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +256,260 @@          if is_release_commit; then\n              echo \"##vso[task.setvariable variable=is_release;isOutput=true]true\"\n              echo \"##vso[task.setvariable variable=trigger_sha;isOutput=true]$(branch_sha)\"\n              echo \"##vso[task.setvariable variable=release_sha;isOutput=true]$(cat LATEST | awk '{print $1}')\"\n              echo \"##vso[task.setvariable variable=release_tag;isOutput=true]$(cat LATEST | awk '{print $2}')\""
  },
  {
    "id" : "e6bd5112-1de9-4ea8-8f53-2ee24aea202e",
    "prId" : 4611,
    "comments" : [
      {
        "id" : "3d090cab-981c-4ad2-945c-cae53dcedec5",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I would strongly recommend to not add that. You have more than enough things on your plate already :slightly_smiling_face: But I’ll leave it to up to you.",
        "createdAt" : "2020-02-19T17:32:52Z",
        "updatedAt" : "2020-02-20T10:17:05Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4fd8a08d-c5d9-42f6-809d-5e8502379da3",
        "parentId" : "3d090cab-981c-4ad2-945c-cae53dcedec5",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I'm not planning to jump on each of those, but I do want to get a sense for how much of an issue this is, as not everyone reports it when it happens.",
        "createdAt" : "2020-02-20T12:07:45Z",
        "updatedAt" : "2020-02-20T12:07:45Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "591f4fae040b28817fc7820aad9addc97ad38f39",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +403,407 @@          # backoff to mitigate.\n          BACKOFF=1\n          tell_gary() {\n              curl -XPOST \\\n                   -i \\"
  },
  {
    "id" : "5bedfd80-6a44-4da5-86d2-c37b0ab91df7",
    "prId" : 4611,
    "comments" : [
      {
        "id" : "988f5769-c2f8-4ccf-843c-42d889739ac6",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Do we actually need `git fetch` here or only `git checkout`? I would expect that the branch commit should always be in here already. Maybe that would help make this less flaky and it might also explain why we haven’t seen this on steps that use the regular Azure checkout step.",
        "createdAt" : "2020-02-19T17:33:37Z",
        "updatedAt" : "2020-02-20T10:17:05Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0155f315-e030-4eb5-b78e-e10afba44c46",
        "parentId" : "988f5769-c2f8-4ccf-843c-42d889739ac6",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "We _have_ seen this exact issue on steps that use the regular Azure checkout, as that was the reason for putting in this workaround in the first place.\r\n\r\nWe _may_ need git fetch because this is a separate job, which means it may run on a separate machine which may not have fetched this commit yet. But now that you mention it maybe we could just check whether we have the commit before trying to fetch it.",
        "createdAt" : "2020-02-20T10:15:39Z",
        "updatedAt" : "2020-02-20T10:17:05Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f51e6fe3-c71d-49df-b327-c04878a9efcb",
        "parentId" : "988f5769-c2f8-4ccf-843c-42d889739ac6",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "> We _have_ seen this exact issue on steps that use the regular Azure checkout, as that was the reason for putting in this workaround in the first place.\r\n\r\nWe have but it seemed like new behavior so maybe whatever change required this in Azure is no longer necessary.",
        "createdAt" : "2020-02-20T10:17:46Z",
        "updatedAt" : "2020-02-20T10:17:47Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "738a2627-a6b8-428b-8000-aff31d78815b",
        "parentId" : "988f5769-c2f8-4ccf-843c-42d889739ac6",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "True. Hopefully the Slack messages will give me some idea of how prevalent this issue is, and whether we need to dig further.",
        "createdAt" : "2020-02-20T12:07:06Z",
        "updatedAt" : "2020-02-20T12:07:07Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "591f4fae040b28817fc7820aad9addc97ad38f39",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +411,415 @@          }\n          trap tell_gary EXIT\n          while !  git fetch origin $(branch_sha); do\n            if (( $BACKOFF > 500 )); then\n              echo \"Could not get commit $(branch_sha); something is very wrong.\""
  },
  {
    "id" : "6ba984ed-9b83-4bb7-9a2c-bd05f859a944",
    "prId" : 4513,
    "comments" : [
      {
        "id" : "d71435f2-dd08-45aa-a680-7ba3eb2bde72",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Given that this changes build artifacts, I’d be more comfortable running `bazel test` with the environment variable set.",
        "createdAt" : "2020-02-19T10:30:21Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4a524913-2710-4ace-ad5a-93f77ce3aa23",
        "parentId" : "d71435f2-dd08-45aa-a680-7ba3eb2bde72",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Makes sense. I'll see if I can add that to the PR build step, so we don't have to wait until we merge it to discover if that breaks things.\r\n\r\nSpolier alert: I had not actually tried running `bazel test` with the env var set, and it does break things. I'll see if I can fix it.",
        "createdAt" : "2020-02-19T12:45:26Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "81246bd2733ace93653cb663dca5a0cdaf7c11e9",
    "line" : 262,
    "diffHunk" : "@@ -1,1 +337,341 @@          eval \"$(./dev-env/bin/dade-assist)\"\n\n          export DAML_SDK_RELEASE_VERSION=$(release_tag)\n          bazel build //release:release\n"
  },
  {
    "id" : "e1de8a68-157b-466c-bc1b-5350be661783",
    "prId" : 4358,
    "comments" : [
      {
        "id" : "ce20b9b7-e1d3-47b2-b4c3-ffb58f23b13c",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "`HEAD^2` does not exist for master commits as they have a single parent (squash-merge).",
        "createdAt" : "2020-02-03T16:20:27Z",
        "updatedAt" : "2020-02-03T17:30:33Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "268976f3ae0f4c09fc8d177ac9f38e6395c59ba3",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +25,29 @@          set -euo pipefail\n          if [ \"$(Build.Reason)\" == \"PullRequest\" ]; then\n              echo \"##vso[task.setvariable variable=branch;isOutput=true]$(git rev-parse 'HEAD^2')\"\n              echo \"##vso[task.setvariable variable=master;isOutput=true]$(git rev-parse 'HEAD^1')\"\n              echo \"##vso[task.setvariable variable=fork_point;isOutput=true]$(git merge-base --fork-point 'HEAD^1' 'HEAD^2')\""
  },
  {
    "id" : "3de30165-ce7b-44c2-8514-c2713783d04f",
    "prId" : 4358,
    "comments" : [
      {
        "id" : "3fe93d9c-7699-4421-90b7-6ba090890119",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "This job doesn't really make sense on master commits as there is no followup action required — and build failures are already reported.",
        "createdAt" : "2020-02-03T16:21:21Z",
        "updatedAt" : "2020-02-03T17:30:33Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "268976f3ae0f4c09fc8d177ac9f38e6395c59ba3",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +498,502 @@\n  - job: notify_user\n    condition: eq(variables['Build.Reason'], 'PullRequest')\n    dependsOn:\n      - git_sha"
  },
  {
    "id" : "672c5683-53f7-4474-874e-f1a2a7f79c9e",
    "prId" : 4144,
    "comments" : [
      {
        "id" : "168e7ea8-480f-47bd-b71c-907ae0324a3e",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "If this keeps being a problem, maybe we can remove `jq` and `gcloud` which don’t seem to be necessary to get the rerun button to work in case of cancellations and I don’t think recording build data is crucial.",
        "createdAt" : "2020-01-21T17:23:50Z",
        "updatedAt" : "2020-01-21T17:23:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "818ae24990ad4b42f9c1c240eebf7bf929dc9880",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +364,368 @@          # result of the merge (i.e. this is not using the same commit as the\n          # other jobs in this build). This seems good enough here as all we\n          # really want is the dev-env, and conflicts should be pretty rare\n          # there. It _does_ mean this may fail to catch changes that would\n          # break this job, e.g. incompatible updates of jq or gcloud."
  },
  {
    "id" : "d1500f3f-210e-4df5-8267-b41bc4d68461",
    "prId" : 3323,
    "comments" : [
      {
        "id" : "2593bce4-f648-496a-887e-a7e9fcc01b50",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n          key: $(nix-cache-key) | dQw4w9WgXcQ\r\n```",
        "createdAt" : "2019-11-04T11:47:39Z",
        "updatedAt" : "2019-11-04T11:47:49Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0b1bb111-3f8f-4c90-a1a7-e1745410252b",
        "parentId" : "2593bce4-f648-496a-887e-a7e9fcc01b50",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : ":fire:",
        "createdAt" : "2019-11-04T11:51:20Z",
        "updatedAt" : "2019-11-04T11:51:20Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8b12e94cf7b2bf55cf63a5b55a0708b7c4c579ad",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +47,51 @@      - task: CacheBeta@0\n        inputs:\n          key: $(nix-cache-key) | v2\n          path: $(nix-cache-path)\n      - bash: |"
  },
  {
    "id" : "b16e314b-2d8e-408d-9e31-70cf5098656f",
    "prId" : 2968,
    "comments" : [
      {
        "id" : "1da2cce5-3c26-4ff9-a584-28908a6a3b7d",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Just to be sure I understand this correctly (might be worth documenting), this will create separate signature files that will then be automatically picked up by the release process and uploaded to github releases as well?",
        "createdAt" : "2019-09-21T05:35:08Z",
        "updatedAt" : "2019-09-23T21:05:28Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f52e8ccbd305580a00451992a0c17ce2136f1396",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +223,227 @@          # Note: relies on our release artifacts not having spaces in their\n          # names. Creates a ${f}.asc with the signature for each $f.\n          for f in *; do\n              gpg --homedir $GPG_DIR -ab $f\n          done"
  },
  {
    "id" : "f5cf7b89-9cea-40f0-8988-3ad8f3cda577",
    "prId" : 2420,
    "comments" : [
      {
        "id" : "ec766b27-641e-40db-a6fe-0143db80c3ed",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "As I understand the [`--repository_cache` flag](https://bazel.build/designs/2016/09/30/repository-cache.html) this only caches external dependencies, i.e. dependencies specified in `WORKSPACE` or files imported by `WORKSPACE`. So, I don't think `*.bazel` or `BUILD` need to be included in the key. @cocreature am I missing something?",
        "createdAt" : "2019-08-12T11:26:57Z",
        "updatedAt" : "2019-08-12T11:26:57Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "cc99c2dafcb2dcc87cab36001fc7ed8ff7cd04bf",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +60,64 @@          fi\n        displayName: restore cache\n      - bash: echo $(git log -n1 --pretty=format:%H azure-pipelines.yml $(find . -name \\*.bazel -or -name \\*.bzl -or -name WORKSPACE -or -name BUILD)) >> $(bazel-repo-cache-key)\n        displayName: bazel repo cache key\n      - task: CacheBeta@0"
  },
  {
    "id" : "a7fb36ea-205e-4fd1-8b5c-75a578a5723b",
    "prId" : 2377,
    "comments" : [
      {
        "id" : "50627b98-5589-45bd-8c3f-275256253f00",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "The uncached builds are quite slow here. Can we easily mark this as non-required? I couldn’t find anything in the Azure docs but maybe I’m just missing something.\r\nIf not, we probably need to disable this on Monday if nothing has changed until then.",
        "createdAt" : "2019-08-02T09:40:41Z",
        "updatedAt" : "2019-08-02T11:23:53Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "27453632-a050-4573-8ee5-4154b7f2a6fb",
        "parentId" : "50627b98-5589-45bd-8c3f-275256253f00",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "How slow? macOS builds typically take about 25 minutes, so as long as it's faster than that it should be OK. An easy way to speed those up would be to run them on our own linux pool, which has bigger machines than the Azure-provided ones. Another option would be to use the same logic as in this PR to skip the build entirely if caching fails.",
        "createdAt" : "2019-08-02T09:44:16Z",
        "updatedAt" : "2019-08-02T11:23:53Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a3764a14-679b-430d-a96d-b3938499d5da",
        "parentId" : "50627b98-5589-45bd-8c3f-275256253f00",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I think it was around 40 minutes.",
        "createdAt" : "2019-08-02T09:44:58Z",
        "updatedAt" : "2019-08-02T11:23:53Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "512cde69-8985-47c7-bf37-01e976b64412",
        "parentId" : "50627b98-5589-45bd-8c3f-275256253f00",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Looks, like I was misremembering. It finished in ~20 minutes so it’s probably fine. However, the workaround doesn’t seem to work since the cache upload step is failing.",
        "createdAt" : "2019-08-02T09:51:16Z",
        "updatedAt" : "2019-08-02T11:23:53Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2793674a-d211-4592-963e-6f5105c64468",
        "parentId" : "50627b98-5589-45bd-8c3f-275256253f00",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Looks like this takes about 15 minutes, so well below the macOS one.",
        "createdAt" : "2019-08-02T10:34:06Z",
        "updatedAt" : "2019-08-02T11:23:53Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "259dbf423c4bdf1b2e9d7a29a78800535a1220c7",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +162,166 @@          tar czf .azure-cache/stack-root.tar.gz -C $HOME .stack\n        displayName: \"Pack cache\"\n        condition: not(eq('true', variables['cacheFailed']))\n      - template: ci/tell-slack-failed.yml\n      - template: ci/report-end.yml"
  },
  {
    "id" : "bb446d4c-3d97-4e24-9c19-8673601c2461",
    "prId" : 1274,
    "comments" : [
      {
        "id" : "d997fec4-d204-4568-81ec-c62e60903d36",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I’ve verified that signing works correctly without the `has_released` check so hopefully it will work properly during a release as well.",
        "createdAt" : "2019-05-21T14:19:18Z",
        "updatedAt" : "2019-05-22T06:46:38Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "61acee607b0fff6c58ed95a7ec7087a481d863ec",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +110,114 @@    pool:\n      name: 'windows-pool'\n    condition: and(succeeded(), eq(dependencies.Linux.outputs['release.has_released'], 'true'))\n    variables:\n      unsigned-installer: $[ dependencies.Windows.outputs['publish.artifact-unsigned-windows-installer'] ]"
  },
  {
    "id" : "0ffc056f-4873-4b56-a113-0c1b1109e5bb",
    "prId" : 1274,
    "comments" : [
      {
        "id" : "c66476ff-d289-429b-a69d-a6769437e022",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Feels a bit weird to be using an `http` call in a signing phase. Any chance you could turn this into an `https` call?",
        "createdAt" : "2019-05-21T15:53:57Z",
        "updatedAt" : "2019-05-22T06:46:38Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9cd851c3-beae-4603-83f1-81e8f93a4902",
        "parentId" : "c66476ff-d289-429b-a69d-a6769437e022",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "`curl https://timestamp.digicert.com` doesn't seem to work, so I suppose that's off the table. Still feels weird though.",
        "createdAt" : "2019-05-21T16:04:59Z",
        "updatedAt" : "2019-05-22T06:46:38Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "221c8193-47a4-42ca-9323-301253a80c5a",
        "parentId" : "c66476ff-d289-429b-a69d-a6769437e022",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Yeah I was rather surprised by this but I copied it from the official [Digicert documentation](https://www.digicert.com/code-signing/signcode-signtool-command-line.htm). I took a short look at [RFC 3161](https://www.ietf.org/rfc/rfc3161.txt) which defines the timestamping protocol and it looks like that has a custom signing mechanism so presumably that’s why using HTTP is reasonable here.",
        "createdAt" : "2019-05-22T06:49:29Z",
        "updatedAt" : "2019-05-22T06:49:30Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "61acee607b0fff6c58ed95a7ec7087a481d863ec",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +126,130 @@          chmod +x \"$(Build.StagingDirectory)/$INSTALLER\"\n          echo \"$SIGNING_KEY\" | base64 -d > signing_key.pfx\n          MSYS_NO_PATHCONV=1 signtool.exe sign '/f' signing_key.pfx '/fd' sha256 '/tr' \"http://timestamp.digicert.com\" '/v' \"$(Build.StagingDirectory)/$INSTALLER\"\n          rm signing_key.pfx\n          echo \"##vso[task.setvariable variable=artifact-windows-installer;isOutput=true]$INSTALLER\""
  },
  {
    "id" : "ba09ae16-1e5b-437e-85f6-68f789ef1226",
    "prId" : 1274,
    "comments" : [
      {
        "id" : "5d2894fb-ed13-4bfa-8751-b7201774967b",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I don't see this variable being used. Should it be added to the checks of the `release` job?",
        "createdAt" : "2019-05-21T15:56:06Z",
        "updatedAt" : "2019-05-22T06:46:38Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f8e6d43d-28bb-4b88-806f-54e3e892075e",
        "parentId" : "5d2894fb-ed13-4bfa-8751-b7201774967b",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I’ve just removed it. Given that we set it unconditionally there doesn’t seem to be a reason to have it.",
        "createdAt" : "2019-05-22T06:49:51Z",
        "updatedAt" : "2019-05-22T06:49:51Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "61acee607b0fff6c58ed95a7ec7087a481d863ec",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +129,133 @@          rm signing_key.pfx\n          echo \"##vso[task.setvariable variable=artifact-windows-installer;isOutput=true]$INSTALLER\"\n          echo \"##vso[task.setvariable variable=has_released;isOutput=true]true\"\n        name: signing\n        env:"
  },
  {
    "id" : "c27e7374-2bf4-454e-81f9-fa6d5fdc3a15",
    "prId" : 560,
    "comments" : [
      {
        "id" : "823c051c-66d2-4280-86f8-19e410742213",
        "parentId" : null,
        "author" : {
          "login" : "flokli",
          "name" : "Florian Klink",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/183879?u=41f435d31792cbf91592f78757b981eb8e821fc6&v=4"
        },
        "body" : "hoping azures' yaml parser supports this: can we use [anchors and merge keys](https://camel.readthedocs.io/en/latest/yamlref.html#merge-keys) to reduce code duplication?",
        "createdAt" : "2019-04-26T21:53:06Z",
        "updatedAt" : "2019-04-26T23:03:10Z",
        "lastEditedBy" : {
          "login" : "flokli",
          "name" : "Florian Klink",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/183879?u=41f435d31792cbf91592f78757b981eb8e821fc6&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "47c14202-78d3-4bcb-ac0d-e6d7551aaaf2",
        "parentId" : "823c051c-66d2-4280-86f8-19e410742213",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "> /azure-pipelines.yml: Anchors are not currently supported. Remove the anchor 'SLACK'\r\n\r\nNope :(",
        "createdAt" : "2019-04-26T23:02:42Z",
        "updatedAt" : "2019-04-26T23:03:10Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5fcb6d34-b351-4460-a812-2a3392602b32",
        "parentId" : "823c051c-66d2-4280-86f8-19e410742213",
        "author" : {
          "login" : "flokli",
          "name" : "Florian Klink",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/183879?u=41f435d31792cbf91592f78757b981eb8e821fc6&v=4"
        },
        "body" : "Meh :-/\r\n\r\nhttps://github.com/Microsoft/azure-pipelines-yaml/issues/187",
        "createdAt" : "2019-04-27T15:56:22Z",
        "updatedAt" : "2019-04-27T15:56:22Z",
        "lastEditedBy" : {
          "login" : "flokli",
          "name" : "Florian Klink",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/183879?u=41f435d31792cbf91592f78757b981eb8e821fc6&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8c4263c2cb61acb18223d212bfd5a63301a7b7f7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +26,30 @@        parameters:\n          name: linux\n      - bash: |\n          set -euo pipefail\n          MESSAGE=$(git log --pretty=format:%s -n1)"
  },
  {
    "id" : "13d7cb58-1afe-4a92-8565-c296b46cea58",
    "prId" : 230,
    "comments" : [
      {
        "id" : "97cd2b33-abad-46d3-8707-e18e72e8165c",
        "parentId" : null,
        "author" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "body" : "What specifically is the security concern that you are trying to address here? Could we add this in a comment so we don’t forget about it?",
        "createdAt" : "2019-04-09T09:55:50Z",
        "updatedAt" : "2019-04-09T10:58:46Z",
        "lastEditedBy" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6eed3b52-62c8-44ec-a5a1-d5c7dae7ec61",
        "parentId" : "97cd2b33-abad-46d3-8707-e18e72e8165c",
        "author" : null,
        "body" : "The linux-pool is only available for non-public PRs so I need a fallback for external PRs.",
        "createdAt" : "2019-04-09T13:52:42Z",
        "updatedAt" : "2019-04-09T13:52:42Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "b39bf789a1ded0c4a751b9399720df1c332df945",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +21,25 @@    timeoutInMinutes: 360\n    pool:\n      ${{ if eq(variables['System.PullRequest.IsFork'], 'true') }}:\n        vmImage: 'ubuntu-16.04'\n      ${{ if eq(variables['System.PullRequest.IsFork'], 'false') }}:"
  }
]