[
  {
    "id" : "fdd1b026-0553-474c-ab75-bf473427be01",
    "prId" : 7734,
    "comments" : [
      {
        "id" : "525e43de-a60b-4c40-810b-04f1f7b711b9",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Not sure I follow. You're using `$(fork_sha)` anyway, so nothing refers to `origin/master` anywhere. I'm not sure that this will affect anything.\r\n\r\nCan you do me a favor and explain one more time? :upside_down_face: ",
        "createdAt" : "2020-10-19T12:47:44Z",
        "updatedAt" : "2020-10-19T15:49:31Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6dfc7a33-cb3a-495e-95be-35f7976b01f9",
        "parentId" : "525e43de-a60b-4c40-810b-04f1f7b711b9",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "You're totally right. This doesn't do anything. I've amended the PR to move the `git fetch` to the job that actually computes the fork point, where it can be more useful.",
        "createdAt" : "2020-10-19T15:10:11Z",
        "updatedAt" : "2020-10-19T15:49:31Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "998ea9e9-2c17-4f76-ac77-771817e3fd69",
        "parentId" : "525e43de-a60b-4c40-810b-04f1f7b711b9",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Though, actually... I don't understand how this can be wrong on our end. I'm afraid the race condition has to have happened at the GitHub level then. We run CI on the merge commit that GitHub gives us, and find the fork point based on _its_ parents. I'm thoroughly confused now. `origin/master` never gets called here.",
        "createdAt" : "2020-10-19T15:12:36Z",
        "updatedAt" : "2020-10-19T15:49:31Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "396a0129726ea603ae25bdef2e79a6a35e7f097b",
    "line" : null,
    "diffHunk" : "@@ -80,7 +80,9 @@ jobs:\n       demands: assignment -equals default\n     steps:\n       - checkout: self\n-      - bash: ci/check-changelog.sh $(fork_sha)\n+      - bash: |\n+          git fetch"
  },
  {
    "id" : "0777462b-c284-4d24-bba9-93989877b421",
    "prId" : 7528,
    "comments" : [
      {
        "id" : "50a8e913-e94b-4d9a-ab63-95e7a2d0d58c",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "This may not run reliably the same on CI and on your machine. Better to run it through dev-env.\r\n\r\n```suggestion\r\n      - bash: |\r\n          set -euo pipefail\r\n          ci/dev-env-install.sh\r\n          eval $(dev-env/bin/dade-assist)\r\n          cd docs && scripts/check-closing-quotes.sh\r\n```",
        "createdAt" : "2020-10-01T14:45:56Z",
        "updatedAt" : "2020-10-02T11:57:06Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "87280e2c-c1a4-4745-8d4f-0e8e7b5d17c2",
        "parentId" : "50a8e913-e94b-4d9a-ab63-95e7a2d0d58c",
        "author" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "body" : "thanks, committing...",
        "createdAt" : "2020-10-01T14:47:28Z",
        "updatedAt" : "2020-10-02T11:57:06Z",
        "lastEditedBy" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5fa926d1bb6b9e914709ff4912137f09ec3e346e",
    "line" : null,
    "diffHunk" : "@@ -82,6 +82,14 @@ jobs:\n       - checkout: self\n       - bash: ci/check-changelog.sh $(fork_sha)\n \n+  - job: check_closing_quotes\n+    pool:\n+      name: 'linux-pool'\n+      demands: assignment -equals default\n+    steps:\n+      - checkout: self\n+      - bash: cd docs && scripts/check-closing-quotes.sh"
  },
  {
    "id" : "5c2a5f24-63c5-4c68-9794-27ec2f457d61",
    "prId" : 7178,
    "comments" : [
      {
        "id" : "7a0447c0-05db-4bc3-b876-bc0bd0f8aeb7",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Maybe add a `-f` in here so it fails properly.",
        "createdAt" : "2020-08-19T09:28:39Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "43e267bd-af29-448c-94e2-8512284fd313",
        "parentId" : "7a0447c0-05db-4bc3-b876-bc0bd0f8aeb7",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "It doesn't, though, because Bash doesn't propagate errors through pipes. You just end up with an empty `PR`. Maybe I should check for that? 🤔",
        "createdAt" : "2020-08-19T10:04:56Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e930a6c1-5a4d-4d2e-a5b0-5c4cf81798c4",
        "parentId" : "7a0447c0-05db-4bc3-b876-bc0bd0f8aeb7",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "It does if you `set -o pipefail`, which you have, doesn't it?",
        "createdAt" : "2020-08-19T10:25:55Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6a0ad379-5614-486f-81eb-586c8d67a409",
        "parentId" : "7a0447c0-05db-4bc3-b876-bc0bd0f8aeb7",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Not in a subshell. `-o pipefail` works for pipes in the current script but in my experience (and I tested it for this one) it doesn't in subshells. Or maybe it is that Bash doesn't propagate errors through string interpolation? Not quite sure what the actual issue is, but it does succeed on that statement and sets the variable to an empty string. (I think; now that I say it I did not try to differentiate between empty string and unset.)",
        "createdAt" : "2020-08-19T11:03:30Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "dd3d6e9a-5ab2-4268-bd2b-cf096b4d5dd8",
        "parentId" : "7a0447c0-05db-4bc3-b876-bc0bd0f8aeb7",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "```\r\nbash-3.2$ set -euo pipefail\r\nbash-3.2$ echo \"hello $(exit 1) world\"\r\nhello  world\r\nbash-3.2$ \r\n```",
        "createdAt" : "2020-08-19T11:04:41Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "77362456-0275-4cc4-a67d-3a056b3afa71",
        "parentId" : "7a0447c0-05db-4bc3-b876-bc0bd0f8aeb7",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "🤔\r\nThe more I test this the more confused I get.",
        "createdAt" : "2020-08-19T11:09:33Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a1c5acc0-1be5-4e76-aac9-ec9d2ce72cb9",
        "parentId" : "7a0447c0-05db-4bc3-b876-bc0bd0f8aeb7",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "So Bash does seem to fil as expected now. I'm pretty sure I tested it about an hour ago and it didn't, but 🤷 . Thinking more about it, though, in this case, I do not want it to fail, as the Slack notification is still useful even if the script does not manage to get the PR number.",
        "createdAt" : "2020-08-19T11:15:16Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "699352d5-cd32-4acb-8552-07bc1523ad56",
        "parentId" : "7a0447c0-05db-4bc3-b876-bc0bd0f8aeb7",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Subshells are not pipes.\r\n\r\n```\r\n$ ((exit 1) | echo 'hello, world'); echo $?\r\nhello, world\r\n0\r\n$ (set -o pipefail; (exit 1) | echo 'hello, world'); echo $?\r\nhello, world\r\n1\r\n```\r\n",
        "createdAt" : "2020-08-19T11:39:33Z",
        "updatedAt" : "2020-08-19T11:39:33Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "45a7d35e-ef50-46ab-8cc5-4885d23f5f0f",
        "parentId" : "7a0447c0-05db-4bc3-b876-bc0bd0f8aeb7",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "That said, I like your fix that just reports anyway. 🙂 ",
        "createdAt" : "2020-08-19T11:40:21Z",
        "updatedAt" : "2020-08-19T11:40:21Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2c7b41d95fa7fc6ae0e20ad4ecc3fab080c784e6",
    "line" : 32,
    "diffHunk" : "@@ -787,26 +787,29 @@ jobs:\n       name: 'linux-pool'\n       demands: assignment -equals default\n     variables:\n-      pr.num: $[ variables['System.PullRequest.PullRequestNumber'] ]\n       branch_sha: $[ dependencies.git_sha.outputs['out.branch'] ]\n       status: $[ dependencies.collect_build_data.result ]\n       is_release: $[ dependencies.check_for_release.outputs['out.is_release'] ]\n     steps:\n+      - checkout: self\n+        persistCredentials: true\n+      - template: ci/bash-lib.yml\n+        parameters:\n+          var_name: bash-lib\n       - bash: |\n           set -euo pipefail\n \n-          tell_daml() {\n-              local message pr_handler\n-              message=$1\n-              pr_handler=$(head -1 release/rotation | awk '{print $1}')\n-              curl -XPOST \\\n-                   -i \\\n-                   -H 'Content-Type: application/json' \\\n-                   --data \"{\\\"text\\\":\\\"<@${pr_handler}> <https://dev.azure.com/digitalasset/daml/_build/results?buildId=$(Build.BuildId)|Build $(Build.BuildId)> for release PR <https://github.com/digital-asset/daml/pull/$(pr.num)|#$(pr.num)> has completed with status ${message}.\\\"}\" \\\n-                   $(Slack.team-daml)\n-          }\n+          source $(bash-lib)\n+\n+          AUTH=\"$(get-gh-auth-header)\"\n+          PR=$(curl -H \"$AUTH\" \\"
  },
  {
    "id" : "1ad7d87a-e2b6-4b82-b0d9-81f21780530c",
    "prId" : 7178,
    "comments" : [
      {
        "id" : "c9246ca2-2a47-4793-994f-dd9dcf94bde2",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "What happens if someone pushes to the branch between this triggering and running?",
        "createdAt" : "2020-08-19T09:28:58Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8c0d12cb-659c-494d-b1f0-af9e6161ee16",
        "parentId" : "c9246ca2-2a47-4793-994f-dd9dcf94bde2",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I suppose GitHub would return an empty list and `jq` will explode. Worst case we don't get a notification on Slack, though, and I really don't expect anyone to deliberately sabotage this like that.",
        "createdAt" : "2020-08-19T10:06:09Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "20a3184a-fec4-426d-9576-5c4849efe5bd",
        "parentId" : "c9246ca2-2a47-4793-994f-dd9dcf94bde2",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "OK, if that's not expected behavior, I'm happy.",
        "createdAt" : "2020-08-19T10:26:07Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2c7b41d95fa7fc6ae0e20ad4ecc3fab080c784e6",
    "line" : null,
    "diffHunk" : "@@ -787,26 +787,29 @@ jobs:\n       name: 'linux-pool'\n       demands: assignment -equals default\n     variables:\n-      pr.num: $[ variables['System.PullRequest.PullRequestNumber'] ]\n       branch_sha: $[ dependencies.git_sha.outputs['out.branch'] ]\n       status: $[ dependencies.collect_build_data.result ]\n       is_release: $[ dependencies.check_for_release.outputs['out.is_release'] ]\n     steps:\n+      - checkout: self\n+        persistCredentials: true\n+      - template: ci/bash-lib.yml\n+        parameters:\n+          var_name: bash-lib\n       - bash: |\n           set -euo pipefail\n \n-          tell_daml() {\n-              local message pr_handler\n-              message=$1\n-              pr_handler=$(head -1 release/rotation | awk '{print $1}')\n-              curl -XPOST \\\n-                   -i \\\n-                   -H 'Content-Type: application/json' \\\n-                   --data \"{\\\"text\\\":\\\"<@${pr_handler}> <https://dev.azure.com/digitalasset/daml/_build/results?buildId=$(Build.BuildId)|Build $(Build.BuildId)> for release PR <https://github.com/digital-asset/daml/pull/$(pr.num)|#$(pr.num)> has completed with status ${message}.\\\"}\" \\\n-                   $(Slack.team-daml)\n-          }\n+          source $(bash-lib)\n+\n+          AUTH=\"$(get-gh-auth-header)\"\n+          PR=$(curl -H \"$AUTH\" \\\n+                    -H \"Accept: application/vnd.github.groot-preview+json\" \\\n+                    -s \\\n+                    \"https://api.github.com/repos/digital-asset/daml/commits/$(git rev-parse HEAD)/pulls\" \\\n+               | jq '.[0].number')"
  },
  {
    "id" : "2fd7c13b-90bc-42b0-a5d9-0dcea8a3d8d5",
    "prId" : 7178,
    "comments" : [
      {
        "id" : "22570fba-2ad3-4260-8d71-be69663fcae2",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "do you care about the newline? If not `true` seems like a more natural choice here.",
        "createdAt" : "2020-08-20T06:56:55Z",
        "updatedAt" : "2020-08-20T06:57:03Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3e761be0-fe97-42af-8696-ac4cdb3b3e19",
        "parentId" : "22570fba-2ad3-4260-8d71-be69663fcae2",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I don't. I keep forgetting about `true` for some reason. Given that it's already merged I don't think this is worth changing, but I'll try to keep it in mind next time.",
        "createdAt" : "2020-08-20T10:02:08Z",
        "updatedAt" : "2020-08-20T10:02:08Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "44856253-03a4-44c8-9e4b-5510b120f4b0",
        "parentId" : "22570fba-2ad3-4260-8d71-be69663fcae2",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Also note that the newline is actually discarded by the assignment here:\r\n```\r\nbash-3.2$ a=$(fail || echo \"\")\r\nbash: fail: command not found\r\nbash-3.2$ b=$(fail || true)\r\nbash: fail: command not found\r\nbash-3.2$ declare -p a\r\ndeclare -- a=\"\"\r\nbash-3.2$ declare -p b\r\ndeclare -- b=\"\"\r\nbash-3.2$ \r\n```",
        "createdAt" : "2020-08-20T10:04:43Z",
        "updatedAt" : "2020-08-20T10:04:44Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2c7b41d95fa7fc6ae0e20ad4ecc3fab080c784e6",
    "line" : 37,
    "diffHunk" : "@@ -787,26 +787,34 @@ jobs:\n       name: 'linux-pool'\n       demands: assignment -equals default\n     variables:\n-      pr.num: $[ variables['System.PullRequest.PullRequestNumber'] ]\n       branch_sha: $[ dependencies.git_sha.outputs['out.branch'] ]\n       status: $[ dependencies.collect_build_data.result ]\n       is_release: $[ dependencies.check_for_release.outputs['out.is_release'] ]\n     steps:\n+      - checkout: self\n+        persistCredentials: true\n+      - template: ci/bash-lib.yml\n+        parameters:\n+          var_name: bash-lib\n       - bash: |\n           set -euo pipefail\n \n-          tell_daml() {\n-              local message pr_handler\n-              message=$1\n-              pr_handler=$(head -1 release/rotation | awk '{print $1}')\n-              curl -XPOST \\\n-                   -i \\\n-                   -H 'Content-Type: application/json' \\\n-                   --data \"{\\\"text\\\":\\\"<@${pr_handler}> <https://dev.azure.com/digitalasset/daml/_build/results?buildId=$(Build.BuildId)|Build $(Build.BuildId)> for release PR <https://github.com/digital-asset/daml/pull/$(pr.num)|#$(pr.num)> has completed with status ${message}.\\\"}\" \\\n-                   $(Slack.team-daml)\n-          }\n-\n-          tell_daml \"$(status)\"\n+          source $(bash-lib)\n+\n+          AUTH=\"$(get-gh-auth-header)\"\n+          PR=$(curl -H \"$AUTH\" \\\n+                    -H \"Accept: application/vnd.github.groot-preview+json\" \\\n+                    -s -f \\\n+                    \"https://api.github.com/repos/digital-asset/daml/commits/$(git rev-parse HEAD)/pulls\" \\\n+               | jq '.[0].number' \\\n+               || echo \"\")"
  },
  {
    "id" : "077fa46a-52fa-410d-a177-cf72fab90d86",
    "prId" : 7101,
    "comments" : [
      {
        "id" : "277c858a-4383-4534-9db4-faf3251a2bba",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Wait wait wait. Why is there a `$` there at all?\r\n\r\nIt should be `awk '{ print $1 }'`.",
        "createdAt" : "2020-08-12T10:31:25Z",
        "updatedAt" : "2020-08-12T10:31:26Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a862c032-ae43-4924-a973-ad1499cc2427",
        "parentId" : "277c858a-4383-4534-9db4-faf3251a2bba",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "good catch, https://github.com/digital-asset/daml/pull/7104",
        "createdAt" : "2020-08-12T10:34:24Z",
        "updatedAt" : "2020-08-12T10:34:25Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a4f657a4c225f6504324bc900dce6678caa90daf",
    "line" : 5,
    "diffHunk" : "@@ -813,7 +813,7 @@ jobs:\n           tell_daml() {\n               local message pr_handler\n               message=$1\n-              pr_handler=$(head -1 release/rotation | awk \"${print $1}\")\n+              pr_handler=$(head -1 release/rotation | awk '${print $1}')"
  },
  {
    "id" : "67e43df5-d1b9-4677-98e4-6af23346cfee",
    "prId" : 7099,
    "comments" : [
      {
        "id" : "04b91c9c-43dc-40dd-aee2-7a64fdeac0ee",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This will also trigger for manually opened release PRs right? I guess there is no harm in it but it also seems a bit redundant.",
        "createdAt" : "2020-08-12T09:40:57Z",
        "updatedAt" : "2020-08-12T09:55:38Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "df32ab9e-d7cd-406c-a3ac-6396608b8a55",
        "parentId" : "04b91c9c-43dc-40dd-aee2-7a64fdeac0ee",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Good point. I've updated to condition to match the branch name created by the automated release PRs. It's obviously not completely tamper-proof, but should be good enough to prevent accidental triggers.",
        "createdAt" : "2020-08-12T09:56:29Z",
        "updatedAt" : "2020-08-12T09:56:29Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "868e3d9241416b515a5f57622514a9e0ea217e84",
    "line" : 6,
    "diffHunk" : "@@ -782,8 +782,10 @@ jobs:\n           PR_NUM: $(pr.num)\n           PR_BRANCH: $(pr.branch)\n \n-  - job: notify_user\n-    condition: and(eq(variables['Build.Reason'], 'PullRequest'), not(canceled()))\n+  - job: notify_release_pr"
  },
  {
    "id" : "aeb9d8e2-e447-4c39-932d-8544482663e9",
    "prId" : 7011,
    "comments" : [
      {
        "id" : "094876ce-b523-4323-be31-ea154d9b31b3",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "This step of the release process runs on the trigger commit on the master branch, so the `release/rotation` file is the right one. (As opposed to many steps in the release process that checkout the target commit.)",
        "createdAt" : "2020-08-05T13:30:13Z",
        "updatedAt" : "2020-08-05T16:25:24Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9f4599d35cb51733847572c3264d234d481fd349",
    "line" : 4,
    "diffHunk" : "@@ -475,10 +475,11 @@ jobs:\n         condition: not(eq(variables['skip-github'], 'TRUE'))\n       - bash: |\n           set -euo pipefail\n+          pr_handler=$(head -1 release/rotation | awk \"${print $1}\")"
  },
  {
    "id" : "7ae84745-e95e-4869-831b-0db3420f9568",
    "prId" : 7011,
    "comments" : [
      {
        "id" : "bb1d2375-caa0-436d-bd77-0d9e75b0d314",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Was this always the case and we just didn’t hit it so far or did something change?",
        "createdAt" : "2020-08-05T14:22:31Z",
        "updatedAt" : "2020-08-05T16:25:24Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3d302582-f36e-4e24-8bd4-178d076a6437",
        "parentId" : "bb1d2375-caa0-436d-bd77-0d9e75b0d314",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I'm not sure. It's _probably_ a git version change between our GCP-hosted nodes and the Azure ones.\r\n\r\nMaking it work for both seemed like less effort than trying to figure out when I should support which one.",
        "createdAt" : "2020-08-05T15:58:43Z",
        "updatedAt" : "2020-08-05T16:25:24Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9f4599d35cb51733847572c3264d234d481fd349",
    "line" : 19,
    "diffHunk" : "@@ -523,7 +524,14 @@ jobs:\n         # using basic auth format:\n         # https://username:password@github.com/:user/:repo.git\n         # This series of pipes extracts the `username:password` part.\n-        AUTH=\"$(git config remote.origin.url | grep -o \"://.*:.*@\" | cut -c4- | rev | cut -c2- | rev)\"\n+        #\n+        # It looks like in some cases the credentials get stored separately as"
  },
  {
    "id" : "71ed9df2-4d0a-47d5-a685-faad9bffc598",
    "prId" : 7011,
    "comments" : [
      {
        "id" : "ce7c2d6b-ed8a-4b93-920e-26ec96cbe6ae",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Is `http.https` intentional?",
        "createdAt" : "2020-08-05T14:22:55Z",
        "updatedAt" : "2020-08-05T16:25:24Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1fdc7265-b312-4ef4-b8d9-3daabbb75a6a",
        "parentId" : "ce7c2d6b-ed8a-4b93-920e-26ec96cbe6ae",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "The git config format lets you have \"subsections\", for example\r\n```\r\n[branch master]\r\n  remote = ...\r\n[branch temp]\r\n  remote = ...\r\n```\r\nso all the `branch` things have the same structure, but a different name. For the `git config` command, you access them with `section.subsection.attribute`, so `git config branch.master.remote`.\r\n\r\nThere's an `http` section that uses the URL as the subsection, so the file looks like:\r\n```\r\n[http https://github.com/digital-asset/daml]\r\n  extraheader = Authorization: basic username:password\r\n```\r\nI expected I'd need some sort of escaping to include the URL in the `git config` call, but apparently not, despite the presence of a dot in the URL. 🤷 ",
        "createdAt" : "2020-08-05T16:02:08Z",
        "updatedAt" : "2020-08-05T16:25:24Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cb1fde0f-de59-4524-90b6-4a9ca080905b",
        "parentId" : "ce7c2d6b-ed8a-4b93-920e-26ec96cbe6ae",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "ah makes sense, thanks for the explanation!",
        "createdAt" : "2020-08-05T16:18:33Z",
        "updatedAt" : "2020-08-05T16:25:24Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9f4599d35cb51733847572c3264d234d481fd349",
    "line" : 21,
    "diffHunk" : "@@ -523,7 +524,14 @@ jobs:\n         # using basic auth format:\n         # https://username:password@github.com/:user/:repo.git\n         # This series of pipes extracts the `username:password` part.\n-        AUTH=\"$(git config remote.origin.url | grep -o \"://.*:.*@\" | cut -c4- | rev | cut -c2- | rev)\"\n+        #\n+        # It looks like in some cases the credentials get stored separately as\n+        # a header instead.\n+        if header=$(git config 'http.https://github.com/digital-asset/daml.extraheader'); then"
  },
  {
    "id" : "644786e7-1d0d-4623-bfb7-62e62d1d4e95",
    "prId" : 6859,
    "comments" : [
      {
        "id" : "c51a09de-a35b-48b8-9cd6-3573c3899cb3",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Does this trigger on both the PR and on master?",
        "createdAt" : "2020-07-24T14:25:08Z",
        "updatedAt" : "2020-07-24T16:33:38Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1999f5fc-1eba-4972-b5df-fd54dee52ae1",
        "parentId" : "c51a09de-a35b-48b8-9cd6-3573c3899cb3",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "No, the `notify_user` job never runs on master.",
        "createdAt" : "2020-07-24T14:37:48Z",
        "updatedAt" : "2020-07-24T16:33:38Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1dcc002b38f1f101a91dffe08b4ac1a241a94085",
    "line" : 66,
    "diffHunk" : "@@ -798,6 +811,22 @@ jobs:\n                    $(Slack.team-daml-ci)\n           }\n \n+          tell_daml() {\n+              local message\n+              message=$1\n+              curl -XPOST \\\n+                   -i \\\n+                   -H 'Content-Type: application/json' \\\n+                   --data \"{\\\"text\\\":\\\"<https://dev.azure.com/digitalasset/daml/_build/results?buildId=$(Build.BuildId)|Build $(Build.BuildId)> for release PR <https://github.com/digital-asset/daml/pull/$(pr.num)|#$(pr.num)> has completed with status ${message}.\\\"}\" \\\n+                   $(Slack.team-daml)\n+          }\n+\n+          if [ \"$(is_release)\" == \"true\" ]; then"
  },
  {
    "id" : "82eab8d2-c1d5-4c42-85db-acca85f5edf0",
    "prId" : 6709,
    "comments" : [
      {
        "id" : "a96c67a4-a395-4b9a-a17c-cf673d87b4b6",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This feels a bit off. Shouldn’t we consider this a blocking check and do something like using a special format for the update PR and match on that on every PR?",
        "createdAt" : "2020-07-13T15:40:59Z",
        "updatedAt" : "2020-07-13T15:41:04Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "24bf4f5a-7762-43cb-84bc-d42065b135be",
        "parentId" : "a96c67a4-a395-4b9a-a17c-cf673d87b4b6",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I'm not sure I understand what you mean here. This will trigger an independent build that reports its status to the branch and thus blocks the PR, exactly as if you'd triggered it through the web UI.",
        "createdAt" : "2020-07-13T15:43:43Z",
        "updatedAt" : "2020-07-13T15:43:43Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "931938b3-5508-4b81-bb18-7933a968f14a",
        "parentId" : "a96c67a4-a395-4b9a-a17c-cf673d87b4b6",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Ah I didn’t know independent builds were considered blocking. Then this seems reasonable :+1:",
        "createdAt" : "2020-07-13T15:45:08Z",
        "updatedAt" : "2020-07-13T15:45:08Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "21449a72-efc2-4739-823c-6bd553d4cc7d",
        "parentId" : "a96c67a4-a395-4b9a-a17c-cf673d87b4b6",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "My understanding is that:\r\n- We have a set number of builds that GH will wait for specifically; however\r\n- All builds reported for the \"tip\" commit of a PR are part of the PR status;\r\n- Any build reported as anything else than succeeded (i.e. pending or failed) blocks the PR from being merged.\r\n\r\nI'll keep an eye on this when we do the next snapshot.",
        "createdAt" : "2020-07-13T15:58:22Z",
        "updatedAt" : "2020-07-13T15:58:23Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b240269f6dcaebd5d2ce956ed89add947842628a",
    "line" : 11,
    "diffHunk" : "@@ -545,10 +545,27 @@ jobs:\n              --location \\\n              -d \"{\\\"title\\\": \\\"update compat versions for $(release_tag)\\\", \\\"head\\\": \\\"$BRANCH\\\", \\\"base\\\": \\\"master\\\"}\" \\\n              https://api.github.com/repos/digital-asset/daml/pulls\n+        setvar \"branch\" \"$BRANCH\"\n+      name: out\n+\n     - template: ci/tell-slack-failed.yml\n       parameters:\n         trigger_sha: '$(trigger_sha)'\n \n+  - job: compat_versions_pr_trigger_daily"
  },
  {
    "id" : "b4fcfdfa-acdf-47d2-807a-6538f28184a1",
    "prId" : 6530,
    "comments" : [
      {
        "id" : "23105b1a-045f-4955-8f28-030007492452",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Maybe a comment that we do this to remove shared memory created by postgres would be useful in the future?",
        "createdAt" : "2020-06-29T19:19:29Z",
        "updatedAt" : "2020-06-29T19:20:06Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e2cfd6d92d22d33601f70cdf8e76e3a3325e4ef7",
    "line" : 4,
    "diffHunk" : "@@ -139,6 +139,9 @@ jobs:\n     steps:\n       - template: ci/report-start.yml\n       - checkout: self\n+      - bash:"
  },
  {
    "id" : "01b97b5d-82a7-4e34-af26-2f36f0a116ea",
    "prId" : 6530,
    "comments" : [
      {
        "id" : "1d3b4fa1-cdd8-469b-8f94-bcae66ba671d",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Can we pull this out into a script which can also be run locally easily when things go to hell? (Perhaps one with a useful name like `release-shared-memory.sh`?)",
        "createdAt" : "2020-06-30T07:42:10Z",
        "updatedAt" : "2020-06-30T07:42:10Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e2cfd6d92d22d33601f70cdf8e76e3a3325e4ef7",
    "line" : 5,
    "diffHunk" : "@@ -139,6 +139,9 @@ jobs:\n     steps:\n       - template: ci/report-start.yml\n       - checkout: self\n+      - bash:\n+          for shmid in $(ipcs -m | sed 1,3d | awk '{print $2}' | sed '$d'); do ipcrm -m $shmid; done"
  },
  {
    "id" : "b2f624ea-f000-4d6b-9785-fed9e5e40915",
    "prId" : 6479,
    "comments" : [
      {
        "id" : "61fde281-69cf-4960-b839-2293af885ad6",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Note: no need for extra condition checks here, this will only run if `release` has run.",
        "createdAt" : "2020-06-24T13:22:54Z",
        "updatedAt" : "2020-06-24T13:22:54Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d6a358ce-ddf7-4c26-9f76-1333cfb0f444",
        "parentId" : "61fde281-69cf-4960-b839-2293af885ad6",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Since I wondered that myself: If `release` has finished we’ve uploaded to maven, github releases and the gcp bucket.",
        "createdAt" : "2020-06-24T13:44:06Z",
        "updatedAt" : "2020-06-24T13:53:40Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b11c39af056cdb557bed8407e18c515d915a4317",
    "line" : 6,
    "diffHunk" : "@@ -476,6 +476,49 @@ jobs:\n           trigger_sha: '$(trigger_sha)'\n       - template: ci/report-end.yml\n \n+  - job: compat_versions_pr\n+    dependsOn:\n+    - release"
  },
  {
    "id" : "88ff208e-bf7f-43a9-b1de-c14745d341c7",
    "prId" : 6263,
    "comments" : [
      {
        "id" : "383b779d-3e83-418e-982d-4bc3e65ac8b5",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "How reasonable do you think it would be to manually add this for the last stable releases and snapshots since 1.2 (since with your and my pruning strategy we do not care about older snapshots after Wednesday)? So 1.0.0, 1.0.1 and 1.1.1?",
        "createdAt" : "2020-06-08T13:09:07Z",
        "updatedAt" : "2020-06-08T13:57:00Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7add78d8-371e-4120-9a52-3f7d79fd4cbc",
        "parentId" : "383b779d-3e83-418e-982d-4bc3e65ac8b5",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Very reasonable. I'll try to take care of it today.",
        "createdAt" : "2020-06-08T13:49:52Z",
        "updatedAt" : "2020-06-08T13:57:00Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4e1c4f9a-dc59-45ed-9dc7-df7b39c06c5c",
        "parentId" : "383b779d-3e83-418e-982d-4bc3e65ac8b5",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "As discussed offline, moved the sha computation above the loop so the resulting file gets signed for future releases (obviously won't be for the manually added ones on older releases), as the sha of the signature files seems less valuable than the signature on the sha file.",
        "createdAt" : "2020-06-08T13:57:54Z",
        "updatedAt" : "2020-06-08T13:57:55Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1d6c17cbf76662e63d62ac8ed19bfee5d72e3775",
    "line" : null,
    "diffHunk" : "@@ -430,6 +430,7 @@ jobs:\n           for f in *; do\n               gpg --homedir $GPG_DIR -ab $f\n           done\n+          sha256sum $(find . -type f | sort) > sha256sums"
  },
  {
    "id" : "dea92c2c-be85-49f3-809b-d95654b2b694",
    "prId" : 6024,
    "comments" : [
      {
        "id" : "a1e059e6-2ca8-4a8d-87bb-206012ce77d8",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I think the directory is more confusing than helpful given that it’s currently alpha, will be beta at some point and you will have to keep changing that. If you do want a directory maybe just call it `daml-on-sql`? or `fat-jars`?",
        "createdAt" : "2020-05-19T11:51:51Z",
        "updatedAt" : "2020-05-19T12:04:31Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1dccdc6c17f74556877e911a383cf8febfe8f1fd",
    "line" : null,
    "diffHunk" : "@@ -342,6 +343,7 @@ jobs:\n           if git tag v$(release_tag) $(release_sha); then\n             git push origin v$(release_tag)\n             mkdir $(Build.StagingDirectory)/release\n+            mkdir $(Build.StagingDirectory)/beta-release"
  },
  {
    "id" : "8c4900d8-1658-4564-bdf2-c19f0d3da0ff",
    "prId" : 6024,
    "comments" : [
      {
        "id" : "fb046b92-b80a-4eea-8090-0a735492b21d",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n          cd ../beta-release\r\n```",
        "createdAt" : "2020-05-19T11:52:09Z",
        "updatedAt" : "2020-05-19T12:04:31Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1dccdc6c17f74556877e911a383cf8febfe8f1fd",
    "line" : null,
    "diffHunk" : "@@ -386,6 +393,10 @@ jobs:\n           for f in *; do\n               gpg --homedir $GPG_DIR -ab $f\n           done\n+          cd ..//beta-release"
  },
  {
    "id" : "0ed4e1d7-4b98-4acb-bf77-058b7eb640e6",
    "prId" : 6024,
    "comments" : [
      {
        "id" : "fbe5fa55-6dd2-417c-bd8d-a15a69d62299",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "again, `beta` is not correct.",
        "createdAt" : "2020-05-19T11:52:52Z",
        "updatedAt" : "2020-05-19T12:04:31Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1dccdc6c17f74556877e911a383cf8febfe8f1fd",
    "line" : null,
    "diffHunk" : "@@ -402,6 +413,25 @@ jobs:\n           addChangeLog: false\n           isPrerelease: true\n         condition: not(eq(variables['skip-github'], 'TRUE'))\n+      - bash: |\n+          set -euo pipefail\n+\n+          GCS_KEY=$(mktemp)\n+          cleanup () {\n+              rm -f $GCS_KEY\n+          }\n+          trap cleanup EXIT\n+          echo \"$GOOGLE_APPLICATION_CREDENTIALS_CONTENT\" > $GCS_KEY\n+          gcloud auth activate-service-account --key-file=$GCS_KEY\n+          export BOTO_CONFIG=/dev/null\n+\n+          gsutil cp $(Build.StagingDirectory)/beta-release/$(daml-on-sql) \\\n+                    gs://daml-binaries/beta/daml-on-sql/($daml-on-sql)"
  },
  {
    "id" : "332078cf-af2c-48fb-bd65-dac45fe3a233",
    "prId" : 6016,
    "comments" : [
      {
        "id" : "1966ce98-93ae-40a0-9cb7-d1058e06eb51",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "```suggestion\r\n              [[ \"$add_one\" == \"$changed\" || \"$change_one\" == \"$changed\" ]]\r\n```",
        "createdAt" : "2020-05-19T07:42:32Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d7008ec3-972c-4506-bb8e-72ff14395d71",
        "parentId" : "1966ce98-93ae-40a0-9cb7-d1058e06eb51",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "What does that buy me?",
        "createdAt" : "2020-05-19T10:08:27Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "20ceb500-c4bc-41bd-8498-eda45ae8b034",
        "parentId" : "1966ce98-93ae-40a0-9cb7-d1058e06eb51",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Just one test instead of two, that's all. And the quotes are for safety.",
        "createdAt" : "2020-05-19T10:39:38Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b61284aa-dd03-4575-903d-f25047aacdeb",
        "parentId" : "1966ce98-93ae-40a0-9cb7-d1058e06eb51",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Consider it a totally optional, Samir-likes-it-but-otherwise-irrelevant suggestion.",
        "createdAt" : "2020-05-19T10:40:07Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "715db8ea-23c3-4287-b250-c13ba2579e80",
        "parentId" : "1966ce98-93ae-40a0-9cb7-d1058e06eb51",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Consider my questions as genuine, curiosity-driven questions, not rebuttals. :-)\r\n\r\nI'm not familiar with the `[[` notation. I tend to stick to \"cross platform\" shell scripting most of the time. Reading up on it it looks like the quotes here would not be just for safety, but change the semantics: with `[[`, Bash does the correct grouping (i.e. no quotes needed in that sense), but `==` by default does (Bash, not regex) pattern matching, whereas adding the quotes forces it to be a byte-level exact comparison.",
        "createdAt" : "2020-05-19T11:09:24Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5f991d71059dcd0bad10906e5ddf2f510803c993",
    "line" : null,
    "diffHunk" : "@@ -274,20 +274,44 @@ jobs:\n \n           ./release.sh check\n \n-          is_release_commit() {\n+          changes_release_files() {\n               changed=\"$(git diff-tree --no-commit-id --name-only -r $(branch_sha) $(fork_sha) | sort)\"\n               stable=$(printf \"LATEST\\ndocs/source/support/release-notes.rst\" | sort)\n               snapshot=\"LATEST\"\n               [ \"$snapshot\" = \"$changed\" ] || [ \"$stable\" = \"$changed\" ]\n           }\n \n-          if is_release_commit; then\n-              echo \"##vso[task.setvariable variable=is_release;isOutput=true]true\"\n-              echo \"##vso[task.setvariable variable=trigger_sha;isOutput=true]$(branch_sha)\"\n-              echo \"##vso[task.setvariable variable=release_sha;isOutput=true]$(cat LATEST | awk '{print $1}')\"\n-              echo \"##vso[task.setvariable variable=release_tag;isOutput=true]$(cat LATEST | awk '{print $2}')\"\n+          changes_one_line_in_latest() {\n+              changed=\"$(git diff-tree --no-commit-id --numstat -r $(branch_sha) $(fork_sha) -- LATEST | awk '{print $1 \"_\" $2}')\"\n+              add_one=\"1_0\"\n+              change_one=\"1_1\"\n+              [ $add_one = $changed ] || [ $change_one = $changed ]"
  },
  {
    "id" : "cff4705b-1f47-4588-a168-282b21b1e457",
    "prId" : 6016,
    "comments" : [
      {
        "id" : "8169542b-515e-4960-b3b8-f77796354398",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "If I understand this correctly, changing multiple lines will fall into the else clause instead of throwing an error. Is that correct and if so is that intended? I guess it makes sense for this PR but afterwards it seems useful to just throw an error if you change more than one line.",
        "createdAt" : "2020-05-19T07:56:54Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "431291f5-98a6-404e-8916-1600808b49b0",
        "parentId" : "8169542b-515e-4960-b3b8-f77796354398",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I don't know if that's correct, but it is intended at this point. This mirrors the current behaviour; at the moment, a commit that changes `LATEST` and the release notes amongst other files is not a release commit, but is not an error either. We could make the whole thing more stringent, but I'm not sure of the tradeoff there, as that may prevent us from, say, correcting typos in release notes outside of a release cycle.\r\n\r\nI'm open to discussion on this and quite frankly I'm not feeling very strongly either way. I could see an argument for making this clause special in that way, i.e. I agree it's unlikely someone would deliberately make a PR that changes just the LATEST file and the release notes but is not intended as a release commit. FWIW, in the context of this check not failing, I have added a step to the `RELEASE.md` process to check that the PR actually triggered a release build before merging.",
        "createdAt" : "2020-05-19T09:35:14Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9eae00cb-0e53-4689-b8f4-7d073a60080a",
        "parentId" : "8169542b-515e-4960-b3b8-f77796354398",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I’m mostly worried about someone changing more than one line. That doesn’t seem useful to me in any circumstance. However, I guess it’s easy enough to catch this during review that it’s not a big deal to not catch this in the check.",
        "createdAt" : "2020-05-19T09:40:26Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b2e83b45-c9eb-48b4-9f36-281f8ba6159e",
        "parentId" : "8169542b-515e-4960-b3b8-f77796354398",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I've added a failing case to that if.",
        "createdAt" : "2020-05-19T16:29:06Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5f991d71059dcd0bad10906e5ddf2f510803c993",
    "line" : null,
    "diffHunk" : "@@ -274,20 +274,44 @@ jobs:\n \n           ./release.sh check\n \n-          is_release_commit() {\n+          changes_release_files() {\n               changed=\"$(git diff-tree --no-commit-id --name-only -r $(branch_sha) $(fork_sha) | sort)\"\n               stable=$(printf \"LATEST\\ndocs/source/support/release-notes.rst\" | sort)\n               snapshot=\"LATEST\"\n               [ \"$snapshot\" = \"$changed\" ] || [ \"$stable\" = \"$changed\" ]\n           }\n \n-          if is_release_commit; then\n-              echo \"##vso[task.setvariable variable=is_release;isOutput=true]true\"\n-              echo \"##vso[task.setvariable variable=trigger_sha;isOutput=true]$(branch_sha)\"\n-              echo \"##vso[task.setvariable variable=release_sha;isOutput=true]$(cat LATEST | awk '{print $1}')\"\n-              echo \"##vso[task.setvariable variable=release_tag;isOutput=true]$(cat LATEST | awk '{print $2}')\"\n+          changes_one_line_in_latest() {\n+              changed=\"$(git diff-tree --no-commit-id --numstat -r $(branch_sha) $(fork_sha) -- LATEST | awk '{print $1 \"_\" $2}')\"\n+              add_one=\"1_0\"\n+              change_one=\"1_1\"\n+              [ $add_one = $changed ] || [ $change_one = $changed ]\n+          }\n+\n+          is_trigger_commit() {\n+              changes_release_files && changes_one_line_in_latest\n+          }\n+\n+          setvar() {\n+              echo \"Setting '$1' to '$2'\"\n+              echo \"##vso[task.setvariable variable=$1;isOutput=true]$2\"\n+          }\n+\n+          added_line() {\n+              echo \"$(git diff $(branch_sha) $(fork_sha) -- LATEST | tail -n+6 | grep '^\\+' | cut -c2-)\"\n+          }\n+\n+          if is_trigger_commit; then"
  },
  {
    "id" : "91582452-6336-409c-b833-f0a0c9de0938",
    "prId" : 6016,
    "comments" : [
      {
        "id" : "6e513b1a-4862-483e-9570-538b4c7df3e8",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "?",
        "createdAt" : "2020-05-19T07:57:03Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3bdbde7d-dc3f-4480-8c84-f68bc86a937a",
        "parentId" : "6e513b1a-4862-483e-9570-538b4c7df3e8",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I wanted to have one CI build that prints those values so I can eyeball them and check they seem correct. This should not stay in the version we merge.",
        "createdAt" : "2020-05-19T09:36:18Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5f991d71059dcd0bad10906e5ddf2f510803c993",
    "line" : null,
    "diffHunk" : "@@ -274,20 +274,44 @@ jobs:\n \n           ./release.sh check\n \n-          is_release_commit() {\n+          changes_release_files() {\n               changed=\"$(git diff-tree --no-commit-id --name-only -r $(branch_sha) $(fork_sha) | sort)\"\n               stable=$(printf \"LATEST\\ndocs/source/support/release-notes.rst\" | sort)\n               snapshot=\"LATEST\"\n               [ \"$snapshot\" = \"$changed\" ] || [ \"$stable\" = \"$changed\" ]\n           }\n \n-          if is_release_commit; then\n-              echo \"##vso[task.setvariable variable=is_release;isOutput=true]true\"\n-              echo \"##vso[task.setvariable variable=trigger_sha;isOutput=true]$(branch_sha)\"\n-              echo \"##vso[task.setvariable variable=release_sha;isOutput=true]$(cat LATEST | awk '{print $1}')\"\n-              echo \"##vso[task.setvariable variable=release_tag;isOutput=true]$(cat LATEST | awk '{print $2}')\"\n+          changes_one_line_in_latest() {\n+              changed=\"$(git diff-tree --no-commit-id --numstat -r $(branch_sha) $(fork_sha) -- LATEST | awk '{print $1 \"_\" $2}')\"\n+              add_one=\"1_0\"\n+              change_one=\"1_1\"\n+              [ $add_one = $changed ] || [ $change_one = $changed ]\n+          }\n+\n+          is_trigger_commit() {\n+              changes_release_files && changes_one_line_in_latest\n+          }\n+\n+          setvar() {\n+              echo \"Setting '$1' to '$2'\"\n+              echo \"##vso[task.setvariable variable=$1;isOutput=true]$2\"\n+          }\n+\n+          added_line() {\n+              echo \"$(git diff $(branch_sha) $(fork_sha) -- LATEST | tail -n+6 | grep '^\\+' | cut -c2-)\"\n+          }\n+\n+          if is_trigger_commit; then\n+              setvar is_release true\n+              setvar trigger_sha $(branch_sha)\n+              setvar release_sha \"$(added_line | awk '{print $1}')\"\n+              setvar release_tag \"$(added_line | awk '{print $2}')\"\n           else\n-              echo \"##vso[task.setvariable variable=is_release;isOutput=true]false\"\n+              setvar is_release false\n+              #FIXME"
  },
  {
    "id" : "e7b1c4e6-240d-4c7a-82e0-2a8cf9e3f25a",
    "prId" : 6016,
    "comments" : [
      {
        "id" : "d80a7cf4-cab1-4d67-a5ea-d42b122fc4fb",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Why do we set trigger_sha, release_sha and release_tag for non release commits? As far as I can tell, we did not do that before.",
        "createdAt" : "2020-05-19T07:57:12Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "475d1676-7540-4775-bcb0-55c720ee0182",
        "parentId" : "d80a7cf4-cab1-4d67-a5ea-d42b122fc4fb",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Manual debugging on CI; I'll remove before merging.",
        "createdAt" : "2020-05-19T09:36:40Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5f991d71059dcd0bad10906e5ddf2f510803c993",
    "line" : null,
    "diffHunk" : "@@ -274,20 +274,44 @@ jobs:\n \n           ./release.sh check\n \n-          is_release_commit() {\n+          changes_release_files() {\n               changed=\"$(git diff-tree --no-commit-id --name-only -r $(branch_sha) $(fork_sha) | sort)\"\n               stable=$(printf \"LATEST\\ndocs/source/support/release-notes.rst\" | sort)\n               snapshot=\"LATEST\"\n               [ \"$snapshot\" = \"$changed\" ] || [ \"$stable\" = \"$changed\" ]\n           }\n \n-          if is_release_commit; then\n-              echo \"##vso[task.setvariable variable=is_release;isOutput=true]true\"\n-              echo \"##vso[task.setvariable variable=trigger_sha;isOutput=true]$(branch_sha)\"\n-              echo \"##vso[task.setvariable variable=release_sha;isOutput=true]$(cat LATEST | awk '{print $1}')\"\n-              echo \"##vso[task.setvariable variable=release_tag;isOutput=true]$(cat LATEST | awk '{print $2}')\"\n+          changes_one_line_in_latest() {\n+              changed=\"$(git diff-tree --no-commit-id --numstat -r $(branch_sha) $(fork_sha) -- LATEST | awk '{print $1 \"_\" $2}')\"\n+              add_one=\"1_0\"\n+              change_one=\"1_1\"\n+              [ $add_one = $changed ] || [ $change_one = $changed ]\n+          }\n+\n+          is_trigger_commit() {\n+              changes_release_files && changes_one_line_in_latest\n+          }\n+\n+          setvar() {\n+              echo \"Setting '$1' to '$2'\"\n+              echo \"##vso[task.setvariable variable=$1;isOutput=true]$2\"\n+          }\n+\n+          added_line() {\n+              echo \"$(git diff $(branch_sha) $(fork_sha) -- LATEST | tail -n+6 | grep '^\\+' | cut -c2-)\"\n+          }\n+\n+          if is_trigger_commit; then\n+              setvar is_release true\n+              setvar trigger_sha $(branch_sha)\n+              setvar release_sha \"$(added_line | awk '{print $1}')\"\n+              setvar release_tag \"$(added_line | awk '{print $2}')\"\n           else\n-              echo \"##vso[task.setvariable variable=is_release;isOutput=true]false\"\n+              setvar is_release false\n+              #FIXME\n+              setvar trigger_sha $(branch_sha)"
  },
  {
    "id" : "7e752ba2-4885-4588-a9a5-751bc18fc55e",
    "prId" : 6016,
    "comments" : [
      {
        "id" : "58bc80f9-fb32-46a8-a393-063d3d040fe6",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : ":+1: ",
        "createdAt" : "2020-05-19T07:57:23Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5f991d71059dcd0bad10906e5ddf2f510803c993",
    "line" : null,
    "diffHunk" : "@@ -401,6 +424,7 @@ jobs:\n           title: '$(release_tag)'\n           addChangeLog: false\n           isPrerelease: true\n+          releaseNotes: \"This is a prerelease. Use at your own risks.\""
  },
  {
    "id" : "89e7cd0d-9d69-4175-81ef-146a6c8f8cad",
    "prId" : 6016,
    "comments" : [
      {
        "id" : "3df7373f-9cd5-435e-975f-3e6a8397282f",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "We should probably also include this in release/1.1.x (I don’t expect another release for release/1.0.x so it doesn’t matter there).",
        "createdAt" : "2020-05-19T07:57:32Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "834d72a9-db66-40a7-99d3-e67ba503c049",
        "parentId" : "3df7373f-9cd5-435e-975f-3e6a8397282f",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Good point, will do that.",
        "createdAt" : "2020-05-19T09:37:05Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ef7cb884-37d0-48bf-a55d-a3bc2ad3f552",
        "parentId" : "3df7373f-9cd5-435e-975f-3e6a8397282f",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Added to both (because we never know), #6021 & #6022.",
        "createdAt" : "2020-05-19T09:42:23Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5f991d71059dcd0bad10906e5ddf2f510803c993",
    "line" : 71,
    "diffHunk" : "@@ -412,8 +436,7 @@ jobs:\n     pool:\n       vmImage: \"Ubuntu-16.04\"\n     condition: and(eq(dependencies.check_for_release.outputs['out.is_release'], 'true'),\n-                   or(eq(variables['Build.SourceBranchName'], 'master'),"
  },
  {
    "id" : "428c7711-e7e7-45a6-92d8-4e2e53c1d7f6",
    "prId" : 6016,
    "comments" : [
      {
        "id" : "7845ce47-dad9-422b-baa1-60af1ff38c95",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "```suggestion\r\n          releaseNotes: \"This is a pre-release. Use at your own risk.\"\r\n```",
        "createdAt" : "2020-05-19T08:20:14Z",
        "updatedAt" : "2020-05-19T16:49:55Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5f991d71059dcd0bad10906e5ddf2f510803c993",
    "line" : null,
    "diffHunk" : "@@ -401,6 +424,7 @@ jobs:\n           title: '$(release_tag)'\n           addChangeLog: false\n           isPrerelease: true\n+          releaseNotes: \"This is a prerelease. Use at your own risks.\""
  },
  {
    "id" : "094df8d4-6758-4cc6-9e54-b59afb4fb2c7",
    "prId" : 6016,
    "comments" : [
      {
        "id" : "0872a4e0-701f-4864-b34f-bec002558350",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "doesn’t this break this PR which adds more than one line?",
        "createdAt" : "2020-05-19T17:00:20Z",
        "updatedAt" : "2020-05-19T17:02:11Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6f954bdf-1c08-43cb-89cb-bde9a0749b93",
        "parentId" : "0872a4e0-701f-4864-b34f-bec002558350",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "No, because it also changes more than the 2 release files, so it doesn't get there.",
        "createdAt" : "2020-05-19T17:17:41Z",
        "updatedAt" : "2020-05-19T17:17:41Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9a13def2-31e1-4d38-bd9f-e2c157661dd3",
        "parentId" : "0872a4e0-701f-4864-b34f-bec002558350",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "ah right, thanks for the explanation!",
        "createdAt" : "2020-05-19T17:18:42Z",
        "updatedAt" : "2020-05-19T17:18:42Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5f991d71059dcd0bad10906e5ddf2f510803c993",
    "line" : 34,
    "diffHunk" : "@@ -301,17 +297,18 @@ jobs:\n               echo \"$(git diff $(branch_sha) $(fork_sha) -- LATEST | tail -n+6 | grep '^\\+' | cut -c2-)\"\n           }\n \n-          if is_trigger_commit; then\n-              setvar is_release true\n-              setvar trigger_sha $(branch_sha)\n-              setvar release_sha \"$(added_line | awk '{print $1}')\"\n-              setvar release_tag \"$(added_line | awk '{print $2}')\"\n+          if changes_release_files; then\n+              if changes_one_line_in_latest; then"
  },
  {
    "id" : "251f6f05-f559-40cd-badb-93c8a26141ba",
    "prId" : 5918,
    "comments" : [
      {
        "id" : "f2d8ec57-03dc-484c-ba27-0081b3585263",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I assume this is just temporary?",
        "createdAt" : "2020-05-11T06:46:55Z",
        "updatedAt" : "2020-05-12T16:52:11Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "21a56dc4-71b3-4cea-ba0e-21b31a14c7a4",
        "parentId" : "f2d8ec57-03dc-484c-ba27-0081b3585263",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Yes. My thinking is basically I'm mucking around with both Bazel and scoop so I may end up breaking the machine.",
        "createdAt" : "2020-05-11T11:14:04Z",
        "updatedAt" : "2020-05-12T16:52:11Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "58b40440-e346-46f0-aa28-55cbec4fe358",
        "parentId" : "f2d8ec57-03dc-484c-ba27-0081b3585263",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Removed.",
        "createdAt" : "2020-05-12T12:28:33Z",
        "updatedAt" : "2020-05-12T16:52:11Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "121ce14ef114457d1b9439c006adf20aad4a8029",
    "line" : null,
    "diffHunk" : "@@ -160,7 +169,7 @@ jobs:\n     timeoutInMinutes: 360\n     pool:\n       name: 'windows-pool'\n-      demands: assignment -equals default"
  },
  {
    "id" : "4117b4fc-f76c-420c-91ba-731afad1aead",
    "prId" : 5918,
    "comments" : [
      {
        "id" : "afe7b8ab-82d2-4e03-8da9-348742bacf03",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This also needs to go in the daily cronjob as well.",
        "createdAt" : "2020-05-11T06:50:26Z",
        "updatedAt" : "2020-05-12T16:52:11Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4d93c33a-1558-4fff-979e-55a245ce56f4",
        "parentId" : "afe7b8ab-82d2-4e03-8da9-348742bacf03",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Good catch.",
        "createdAt" : "2020-05-11T10:31:00Z",
        "updatedAt" : "2020-05-12T16:52:11Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ac1fb140-f1c5-41ae-b8fb-4c42a7a0b9da",
        "parentId" : "afe7b8ab-82d2-4e03-8da9-348742bacf03",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Not needed at all in the new scheme.",
        "createdAt" : "2020-05-12T12:28:43Z",
        "updatedAt" : "2020-05-12T16:52:11Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "121ce14ef114457d1b9439c006adf20aad4a8029",
    "line" : null,
    "diffHunk" : "@@ -218,13 +228,15 @@ jobs:\n   - job: compatibility_windows\n     dependsOn:\n       - check_for_release\n+      - patch_bazel_windows\n     timeoutInMinutes: 60\n     pool:\n       name: 'windows-pool'\n-      demands: assignment -equals default\n+      demands: assignment -equals patched-bazel\n     steps:\n       - template: ci/report-start.yml\n       - checkout: self\n+      - template: ci/patch_bazel_windows/restore.yml"
  },
  {
    "id" : "97b3b8d1-8bfe-4c4b-838e-7b09af852960",
    "prId" : 5891,
    "comments" : [
      {
        "id" : "6a59102c-b47b-4d15-888c-b1e646b6fcb7",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "This only runs on \"individual CI\", i.e. not PRs, which means\r\n- It does not need to worry about Azure running merge commits; the current commit really is the one we're running for.\r\n- This is not tested as part of the PR checks. 🙏 driven development.",
        "createdAt" : "2020-05-07T10:28:35Z",
        "updatedAt" : "2020-05-07T11:44:20Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7f03492dd91f7e57d5b0bfc6d790163fc4243e2d",
    "line" : 12,
    "diffHunk" : "@@ -260,6 +260,26 @@ jobs:\n           fi\n         name: out\n \n+  - job: check_perf_test\n+    pool:\n+      name: linux-pool\n+    condition: eq(variables['Build.Reason'], 'IndividualCI')\n+    steps:\n+    - bash: |\n+        TEST_SHA=$(cat ci/cron/test_sha)\n+        LAST_CHANGES=$(git log -n1 --format=%H daml-lf/scenario-interpreter/src/perf)\n+        CURRENT_SHA=$(git rev-parse HEAD)"
  },
  {
    "id" : "0e98fc3d-067f-4148-b45f-20e9b9dfdcf1",
    "prId" : 5723,
    "comments" : [
      {
        "id" : "44054d86-5794-457e-886c-9de946836ba5",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Shouldn’t we also enable macos on the daily compat cron job?",
        "createdAt" : "2020-04-27T11:49:36Z",
        "updatedAt" : "2020-04-27T12:46:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e0a6735c-5b1f-4f33-be1b-9433a8d70022",
        "parentId" : "44054d86-5794-457e-886c-9de946836ba5",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Good catch, thanks. I had thought of that at some point but got lost in YAML.",
        "createdAt" : "2020-04-27T11:54:59Z",
        "updatedAt" : "2020-04-27T12:46:10Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d1ff343e9dbb546c7a82b0abde88dfdf0e823f64",
    "line" : 21,
    "diffHunk" : "@@ -174,18 +174,38 @@ jobs:\n           trigger_sha: '$(trigger_sha)'\n       - template: ci/report-end.yml\n \n-  - job: compatibility\n+  - job: compatibility_linux\n     dependsOn:\n       - check_for_release\n     timeoutInMinutes: 60\n     pool:\n-      name: 'linux-pool'\n+      name: linux-pool\n+    steps:\n+      - template: ci/report-start.yml\n+      - checkout: self\n+      - template: ci/compatibility.yml\n+        parameters:\n+          test_flags: '--quick'\n+          os: linux\n+          push_generic: true\n+      - template: ci/tell-slack-failed.yml\n+      - template: ci/report-end.yml\n+\n+  - job: compatibility_macos"
  },
  {
    "id" : "06538a6b-596b-471b-8866-bfb9827fa518",
    "prId" : 5723,
    "comments" : [
      {
        "id" : "cf45079d-4fa9-40ed-85ab-e04c88a68f3c",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Let’s leave it like this for now but I wonder if it might make sense to separate building the platform-agnostic artifacts from building the SDK tarball and running the tests. That might make the logic a bit cleaner and we can start running the macos job sooner.",
        "createdAt" : "2020-04-27T11:51:00Z",
        "updatedAt" : "2020-04-27T12:46:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d1ff343e9dbb546c7a82b0abde88dfdf0e823f64",
    "line" : 15,
    "diffHunk" : "@@ -174,18 +174,38 @@ jobs:\n           trigger_sha: '$(trigger_sha)'\n       - template: ci/report-end.yml\n \n-  - job: compatibility\n+  - job: compatibility_linux\n     dependsOn:\n       - check_for_release\n     timeoutInMinutes: 60\n     pool:\n-      name: 'linux-pool'\n+      name: linux-pool\n+    steps:\n+      - template: ci/report-start.yml\n+      - checkout: self\n+      - template: ci/compatibility.yml"
  },
  {
    "id" : "542f1b07-b004-47f0-98f9-6b7caa161af4",
    "prId" : 5665,
    "comments" : [
      {
        "id" : "62504c18-4b68-4d57-a3a7-08f8e3b0049f",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "You don't seem to be using any of these variables.",
        "createdAt" : "2020-04-23T09:35:02Z",
        "updatedAt" : "2020-04-23T10:46:39Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e64ab0eb-87f3-4584-9dc6-3b6f2bccfe68",
        "parentId" : "62504c18-4b68-4d57-a3a7-08f8e3b0049f",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "good point, removed it.",
        "createdAt" : "2020-04-23T09:42:21Z",
        "updatedAt" : "2020-04-23T10:46:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "fae715204e6fbce3b32c31c7d03f3ca3a5de8700",
    "line" : null,
    "diffHunk" : "@@ -174,6 +174,46 @@ jobs:\n           trigger_sha: '$(trigger_sha)'\n       - template: ci/report-end.yml\n \n+  - job: compatibility\n+    dependsOn:\n+      - check_for_release\n+    variables:\n+      release_sha: $[ dependencies.check_for_release.outputs['out.release_sha'] ]\n+      release_tag: $[ coalesce(dependencies.check_for_release.outputs['out.release_tag'], '0.0.0') ]\n+      trigger_sha: $[ dependencies.check_for_release.outputs['out.trigger_sha'] ]\n+      is_release: $[ dependencies.check_for_release.outputs['out.is_release'] ]"
  },
  {
    "id" : "6a3f3a9a-96e3-41d1-bb0f-efa2e95d46a8",
    "prId" : 5665,
    "comments" : [
      {
        "id" : "df67152b-cb33-4ed4-b67b-2703efcbb5e2",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Is this step required?",
        "createdAt" : "2020-04-23T09:35:15Z",
        "updatedAt" : "2020-04-23T10:46:39Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9ba38843-e687-413a-a6ac-bde89b1cff75",
        "parentId" : "df67152b-cb33-4ed4-b67b-2703efcbb5e2",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "removed",
        "createdAt" : "2020-04-23T09:42:25Z",
        "updatedAt" : "2020-04-23T10:46:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "fae715204e6fbce3b32c31c7d03f3ca3a5de8700",
    "line" : null,
    "diffHunk" : "@@ -174,6 +174,46 @@ jobs:\n           trigger_sha: '$(trigger_sha)'\n       - template: ci/report-end.yml\n \n+  - job: compatibility\n+    dependsOn:\n+      - check_for_release\n+    variables:\n+      release_sha: $[ dependencies.check_for_release.outputs['out.release_sha'] ]\n+      release_tag: $[ coalesce(dependencies.check_for_release.outputs['out.release_tag'], '0.0.0') ]\n+      trigger_sha: $[ dependencies.check_for_release.outputs['out.trigger_sha'] ]\n+      is_release: $[ dependencies.check_for_release.outputs['out.is_release'] ]\n+    timeoutInMinutes: 60\n+    pool:\n+      name: 'linux-pool'\n+    steps:\n+      - template: ci/report-start.yml\n+      - checkout: self\n+      - bash: |\n+          set -euo pipefail\n+          eval \"$(./dev-env/bin/dade-assist)\"\n+          git checkout $(release_sha)\n+          git checkout $(trigger_sha) -- docs/source/support/release-notes.rst\n+        name: checkout_release\n+        condition: eq(variables.is_release, 'true')"
  },
  {
    "id" : "e3212902-dbbd-4f7d-a060-ce5d820f1c92",
    "prId" : 5665,
    "comments" : [
      {
        "id" : "157c6ee7-1cd8-488b-a44f-82603ef87a48",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Is the Bazel configuration done in the root WORKSPACE going to translate to the nested one?",
        "createdAt" : "2020-04-23T09:36:08Z",
        "updatedAt" : "2020-04-23T10:46:39Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "585875cc-1175-4328-aaea-5fc6f25e4390",
        "parentId" : "157c6ee7-1cd8-488b-a44f-82603ef87a48",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Good catch! I’ve added an environment variable and modified the script to write to the bazelrc.local in that directory. Hopefully that should work.",
        "createdAt" : "2020-04-23T09:48:02Z",
        "updatedAt" : "2020-04-23T10:46:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "fae715204e6fbce3b32c31c7d03f3ca3a5de8700",
    "line" : 21,
    "diffHunk" : "@@ -174,6 +174,46 @@ jobs:\n           trigger_sha: '$(trigger_sha)'\n       - template: ci/report-end.yml\n \n+  - job: compatibility\n+    dependsOn:\n+      - check_for_release\n+    variables:\n+      release_sha: $[ dependencies.check_for_release.outputs['out.release_sha'] ]\n+      release_tag: $[ coalesce(dependencies.check_for_release.outputs['out.release_tag'], '0.0.0') ]\n+      trigger_sha: $[ dependencies.check_for_release.outputs['out.trigger_sha'] ]\n+      is_release: $[ dependencies.check_for_release.outputs['out.is_release'] ]\n+    timeoutInMinutes: 60\n+    pool:\n+      name: 'linux-pool'\n+    steps:\n+      - template: ci/report-start.yml\n+      - checkout: self\n+      - bash: |\n+          set -euo pipefail\n+          eval \"$(./dev-env/bin/dade-assist)\"\n+          git checkout $(release_sha)\n+          git checkout $(trigger_sha) -- docs/source/support/release-notes.rst\n+        name: checkout_release\n+        condition: eq(variables.is_release, 'true')\n+      - bash: ci/dev-env-install.sh\n+        displayName: 'Build/Install the Developer Environment'\n+      - bash: ci/configure-bazel.sh\n+        displayName: 'Configure Bazel'\n+        env:\n+          IS_FORK: $(System.PullRequest.IsFork)\n+          # to upload to the bazel cache\n+          GOOGLE_APPLICATION_CREDENTIALS_CONTENT: $(GOOGLE_APPLICATION_CREDENTIALS_CONTENT)"
  },
  {
    "id" : "b386a43e-bee0-44d5-9831-c62a8cf5dc55",
    "prId" : 4738,
    "comments" : [
      {
        "id" : "eceb01ab-bd8d-4a5e-b252-6c30b889f3d9",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I guess this is just redundant since you only need `git`?",
        "createdAt" : "2020-02-27T07:15:38Z",
        "updatedAt" : "2020-02-27T07:46:40Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "97d21a62-29c9-4cc8-a09f-cc7918a587df",
        "parentId" : "eceb01ab-bd8d-4a5e-b252-6c30b889f3d9",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Yes; it also doesn't work on either macOS or Windows.",
        "createdAt" : "2020-02-27T09:48:08Z",
        "updatedAt" : "2020-02-27T09:48:08Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "864e5107c2f03ce94e36a02550dfcd2aee169032",
    "line" : 4,
    "diffHunk" : "@@ -84,14 +84,15 @@ jobs:\n       - checkout: self\n       - bash: |\n           set -euo pipefail\n-          eval \"$(./dev-env/bin/dade-assist)\""
  },
  {
    "id" : "e5f76f86-92d9-4905-aaf4-eff17f3f8012",
    "prId" : 4701,
    "comments" : [
      {
        "id" : "70e3057a-434d-422e-b07c-13fb65eeb73a",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Note: `branch_sha` is defined as the current commit when running from master, and as the branch sha (as opposed to the merge sha) on a PR.",
        "createdAt" : "2020-02-25T20:18:01Z",
        "updatedAt" : "2020-02-25T20:18:02Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "59d4f65b32c73c8985e3acdbc94f295bf949682c",
    "line" : 5,
    "diffHunk" : "@@ -255,7 +255,7 @@ jobs:\n \n           if is_release_commit; then\n               echo \"##vso[task.setvariable variable=is_release;isOutput=true]true\"\n-              echo \"##vso[task.setvariable variable=trigger_sha;isOutput=true]$(git rev-parse HEAD)\"\n+              echo \"##vso[task.setvariable variable=trigger_sha;isOutput=true]$(branch_sha)\""
  },
  {
    "id" : "189aa435-f603-421c-b552-0f3007929d69",
    "prId" : 4611,
    "comments" : [
      {
        "id" : "ae63476b-2c07-4a9e-92c9-85c64192de9c",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I would strongly recommend to not add that. You have more than enough things on your plate already :slightly_smiling_face: But I’ll leave it to up to you.",
        "createdAt" : "2020-02-19T17:32:52Z",
        "updatedAt" : "2020-02-20T10:17:05Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "10c9cba0-7c0f-4fac-a461-37974ee05dde",
        "parentId" : "ae63476b-2c07-4a9e-92c9-85c64192de9c",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I'm not planning to jump on each of those, but I do want to get a sense for how much of an issue this is, as not everyone reports it when it happens.",
        "createdAt" : "2020-02-20T12:07:45Z",
        "updatedAt" : "2020-02-20T12:07:45Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "591f4fae040b28817fc7820aad9addc97ad38f39",
    "line" : 10,
    "diffHunk" : "@@ -397,7 +397,33 @@ jobs:\n           # Note: this is going to get the PR branch commit, not the\n           # result of the merge (i.e. this is not using the same commit as the\n           # other jobs in this build).\n-          git fetch origin $(branch_sha)\n+          #\n+          # We have seen errors getting this commit from GitHub, which we\n+          # suspect are transient network errors, so adding simple exponential\n+          # backoff to mitigate.\n+          BACKOFF=1\n+          tell_gary() {"
  },
  {
    "id" : "7a84a7d0-5f8a-4805-ac8b-7d0fc423a316",
    "prId" : 4611,
    "comments" : [
      {
        "id" : "491ebc63-2fcf-40e4-b680-9c39e8838321",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Do we actually need `git fetch` here or only `git checkout`? I would expect that the branch commit should always be in here already. Maybe that would help make this less flaky and it might also explain why we haven’t seen this on steps that use the regular Azure checkout step.",
        "createdAt" : "2020-02-19T17:33:37Z",
        "updatedAt" : "2020-02-20T10:17:05Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "db708590-c758-4ff2-9334-25f7c49ea4f5",
        "parentId" : "491ebc63-2fcf-40e4-b680-9c39e8838321",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "We _have_ seen this exact issue on steps that use the regular Azure checkout, as that was the reason for putting in this workaround in the first place.\r\n\r\nWe _may_ need git fetch because this is a separate job, which means it may run on a separate machine which may not have fetched this commit yet. But now that you mention it maybe we could just check whether we have the commit before trying to fetch it.",
        "createdAt" : "2020-02-20T10:15:39Z",
        "updatedAt" : "2020-02-20T10:17:05Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c8b6e05c-1283-4dfb-a84c-77a99a404937",
        "parentId" : "491ebc63-2fcf-40e4-b680-9c39e8838321",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "> We _have_ seen this exact issue on steps that use the regular Azure checkout, as that was the reason for putting in this workaround in the first place.\r\n\r\nWe have but it seemed like new behavior so maybe whatever change required this in Azure is no longer necessary.",
        "createdAt" : "2020-02-20T10:17:46Z",
        "updatedAt" : "2020-02-20T10:17:47Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "537bf584-eef7-4ee9-8398-133076292c04",
        "parentId" : "491ebc63-2fcf-40e4-b680-9c39e8838321",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "True. Hopefully the Slack messages will give me some idea of how prevalent this issue is, and whether we need to dig further.",
        "createdAt" : "2020-02-20T12:07:06Z",
        "updatedAt" : "2020-02-20T12:07:07Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "591f4fae040b28817fc7820aad9addc97ad38f39",
    "line" : 18,
    "diffHunk" : "@@ -397,7 +397,33 @@ jobs:\n           # Note: this is going to get the PR branch commit, not the\n           # result of the merge (i.e. this is not using the same commit as the\n           # other jobs in this build).\n-          git fetch origin $(branch_sha)\n+          #\n+          # We have seen errors getting this commit from GitHub, which we\n+          # suspect are transient network errors, so adding simple exponential\n+          # backoff to mitigate.\n+          BACKOFF=1\n+          tell_gary() {\n+              curl -XPOST \\\n+                   -i \\\n+                   -H 'Content-Type: application/json' \\\n+                   --data \"{\\\"text\\\":\\\"<@UEHSF89AQ> <https://dev.azure.com/digitalasset/daml/_build/results?buildId=$(Build.BuildId)|Build $(Build.BuildId)> for <https://github.com/digital-asset/daml/pull/$(pr.num)|PR $(pr.num)> has failed to fetch its commit $(branch_sha) up to BACKOFF=$BACKOFF.\\\"}\" \\\n+                   $(Slack.team-daml-ci)\n+              fi\n+          }\n+          trap tell_gary EXIT\n+          while !  git fetch origin $(branch_sha); do"
  },
  {
    "id" : "7fd6ac88-6bd0-4b23-8c0c-5dbd913b7ad9",
    "prId" : 4513,
    "comments" : [
      {
        "id" : "c6026708-3ae2-47fc-8a44-f1a7c458c888",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Given that this changes build artifacts, I’d be more comfortable running `bazel test` with the environment variable set.",
        "createdAt" : "2020-02-19T10:30:21Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3c68e04c-cb76-4505-b09d-05857fe5ae03",
        "parentId" : "c6026708-3ae2-47fc-8a44-f1a7c458c888",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Makes sense. I'll see if I can add that to the PR build step, so we don't have to wait until we merge it to discover if that breaks things.\r\n\r\nSpolier alert: I had not actually tried running `bazel test` with the env var set, and it does break things. I'll see if I can fix it.",
        "createdAt" : "2020-02-19T12:45:26Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "81246bd2733ace93653cb663dca5a0cdaf7c11e9",
    "line" : 262,
    "diffHunk" : "@@ -199,62 +229,150 @@ jobs:\n           echo \"$SIGNING_KEY\" | base64 -d > signing_key.pfx\n           MSYS_NO_PATHCONV=1 signtool.exe sign '/f' signing_key.pfx '/fd' sha256 '/tr' \"http://timestamp.digicert.com\" '/v' \"$(Build.StagingDirectory)/$INSTALLER\"\n           rm signing_key.pfx\n-          echo \"##vso[task.setvariable variable=artifact-windows-installer;isOutput=true]$INSTALLER\"\n-          echo \"##vso[task.setvariable variable=has_released;isOutput=true]true\"\n-        name: signing\n+          echo \"##vso[task.setvariable variable=installer;isOutput=true]$INSTALLER\"\n+\n+          bazel build //release:sdk-release-tarball\n+          TARBALL=daml-sdk-$(release_tag)-windows.tar.gz\n+          cp bazel-bin/release/sdk-release-tarball.tar.gz '$(Build.StagingDirectory)'/$TARBALL\n+          echo \"##vso[task.setvariable variable=tarball;isOutput=true]$TARBALL\"\n+\n+        name: publish\n         env:\n           SIGNING_KEY: $(microsoft-code-signing)\n       - task: PublishPipelineArtifact@0\n         inputs:\n-          targetPath: $(Build.StagingDirectory)/$(signing.artifact-windows-installer)\n-          artifactName: $(signing.artifact-windows-installer)\n+          targetPath: $(Build.StagingDirectory)/$(publish.installer)\n+          artifactName: $(publish.installer)\n+      - task: PublishPipelineArtifact@0\n+        inputs:\n+          targetPath: $(Build.StagingDirectory)/$(publish.tarball)\n+          artifactName: $(publish.tarball)\n+      - template: ci/tell-slack-failed.yml\n+      - template: ci/report-end.yml\n+\n+  - job: linux_tarball\n+    dependsOn: [ \"check_for_release\" ]\n+    condition: eq(dependencies.check_for_release.outputs['out.is_release'], 'true')\n+    variables:\n+      release_sha: $[ dependencies.check_for_release.outputs['out.release_sha'] ]\n+      release_tag: $[ dependencies.check_for_release.outputs['out.release_tag'] ]\n+    pool:\n+      name: \"linux-pool\"\n+    steps:\n+      - bash: |\n+          set -euo pipefail\n+          eval \"$(./dev-env/bin/dade-assist)\"\n+          git checkout $(release_sha)\n+      - bash: ci/configure-bazel.sh\n+      - bash: |\n+          set -euo pipefail\n+          eval \"$(./dev-env/bin/dade-assist)\"\n+\n+          export DAML_SDK_RELEASE_VERSION=$(release_tag)"
  },
  {
    "id" : "4c8035ab-55c1-49b5-a81e-bd2294c2f01c",
    "prId" : 4358,
    "comments" : [
      {
        "id" : "63e450f0-0717-49ba-ab3f-2aa277d3eff4",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "`HEAD^2` does not exist for master commits as they have a single parent (squash-merge).",
        "createdAt" : "2020-02-03T16:20:27Z",
        "updatedAt" : "2020-02-03T17:30:33Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "268976f3ae0f4c09fc8d177ac9f38e6395c59ba3",
    "line" : 8,
    "diffHunk" : "@@ -23,9 +23,15 @@ jobs:\n     steps:\n       - bash: |\n           set -euo pipefail\n-          echo \"##vso[task.setvariable variable=branch;isOutput=true]$(git rev-parse 'HEAD^2')\"\n-          echo \"##vso[task.setvariable variable=master;isOutput=true]$(git rev-parse 'HEAD^1')\"\n-          echo \"##vso[task.setvariable variable=fork_point;isOutput=true]$(git merge-base --fork-point 'HEAD^1' 'HEAD^2')\"\n+          if [ \"$(Build.Reason)\" == \"PullRequest\" ]; then\n+              echo \"##vso[task.setvariable variable=branch;isOutput=true]$(git rev-parse 'HEAD^2')\""
  },
  {
    "id" : "60440d0d-4456-4544-8702-540a47e4ff85",
    "prId" : 4358,
    "comments" : [
      {
        "id" : "efede7f9-9485-456e-b37e-59f1417028c2",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "This job doesn't really make sense on master commits as there is no followup action required — and build failures are already reported.",
        "createdAt" : "2020-02-03T16:21:21Z",
        "updatedAt" : "2020-02-03T17:30:33Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "268976f3ae0f4c09fc8d177ac9f38e6395c59ba3",
    "line" : 24,
    "diffHunk" : "@@ -491,7 +497,7 @@ jobs:\n           PR_BRANCH: $(pr.branch)\n \n   - job: notify_user\n-    condition: always()\n+    condition: eq(variables['Build.Reason'], 'PullRequest')"
  },
  {
    "id" : "ac697211-0be4-4cbb-80a1-c69a252fce04",
    "prId" : 4144,
    "comments" : [
      {
        "id" : "d9d77cf6-9832-4a41-8503-c13f3d69f901",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "If this keeps being a problem, maybe we can remove `jq` and `gcloud` which don’t seem to be necessary to get the rerun button to work in case of cancellations and I don’t think recording build data is crucial.",
        "createdAt" : "2020-01-21T17:23:50Z",
        "updatedAt" : "2020-01-21T17:23:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "818ae24990ad4b42f9c1c240eebf7bf929dc9880",
    "line" : 19,
    "diffHunk" : "@@ -349,9 +349,34 @@ jobs:\n       pr.num: $[ variables['System.PullRequest.PullRequestNumber'] ]\n       pr.branch: $[ variables['System.PullRequest.SourceBranch'] ]\n     steps:\n-      - checkout: self\n+      # some change in Azure configuration makes this fail recently (2020-01).\n+      # Azure runs PR builds not on the PR commit, but on the GitHub-provided\n+      # commit that would be the result of merging the PR. Recently, it looks\n+      # like when it reaches the point of running this job (which has to run\n+      # after the macOS one, which sometimes takes up to an hour), if master\n+      # has changed in the meantime, Azure cannot find the commit it wants to\n+      # build anymore. Therefore, we tell it not to checkout anything, and\n+      # manually checkout the PR commit.\n+      - checkout: none\n       - bash: |\n           set -euo pipefail\n+          # Note: this is going to get the current master commit, not the\n+          # result of the merge (i.e. this is not using the same commit as the\n+          # other jobs in this build). This seems good enough here as all we\n+          # really want is the dev-env, and conflicts should be pretty rare"
  },
  {
    "id" : "3430ec25-aecd-47da-ba24-8ff2f5a29e4a",
    "prId" : 3323,
    "comments" : [
      {
        "id" : "d9773081-2bb7-42d6-8ead-5251e7822513",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n          key: $(nix-cache-key) | dQw4w9WgXcQ\r\n```",
        "createdAt" : "2019-11-04T11:47:39Z",
        "updatedAt" : "2019-11-04T11:47:49Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "08a08d95-832d-4380-a469-a5939023c092",
        "parentId" : "d9773081-2bb7-42d6-8ead-5251e7822513",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : ":fire:",
        "createdAt" : "2019-11-04T11:51:20Z",
        "updatedAt" : "2019-11-04T11:51:20Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8b12e94cf7b2bf55cf63a5b55a0708b7c4c579ad",
    "line" : 5,
    "diffHunk" : "@@ -46,7 +46,7 @@ jobs:\n         displayName: nix cache key\n       - task: CacheBeta@0\n         inputs:\n-          key: $(nix-cache-key)\n+          key: $(nix-cache-key) | v2"
  },
  {
    "id" : "c150b046-5d3f-45d7-9ad4-92d14bc0ad7c",
    "prId" : 3320,
    "comments" : [
      {
        "id" : "e48e9839-5df2-4383-83af-375a56c551b0",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "@stefanobaghino-da: do I want to know about this?",
        "createdAt" : "2019-11-04T12:09:49Z",
        "updatedAt" : "2019-11-04T13:05:22Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e04680d6-0cac-4ac1-b178-2e3674c6add4",
        "parentId" : "e48e9839-5df2-4383-83af-375a56c551b0",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "[Urban dictionary entry on dQw4w9WgXcQ](https://www.urbandictionary.com/define.php?term=dQw4w9WgXcQ)\r\n\r\nThere was a problem with CI, this served as a test, will soon rebase on top of master when #3323 is merged (which it probably already is).",
        "createdAt" : "2019-11-04T12:35:55Z",
        "updatedAt" : "2019-11-04T13:05:22Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b2e78e44-4447-46b8-b7a2-9e6e5d3a3d43",
        "parentId" : "e48e9839-5df2-4383-83af-375a56c551b0",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Should be addressed by https://github.com/digital-asset/daml/pull/3320/commits/9e52f54a56b5569dc4f7f5898c1f6eb20f997d42\r\n\r\nWill rebase on `master` if this is not enough.",
        "createdAt" : "2019-11-04T12:41:09Z",
        "updatedAt" : "2019-11-04T13:05:22Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "44a624bfe5e81445317905151f035267eb95e03b",
    "line" : null,
    "diffHunk" : "@@ -46,7 +46,7 @@ jobs:\n         displayName: nix cache key\n       - task: CacheBeta@0\n         inputs:\n-          key: $(nix-cache-key)\n+          key: $(nix-cache-key) | dQw4w9WgXcQ"
  },
  {
    "id" : "c1342bd4-8dc5-41e2-9fa4-ce09f9ca526c",
    "prId" : 2968,
    "comments" : [
      {
        "id" : "be2887ad-61d3-42e2-a9d8-0a54f5bc0dba",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Just to be sure I understand this correctly (might be worth documenting), this will create separate signature files that will then be automatically picked up by the release process and uploaded to github releases as well?",
        "createdAt" : "2019-09-21T05:35:08Z",
        "updatedAt" : "2019-09-23T21:05:28Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f52e8ccbd305580a00451992a0c17ce2136f1396",
    "line" : 28,
    "diffHunk" : "@@ -205,6 +209,24 @@ jobs:\n           artifactName: $(artifact-windows-installer)\n           targetPath: $(Build.StagingDirectory)/release\n         condition: not(eq(variables['skip-github'], 'TRUE'))\n+      - bash: |\n+          set -euo pipefail\n+          KEY_FILE=$(mktemp)\n+          GPG_DIR=$(mktemp -d)\n+          cleanup() {\n+              rm -rf $KEY_FILE $GPG_DIR\n+          }\n+          trap cleanup EXIT\n+          echo \"$GPG_KEY\" > $KEY_FILE\n+          gpg --homedir $GPG_DIR --no-tty --quiet --import $KEY_FILE\n+          cd $(Build.StagingDirectory)/release\n+          # Note: relies on our release artifacts not having spaces in their\n+          # names\n+          for f in *; do"
  },
  {
    "id" : "9c9afe44-9404-49f9-af5c-4e48e45e6213",
    "prId" : 2867,
    "comments" : [
      {
        "id" : "2304b261-fd5c-42f4-954f-e798c080438c",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "```suggestion\r\n                                \"status\": \"$(release.status)\"}},\r\n```\r\nThis is the last one in the list. Missing this will not fail CI but will cause issues when we (eventually) try to read the data.",
        "createdAt" : "2019-09-10T16:12:29Z",
        "updatedAt" : "2019-09-10T16:44:20Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1e95c3ab848281b303d7aa00052db376eade0e4a",
    "line" : null,
    "diffHunk" : "@@ -315,10 +276,6 @@ jobs:\n                                 \"machine\": \"$(release.machine)\",\n                                 \"end\": \"$(release.end)\",\n                                 \"status\": \"$(release.status)\"},"
  },
  {
    "id" : "77f0f0e1-4189-46f1-bd50-5a2fe733f37b",
    "prId" : 2420,
    "comments" : [
      {
        "id" : "a9cca718-cb96-45b8-a96e-4d0859dd6348",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "As I understand the [`--repository_cache` flag](https://bazel.build/designs/2016/09/30/repository-cache.html) this only caches external dependencies, i.e. dependencies specified in `WORKSPACE` or files imported by `WORKSPACE`. So, I don't think `*.bazel` or `BUILD` need to be included in the key. @cocreature am I missing something?",
        "createdAt" : "2019-08-12T11:26:57Z",
        "updatedAt" : "2019-08-12T11:26:57Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "cc99c2dafcb2dcc87cab36001fc7ed8ff7cd04bf",
    "line" : 36,
    "diffHunk" : "@@ -35,39 +35,49 @@ jobs:\n     pool:\n       vmImage: 'macOS-10.14'\n     variables:\n-      cache-key: $(Build.StagingDirectory)/macos-nix-key\n-      cache-path: /tmp/cache/\n+      nix-cache-key: $(Build.StagingDirectory)/macos-nix-key\n+      nix-cache-path: /tmp/nix-cache/\n+      bazel-repo-cache-key: $(Build.StagingDirectory)/bazel-repo-cache-key\n+      bazel-repo-cache-path: $(Agent.BuildDirectory)/.bazel-cache/repo\n     steps:\n       - template: ci/report-start.yml\n       - checkout: self\n-      - bash: echo $(git log -n1 --pretty=format:%H dev-env nix azure-pipelines.yml) >> $(cache-key)\n-        displayName: cache key\n+      - bash: echo $(git log -n1 --pretty=format:%H dev-env nix azure-pipelines.yml) >> $(nix-cache-key)\n+        displayName: nix cache key\n       - task: CacheBeta@0\n         inputs:\n-          key: $(cache-key)\n-          path: $(cache-path)\n+          key: $(nix-cache-key)\n+          path: $(nix-cache-path)\n       - bash: |\n           set -euo pipefail\n-          if [[ -e $(cache-path) ]]; then\n+          if [[ -e $(nix-cache-path) ]]; then\n               DIR=$(pwd)\n               sudo mkdir /nix && sudo chown $USER /nix\n               cd /nix\n-              tar xzf $(cache-path)/nix.tar.gz\n+              tar xzf $(nix-cache-path)/nix.tar.gz\n               cd $DIR\n               curl -sfL https://nixos.org/releases/nix/nix-2.2.1/install | bash\n           fi\n         displayName: restore cache\n+      - bash: echo $(git log -n1 --pretty=format:%H azure-pipelines.yml $(find . -name \\*.bazel -or -name \\*.bzl -or -name WORKSPACE -or -name BUILD)) >> $(bazel-repo-cache-key)"
  },
  {
    "id" : "c177be0b-2ecd-4e5b-b9ac-126ae59dd340",
    "prId" : 2377,
    "comments" : [
      {
        "id" : "a031d641-54ba-414d-9ec4-31b77cfde66a",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "The uncached builds are quite slow here. Can we easily mark this as non-required? I couldn’t find anything in the Azure docs but maybe I’m just missing something.\r\nIf not, we probably need to disable this on Monday if nothing has changed until then.",
        "createdAt" : "2019-08-02T09:40:41Z",
        "updatedAt" : "2019-08-02T11:23:53Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bf733089-40e5-4e1f-93e3-655d0b5ff456",
        "parentId" : "a031d641-54ba-414d-9ec4-31b77cfde66a",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "How slow? macOS builds typically take about 25 minutes, so as long as it's faster than that it should be OK. An easy way to speed those up would be to run them on our own linux pool, which has bigger machines than the Azure-provided ones. Another option would be to use the same logic as in this PR to skip the build entirely if caching fails.",
        "createdAt" : "2019-08-02T09:44:16Z",
        "updatedAt" : "2019-08-02T11:23:53Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "98b51c95-3777-46c3-80b7-51aff25ccb17",
        "parentId" : "a031d641-54ba-414d-9ec4-31b77cfde66a",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I think it was around 40 minutes.",
        "createdAt" : "2019-08-02T09:44:58Z",
        "updatedAt" : "2019-08-02T11:23:53Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "952c3ba4-2843-43ee-bddc-595661fa204a",
        "parentId" : "a031d641-54ba-414d-9ec4-31b77cfde66a",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Looks, like I was misremembering. It finished in ~20 minutes so it’s probably fine. However, the workaround doesn’t seem to work since the cache upload step is failing.",
        "createdAt" : "2019-08-02T09:51:16Z",
        "updatedAt" : "2019-08-02T11:23:53Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f303098b-b2f4-4369-8870-d18bf0210f65",
        "parentId" : "a031d641-54ba-414d-9ec4-31b77cfde66a",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Looks like this takes about 15 minutes, so well below the macOS one.",
        "createdAt" : "2019-08-02T10:34:06Z",
        "updatedAt" : "2019-08-02T11:23:53Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "259dbf423c4bdf1b2e9d7a29a78800535a1220c7",
    "line" : 65,
    "diffHunk" : "@@ -144,6 +156,7 @@ jobs:\n           mkdir -p .azure-cache\n           tar czf .azure-cache/stack-root.tar.gz -C $HOME .stack\n         displayName: \"Pack cache\"\n+        condition: not(eq('true', variables['cacheFailed']))"
  },
  {
    "id" : "77011c38-d801-470c-b0e7-7600235fa94e",
    "prId" : 2092,
    "comments" : [
      {
        "id" : "a83704d0-fcbe-4118-a411-6ab425744632",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n              || \"$(Windows.status)\" == \"Canceled\"\r\n```",
        "createdAt" : "2019-07-10T14:20:59Z",
        "updatedAt" : "2019-07-10T17:54:18Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b242dc959d5d9bd6120551d87aa1b6d535f10052",
    "line" : null,
    "diffHunk" : "@@ -249,5 +249,14 @@ jobs:\n           echo \"$GOOGLE_APPLICATION_CREDENTIALS_CONTENT\" > $GCS_KEY\n           gcloud auth activate-service-account --key-file=$GCS_KEY\n           BOTO_CONFIG=/dev/null gsutil cp $REPORT_GZ gs://daml-data/builds/$(Build.BuildId)_$(date -u +%Y%m%d_%H%M%SZ).json.gz\n+\n+          if [[ \"$(Linux.status)\" == \"Canceled\"\n+              || \"$(macOS.status)\" == \"Canceled\"\n+              || \"$(Windows.status\" == \"Canceled\""
  },
  {
    "id" : "f90c8ba3-edf3-47c7-bd67-ef88fccb4710",
    "prId" : 2092,
    "comments" : [
      {
        "id" : "8b4706a4-cd26-426b-ab0f-24cf0cfe17c9",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n              || \"$(perf.status)\" == \"Canceled\"\r\n```",
        "createdAt" : "2019-07-10T14:21:15Z",
        "updatedAt" : "2019-07-10T17:54:18Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b242dc959d5d9bd6120551d87aa1b6d535f10052",
    "line" : null,
    "diffHunk" : "@@ -249,5 +249,14 @@ jobs:\n           echo \"$GOOGLE_APPLICATION_CREDENTIALS_CONTENT\" > $GCS_KEY\n           gcloud auth activate-service-account --key-file=$GCS_KEY\n           BOTO_CONFIG=/dev/null gsutil cp $REPORT_GZ gs://daml-data/builds/$(Build.BuildId)_$(date -u +%Y%m%d_%H%M%SZ).json.gz\n+\n+          if [[ \"$(Linux.status)\" == \"Canceled\"\n+              || \"$(macOS.status)\" == \"Canceled\"\n+              || \"$(Windows.status\" == \"Canceled\"\n+              || \"$(perf.status\" == \"Canceled\""
  },
  {
    "id" : "f612538b-6ee3-4d27-8854-caf7e1d9cfc6",
    "prId" : 1274,
    "comments" : [
      {
        "id" : "a13a6703-985d-4311-95cb-c961b5174738",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I’ve verified that signing works correctly without the `has_released` check so hopefully it will work properly during a release as well.",
        "createdAt" : "2019-05-21T14:19:18Z",
        "updatedAt" : "2019-05-22T06:46:38Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "61acee607b0fff6c58ed95a7ec7087a481d863ec",
    "line" : 11,
    "diffHunk" : "@@ -102,8 +102,47 @@ jobs:\n                $(Slack.URL)\n         condition: and(failed(), eq(variables['Build.SourceBranchName'], 'master'))\n \n+  - job: Windows_signing\n+    # Signing is a separate job so that we can make sure that we only sign on releases.\n+    # Since the release check is run on Linux, we do not have access to that information\n+    # in the regular Windows step.\n+    dependsOn: [ \"Windows\", \"Linux\" ]\n+    pool:\n+      name: 'windows-pool'\n+    condition: and(succeeded(), eq(dependencies.Linux.outputs['release.has_released'], 'true'))"
  },
  {
    "id" : "1e82019e-1abe-48ab-87e7-540f553958c1",
    "prId" : 1274,
    "comments" : [
      {
        "id" : "c5759400-c811-44f2-b564-ffc884ecd905",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "You can use `$(cat VERSION)` here directly and save out a whole `bash` step.",
        "createdAt" : "2019-05-21T15:52:38Z",
        "updatedAt" : "2019-05-22T06:46:38Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "71a92d7c-213a-43c0-8219-2bed18a55cfd",
        "parentId" : "c5759400-c811-44f2-b564-ffc884ecd905",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Good idea, changed!",
        "createdAt" : "2019-05-22T06:46:46Z",
        "updatedAt" : "2019-05-22T06:46:46Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "61acee607b0fff6c58ed95a7ec7087a481d863ec",
    "line" : null,
    "diffHunk" : "@@ -102,8 +102,47 @@ jobs:\n                $(Slack.URL)\n         condition: and(failed(), eq(variables['Build.SourceBranchName'], 'master'))\n \n+  - job: Windows_signing\n+    # Signing is a separate job so that we can make sure that we only sign on releases.\n+    # Since the release check is run on Linux, we do not have access to that information\n+    # in the regular Windows step.\n+    dependsOn: [ \"Windows\", \"Linux\" ]\n+    pool:\n+      name: 'windows-pool'\n+    condition: and(succeeded(), eq(dependencies.Linux.outputs['release.has_released'], 'true'))\n+    variables:\n+      unsigned-installer: $[ dependencies.Windows.outputs['publish.artifact-unsigned-windows-installer'] ]\n+    steps:\n+      - checkout: self\n+        persistCredentials: true\n+      - bash: |\n+          set -euo pipefail\n+          echo \"##vso[task.setvariable variable=release_tag]$(cat VERSION)\"\n+        name: release\n+      - task: DownloadPipelineArtifact@0\n+        inputs:\n+          artifactName: $(unsigned-installer)\n+          targetPath: $(Build.StagingDirectory)/\n+      - bash: |\n+          set -euo pipefail\n+          INSTALLER=daml-sdk-$(release_tag)-windows.exe"
  },
  {
    "id" : "d4b14323-67ef-489b-b88d-6c001d9160e8",
    "prId" : 1274,
    "comments" : [
      {
        "id" : "691eaf59-40e3-4f27-918c-1da86c431532",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Feels a bit weird to be using an `http` call in a signing phase. Any chance you could turn this into an `https` call?",
        "createdAt" : "2019-05-21T15:53:57Z",
        "updatedAt" : "2019-05-22T06:46:38Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1a49746b-40de-4193-808e-73138669a27d",
        "parentId" : "691eaf59-40e3-4f27-918c-1da86c431532",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "`curl https://timestamp.digicert.com` doesn't seem to work, so I suppose that's off the table. Still feels weird though.",
        "createdAt" : "2019-05-21T16:04:59Z",
        "updatedAt" : "2019-05-22T06:46:38Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d202b486-92f1-4feb-a8d0-d895c55c3cff",
        "parentId" : "691eaf59-40e3-4f27-918c-1da86c431532",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Yeah I was rather surprised by this but I copied it from the official [Digicert documentation](https://www.digicert.com/code-signing/signcode-signtool-command-line.htm). I took a short look at [RFC 3161](https://www.ietf.org/rfc/rfc3161.txt) which defines the timestamping protocol and it looks like that has a custom signing mechanism so presumably that’s why using HTTP is reasonable here.",
        "createdAt" : "2019-05-22T06:49:29Z",
        "updatedAt" : "2019-05-22T06:49:30Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "61acee607b0fff6c58ed95a7ec7087a481d863ec",
    "line" : 27,
    "diffHunk" : "@@ -102,8 +102,47 @@ jobs:\n                $(Slack.URL)\n         condition: and(failed(), eq(variables['Build.SourceBranchName'], 'master'))\n \n+  - job: Windows_signing\n+    # Signing is a separate job so that we can make sure that we only sign on releases.\n+    # Since the release check is run on Linux, we do not have access to that information\n+    # in the regular Windows step.\n+    dependsOn: [ \"Windows\", \"Linux\" ]\n+    pool:\n+      name: 'windows-pool'\n+    condition: and(succeeded(), eq(dependencies.Linux.outputs['release.has_released'], 'true'))\n+    variables:\n+      unsigned-installer: $[ dependencies.Windows.outputs['publish.artifact-unsigned-windows-installer'] ]\n+    steps:\n+      - checkout: self\n+        persistCredentials: true\n+      - bash: |\n+          set -euo pipefail\n+          echo \"##vso[task.setvariable variable=release_tag]$(cat VERSION)\"\n+        name: release\n+      - task: DownloadPipelineArtifact@0\n+        inputs:\n+          artifactName: $(unsigned-installer)\n+          targetPath: $(Build.StagingDirectory)/\n+      - bash: |\n+          set -euo pipefail\n+          INSTALLER=daml-sdk-$(release_tag)-windows.exe\n+          mv \"$(Build.StagingDirectory)/$(unsigned-installer)\" \"$(Build.StagingDirectory)/$INSTALLER\"\n+          chmod +x \"$(Build.StagingDirectory)/$INSTALLER\"\n+          echo \"$SIGNING_KEY\" | base64 -d > signing_key.pfx\n+          MSYS_NO_PATHCONV=1 signtool.exe sign '/f' signing_key.pfx '/fd' sha256 '/tr' \"http://timestamp.digicert.com\" '/v' \"$(Build.StagingDirectory)/$INSTALLER\""
  },
  {
    "id" : "0e677b6a-6aef-4e7c-919a-67e719ec1d97",
    "prId" : 1274,
    "comments" : [
      {
        "id" : "4ab98440-d91c-438c-bdd2-624d46734d0a",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I don't see this variable being used. Should it be added to the checks of the `release` job?",
        "createdAt" : "2019-05-21T15:56:06Z",
        "updatedAt" : "2019-05-22T06:46:38Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "84f3f2b2-abc9-4a5a-ac2d-e9a6e5ae7b29",
        "parentId" : "4ab98440-d91c-438c-bdd2-624d46734d0a",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I’ve just removed it. Given that we set it unconditionally there doesn’t seem to be a reason to have it.",
        "createdAt" : "2019-05-22T06:49:51Z",
        "updatedAt" : "2019-05-22T06:49:51Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "61acee607b0fff6c58ed95a7ec7087a481d863ec",
    "line" : 30,
    "diffHunk" : "@@ -102,8 +102,47 @@ jobs:\n                $(Slack.URL)\n         condition: and(failed(), eq(variables['Build.SourceBranchName'], 'master'))\n \n+  - job: Windows_signing\n+    # Signing is a separate job so that we can make sure that we only sign on releases.\n+    # Since the release check is run on Linux, we do not have access to that information\n+    # in the regular Windows step.\n+    dependsOn: [ \"Windows\", \"Linux\" ]\n+    pool:\n+      name: 'windows-pool'\n+    condition: and(succeeded(), eq(dependencies.Linux.outputs['release.has_released'], 'true'))\n+    variables:\n+      unsigned-installer: $[ dependencies.Windows.outputs['publish.artifact-unsigned-windows-installer'] ]\n+    steps:\n+      - checkout: self\n+        persistCredentials: true\n+      - bash: |\n+          set -euo pipefail\n+          echo \"##vso[task.setvariable variable=release_tag]$(cat VERSION)\"\n+        name: release\n+      - task: DownloadPipelineArtifact@0\n+        inputs:\n+          artifactName: $(unsigned-installer)\n+          targetPath: $(Build.StagingDirectory)/\n+      - bash: |\n+          set -euo pipefail\n+          INSTALLER=daml-sdk-$(release_tag)-windows.exe\n+          mv \"$(Build.StagingDirectory)/$(unsigned-installer)\" \"$(Build.StagingDirectory)/$INSTALLER\"\n+          chmod +x \"$(Build.StagingDirectory)/$INSTALLER\"\n+          echo \"$SIGNING_KEY\" | base64 -d > signing_key.pfx\n+          MSYS_NO_PATHCONV=1 signtool.exe sign '/f' signing_key.pfx '/fd' sha256 '/tr' \"http://timestamp.digicert.com\" '/v' \"$(Build.StagingDirectory)/$INSTALLER\"\n+          rm signing_key.pfx\n+          echo \"##vso[task.setvariable variable=artifact-windows-installer;isOutput=true]$INSTALLER\"\n+          echo \"##vso[task.setvariable variable=has_released;isOutput=true]true\""
  },
  {
    "id" : "e8f6d173-32db-47c6-8438-e5eed6f6710d",
    "prId" : 1274,
    "comments" : [
      {
        "id" : "ac5a62d3-a2d4-42f3-9f1a-2b56268bce5b",
        "parentId" : null,
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "This is the default so could be left out.",
        "createdAt" : "2019-05-21T15:56:51Z",
        "updatedAt" : "2019-05-22T06:46:38Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8569194a-efaa-4148-a2e0-d4b0372453b8",
        "parentId" : "ac5a62d3-a2d4-42f3-9f1a-2b56268bce5b",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Thanks, removed.",
        "createdAt" : "2019-05-22T06:49:57Z",
        "updatedAt" : "2019-05-22T06:49:57Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "61acee607b0fff6c58ed95a7ec7087a481d863ec",
    "line" : null,
    "diffHunk" : "@@ -102,8 +102,47 @@ jobs:\n                $(Slack.URL)\n         condition: and(failed(), eq(variables['Build.SourceBranchName'], 'master'))\n \n+  - job: Windows_signing\n+    # Signing is a separate job so that we can make sure that we only sign on releases.\n+    # Since the release check is run on Linux, we do not have access to that information\n+    # in the regular Windows step.\n+    dependsOn: [ \"Windows\", \"Linux\" ]\n+    pool:\n+      name: 'windows-pool'\n+    condition: and(succeeded(), eq(dependencies.Linux.outputs['release.has_released'], 'true'))\n+    variables:\n+      unsigned-installer: $[ dependencies.Windows.outputs['publish.artifact-unsigned-windows-installer'] ]\n+    steps:\n+      - checkout: self\n+        persistCredentials: true\n+      - bash: |\n+          set -euo pipefail\n+          echo \"##vso[task.setvariable variable=release_tag]$(cat VERSION)\"\n+        name: release\n+      - task: DownloadPipelineArtifact@0\n+        inputs:\n+          artifactName: $(unsigned-installer)\n+          targetPath: $(Build.StagingDirectory)/\n+      - bash: |\n+          set -euo pipefail\n+          INSTALLER=daml-sdk-$(release_tag)-windows.exe\n+          mv \"$(Build.StagingDirectory)/$(unsigned-installer)\" \"$(Build.StagingDirectory)/$INSTALLER\"\n+          chmod +x \"$(Build.StagingDirectory)/$INSTALLER\"\n+          echo \"$SIGNING_KEY\" | base64 -d > signing_key.pfx\n+          MSYS_NO_PATHCONV=1 signtool.exe sign '/f' signing_key.pfx '/fd' sha256 '/tr' \"http://timestamp.digicert.com\" '/v' \"$(Build.StagingDirectory)/$INSTALLER\"\n+          rm signing_key.pfx\n+          echo \"##vso[task.setvariable variable=artifact-windows-installer;isOutput=true]$INSTALLER\"\n+          echo \"##vso[task.setvariable variable=has_released;isOutput=true]true\"\n+        name: signing\n+        condition: succeeded()"
  },
  {
    "id" : "5e8fa431-7d17-4556-8eb0-af21c88d9f76",
    "prId" : 560,
    "comments" : [
      {
        "id" : "4e7f0b55-36e4-41f1-8707-3a21af986a08",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I guess you only disabled this for testing?",
        "createdAt" : "2019-04-17T07:03:37Z",
        "updatedAt" : "2019-04-26T23:03:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2c479a84-63f8-4a8c-af4c-ea794c820d04",
        "parentId" : "4e7f0b55-36e4-41f1-8707-3a21af986a08",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Yes, will definitely re-enable before merging.",
        "createdAt" : "2019-04-17T15:29:15Z",
        "updatedAt" : "2019-04-26T23:03:10Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "8c4263c2cb61acb18223d212bfd5a63301a7b7f7",
    "line" : null,
    "diffHunk" : "@@ -86,3 +98,26 @@ jobs:\n           assetUploadMode: 'replace'\n           addChangeLog: false\n           isPrerelease: true\n+      - bash: |\n+          set -eux pipefail\n+          echo \"##vso[task.setvariable variable=status;isOutput=true]$(Agent.JobStatus)\"\n+        name: status\n+\n+  - job: notify\n+    dependsOn: [\"linux\", \"macos\", \"windows\", \"release\"]\n+    condition: always() #eq(variables['Build.SourceBranchName'], 'master')"
  },
  {
    "id" : "8fcd77ce-2c17-45f4-ac59-b10e77511085",
    "prId" : 560,
    "comments" : [
      {
        "id" : "dcd8dd55-3162-42f0-bb07-f7dcddd29b4c",
        "parentId" : null,
        "author" : {
          "login" : "flokli",
          "name" : "Florian Klink",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/183879?u=41f435d31792cbf91592f78757b981eb8e821fc6&v=4"
        },
        "body" : "hoping azures' yaml parser supports this: can we use [anchors and merge keys](https://camel.readthedocs.io/en/latest/yamlref.html#merge-keys) to reduce code duplication?",
        "createdAt" : "2019-04-26T21:53:06Z",
        "updatedAt" : "2019-04-26T23:03:10Z",
        "lastEditedBy" : {
          "login" : "flokli",
          "name" : "Florian Klink",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/183879?u=41f435d31792cbf91592f78757b981eb8e821fc6&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c4adf02e-019a-4197-9779-afde40448874",
        "parentId" : "dcd8dd55-3162-42f0-bb07-f7dcddd29b4c",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "> /azure-pipelines.yml: Anchors are not currently supported. Remove the anchor 'SLACK'\r\n\r\nNope :(",
        "createdAt" : "2019-04-26T23:02:42Z",
        "updatedAt" : "2019-04-26T23:03:10Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "18c1e7cb-af64-4a6d-b14a-84cf6e6dd4f6",
        "parentId" : "dcd8dd55-3162-42f0-bb07-f7dcddd29b4c",
        "author" : {
          "login" : "flokli",
          "name" : "Florian Klink",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/183879?u=41f435d31792cbf91592f78757b981eb8e821fc6&v=4"
        },
        "body" : "Meh :-/\r\n\r\nhttps://github.com/Microsoft/azure-pipelines-yaml/issues/187",
        "createdAt" : "2019-04-27T15:56:22Z",
        "updatedAt" : "2019-04-27T15:56:22Z",
        "lastEditedBy" : {
          "login" : "flokli",
          "name" : "Florian Klink",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/183879?u=41f435d31792cbf91592f78757b981eb8e821fc6&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8c4263c2cb61acb18223d212bfd5a63301a7b7f7",
    "line" : 4,
    "diffHunk" : "@@ -25,6 +25,14 @@ jobs:\n       - template: ci/build-unix.yml\n         parameters:\n           name: linux\n+      - bash: |"
  },
  {
    "id" : "c8a4d3d7-f6eb-431d-a800-ecbaad297a5f",
    "prId" : 230,
    "comments" : [
      {
        "id" : "ba93914d-54cc-4c6a-864d-f2b1e440655b",
        "parentId" : null,
        "author" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "body" : "What specifically is the security concern that you are trying to address here? Could we add this in a comment so we don’t forget about it?",
        "createdAt" : "2019-04-09T09:55:50Z",
        "updatedAt" : "2019-04-09T10:58:46Z",
        "lastEditedBy" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e6a87c64-8644-41c3-bf3e-423c9253f002",
        "parentId" : "ba93914d-54cc-4c6a-864d-f2b1e440655b",
        "author" : null,
        "body" : "The linux-pool is only available for non-public PRs so I need a fallback for external PRs.",
        "createdAt" : "2019-04-09T13:52:42Z",
        "updatedAt" : "2019-04-09T13:52:42Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "b39bf789a1ded0c4a751b9399720df1c332df945",
    "line" : 5,
    "diffHunk" : "@@ -20,7 +20,10 @@ jobs:\n   - job: Linux\n     timeoutInMinutes: 360\n     pool:\n-      vmImage: 'ubuntu-16.04'\n+      ${{ if eq(variables['System.PullRequest.IsFork'], 'true') }}:"
  }
]