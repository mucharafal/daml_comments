[
  {
    "id" : "745161a8-3b68-4a11-b656-a92561b8bffb",
    "prId" : 6761,
    "comments" : [
      {
        "id" : "5059ab6e-5934-400b-8526-6b67a51661f5",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Would be great to get this merged upstream.",
        "createdAt" : "2020-07-23T06:52:16Z",
        "updatedAt" : "2020-07-23T07:02:06Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0a3cd0b3-e0d1-4d3c-a58b-8067992d778b",
        "parentId" : "5059ab6e-5934-400b-8526-6b67a51661f5",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Yes, upstream PRs are here https://github.com/tweag/rules_nixpkgs/pull/132, https://github.com/tweag/rules_nixpkgs/pull/128. I've factored out the `nixopts` location expansion into its own PR to ease review.",
        "createdAt" : "2020-07-23T07:45:56Z",
        "updatedAt" : "2020-07-23T07:45:57Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e5dfc1ccf7712a117fc20f148674854c71250990",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +198,202 @@+depending on the cc toolchain leading to cache misses.\n+\n Example:\n \n ```bzl"
  },
  {
    "id" : "c17b5ac5-f8b9-4657-97a8-090d9f5e20db",
    "prId" : 5976,
    "comments" : [
      {
        "id" : "630e97a7-8eb9-4bd3-ba1e-0169ea60c121",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "huh, does buildifier not catch this?",
        "createdAt" : "2020-05-18T06:51:23Z",
        "updatedAt" : "2020-05-18T15:01:30Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "023ed329-7532-4fe8-996e-cc0f4fb49241",
        "parentId" : "630e97a7-8eb9-4bd3-ba1e-0169ea60c121",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "`rules_nixpkgs` CI doesn't include a buildifier step right now.",
        "createdAt" : "2020-05-18T08:31:28Z",
        "updatedAt" : "2020-05-18T15:01:30Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "bcdb916c0d94aead04759fa80443d95e751d3c95",
    "line" : 276,
    "diffHunk" : "@@ -1,1 +274,278 @@ \n constraint_value(\n-    name =  \"support_nix\",\n+    name = \"support_nix\",\n     constraint_setting = \":nix\","
  },
  {
    "id" : "803019d4-cc13-45f8-89dd-e134f6f16d4e",
    "prId" : 5976,
    "comments" : [
      {
        "id" : "8c3179f8-3193-475a-aa18-e5464a599ead",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This looks like it is inconsistent with how Bazel handles this kind of stuff where you have to escape the `$` if you want it to not have special meaning. Probably not a big deal.",
        "createdAt" : "2020-05-18T06:53:29Z",
        "updatedAt" : "2020-05-18T15:01:30Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8ea690dc-13d8-4d28-90ba-8f99b1489cc6",
        "parentId" : "8c3179f8-3193-475a-aa18-e5464a599ead",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "I don't follow. We do want `$(location )` to have special meaning, just that here we define that special meaning with `_expand_location`. Note `$(location )` expension is not automatic, a rule has to invoke [`ctx.expand_location`](https://docs.bazel.build/versions/master/skylark/lib/ctx.html#expand_location) explicitly. However, here we are within a repository rule, so `ctx.expand_location` is not available to us.",
        "createdAt" : "2020-05-18T08:33:36Z",
        "updatedAt" : "2020-05-18T15:01:30Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9fae46cc-e910-493e-8fea-56c08974a9df",
        "parentId" : "8c3179f8-3193-475a-aa18-e5464a599ead",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "What I mean is that only `$(location …)` has special meaning. In other contexts in Bazel where `$(location …)` has special meaning, everything starting with `$` has special meaning and you have to escape something like `$abc` whereas here you do not need the escaping.",
        "createdAt" : "2020-05-18T08:53:27Z",
        "updatedAt" : "2020-05-18T15:01:30Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "aab72fac-1c91-4924-8d79-920177c07e78",
        "parentId" : "8c3179f8-3193-475a-aa18-e5464a599ead",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Oh, I see, yes that would be more consistent. location expansion is not enabled by default, so it's not a big deal here. But, yes, this should be improved upstream.",
        "createdAt" : "2020-05-18T13:46:39Z",
        "updatedAt" : "2020-05-18T15:01:30Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "bcdb916c0d94aead04759fa80443d95e751d3c95",
    "line" : 318,
    "diffHunk" : "@@ -1,1 +316,320 @@+      The string with all instances of `$(location )` replaced by paths.\n+    \"\"\"\n+    num = string.count(\"$(location \")\n+    result = \"\"\n+    offset = 0"
  }
]