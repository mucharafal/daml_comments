[
  {
    "id" : "b25b5a48-93c7-41c6-8405-4a52d888b313",
    "prId" : 3290,
    "comments" : [
      {
        "id" : "44a27a06-c6c2-4aec-9b60-84ccf726ba58",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Are files passed in via `data` really needed in `runfiles`? As I understand they are files required by the `client` or `server` during the execution of the `runner` command.\r\n```suggestion\r\n```",
        "createdAt" : "2019-11-04T12:34:14Z",
        "updatedAt" : "2019-11-07T08:35:44Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ac565a7c-f5bd-4538-95b7-96bf87496f30",
        "parentId" : "44a27a06-c6c2-4aec-9b60-84ccf726ba58",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "good point. wasn't needed.",
        "createdAt" : "2019-11-07T08:39:48Z",
        "updatedAt" : "2019-11-07T08:39:48Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d876f6f3ddb0d50f2badf9713910298ada944b5b",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,100 @@\n+# Copyright (c) 2019 The DAML Authors. All rights reserved.\n+# SPDX-License-Identifier: Apache-2.0\n+\n+def _client_server_build_impl(ctx):\n+    ctx.actions.run_shell(\n+        outputs = [ctx.outputs.out],\n+        inputs = ctx.files.data,\n+        tools = depset([\n+            ctx.executable._runner,\n+            ctx.executable.client,\n+            ctx.executable.server,\n+        ]),\n+        use_default_shell_env = True,\n+        command = \"\"\"\n+        export {output_env}=\"{output_path}\"\n+        {runner} \"{client}\" \"{client_args} {client_files}\" \"{server}\" \"{server_args} {server_files}\" &> runner.log\n+        if [ \"$?\" -ne 0 ]; then\n+          cat runner.log\n+          exit 1\n+        fi\n+      \"\"\".format(\n+            output_env = ctx.attr.output_env,\n+            output_path = ctx.outputs.out.path,\n+            runner = ctx.executable._runner.path,\n+            client = ctx.executable.client.path,\n+            server = ctx.executable.server.path,\n+            server_args = \" \".join(ctx.attr.server_args),\n+            server_files = \" \".join([f.path for f in ctx.files.server_files]),\n+            client_args = \" \".join(ctx.attr.client_args),\n+            client_files = \" \".join([f.path for f in ctx.files.client_files]),\n+        ),\n+    )\n+    return [\n+        DefaultInfo(\n+            files = depset([ctx.outputs.out]),\n+            runfiles = ctx.runfiles(files = ctx.files.data, collect_data = True),"
  }
]