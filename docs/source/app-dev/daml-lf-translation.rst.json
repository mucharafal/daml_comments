[
  {
    "id" : "6033a1d9-fd05-45fb-b0b4-c0b3b3f9a6f1",
    "prId" : 2779,
    "comments" : [
      {
        "id" : "9c155e08-2ea6-4b65-a16d-74f4cfff77a4",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "The claim that we don't generate a DAML data type is a deliberate lie. I'll change this to produce a type synonym in a follow up PR and will document that then.",
        "createdAt" : "2019-09-05T15:54:33Z",
        "updatedAt" : "2019-09-10T11:14:25Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1ad2528d6a9763bf396a1c03fb414d73fa20ebee",
    "line" : 42,
    "diffHunk" : "@@ -245,3 +265,23 @@ These translate to the DAML-LF record declarations:\n \n \trecord DoNothing ↦ {}\n \trecord Transfer ↦ { newOwner: Party }\n+\n+Generic template instantiati\n+\n+Generic template instantiations\n+===============================\n+\n+In the context of the templates ``Iou`` and ``Proposal`` above, the generic template instantiation\n+\n+.. literalinclude:: code-snippets/daml-lf-translation.daml\n+   :language: daml\n+   :start-after: -- start code snippet: generic template instantiation\n+   :end-before: -- end code snippet: generic template instantiation\n+\n+which does not produce a DAML data definition but only the DAML-LF record declaration:"
  },
  {
    "id" : "be678086-eea9-411f-9e0b-c559ceaae0a4",
    "prId" : 2168,
    "comments" : [
      {
        "id" : "a447cbd0-a4e4-4e6d-8a2c-b082c6b7b15a",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n- **Enum**, which defines simplified **sum** types without type parameters nor argument.\r\n```",
        "createdAt" : "2019-07-16T15:46:57Z",
        "updatedAt" : "2019-07-16T15:49:49Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "31becc6710a259103147647e2e5fc2389e22b129",
    "line" : null,
    "diffHunk" : "@@ -58,12 +58,13 @@ For example: the DAML pair type ``(Int, Text)`` is translated to ``daml-prim:DA.\n Data types\n **********\n \n-DAML-LF has two kinds of data declarations:\n+DAML-LF has three kinds of data declarations:\n \n - **Record** types, which define a collection of data\n - **Variant** or **sum** types, which define a number of alternatives\n+- **Enum**, which define simplified **sum** types without type parameters nor argument."
  }
]