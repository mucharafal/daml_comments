[
  {
    "id" : "4c09add1-c590-428d-970e-1982a3fe0863",
    "prId" : 7504,
    "comments" : [
      {
        "id" : "2b5e0420-6fcf-4cd1-9295-76408b64527a",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n- *Ledger Time* is chosen (and validated) to respect Causal Monotonicity: The Create action on a contract *c* always precedes (or is equal to) all other actions on *c* in Ledger Time.\r\n```",
        "createdAt" : "2020-09-29T07:24:06Z",
        "updatedAt" : "2020-09-29T07:24:09Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a90f75d4-f927-4f2a-bbf7-51af7c08d027",
        "parentId" : "2b5e0420-6fcf-4cd1-9295-76408b64527a",
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "I'm not sure that clarifies things. Plus I'd argue that if \"all other actions\" is the empty set, the statement is true as well.",
        "createdAt" : "2020-09-29T07:27:18Z",
        "updatedAt" : "2020-09-29T07:27:18Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a7f34798-dfb8-4e85-9c02-f0f0bdcae8f9",
        "parentId" : "2b5e0420-6fcf-4cd1-9295-76408b64527a",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "The statement before clearly had a `<=` relationship. `precedes` is somewhat ambiguous in whether you force strict inequality or not.",
        "createdAt" : "2020-09-29T07:29:18Z",
        "updatedAt" : "2020-09-29T07:29:18Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "dfae711588db2c0bc25f95ea9d9b5d054446702c",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +196,200 @@- As part of command interpretation, each transaction is automatically assigned a *Ledger Time* by the participant server.\n- All calls to ``getTime`` within a transaction return the *Ledger Time* assigned to that transaction.\n- *Ledger Time* is chosen (and validated) to respect Causal Monotonicity: The Create action on a contract *c* always precedes all other actions on *c* in Ledger Time.\n- As part of the commit/synchronization protocol of the underlying infrastructure, every transaction is assigned a *Record Time*, which can be thought of as the infrastructures \"system time\". It's the best available notion of \"real time\", but the only guarantees on it are the guarantees the underlying infrastructure can give. It is also not known at interpretation time.\n- *Ledger Time* is kept close to \"real time\" by bounding it against *Record Time*. Transactions where *Ledger* and *Record Time* are too far apart are rejected."
  },
  {
    "id" : "5f562f23-f651-4550-8f91-ca988beec622",
    "prId" : 7504,
    "comments" : [
      {
        "id" : "8d76cb54-f69b-4077-bacd-c9472209e246",
        "parentId" : null,
        "author" : {
          "login" : "sofiafaro-da",
          "name" : "Sofia Faro",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/63245722?u=b440e86239cc6cb4a8b4aacdc19fff8f1b61068d&v=4"
        },
        "body" : "Doesn't `and not completely monotonic` somewhat contradict the earlier `*Ledger Time* is chosen (and validated) to respect Causal Monotonicity: The Create action on a contract *c* always precedes all other actions on *c* in Ledger Time.`?\r\n\r\nI guess there's a technical distinction being made but I can't see what it is without some examples. Or maybe \"completely monotonic\" should be more spelled out?",
        "createdAt" : "2020-09-29T07:36:53Z",
        "updatedAt" : "2020-09-29T07:36:53Z",
        "lastEditedBy" : {
          "login" : "sofiafaro-da",
          "name" : "Sofia Faro",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/63245722?u=b440e86239cc6cb4a8b4aacdc19fff8f1b61068d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "dfae711588db2c0bc25f95ea9d9b5d054446702c",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +204,208 @@How is this used in practice?\n\n- Be aware that ``getTime`` is only reasonably close to real time, and not completely monotonic. Avoid DAML workflows that rely on very accurate time measurements or high frequency time changes.\n- Set ``min_ledger_time_abs`` or ``min_ledger_time_rel`` if the duration of command interpretation and transmission is likely to take a long time relative to the tolerance interval set by the ledger.\n- In some corner cases, the participant node may be unable to determine a suitable Ledger Time by itself. If you get an error that no Ledger Time could be found, check whether you have contention on any contract referenced by your command or whether the referenced contracts are sensitive to small changes of ``getTime``."
  },
  {
    "id" : "e6ce6f3c-8f29-4292-8841-027988a11abb",
    "prId" : 7088,
    "comments" : [
      {
        "id" : "ea905269-915e-4a4c-beb4-a8a83906b401",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Interesting! Are \"artifact\" and \"artefact\" just the American and British spelling of the same word or do they actually mean slightly different things? Also, why is the \"i\" in \"artifact\" not pronounced like the \"i\" in \"anti\"? Given how \"artifact\" is pronounced, shouldn't it be spelled \"artefact\"? (I think I'll nominate this pair of words for our next language team meeting's section \"Hard word of the week\" 😄)",
        "createdAt" : "2020-08-11T17:39:36Z",
        "updatedAt" : "2020-08-11T17:39:36Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d10b41ec-91a8-4cd1-a823-8e67cde21a8a",
        "parentId" : "ea905269-915e-4a4c-beb4-a8a83906b401",
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "yes, it's just US vs UK spelling. We try to consistently use US spelling.",
        "createdAt" : "2020-08-12T07:20:29Z",
        "updatedAt" : "2020-08-12T07:20:29Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "19af40e5553df37b8800f6de2254ac750c240585",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +50,54 @@in the root of the project. This is the most simple DAML ledger implementation. Once your\napplication matures and becomes ready for production, the ``daml deploy`` command helps you deploy\nyour frontend and DAML artifacts of your project to a production ledger. See :ref:`Deploying to DAML\nLedgers <deploy-ref_overview>` for an in depth manual for specific ledgers.\n"
  },
  {
    "id" : "c6118f19-41df-4964-8d7c-4bff837585a2",
    "prId" : 4795,
    "comments" : [
      {
        "id" : "20ed6868-516f-406f-99ff-c0d0c4d21f3f",
        "parentId" : null,
        "author" : {
          "login" : "nemanja-da",
          "name" : "Nemanja",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56260209?u=23eb68502e88fcc2fb3821623951562c3bea45e8&v=4"
        },
        "body" : "In the architecture image \"External Service Provider\" is crossed with an arrow. Would break the text so that it's not crossed\r\n",
        "createdAt" : "2020-03-04T15:18:26Z",
        "updatedAt" : "2020-03-09T10:44:34Z",
        "lastEditedBy" : {
          "login" : "nemanja-da",
          "name" : "Nemanja",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56260209?u=23eb68502e88fcc2fb3821623951562c3bea45e8&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "51d415a3-42ad-4e59-93af-bf66e95a3d69",
        "parentId" : "20ed6868-516f-406f-99ff-c0d0c4d21f3f",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "fixed by moving the arrow origin one layer outside.",
        "createdAt" : "2020-03-04T17:13:07Z",
        "updatedAt" : "2020-03-09T10:44:34Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "02d527515d02a9fb59bb3a1652810deed56f9edf",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +7,11 @@This section describes our recommended design of a full-stack DAML application.\n\n.. image:: ./recommended_architecture.svg\n\nThe above image shows the recommended architecture. Of course there are many ways how you can change"
  },
  {
    "id" : "f463aaf2-a60d-41be-bb73-12f15b2c0126",
    "prId" : 4795,
    "comments" : [
      {
        "id" : "c10e9e3e-a9c5-415c-979b-c010808db72f",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Maybe worth pointing out that it’s not just a demo application but also a template for building your own apps.\r\nEDIT: I see that you do this below but I would move it here to the beginning ,something like a “small but fully functional demo application intended to be used as a starting point for your own applications”",
        "createdAt" : "2020-03-04T19:45:01Z",
        "updatedAt" : "2020-03-09T10:44:34Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "48ca6062-6880-4593-a517-6c9d003fe7b1",
        "parentId" : "c10e9e3e-a9c5-415c-979b-c010808db72f",
        "author" : {
          "login" : "nemanja-da",
          "name" : "Nemanja",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56260209?u=23eb68502e88fcc2fb3821623951562c3bea45e8&v=4"
        },
        "body" : "Some more options:\r\n- is a fully functional demo application that provides the necessary skeleton for your own project.\r\n- is a fully functional demo application that provides the necessary code base for your own project",
        "createdAt" : "2020-03-05T07:24:32Z",
        "updatedAt" : "2020-03-09T10:44:34Z",
        "lastEditedBy" : {
          "login" : "nemanja-da",
          "name" : "Nemanja",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56260209?u=23eb68502e88fcc2fb3821623951562c3bea45e8&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0c10d9ca-8102-4374-a37f-52e0b59335fd",
        "parentId" : "c10e9e3e-a9c5-415c-979b-c010808db72f",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "ok, I changed it in this spirit.",
        "createdAt" : "2020-03-05T15:08:33Z",
        "updatedAt" : "2020-03-09T10:44:34Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "02d527515d02a9fb59bb3a1652810deed56f9edf",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +20,24 @@  git clone https://github.com/digital-asset/create-daml-app\n\n``create-daml-app`` is a small, but fully functional demo application implementing the recommended\narchitecture, providing you with an excellent starting point for your own application. It showcases\n"
  },
  {
    "id" : "043b4a5a-926d-49dc-b5c2-c01b2f6cac1a",
    "prId" : 4795,
    "comments" : [
      {
        "id" : "0fcb76d1-4a7c-4c83-abe8-27511dae21f8",
        "parentId" : null,
        "author" : {
          "login" : "nemanja-da",
          "name" : "Nemanja",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56260209?u=23eb68502e88fcc2fb3821623951562c3bea45e8&v=4"
        },
        "body" : "Maybe point to the \"Authentication\" section on this page? I think it would work better than pointing directly to the authentication page itself",
        "createdAt" : "2020-03-05T07:35:30Z",
        "updatedAt" : "2020-03-09T10:44:34Z",
        "lastEditedBy" : {
          "login" : "nemanja-da",
          "name" : "Nemanja",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56260209?u=23eb68502e88fcc2fb3821623951562c3bea45e8&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "638efadc-4e11-4d95-abf8-4dce2f2ec984",
        "parentId" : "0fcb76d1-4a7c-4c83-abe8-27511dae21f8",
        "author" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "body" : "not sure if I find a link just pointing to a paragraph within the same page too useful. I find it almost more annoying to read because I have to check where the link is going.",
        "createdAt" : "2020-03-05T15:21:53Z",
        "updatedAt" : "2020-03-09T10:44:34Z",
        "lastEditedBy" : {
          "login" : "robin-da",
          "name" : "Robin Krom",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/14074936?u=1b47fdbdfd82ea534219fc1b94d646873c56a7d7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "02d527515d02a9fb59bb3a1652810deed56f9edf",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +25,29 @@- using DAML React libraries\n- quick iteration against the :ref:`DAML Ledger Sandbox <sandbox-manual>`.\n- authentication\n- deploying your application in the cloud as a Docker container\n"
  },
  {
    "id" : "b2da9d05-675b-49c0-872a-c08c5f36995a",
    "prId" : 2505,
    "comments" : [
      {
        "id" : "77acb939-3fe3-4ad5-a26f-4c66b887d0c0",
        "parentId" : null,
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "I don't think you need a new paragraph for each sentence in this section. I'd structure it in three paragraphs:\r\n\r\n1. DAML Contracts + DAML Ledger Model encapsulate the bulk of your business logic\r\n2. Mocking the Ledger API pretty much requires you to reimplement a full DAML Ledger so don't.\r\n3. The Sandbox is your friend. \r\n\r\nIn 3. you could explain options for getting the ledger into a desired state:\r\n  - Write a scenario\r\n  - Write a special ledger initialisation workflow and automation\r\n  - Use a Postgres sandbox with initial state taken from a backed up database.",
        "createdAt" : "2019-08-13T11:07:26Z",
        "updatedAt" : "2019-08-14T11:53:27Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0f879838-99b4-4935-a5e8-dd305a82ab32",
        "parentId" : "77acb939-3fe3-4ad5-a26f-4c66b887d0c0",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I would strongly discourage writing a scenario because of the [limitations of using scenarios with the suggested approach](https://github.com/digital-asset/daml/pull/2505/files/fe13e50529b6718a11b35d913703b2df7fb60959#r313346380).",
        "createdAt" : "2019-08-13T11:36:08Z",
        "updatedAt" : "2019-08-14T11:53:27Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0c3064bb-2ab8-480a-a777-5d01d8f42a22",
        "parentId" : "77acb939-3fe3-4ad5-a26f-4c66b887d0c0",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Where does the Postgres backup idea come from? It's creative but I would not recommend it unless there are some established good practices around it. If there are, please share them with me so that I can add them.",
        "createdAt" : "2019-08-13T11:42:19Z",
        "updatedAt" : "2019-08-14T11:53:27Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e4d4abf9-694b-41a5-a2a3-3f794c675f2c",
        "parentId" : "77acb939-3fe3-4ad5-a26f-4c66b887d0c0",
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "Just from general brainstorming around testing. Defining, and loading the desired ledger state is one of the more cumbersome parts currently so it's on my radar as something to offer solutions for. \r\n\r\nAdmittedly, I've never actually tried it. ",
        "createdAt" : "2019-08-13T11:54:05Z",
        "updatedAt" : "2019-08-14T11:53:27Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "319dad7e7f104cce9f6556e5c93247d4656a7556",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +252,256 @@This chapter focuses on providing portable approaches and techniques to perform integration testing between your components and an actual running ledger.\n\nTest the business logic with a ledger\n*************************************\n"
  },
  {
    "id" : "e3696d2d-3948-47a0-a938-016ec8117039",
    "prId" : 2505,
    "comments" : [
      {
        "id" : "c3ec3097-866f-46ee-904b-db08b5725113",
        "parentId" : null,
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "This is too much text for the point you are making. Maybe combine with the next section and just add a single paragraph there to motivate sharing the ledger.",
        "createdAt" : "2019-08-13T11:11:46Z",
        "updatedAt" : "2019-08-14T11:53:27Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b9d9665e-70c6-4b9c-994e-661df60b566d",
        "parentId" : "c3ec3097-866f-46ee-904b-db08b5725113",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/2505/commits/319dad7e7f104cce9f6556e5c93247d4656a7556",
        "createdAt" : "2019-08-14T11:54:16Z",
        "updatedAt" : "2019-08-14T11:54:17Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "319dad7e7f104cce9f6556e5c93247d4656a7556",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +261,265 @@This is usually achieved by running a ledger as part of the test process and run several tests against it, possibly coordinated by a test framework. Since the in-memory sandbox shipped as part of the SDK is a full-fledged implementation of a DAML ledger, it's usually the tool of choice for these tests. Please note that this does not replace acceptance tests with the actual ledger implementation that your application aims to use in production. Whatever your choice is, sharing a single ledger to run several tests is a suggested best practice.\n\nShare the ledger\n****************\n"
  }
]