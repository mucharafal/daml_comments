[
  {
    "id" : "6c0fc937-94dd-46b8-9bda-c44860e53388",
    "prId" : 7183,
    "comments" : [
      {
        "id" : "5b897792-5848-4e25-8a48-9a3e82fc2df9",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I think a better solution for this is to make a template that you can call via `createAndExercise` that provides a choice that calls `Fetch`. That provides a much more direct solution for translating arbitrary `Update` expressions passed to `submit` in scenarios to DAML Script.",
        "createdAt" : "2020-08-20T06:45:35Z",
        "updatedAt" : "2020-08-28T15:44:50Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c52a5daa-64b6-4a24-9c66-01fa1299380b",
        "parentId" : "5b897792-5848-4e25-8a48-9a3e82fc2df9",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Initially I went with the `Fetch` approach. I thought it was a bit odd to have to define an extra template just for `fetch` when the functionality already exists in `query`, but I'm happy to change it back. ",
        "createdAt" : "2020-08-20T08:18:23Z",
        "updatedAt" : "2020-08-28T15:44:50Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d69f146a-e9db-4fd7-a144-01127ef90dfc",
        "parentId" : "5b897792-5848-4e25-8a48-9a3e82fc2df9",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "The reason why I prefer the `Fetch` approach is that it works for arbitrary `Update` expressions, e.g., if you look at some of the monadic `Update` statements that you converted you got lucky that they were exactly `createAndExercise` but if they are something else, defining a choice for this works for everything whether it be `fetch`, monadic updates or anything else.\r\n\r\nThere is also a difference in that `query` does the filtering on the client side while `fetch` does it on the ledger. ",
        "createdAt" : "2020-08-20T08:22:15Z",
        "updatedAt" : "2020-08-28T15:44:50Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b224c872d43d188f86f321d9f3060fc84506ea6b",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,15 @@\n+{-# LANGUAGE ApplicativeDo #-}\n+\n+module Tests.QueryIou where\n+\n+import Daml.Script\n+\n+import Iou\n+\n+queryIou : Party -> ContractId Iou -> Script (Optional Iou)"
  }
]