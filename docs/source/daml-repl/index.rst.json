[
  {
    "id" : "62c46eed-056f-4892-9df4-e9b9e270cb91",
    "prId" : 6865,
    "comments" : [
      {
        "id" : "f4b700aa-f2f7-4903-b23d-e6221b6358f5",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n```suggestion\r\nYou can use the commands ``:module + ModA ModB …`` to import additional modules and ``:module - ModA ModB …`` to remove previously added imports. Modules can also be imported using regular import declarations instead of ``module +``.\r\n```",
        "createdAt" : "2020-07-27T08:30:26Z",
        "updatedAt" : "2020-07-27T08:37:18Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6cab735d361bea852ebf35c1964c6db6922cc870",
    "line" : null,
    "diffHunk" : "@@ -129,7 +132,9 @@ In the prompt, all modules from DALFs specified in ``--import`` are\n imported automatically. In addition to that, the ``DAML.Script``\n module is also imported and gives you access to the DAML Script API.\n \n-You can use import declarations at the prompt to import additional modules.\n+You can use the commands ``:module +`` and ``:module -`` to control which\n+modules are imported. You can also use import declarations at the prompt to\n+import additional modules."
  },
  {
    "id" : "82b2cf02-4e8c-429e-b61e-94a512507142",
    "prId" : 5087,
    "comments" : [
      {
        "id" : "f44d265d-9b52-4df2-a534-950b29edad51",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "`x` is no longer defined in the beginning of the sentence.",
        "createdAt" : "2020-03-19T15:02:17Z",
        "updatedAt" : "2020-03-19T15:15:13Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "17ed9d1b-9671-4406-8ae7-62dc6d85e67b",
        "parentId" : "f44d265d-9b52-4df2-a534-950b29edad51",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Good catch, fixed!",
        "createdAt" : "2020-03-19T15:15:50Z",
        "updatedAt" : "2020-03-19T15:15:51Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c1174419461c8615e167a4ef5a85c77f259d94ee",
    "line" : null,
    "diffHunk" : "@@ -60,11 +60,16 @@ two forms:\n 1. An expression ``expr`` of type ``Script a`` for some type ``a``. This\n    will execute the script ignoring the result.\n \n-2. A binding of the form ``x <- expr`` where ``x`` is a variable name\n-   and ``expr`` is an expression of type ``Script a``. This will\n-   execute the script and bind the result to the variable ``x``. You\n+2. A binding of the form ``pat <- expr`` where ``pat`` is pattern, e.g.,\n+   a variable name to bind the result to\n+   and ``expr`` is an expression of type ``Script a``.\n+   This will execute the script and bind the result to the variable ``x``. You"
  },
  {
    "id" : "2d04730c-615a-4792-bbb5-f1a6606df820",
    "prId" : 4678,
    "comments" : [
      {
        "id" : "86bd690c-5846-4de1-8589-f24324a71541",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "```suggestion\r\nWe welcome feedback about the DAML repl on\r\n```\r\nOr is it meant to be DAML script?",
        "createdAt" : "2020-02-25T10:07:47Z",
        "updatedAt" : "2020-02-25T10:34:16Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "edd9b299-b58d-4387-9d75-a56ae4df2aa5",
        "parentId" : "86bd690c-5846-4de1-8589-f24324a71541",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Thanks, fixed",
        "createdAt" : "2020-02-25T10:39:35Z",
        "updatedAt" : "2020-02-25T10:39:35Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b21c5b7de3be97ac61e682ccdccf0039435ea754",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,121 @@\n+.. Copyright (c) 2020 The DAML Authors. All rights reserved.\n+.. SPDX-License-Identifier: Apache-2.0\n+\n+DAML Repl\n+###########\n+\n+**WARNING:** DAML Repl is an experimental feature that is actively\n+being designed and is *subject to breaking changes*.\n+We welcome feedback about DAML script on"
  },
  {
    "id" : "58ca8d55-0d3f-43e9-b5cc-421614ba3510",
    "prId" : 4678,
    "comments" : [
      {
        "id" : "42b87be5-0726-43b8-ac0f-ef6f219999e1",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "```suggestion\r\n   daml repl --ledger-host=localhost --ledger-port=6865 .daml/dist/script-example-0.0.1.dar\r\n```\r\nShouldn't this be the same DAR as above?",
        "createdAt" : "2020-02-25T10:21:07Z",
        "updatedAt" : "2020-02-25T10:34:16Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "55068f7b-482f-4641-8534-7b682eb77b73",
        "parentId" : "42b87be5-0726-43b8-ac0f-ef6f219999e1",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Good catch!",
        "createdAt" : "2020-02-25T10:31:05Z",
        "updatedAt" : "2020-02-25T10:34:16Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b21c5b7de3be97ac61e682ccdccf0039435ea754",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,121 @@\n+.. Copyright (c) 2020 The DAML Authors. All rights reserved.\n+.. SPDX-License-Identifier: Apache-2.0\n+\n+DAML Repl\n+###########\n+\n+**WARNING:** DAML Repl is an experimental feature that is actively\n+being designed and is *subject to breaking changes*.\n+We welcome feedback about DAML script on\n+`our issue tracker <https://github.com/digital-asset/daml/issues/new>`_\n+or `on Slack <https://hub.daml.com/slack/>`_.\n+\n+DAML Repl allows you to use the :doc:`/daml-script/index` API\n+interactively. This is useful for debugging and for interactively\n+inspecting and manipulating a ledger.\n+\n+Usage\n+=====\n+\n+First create a new project based on the ``script-example``\n+template. Take a look at the documentation for\n+:doc:`/daml-script/index` for details on this template.\n+\n+.. code-block:: sh\n+\n+   daml new script-example script-example # create a project called script-example based on the template\n+   cd script-example # switch to the new project\n+\n+Now, build the project and start :doc:`/tools/sandbox`, the in-memory\n+ledger included in the DAML SDK. Note that we are starting Sandbox in\n+wallclock mode. Static time is not supported in ``daml repl``.\n+\n+.. code-block:: sh\n+\n+   daml build\n+   daml sandbox --wall-clock-time --port=6865 .daml/dist/script-example-0.0.1.dar\n+\n+Now that the ledger has been started, you can launch the repl in a\n+separate terminal using the following command.\n+\n+.. code-block:: sh\n+\n+   daml repl --ledger-host=localhost --ledger-port=6865 .daml/dist/repl-playground-0.0.1.dar"
  }
]