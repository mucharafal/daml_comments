[
  {
    "id" : "ae70a7af-18e0-4871-93c2-1df70c9c81ec",
    "prId" : 1112,
    "comments" : [
      {
        "id" : "d33b92d4-7164-4a2b-8b0d-8e6574111156",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Shouldn't we say that we require authorization from at least one of the key maintainers?",
        "createdAt" : "2019-05-15T11:23:28Z",
        "updatedAt" : "2019-05-16T15:46:35Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "25c156ef290597fc1251dafd7bcb3842902f98cc",
    "line" : 58,
    "diffHunk" : "@@ -87,10 +101,37 @@ fetch\n \n    fetchedContract <- fetch IdOfContract\n \n-- ``fetch`` keyword.\n+- ``fetch`` function.\n - Fetches the contract instance with that ID. Usually used with a bound variable, as in the example above.\n - Often used to check the details of a contract before exercising a choice on that contract. Also used when referring to some reference data.\n-- ``fetch cid`` fails if ``cid`` is not the contract id of an active contract, and thus causes the entire transaction to abort. \n+- ``fetch cid`` fails if ``cid`` is not the contract id of an active contract, and thus causes the entire transaction to abort.\n+- The submitting party must be an observer or signatory on the contract, otherwise ``fetch`` fails, and similarly causes the entire transaction to abort.\n+\n+.. _daml-ref-fetch-by-key:\n+\n+fetchByKey\n+**********\n+\n+.. code-block:: daml\n+\n+   fetchedContract <- fetchByKey @ContractType contractKey\n+\n+- ``fetchByKey`` function.\n+- The same as ``fetch``, but fetches the contract instance with that :doc:`contract key </daml/reference/contract-keys>`, instead of the contract ID."
  },
  {
    "id" : "dcddd1f0-6f0e-44da-8d33-37dd022b71a7",
    "prId" : 1112,
    "comments" : [
      {
        "id" : "784b4c9b-140c-45f9-8395-3082c6725e8d",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Shouldn't we add `exerciseByKey` here as well? It needs authorization from all the controllers of the choice and at least one of the maintainers of the key.",
        "createdAt" : "2019-05-15T11:24:24Z",
        "updatedAt" : "2019-05-16T15:46:35Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b76850d5-2cec-4fdf-9458-b4b861752d09",
        "parentId" : "784b4c9b-140c-45f9-8395-3082c6725e8d",
        "author" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "body" : "I have, it's above, from line 83.",
        "createdAt" : "2019-05-15T12:04:12Z",
        "updatedAt" : "2019-05-16T15:46:35Z",
        "lastEditedBy" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "25c156ef290597fc1251dafd7bcb3842902f98cc",
    "line" : 74,
    "diffHunk" : "@@ -87,10 +101,37 @@ fetch\n \n    fetchedContract <- fetch IdOfContract\n \n-- ``fetch`` keyword.\n+- ``fetch`` function.\n - Fetches the contract instance with that ID. Usually used with a bound variable, as in the example above.\n - Often used to check the details of a contract before exercising a choice on that contract. Also used when referring to some reference data.\n-- ``fetch cid`` fails if ``cid`` is not the contract id of an active contract, and thus causes the entire transaction to abort. \n+- ``fetch cid`` fails if ``cid`` is not the contract id of an active contract, and thus causes the entire transaction to abort.\n+- The submitting party must be an observer or signatory on the contract, otherwise ``fetch`` fails, and similarly causes the entire transaction to abort.\n+\n+.. _daml-ref-fetch-by-key:\n+\n+fetchByKey\n+**********\n+\n+.. code-block:: daml\n+\n+   fetchedContract <- fetchByKey @ContractType contractKey\n+\n+- ``fetchByKey`` function.\n+- The same as ``fetch``, but fetches the contract instance with that :doc:`contract key </daml/reference/contract-keys>`, instead of the contract ID.\n+\n+.. _daml-ref-lookup-by-key:\n+\n+lookupByKey\n+***********\n+\n+.. code-block:: daml\n+\n+   fetchedContractId <- lookupByKey @ContractType contractKey\n+\n+- ``lookupByKey`` function.\n+- Use this to confirm that a contract with the given :doc:`contract key </daml/reference/contract-keys>` exists.\n+- If it does exist, ``lookupByKey`` returns the ``ContractId`` of the contract; otherwise, it returns ``None``. If it returns ``None``, this guarantees that no contract has this key. This does **not** cause the transaction to abort.\n+- **All** of the maintainers of the key must authorize the lookup (by either being signatories or by submitting the command to lookup), otherwise this will fail.\n "
  }
]