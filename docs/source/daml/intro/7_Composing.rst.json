[
  {
    "id" : "611438ee-08e2-43cf-b70e-4df7874feb20",
    "prId" : 7505,
    "comments" : [
      {
        "id" : "2e2efc79-57c8-43f9-9859-be23f544e52c",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Side node: We should probably decide on whether we want to call this requester or committer. Currently the ledger model uses requester but our code, DAML studio and other places use committer.",
        "createdAt" : "2020-09-29T07:20:53Z",
        "updatedAt" : "2020-09-29T07:36:13Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a337f973-82c8-4153-9cb9-fdee83d751f3",
        "parentId" : "2e2efc79-57c8-43f9-9859-be23f544e52c",
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "submitter and committer have different meanings elsewhere:\r\n- Submitter being the submitting participant\r\n- Committer being special nodes in some topologies\r\nI've therefore gone all in on requester.",
        "createdAt" : "2020-09-29T07:28:56Z",
        "updatedAt" : "2020-09-29T07:36:13Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "77887f07-8a55-4491-9d94-8aae793d566e",
        "parentId" : "2e2efc79-57c8-43f9-9859-be23f544e52c",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Then we seem to use `committer` wrong in quite a lot of cases. E.g., there is an error message in DAML Studio that something is not visible to the committer which refers to the party submiting the commands.",
        "createdAt" : "2020-09-29T07:30:36Z",
        "updatedAt" : "2020-09-29T07:36:13Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "31d7e8ba8b9d4ac2cf7e14d94f7e500d9f067699",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +213,217 @@\nCommand Submission\n  A user submits a list of Commands via the Ledger API of a Participant Node, acting as a `Party` hosted on that Node. That party is called the requester.\nInterpretation\n  Each Command corresponds to one or more Actions. During this step, the ``Update`` corresponding to each Action is evaluated in the context of the ledger to calculate all consequences, including transitive ones (consequences of consequences, etc.). The result of this is a complete Transaction. Together with its requestor, this is also known as a Commit."
  },
  {
    "id" : "a9d801e2-db3f-42e2-a357-94f24a8e52ab",
    "prId" : 7505,
    "comments" : [
      {
        "id" : "64a0e00f-d602-4f0f-afa5-add308e18e77",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This sounds like you call submission only the part where the participant sends it? This is slightly confusing since you call a Submit endpoint when you are sending it _to_ the participant as well.\r\n",
        "createdAt" : "2020-09-29T07:21:18Z",
        "updatedAt" : "2020-09-29T07:36:13Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "15024125-c001-4fad-849d-19c77c9d0e4a",
        "parentId" : "64a0e00f-d602-4f0f-afa5-add308e18e77",
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "It's true, the service is called `CommandSubmission`, and the requests things like `SubmitAndWait`. We are overall not that consistent in our terminology. Maybe I'll call this transaction submission just to be super clear.",
        "createdAt" : "2020-09-29T07:31:21Z",
        "updatedAt" : "2020-09-29T07:36:13Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "31d7e8ba8b9d4ac2cf7e14d94f7e500d9f067699",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +219,223 @@  On ledgers with strong privacy, projections (see :ref:`privacy`) for all involved parties are created. This is also called *projecting*.\nTransaction Submission\n  The Transaction/Commit is submitted to the network.\nValidation\n  The Transaction/Commit is validated by the network. Who exactly validates can differ from implementation to implementation. Validation also involves scheduling and collision detection, ensuring that the transaction has a well-defined place in the (partial) ordering of Commits, and no double spends occur."
  },
  {
    "id" : "c69b1425-70b8-4e4b-b442-9c06a163a1d9",
    "prId" : 7264,
    "comments" : [
      {
        "id" : "1f882548-4d7d-4ac1-864d-d3ff88fec6e2",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Should this also mention `ApplicativeDo`?",
        "createdAt" : "2020-09-01T08:26:34Z",
        "updatedAt" : "2020-09-08T11:42:48Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "90b7bef3-4910-46cd-a7f5-b2088815f865",
        "parentId" : "1f882548-4d7d-4ac1-864d-d3ff88fec6e2",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Good idea, I’ll add something.",
        "createdAt" : "2020-09-01T10:35:58Z",
        "updatedAt" : "2020-09-08T11:42:48Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "db2ae38b-a871-4e3f-89c6-cc76480ec613",
        "parentId" : "1f882548-4d7d-4ac1-864d-d3ff88fec6e2",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "We don’t actually use it in this example after the changes. It is mentioned in a preceding section so I’m omitting it here.",
        "createdAt" : "2020-09-01T11:33:55Z",
        "updatedAt" : "2020-09-08T11:42:48Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "edfcefed5831fd27018f4cb3fdeb4a98f8ea266a",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +88,92 @@.. code-block:: daml\n\n  import Daml.Script\n\nProject overview"
  },
  {
    "id" : "ae36945e-1ed0-4aef-9dbe-8d1dc400ffc3",
    "prId" : 1717,
    "comments" : [
      {
        "id" : "bd634f1c-0ad1-4274-a26f-20653931b61b",
        "parentId" : null,
        "author" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "body" : "What does that mean? (I don't think you've touched on anything that would explain this so far)",
        "createdAt" : "2019-06-17T14:48:57Z",
        "updatedAt" : "2019-06-18T09:05:02Z",
        "lastEditedBy" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a42aec03-b397-438b-9863-0f761a22043d",
        "parentId" : "bd634f1c-0ad1-4274-a26f-20653931b61b",
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "What does what mean? I say what \"blinded\" means in item 3.",
        "createdAt" : "2019-06-18T08:31:25Z",
        "updatedAt" : "2019-06-18T09:05:02Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "64d0389f2c6ccd0a16f369739cc879b850f52d78",
    "line" : 204,
    "diffHunk" : "@@ -1,1 +202,206 @@2. The transaction is interpreted, meaning the ``Update`` corresponding to each action is evaluated in the context of the ledger to calculate all consequeces, including transitive ones (consequences of consequences, etc).\n3. The views of the transaction that parties get to see (see :ref:`privacy`) are calculated in a process called *blinding*, or *projecting*.\n4. The blinded views are distributed to the parties.\n5. The transaction is *validated* based on the blinded views and a consensus protocol depending on the underlying infrastructure.\n6. If validation succeeds, the transaction is *committed*."
  }
]