[
  {
    "id" : "82049812-d435-4865-9deb-282ad68d9dd9",
    "prId" : 7507,
    "comments" : [
      {
        "id" : "c4e4cde6-4b1c-41aa-8ebc-9edd8e48aac1",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Maybe worth mentioning that `when` is also control flow in the sense that it short circuits.",
        "createdAt" : "2020-09-29T08:24:42Z",
        "updatedAt" : "2020-09-29T17:18:09Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0c09996c-6c80-41b7-827f-b522a10541d3",
        "parentId" : "c4e4cde6-4b1c-41aa-8ebc-9edd8e48aac1",
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "It only short circuits Action execution, though, not evaluation.",
        "createdAt" : "2020-09-29T09:50:45Z",
        "updatedAt" : "2020-09-29T17:18:09Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0886a4cc-a7f8-4916-b918-7ebc77a8d36f",
        "parentId" : "c4e4cde6-4b1c-41aa-8ebc-9edd8e48aac1",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "it does short circuit evaluation. Itâ€™s hacked up in the compiler",
        "createdAt" : "2020-09-29T09:53:47Z",
        "updatedAt" : "2020-09-29T17:18:09Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cfd04f6b-bcc4-48ea-8f27-d52e62b09cc5",
        "parentId" : "c4e4cde6-4b1c-41aa-8ebc-9edd8e48aac1",
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "I had no idea!",
        "createdAt" : "2020-09-29T14:15:28Z",
        "updatedAt" : "2020-09-29T17:18:09Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "56781b9351d93757f344927f4f2fc3ac98edb262",
    "line" : 333,
    "diffHunk" : "@@ -1,1 +331,335 @@  :end-before: -- CUSTOM_WHEN_END\n\nNote that we still need the ``else`` clause of the same type ``()``. This pattern is so common, it's encapsulated in the standard library function ``DA.Action.when : (Applicative f) => Bool -> f () -> f ()``. \n\n.. literalinclude:: daml/daml-intro-9/daml/Main.daml"
  }
]