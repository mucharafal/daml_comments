[
  {
    "id" : "a0aa1b95-d1d8-4dcd-960e-0c99700a2f7e",
    "prId" : 7133,
    "comments" : [
      {
        "id" : "cd574881-4ea9-4ea8-97a7-d58d3f2a4347",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Pretty sure you need more stars here.",
        "createdAt" : "2020-08-18T07:41:25Z",
        "updatedAt" : "2020-08-25T17:07:06Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2af64453c630fe4f2fd7ceb6dc355343dcac5a66",
    "line" : 332,
    "diffHunk" : "@@ -1,1 +825,829 @@The response is the same as for the POST method below.\n\nGet all Active Contracts Matching a Given Query\n***********************************************\n"
  },
  {
    "id" : "0ab28b9f-ef51-4bfa-952b-3a226587a527",
    "prId" : 7133,
    "comments" : [
      {
        "id" : "55c1fa3a-455c-4440-9d27-ddfe2032ba13",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Does this actually render as code? I thought two newlines mean it no longer belongs to the code block.",
        "createdAt" : "2020-08-24T11:51:51Z",
        "updatedAt" : "2020-08-25T17:07:07Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0bc0c95f-2f78-458b-b16c-fcdf2c6f073f",
        "parentId" : "55c1fa3a-455c-4440-9d27-ddfe2032ba13",
        "author" : {
          "login" : "anthonylusardi-da",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/59614480?u=a1e38232a15470bcbf95f10bf7293011710be3e8&v=4"
        },
        "body" : "Yes all is rendering correctly, there's 1 newline after the `code-block` delegation and two newlines separating the inline code block that displays the json-encoded token.\r\n",
        "createdAt" : "2020-08-24T16:10:14Z",
        "updatedAt" : "2020-08-25T17:07:07Z",
        "lastEditedBy" : {
          "login" : "anthonylusardi-da",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/59614480?u=a1e38232a15470bcbf95f10bf7293011710be3e8&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2af64453c630fe4f2fd7ceb6dc355343dcac5a66",
    "line" : 243,
    "diffHunk" : "@@ -1,1 +166,170 @@\n.. code-block:: none\n\n    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwczovL2RhbWwuY29tL2xlZGdlci1hcGkiOnsibGVkZ2VySWQiOiJNeUxlZGdlciIsImFwcGxpY2F0aW9uSWQiOiJIVFRQLUpTT04tQVBJLUdhdGV3YXkiLCJhY3RBcyI6WyJCb2IiXX19.0uPPZtM1AmKvnGixt_Qo53cMDcpnziCjKKiWLvMX2VM\n"
  },
  {
    "id" : "cdd22eb7-975d-44da-bca3-5e0d98780cbb",
    "prId" : 5660,
    "comments" : [
      {
        "id" : "b1049280-fe14-46eb-871e-96dc9e7d87a3",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I'm not sure if the reference to firesheep is appropriate. What do you think about a more neutral name like `--allow-tokens-without-tls`? I wouldn't be surprised if this breaks `create-daml-app` can you please test that it still works after this change, for instance by using `daml-sdk-head` and doing the first few steps of the getting started guide.",
        "createdAt" : "2020-04-23T14:45:40Z",
        "updatedAt" : "2020-04-27T20:37:42Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "62ad3134-8331-4b92-ad75-b1b52921d818",
        "parentId" : "b1049280-fe14-46eb-871e-96dc9e7d87a3",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "The current name comes from @garyverhaegen-da , how's this alternative?",
        "createdAt" : "2020-04-23T15:03:59Z",
        "updatedAt" : "2020-04-27T20:37:42Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "da2b10c5-f445-4b7f-b274-267acdb17e3c",
        "parentId" : "b1049280-fe14-46eb-871e-96dc9e7d87a3",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "I also do not think the firesheep reference is necessarily appropriate. I'm also slowly realizing there are a lot of people in the internet that may be too young to understand it ðŸ˜¢\r\n\r\nI do think it needs to be \"scary\", though. I like cURL's `--insecure`, but could see something more specific, like `--allow-insecure-tokens` or the like.\r\n\r\n",
        "createdAt" : "2020-04-23T15:33:07Z",
        "updatedAt" : "2020-04-27T20:37:42Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "abb72c0e-7293-4e57-8ec0-19983a1d8f97",
        "parentId" : "b1049280-fe14-46eb-871e-96dc9e7d87a3",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "> I'm also slowly realizing there are a lot of people in the internet that may be too young to understand it\r\n\r\nI seem to fall into that group :slightly_smiling_face: ",
        "createdAt" : "2020-04-23T15:34:50Z",
        "updatedAt" : "2020-04-27T20:37:42Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "923ec80b-54a4-426e-afae-c4940d065b7d",
        "parentId" : "b1049280-fe14-46eb-871e-96dc9e7d87a3",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "TIL I've been listening to Security Now for over 10 years.\r\n\r\n[Security Now, Episode #272: Firesheep](https://twit.tv/shows/security-now/episodes/272).",
        "createdAt" : "2020-04-23T15:38:20Z",
        "updatedAt" : "2020-04-27T20:37:42Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7617dcb0-a098-4e0d-8d7e-d23d47d5e2eb",
        "parentId" : "b1049280-fe14-46eb-871e-96dc9e7d87a3",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Changed to `--allow-insecure-tokens` in abb4034c5e6835fa794b209061e178da8b3954dd.",
        "createdAt" : "2020-04-27T20:38:59Z",
        "updatedAt" : "2020-04-27T20:39:00Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "185ea518a2b61c43eb373b611650bcf599b2e5ee",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +105,109 @@            Example: \"prefix=static,directory=./static-content\"\n      --allow-insecure-tokens\n            DEV MODE ONLY (not recommended for production). Allow connections without a reverse proxy providing HTTPS.\n      --access-token-file <value>\n            provide the path from which the access token will be read, required to interact with an authenticated ledger, no default"
  },
  {
    "id" : "0dde9234-2ea8-41ff-b72c-ca55f65845a2",
    "prId" : 5613,
    "comments" : [
      {
        "id" : "de0b27e1-7377-4f36-be8c-63de0032e5b6",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n- URL: ``/v1/packages/list``\r\n```\r\nOtherwise `/v1/packages` is a prefix of the two other packaging endpoints which always has potential for confusion.",
        "createdAt" : "2020-04-21T09:30:21Z",
        "updatedAt" : "2020-04-21T17:06:40Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3061bbaa-38b2-46cb-9978-e6e35613badf",
        "parentId" : "de0b27e1-7377-4f36-be8c-63de0032e5b6",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "https://restfulapi.net/resource-naming/\r\nsee `Never use CRUD function names in URIs`",
        "createdAt" : "2020-04-21T19:43:05Z",
        "updatedAt" : "2020-04-21T19:43:05Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "df0a5ae3b0ae4b91bca78266ae32c865a9e2fa97",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +1071,1075 @@============\n\n- URL: ``/v1/packages``\n- Method: ``GET``\n- Content: <EMPTY>"
  },
  {
    "id" : "30026116-1b78-421a-9369-db67a98a8e20",
    "prId" : 5456,
    "comments" : [
      {
        "id" : "ea4ce3e9-db25-4752-8845-dff16e0734e1",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I would merge this section and the one about empty responses and say here that the result might be an empty list if none of the parties is known.\r\n```suggestion\r\nResponse with Unknown Parties Warning\r\n```",
        "createdAt" : "2020-04-07T13:56:01Z",
        "updatedAt" : "2020-04-07T13:56:33Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "973dad8b65873fb44284364221d1463b0b8030e2",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +978,982 @@- ``isLocal`` -- true if party is hosted by the backing participant.\n\nNonempty Response with Unknown Parties Warning\n==============================================\n"
  },
  {
    "id" : "2f2175cd-92a0-4499-816c-9b5d87dcea6c",
    "prId" : 5454,
    "comments" : [
      {
        "id" : "9aa8cde9-9c79-4b90-8309-f2076f46812d",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Isn't it like this in RST?\r\n```suggestion\r\n            HTTP JSON API service port number. A port number of 0 will let the system pick an ephemeral port. Consider specifying ``--port-file`` option with port number 0.\r\n```",
        "createdAt" : "2020-04-07T09:18:50Z",
        "updatedAt" : "2020-04-08T16:28:33Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "64c359df-729b-4dbf-96c6-79a6b1d81f60",
        "parentId" : "9aa8cde9-9c79-4b90-8309-f2076f46812d",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "yes, it is like this in rst, but this is a copy/paste from `daml json-api --help`.",
        "createdAt" : "2020-04-07T13:54:52Z",
        "updatedAt" : "2020-04-08T16:28:33Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d9cec789b9965322dc5e0bca30fec585e45ff851",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +73,77 @@            IP address that HTTP JSON API service listens on. Defaults to 127.0.0.1.\n      --http-port <value>\n            HTTP JSON API service port number. A port number of 0 will let the system pick an ephemeral port. Consider specifying `--port-file` option with port number 0.\n      --port-file <value>\n            Optional unique file name where to write the allocated HTTP port number. If process terminates gracefully, this file will be deleted automatically. Used to inform clients in CI about which port HTTP JSON API listens on. Defaults to none, that is, no file gets created."
  },
  {
    "id" : "98021237-0de7-4c24-b9c3-05c2eb430716",
    "prId" : 5395,
    "comments" : [
      {
        "id" : "88a496b8-25b2-4bce-88b4-02591791ca8e",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I'm not convinced this is the right behaviour. I assume the intent is to bring it line with the `query` endpoint. However, parties are a runtime thing whereas templates are a compile time thing. Thus, asking for a list of templates that happens to be empty is very likely a programming error. In contrast, asking for a list of parties where none of them can be resolved seems like more usual business to me. Thus, changing the behaviour depending on whether at least one party could be resolved is the wrong thing to do in my opinion. (Asking for an empty list of parties should still be an error though since that's clearly a programming error.)",
        "createdAt" : "2020-04-06T11:36:17Z",
        "updatedAt" : "2020-04-06T11:36:17Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5d417312-8b0e-4991-a672-7b58b06e4d74",
        "parentId" : "88a496b8-25b2-4bce-88b4-02591791ca8e",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "@hurryabit yes, that is the intent.\r\n\r\nIn my experience if you are fetching something by ID (template ID or party ID) and there is no entity with that ID, -- this is an error. It is a common practice in RESTful APIs to return 40x status in this case.... we are not RESTful though....\r\n\r\nWe currently return an error only if all of the IDs do not exist. I think we should return an error, if at least one of the IDs does not exist, but I remember you had a strong opinion about non-existent template IDs.\r\n\r\nUp to you if you want to treat template IDs and party IDs differently, it is easy to change this error to OK(200) for the party lookup by ID.",
        "createdAt" : "2020-04-06T18:44:33Z",
        "updatedAt" : "2020-04-06T19:11:23Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d01ccd9c-af37-4647-ad03-e963a2aa47e7",
        "parentId" : "88a496b8-25b2-4bce-88b4-02591791ca8e",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "PR: #5456",
        "createdAt" : "2020-04-06T19:10:45Z",
        "updatedAt" : "2020-04-06T19:10:45Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a6c0705ce91a60c3ff16e10f07520b7ae462f835",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +1010,1014 @@    }\n\nBadRequest(400) Response with Unknown Parties Warning\n=====================================================\n"
  },
  {
    "id" : "9ea62611-ad3b-48c7-baa3-f87345c8d9d6",
    "prId" : 4754,
    "comments" : [
      {
        "id" : "cb760aa7-ef41-4a0e-ae5c-c22626b82b6c",
        "parentId" : null,
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "@hurryabit are you sure you want this? The original contract created and archived, we do not conflate here like we do in the streaming API.\r\n\r\n#4507 says:\r\n> Response format: exactly the resulting transaction tree you get from ledger-API in submit-and-wait, formatted exactly as for the exercise endpoint.",
        "createdAt" : "2020-02-28T19:13:21Z",
        "updatedAt" : "2020-03-02T17:35:31Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c39b4e98-5aef-4215-abce-2b03acd13e22",
        "parentId" : "cb760aa7-ef41-4a0e-ae5c-c22626b82b6c",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "When using the streaming API, one is more interested in getting \"actionable\" contracts. For `create-and-exercise` I think it can make sense to return the response as is.\r\nFor the response to a regular `exercise` command we don't do any conflation of transient contracts either.",
        "createdAt" : "2020-03-02T14:54:49Z",
        "updatedAt" : "2020-03-02T17:35:31Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "939c4dee-f11a-4a2e-a872-985c37bd4109",
        "parentId" : "cb760aa7-ef41-4a0e-ae5c-c22626b82b6c",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "all right... leaving it as is.",
        "createdAt" : "2020-03-02T15:21:36Z",
        "updatedAt" : "2020-03-02T17:35:31Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "333e40e1-6ca8-4fe6-8bfe-7d71fe24a43b",
        "parentId" : "cb760aa7-ef41-4a0e-ae5c-c22626b82b6c",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I prefer to _not_ conflate here. So, all good.",
        "createdAt" : "2020-03-04T15:53:07Z",
        "updatedAt" : "2020-03-04T15:54:31Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "37358a488d97c38be7a565409fb1d175d37a70b3",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +590,594 @@\n- ``created`` and ``archived`` events for the initial contract (``\"contractId\": \"#1:0\"``), which was created and archived right away when a consuming choice was exercised on it,\n- a ``created`` event for the contract that is the result of the choice exercise (``\"contractId\": \"#1:2\"``).\n\n- Content-Type: ``application/json``"
  },
  {
    "id" : "4a953d88-a7b1-4b5e-a880-239ef3b858d4",
    "prId" : 4680,
    "comments" : [
      {
        "id" : "fb8bddee-bda7-4a24-a800-8a9e6e7d4f2e",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "What happens if there are some known parties and some unknown parties? I expect that we only receive records for the known parties. We should consider adding a `warnings` field containing the unknown parties, but I'm fine doing this in a separate PR.",
        "createdAt" : "2020-02-25T09:20:37Z",
        "updatedAt" : "2020-02-26T14:39:52Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b8dd9e2f-b905-4609-8e16-7b56ea99ee46",
        "parentId" : "fb8bddee-bda7-4a24-a800-8a9e6e7d4f2e",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "~I will add warnings in the follow up PR~",
        "createdAt" : "2020-02-25T15:02:29Z",
        "updatedAt" : "2020-02-26T14:39:52Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7e8be252-b15d-4ac9-b437-12e68df6ab46",
        "parentId" : "fb8bddee-bda7-4a24-a800-8a9e6e7d4f2e",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "scratch the above it is a rather small change, easier to add it to this PR and update the docs once.",
        "createdAt" : "2020-02-25T16:43:57Z",
        "updatedAt" : "2020-02-26T14:39:52Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7f998162-85c1-4c72-b8bb-3cbe9651d34c",
        "parentId" : "fb8bddee-bda7-4a24-a800-8a9e6e7d4f2e",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "scratch the above it is a rather small change, easier to add it to this PR and update the docs once.",
        "createdAt" : "2020-02-25T16:44:09Z",
        "updatedAt" : "2020-02-26T14:39:52Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1c893cbb4ae4c432898f1636e3e8be6fbf07f824",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +855,859 @@    }\n\nPlease note that the order of the party objects in the response is not guaranteed to match the order of the passed party identifiers.\n\nWhere"
  },
  {
    "id" : "687ab267-dc42-47ee-832a-048627e9f4c4",
    "prId" : 4593,
    "comments" : [
      {
        "id" : "bd9aae61-df24-4055-8280-be179e3517dd",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Can we say something about the type of the offset? Is it always a string? Or shall we treat it as something opaque whose only purpose it to pass it to the next call of this endpoint?",
        "createdAt" : "2020-02-26T16:54:44Z",
        "updatedAt" : "2020-02-26T17:16:56Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c30be646-79d6-4cc8-9349-d200782c1313",
        "parentId" : "bd9aae61-df24-4055-8280-be179e3517dd",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "The previous paragraph mentions the rules for what it might be; do you think there is too much detail there?",
        "createdAt" : "2020-02-26T16:58:00Z",
        "updatedAt" : "2020-02-26T17:16:56Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4b58e809-afe3-4e4f-bd9e-3858fb2e46d0",
        "parentId" : "bd9aae61-df24-4055-8280-be179e3517dd",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Oh right\r\n> it may be `null` instead of a string.\r\n\r\nCan we guarantee that it's either a string or null? Or could it be something else? Particularly on other ledgers which can't represent the offset by a single number.",
        "createdAt" : "2020-02-26T17:00:16Z",
        "updatedAt" : "2020-02-26T17:16:56Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "53ab6e9d-9666-49b7-92b2-11ec05d6eb4f",
        "parentId" : "bd9aae61-df24-4055-8280-be179e3517dd",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Even for ledgers that want to use more structure, the ledger API requires them to string-encode it, and we merely pass-through for the purpose of #4509.\r\n\r\nhttps://github.com/digital-asset/daml/blob/4d734939c9490bd0cdfd5faf36351d1fcba12e73/ledger-api/grpc-definitions/com/digitalasset/ledger/api/v1/ledger_offset.proto#L14-L22",
        "createdAt" : "2020-02-26T17:10:57Z",
        "updatedAt" : "2020-02-26T17:16:56Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9a629a3f-027c-48bc-b9dc-46407428fff0",
        "parentId" : "bd9aae61-df24-4055-8280-be179e3517dd",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Then it makes sense. Thansl.",
        "createdAt" : "2020-02-26T18:20:17Z",
        "updatedAt" : "2020-02-26T18:20:17Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d8c3640f424750f2bb6655ae779d003b71b15bca",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +965,969 @@    {\n        \"events\": [],\n        \"offset\": \"2\"\n    }\n"
  },
  {
    "id" : "76b97e46-acc3-42bb-a99e-e587b0a6ecea",
    "prId" : 4436,
    "comments" : [
      {
        "id" : "78904b4d-8759-41dc-a2ca-0e666b8c4017",
        "parentId" : null,
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "you did not update the Where section that explains what `contracts` now `events` element is",
        "createdAt" : "2020-02-06T19:42:53Z",
        "updatedAt" : "2020-02-06T19:47:31Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "50b99bad-033d-45f7-82d5-0d9762842f35",
        "parentId" : "78904b4d-8759-41dc-a2ca-0e666b8c4017",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "a9afe39b5e",
        "createdAt" : "2020-02-06T19:47:37Z",
        "updatedAt" : "2020-02-06T19:47:37Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a9afe39b5e87a6e8baf6081a1af87ec1223dffcc",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +432,436 @@        \"result\": {\n            \"exerciseResult\": \"#201:1\",\n            \"events\": [\n                {\n                    \"archived\": {"
  },
  {
    "id" : "9487d72d-bbc4-44f5-b299-2b31ec0af228",
    "prId" : 4393,
    "comments" : [
      {
        "id" : "f28f29cf-d0a6-4227-a9b0-6e81835968e7",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "What happens if the list is empty? Do we also allow the format `{\"templateId\": ..., \"key\": ...}` if the list contains only one element, i.e., `N = 1`? We should try to be consistent with the other endpoints in this regard. If we're not, I'm fine with addressing this in a separate PR.",
        "createdAt" : "2020-02-05T19:28:48Z",
        "updatedAt" : "2020-02-06T18:05:46Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "62204f2d-1b96-4f05-9250-1ec1abb67910",
        "parentId" : "f28f29cf-d0a6-4227-a9b0-6e81835968e7",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "@hurryabit \r\n\r\n1. Empty list would cause an error: `result: Vector(TextMessage.Strict({\"error\":\"Cannot resolve any templateId from request: List(), unresolved templateIds: Set()\"}))`\r\n2. The request must be a list of pairs. If all templates fails resolution, we return error.\r\n\r\nI will create a ticket to address the consistency.",
        "createdAt" : "2020-02-05T20:29:21Z",
        "updatedAt" : "2020-02-06T18:05:46Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5de6dd7a-5265-41bc-bddd-793f03df00c8",
        "parentId" : "f28f29cf-d0a6-4227-a9b0-6e81835968e7",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "#4417 created to validate and address the consistency.",
        "createdAt" : "2020-02-05T20:38:26Z",
        "updatedAt" : "2020-02-06T18:05:46Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "95d525291dacf9c2f25712dee97c68fdb1666f50",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +961,965 @@        ...\n        {\"templateId\": \"<template ID N>\", \"key\": <key N>}\n    ]\n\nWhere:"
  },
  {
    "id" : "d0613695-9117-4ef5-8fd6-3bc23f10ab1b",
    "prId" : 4363,
    "comments" : [
      {
        "id" : "2730fd3b-387e-4a02-b848-93adc81acd11",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "@hurryabit Currently `\"matchedQueries\"` are always emitted as demonstrated in docs even if only one query is supplied; please let me know if this is undesirable.",
        "createdAt" : "2020-02-05T01:03:04Z",
        "updatedAt" : "2020-02-06T14:50:14Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9cc92f6a-29df-47ec-b4ca-53b67e238eb0",
        "parentId" : "2730fd3b-387e-4a02-b848-93adc81acd11",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I think this is perfectly fine. Ignoring a field is no hard work.",
        "createdAt" : "2020-02-05T09:21:59Z",
        "updatedAt" : "2020-02-06T14:50:14Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0eebf6edfa656f053fe4aa62ae2b225acfed08a5",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +813,817 @@            \"templateId\": \"b70bbfbc77a4790f66d4840cb19f657dd20848f5e2f64e39ad404a6cbd98cf75:Iou:Iou\"\n        },\n        \"matchedQueries\": [1, 2]\n    }]\n"
  },
  {
    "id" : "3b64d52b-8b1a-4b54-a8cc-bdf4589cfe56",
    "prId" : 4312,
    "comments" : [
      {
        "id" : "bd705fab-55cc-40c2-bd7d-cfdbcf809683",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I like documentation. Thanks.",
        "createdAt" : "2020-01-30T21:28:24Z",
        "updatedAt" : "2020-01-30T21:28:24Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "78599c17af9a135b4807e32f1657f935a368ec00",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +848,852 @@    }]\n\nIf any template IDs are found not to resolve, the first non-heartbeat\nelement of the stream will report them::\n"
  },
  {
    "id" : "228f3dc8-55a0-40fa-b3b7-903b591bf312",
    "prId" : 4173,
    "comments" : [
      {
        "id" : "a0d49dea-8d00-4d78-9226-c36803ac246d",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Haven't we renamed this to `payload`? If not, we should in order to make it consistent.",
        "createdAt" : "2020-01-23T09:39:48Z",
        "updatedAt" : "2020-01-23T19:01:40Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "67a5f424-8cc8-4f14-985d-e70d5cfb5089",
        "parentId" : "a0d49dea-8d00-4d78-9226-c36803ac246d",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "@hurryabit it is renamed only in the response. See #3826 :\r\n> I suggest we rename the argument field of the contracts you receive from the JSON API to payload.\r\n\r\nThis particular JSON is a create command, a request sent to JSON API.",
        "createdAt" : "2020-01-23T15:41:28Z",
        "updatedAt" : "2020-01-23T19:01:40Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cfc32384-9f1e-483b-b829-bcbb505d21d6",
        "parentId" : "a0d49dea-8d00-4d78-9226-c36803ac246d",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "if you want to rename `argument` to the `payload` in the requests, this should be addressed in #4189.",
        "createdAt" : "2020-01-23T15:57:57Z",
        "updatedAt" : "2020-01-23T19:01:40Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b8cf409e8cef5b8914ce1acd514a03c9c86e5086",
    "line" : 449,
    "diffHunk" : "@@ -1,1 +313,317 @@  + ``\"<module>:<entity>\"`` if contract template can be uniquely identified by it's module and entity name.\n\n- ``argument`` field contains contract fields as defined in the DAML template and formatted according to :doc:`lf-value-specification`.\n\n.. _create-response:"
  },
  {
    "id" : "9df42b60-2548-4e64-a22e-82ae1d930cad",
    "prId" : 4078,
    "comments" : [
      {
        "id" : "6cf8345e-7b4e-41bb-875b-97a7e901941d",
        "parentId" : null,
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "Right, archived events don't have the payload (template args) to apply the search filter to.\r\nShould we explain this in the doc, so we don't get asked why we don't filter out the \"phantom\" archived events?",
        "createdAt" : "2020-01-16T19:04:37Z",
        "updatedAt" : "2020-01-17T19:35:10Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d924efc5-52dc-4265-8f4f-dbe973f62f87",
        "parentId" : "6cf8345e-7b4e-41bb-875b-97a7e901941d",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "I've already explained this in a more abstract, interface-y sense; I hope anyone who cared enough about the implementation details beyond that would dig and find your comment.",
        "createdAt" : "2020-01-16T19:29:13Z",
        "updatedAt" : "2020-01-17T19:35:10Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "15ed1efe32a67f4760758a7431a61151e87a99ab",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +348,352 @@   the same results.\n\n3. You will almost certainly receive contract IDs in ``archived`` that\n   you never received a ``created`` for.  These are contracts that\n   query filtered out, but for which the server no longer is aware of"
  },
  {
    "id" : "24856f9d-df6c-423e-8434-27502a8fa25a",
    "prId" : 3936,
    "comments" : [
      {
        "id" : "6e3ef083-9e61-4fa0-8a9f-777b3fc893bc",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "This format differs from what you get from the `/commands/exercise` endpoint. Her you get something looking like\r\n```\r\n{\r\n  created: [C1, C2],\r\n  archived: [A1, A2]\r\n}\r\n```\r\nThere you'd instead get\r\n```\r\n[\r\n  {created: C1},\r\n  {created: C2},\r\n  {archived: A1},\r\n  {archived: A2}\r\n]\r\n```\r\nI'd prefer if the encoding is the same for both endpoints. Since the `/commands/exercise` endpoint does not work with the first format, we need to use the second in both places. It would be nice if could keep the order of the events we don't filter out during consolidation for the `/contracts/searchForever` endpoint, but I don't consider it a hard requirement.",
        "createdAt" : "2020-01-16T10:54:27Z",
        "updatedAt" : "2020-01-16T10:55:30Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c3e5537e2aecde8437425b615b2f58a501c67967",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +296,300 @@and archives the one above, the same stream will eventually produce::\n\n    {\n        \"created\": [{\n            \"observers\": [],"
  }
]