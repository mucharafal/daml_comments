[
  {
    "id" : "3ff79033-e27b-4609-8bab-4ff18629f43f",
    "prId" : 5171,
    "comments" : [
      {
        "id" : "1b1d8bb6-af1d-46f7-8feb-51a678d5683f",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "There is no more `PACKAGE` parameter and we're finally writing JavaScript + typing. We should embrace that:\r\n```suggestion\r\nIn outline, the command to generate JavaScript and TypeScript typings from DAML is ``daml codegen ts DAR -o OUTDIR`` where ``DAR`` is the path to a DAR file (generated via ``daml build``) and ``OUTDIR`` is a directory where you want the JavaScript to be written.\r\n```\r\nCan you please check there are no more references to `PACKAGE` elsewhere.",
        "createdAt" : "2020-03-25T17:28:40Z",
        "updatedAt" : "2020-03-25T17:50:50Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1b3d8d64-69e0-40f6-8800-fab1cd03d21f",
        "parentId" : "1b1d8bb6-af1d-46f7-8feb-51a678d5683f",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "(1) Fixed.\r\n(2) Done.",
        "createdAt" : "2020-03-25T18:30:57Z",
        "updatedAt" : "2020-03-25T18:30:57Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ede39c0bc7b73401d689c75f3f46feb6f2c5843f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +22,26 @@``daml2ts`` is invoked via the DAML SDK assistant.\n\nIn outline, the command to generate TypeScript from DAML is ``daml codegen ts DAR -o OUTDIR`` where ``DAR`` is the path to a DAR file (generated via ``daml build``), ``OUTDIR`` is a directory where you want the TypeScript to be written and ``PACKAGE`` is a desired TypeScript package name.\n\nHere's a complete example that generates TypeScript from a project produced from the standard \"skeleton\" template."
  },
  {
    "id" : "f0dbaa6a-ee76-4124-b80a-51c3524f03ab",
    "prId" : 5171,
    "comments" : [
      {
        "id" : "cf4290c2-5a0e-4d00-b204-fbdc64f9df7b",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Isn't there a `src` somewhere in the path to `Main.ts` as well?",
        "createdAt" : "2020-03-25T17:31:18Z",
        "updatedAt" : "2020-03-25T17:50:50Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d4f5ede2-5aa1-4137-b473-d53b841508b3",
        "parentId" : "cf4290c2-5a0e-4d00-b204-fbdc64f9df7b",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Yes. Fixed.",
        "createdAt" : "2020-03-25T18:31:43Z",
        "updatedAt" : "2020-03-25T18:31:43Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ede39c0bc7b73401d689c75f3f46feb6f2c5843f",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +39,43 @@  - The files are arranged into directories;\n  - One of those directories will be named as per the ``PACKAGE`` argument and will contain the definitions corresponding to the DAML files in the project;\n  - For example, ``generated/ts/my-proj/Main.ts`` contains the definitions for ``daml/Main.daml``;\n  - The remaining directories correspond to modules of the DAML standard library;\n  - Those directories have numeric names (the names are hashes of the DAML-LF package they are derived from)."
  },
  {
    "id" : "faa3eb35-4a4f-454c-aee3-498bdb17163b",
    "prId" : 4975,
    "comments" : [
      {
        "id" : "56a113a7-95b0-415d-bf40-82fafc5777f1",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I think documenting this type just adds complexity that doesn't help with anything.\r\n```suggestion\r\n   const Color = {\r\n```",
        "createdAt" : "2020-03-16T09:38:01Z",
        "updatedAt" : "2020-03-16T09:54:59Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "440d7ee8-5e49-4c5a-bf25-d4714daa3ad2",
        "parentId" : "56a113a7-95b0-415d-bf40-82fafc5777f1",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "https://github.com/digital-asset/daml/pull/5044",
        "createdAt" : "2020-03-17T16:36:23Z",
        "updatedAt" : "2020-03-17T16:36:23Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3f6f10a59e79f234fa88ceca81c572c611a97f7d",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +204,208 @@   type Color = | 'Red' | 'Blue' | 'Yellow'\n\n   const Color : {readonly Red: Color; readonly Blue: Color; readonly Yellow: Color} = {\n     Red: 'Red',\n     Blue: 'Blue',"
  },
  {
    "id" : "706ccc83-e999-465a-a698-de458d1d32d5",
    "prId" : 4261,
    "comments" : [
      {
        "id" : "c59fa0a8-9322-43e6-b352-f59cd369c03f",
        "parentId" : null,
        "author" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "body" : "Really? Why is `Int` mapped to a Typescript `string`?",
        "createdAt" : "2020-01-30T16:55:19Z",
        "updatedAt" : "2020-01-30T16:56:17Z",
        "lastEditedBy" : {
          "login" : "rohanjr",
          "name" : "Rohan Jacob-Rao",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/10836630?u=a30da7f2a9ceeb7c25249d5146f10fce61aeec4e&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a76046d79ab88f984b34a7709ce11c23e2a9fd43",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +64,68 @@| ``Bool``          | ``Bool``           | ``boolean``                      |\n+-------------------+--------------------+----------------------------------+\n| ``Int``           | ``Int``            | ``string``                       |\n+-------------------+--------------------+----------------------------------+\n| ``Decimal``       | ``Decimal``        | ``string``                       |"
  },
  {
    "id" : "4be89d48-feae-44d8-92ee-882887365a31",
    "prId" : 4196,
    "comments" : [
      {
        "id" : "b4ff035c-18a4-4056-acba-57911f8e9279",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I understand you're excited but I'm not sure that makes a lot of sense to our users. I suggest something like\r\n> `daml2ts` - A TypeScript codegen for DAML",
        "createdAt" : "2020-01-28T09:31:34Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2,6 @@.. SPDX-License-Identifier: Apache-2.0\n\nTypeScript!\n###########\n"
  },
  {
    "id" : "49db163d-968f-4d25-a598-3975e6f1a2be",
    "prId" : 4196,
    "comments" : [
      {
        "id" : "1cdc0028-9b97-4421-aeaf-c6df9176cdca",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "The code `daml2ts` generates uses the library...",
        "createdAt" : "2020-01-28T09:32:23Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e8a05494-cd7c-4049-80fa-a4a3acb5f2ba",
        "parentId" : "1cdc0028-9b97-4421-aeaf-c6df9176cdca",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "✔️ ",
        "createdAt" : "2020-01-29T13:57:54Z",
        "updatedAt" : "2020-01-29T13:57:54Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@``daml2ts`` inputs are compiled DAML modules. ``daml2ts`` outputs are TypeScript source files containing definitions modeling the DAML entities found.\n\nThe code ``daml2ts`` generates is in terms of the package `@daml/types <https://github.com/digital-asset/daml/tree/master/language-support/ts/daml-types>`_.\n\nPrimitives: @daml/types"
  },
  {
    "id" : "6dcc97d7-b507-4cc1-b592-f96ab4e3f406",
    "prId" : 4196,
    "comments" : [
      {
        "id" : "7ebfeb68-d140-43ca-bfd3-d8f57cb9a5a8",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Let's not tell our users about this one. It's an implementation detail and doesn't make too much sense when you don't also talk about the companion objects, which I would like to avoid.",
        "createdAt" : "2020-01-28T09:34:03Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +24,28 @@**Interfaces**:\n\n- ``Serializable<T>``\n- ``Template<T extends object, K = unknown>``\n- ``Choice<T extends object, C, R, K = unknown>``"
  },
  {
    "id" : "8e2998dd-5420-4382-9a88-dd07e3725212",
    "prId" : 4196,
    "comments" : [
      {
        "id" : "6a4d35f9-5a3d-42e9-8c1f-63e748a81afb",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Let's remove the decoder stuff from here. It's an implementation detail and nobody knows what `jtv` refers to anyway. An object \"implements\" an interface rather than \"extends\" it. I would say something like\r\n\r\n> An object that implements the `Template<T, K>` interface provides metadata for a template of type `T` with a potential contract key of type `K`, where the absence of contract key is marked by `K = undefined`. Such metadata includes the name of the template, the module and package where it is defined, and a description of the types `T` and `K`.\r\n\r\nSimilarly for choices.",
        "createdAt" : "2020-01-28T09:42:17Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b13e4835-c856-4ca3-9942-bcb3219f5644",
        "parentId" : "6a4d35f9-5a3d-42e9-8c1f-63e748a81afb",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Oops. Sorry not obvious (since you're reviewing the ReST), that section you are commenting on is a comment 😄 .",
        "createdAt" : "2020-01-28T10:40:58Z",
        "updatedAt" : "2020-01-28T10:40:59Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "513bc8c7-1d42-466c-b423-e2f2d64a4fb5",
        "parentId" : "6a4d35f9-5a3d-42e9-8c1f-63e748a81afb",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "✔️ \r\n",
        "createdAt" : "2020-01-29T13:54:37Z",
        "updatedAt" : "2020-01-29T13:54:38Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +31,35 @@        An object that extends the ``Serializable<T>`` interface has a field ``decoder: () => jtv.Decoder<T>``.\n        An object that extends the ``Template<T, K>`` interface has fields ``templateId: string``, ``keyDecoder: ()=> jtv.Decoder<K>``, ``Archive: Choice<T, {}, {}>`` and extends ``Serializable<T>``.\n        An object that extends the ``Choice<T, C, R, K>`` interface has fields ``template: () => Template<T, K>``, ``argumentDecoder: () => jtv.Decoder<C>``, ``resultDecoder: () => jtv.Decoder<R>`` and ``choiceName: string``.\n\n**Types**:"
  },
  {
    "id" : "f57201f1-af36-49e5-97e6-6ee49fba95fc",
    "prId" : 4196,
    "comments" : [
      {
        "id" : "f8611e95-5dc8-4db2-8d02-d66dbb05eb3a",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "The first column should be the DAML type. That's what we get as input and users want to know how it gets converted into TS. Maybe this whole section should make this clear by having some like `Primitive DAML types` as its heading and then explaining that `@daml/types` contains TS equivalents of these types.",
        "createdAt" : "2020-01-28T09:44:47Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ebdc46aa-c72b-4599-a0b3-7a9963e9f7e9",
        "parentId" : "f8611e95-5dc8-4db2-8d02-d66dbb05eb3a",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "I will alter the table to lead with the DAML type and change the heading.",
        "createdAt" : "2020-01-29T14:06:11Z",
        "updatedAt" : "2020-01-29T14:06:11Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e77046ef-4f18-4861-b72b-3957e01648ae",
        "parentId" : "f8611e95-5dc8-4db2-8d02-d66dbb05eb3a",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "✔️ ",
        "createdAt" : "2020-01-29T14:20:52Z",
        "updatedAt" : "2020-01-29T14:20:52Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@\n+-------------------+------------------+----------------------------------+\n| TypeScript        | DAML equiv.      | TypeScript definition            |\n+===================+==================+==================================+\n| ``Unit``          | ``()``           | ``{}``                           |"
  },
  {
    "id" : "574e0f61-18f8-489b-baae-4e8cc97bf97b",
    "prId" : 4196,
    "comments" : [
      {
        "id" : "b34e15b3-7545-4072-8987-aac2159d0891",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Nice!",
        "createdAt" : "2020-01-28T09:45:20Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +70,74 @@\n.. note::\n   The Typescript definition of type ``Optional<T>`` in the above table might look complicated. It accounts for differences in the encoding of optional values when nested versus when they are not (i.e. \"top-level\"). For example, ``null`` and ``\"foo\"`` are two possible values of ``Optional<Text>`` whereas, ``[]`` and ``[\"foo\"]`` are two possible values of type ``Optional<Optional<Text>>`` (``null`` is another possible value, ``[null]`` is **not**).\n\nDAML to TypeScript mappings"
  },
  {
    "id" : "f8d8cdaa-12fd-4b7c-8d7c-032ea5a184cd",
    "prId" : 4196,
    "comments" : [
      {
        "id" : "48a7b61d-dc40-4d3f-b24a-e5567325c1d3",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I would move this on the line before. Then the DAML and the TS look a bit closer.",
        "createdAt" : "2020-01-28T09:46:16Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b5afd76a-e9dd-44d0-8e46-f668d56fe07e",
        "parentId" : "48a7b61d-dc40-4d3f-b24a-e5567325c1d3",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "✔️ ",
        "createdAt" : "2020-01-29T14:00:11Z",
        "updatedAt" : "2020-01-29T14:00:11Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +86,90 @@\n   data Person =\n     Person with\n       name: Text\n       party: Party"
  },
  {
    "id" : "1434c72d-f55e-4d78-b5fe-47f7240c6414",
    "prId" : 4196,
    "comments" : [
      {
        "id" : "2431e50e-e692-4286-b6a2-123061085414",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "We should move tuples up into the big table. This section is more about variants that about tuples.",
        "createdAt" : "2020-01-28T09:48:25Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d65b0a25-5be1-4fa6-b620-c76e167123d0",
        "parentId" : "2431e50e-e692-4286-b6a2-123061085414",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "I'm not clear on how to do that. I thought I did a pretty good job on this (slightly challenging) section. Do you feel strongly about this?",
        "createdAt" : "2020-01-29T14:02:22Z",
        "updatedAt" : "2020-01-29T14:02:22Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7588233b-f9dd-4aa9-89f6-8c6d7f675cda",
        "parentId" : "2431e50e-e692-4286-b6a2-123061085414",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "To me, it feels like we're in a section about data type definitions here. That's why tuples don't fit well. You can't define them yourself but they are defined in the stdlib. I guess that's what made this section challenging.\r\n\r\nI suggest we add rows to the big table above:\r\n```\r\n+-----------+-------------------------+\r\n| DAML      | TypeScript              |\r\n+-----------+-------------------------+\r\n| (a, b)    | { _1: a; _2: b }        |\r\n| (a, b, c) | { _1: a; _2: b; _3: c } |\r\n+-----------+-------------------------+\r\n```\r\n And also add a remark that `n`-tuples for `n > 3` work analogously.",
        "createdAt" : "2020-01-29T14:24:34Z",
        "updatedAt" : "2020-01-29T14:24:34Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "42f42981-b9bb-449a-8d5c-87a44eb75195",
        "parentId" : "2431e50e-e692-4286-b6a2-123061085414",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Got it. Moving to the big table!",
        "createdAt" : "2020-01-30T13:30:47Z",
        "updatedAt" : "2020-01-30T13:30:48Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +102,106 @@   }\n\nTuples\n~~~~~~\n"
  },
  {
    "id" : "6e44f87e-57f2-4bca-a5c7-38f34da39623",
    "prId" : 4196,
    "comments" : [
      {
        "id" : "81e29fe4-cbeb-4380-a458-83dbad57cd9e",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "It might make sense to put a link to the \"Discriminated Unions\" section in the TS handbook under the phrase \"discriminated union\".\r\nhttps://www.typescriptlang.org/docs/handbook/advanced-types.html#discriminated-unions",
        "createdAt" : "2020-01-28T09:50:23Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0e0f447d-45fa-4928-95d8-fe8aa31e2632",
        "parentId" : "81e29fe4-cbeb-4380-a458-83dbad57cd9e",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "✔️ ",
        "createdAt" : "2020-01-29T14:03:03Z",
        "updatedAt" : "2020-01-29T14:03:04Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +141,145 @@     | Add (Expr a, Expr a)\n\nIn TypeScript, it is represented as a discriminated union.\n\n.. code-block:: typescript"
  },
  {
    "id" : "36eb3505-fbe2-4e76-8252-7fca69ccc57f",
    "prId" : 4196,
    "comments" : [
      {
        "id" : "a4d467eb-f1a6-4124-a99c-f6e696f72216",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "What's wrong with the dot here? Some weird unicode symbol?",
        "createdAt" : "2020-01-28T09:50:46Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1b48feae-0abf-4b54-a94f-6f9b60a3a9d1",
        "parentId" : "a4d467eb-f1a6-4124-a99c-f6e696f72216",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Dunno 😕 .\r\n",
        "createdAt" : "2020-01-29T13:56:53Z",
        "updatedAt" : "2020-01-29T13:56:53Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +154,158 @@~~~~~~~~~~~~~~~~\n\nLet's slightly modify the ``Expr a`` type of the last section into the following.\n\n.. code-block:: daml"
  },
  {
    "id" : "11f5ae9b-639b-4bb6-aae2-0e3d446bd3ab",
    "prId" : 4196,
    "comments" : [
      {
        "id" : "1a42bbae-72a7-4e75-81d6-a6ddf1529cad",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Let's not document the companion object for the `Transfer` type.",
        "createdAt" : "2020-01-28T09:53:10Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7c070cb3-ea99-4a0b-8f02-98ec1d86d411",
        "parentId" : "1a42bbae-72a7-4e75-81d6-a6ddf1529cad",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "✔️ ",
        "createdAt" : "2020-01-29T13:55:10Z",
        "updatedAt" : "2020-01-29T13:55:11Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 250,
    "diffHunk" : "@@ -1,1 +248,252 @@   :linenos:\n\n   const Transfer: daml.Serializable<Transfer> = ({\n     /* ... */\n     }),"
  },
  {
    "id" : "d2f6147a-02ae-406a-8db0-cca7db51814c",
    "prId" : 4196,
    "comments" : [
      {
        "id" : "bb75cc39-e3ef-4ead-a9fd-0050474ea768",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "We should very briefly mention that the `undefined` captures the fact that `Iou` has no contract key.",
        "createdAt" : "2020-01-28T09:54:15Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a5637471-9393-472f-93e2-3a6aa91a92f4",
        "parentId" : "bb75cc39-e3ef-4ead-a9fd-0050474ea768",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "✔️ ",
        "createdAt" : "2020-01-29T14:04:41Z",
        "updatedAt" : "2020-01-29T14:04:41Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 255,
    "diffHunk" : "@@ -1,1 +253,257 @@   })\n\n   const Iou: daml.Template<Iou, undefined> & {\n     Archive: daml.Choice<Iou, DA_Internal_Template.Archive, {}, undefined>;\n     Transfer: daml.Choice<Iou, Transfer, daml.ContractId<Iou>, undefined>;"
  },
  {
    "id" : "77afa003-ecf8-4150-9fd6-6dc728f9e153",
    "prId" : 4196,
    "comments" : [
      {
        "id" : "cb71e1c1-08e2-4e1f-b4a4-80932a3beb01",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Each template results in a companion object...",
        "createdAt" : "2020-01-28T09:56:03Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fc831aa0-ec1e-4f8b-95f9-96fd710c6b8e",
        "parentId" : "cb71e1c1-08e2-4e1f-b4a4-80932a3beb01",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "✔️ ",
        "createdAt" : "2020-01-29T13:55:51Z",
        "updatedAt" : "2020-01-29T13:55:51Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 245,
    "diffHunk" : "@@ -1,1 +243,247 @@   }\n\nEach template and each template choice also results in the generation of a companion object corresponding to the choice or template type. Here, is a schematic of the ones generated from the ``Iou`` template.\n\n.. code-block:: typescript"
  },
  {
    "id" : "b8d15409-35b2-4755-9f40-4ee5323e5ed9",
    "prId" : 4196,
    "comments" : [
      {
        "id" : "00de948c-b991-4b9e-87b3-89f68ccc053f",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Very nice.",
        "createdAt" : "2020-01-28T09:56:19Z",
        "updatedAt" : "2020-01-28T09:57:13Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 266,
    "diffHunk" : "@@ -1,1 +264,268 @@What **is** important is the use of the companion objects when creating contracts and exercising choices using the `@daml/ledger <https://github.com/digital-asset/daml/tree/master/language-support/ts/daml-ledger>`_ package. The following code snippet demonstrates their usage.\n\n.. code-block:: typescript\n   :linenos:\n"
  },
  {
    "id" : "88d0d163-0f6c-4384-9e43-7167a1891c4d",
    "prId" : 4196,
    "comments" : [
      {
        "id" : "c12b51ab-6e93-4178-96d9-bda7f22fbf63",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I just realized we're using small `t` in DAML and capital `T` in TypeScript. Let's use the same. Since it is meant to be a metavariable, we can use capital `T` in DAML too. We could also switch to Greek tau if that makes you feel more comfortable. Or alpha, beta.",
        "createdAt" : "2020-01-29T14:28:52Z",
        "updatedAt" : "2020-01-29T14:28:56Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9ea3f965-1fe1-43f2-94b7-30ddcd9a3151",
        "parentId" : "c12b51ab-6e93-4178-96d9-bda7f22fbf63",
        "author" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "body" : "Switching to τ and η",
        "createdAt" : "2020-01-29T14:37:33Z",
        "updatedAt" : "2020-01-29T14:37:33Z",
        "lastEditedBy" : {
          "login" : "shayne-fletcher",
          "name" : "Shayne Fletcher",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/1500167?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +54,58 @@| ``Party``         | ``Party``        | ``string``                       |\n+-------------------+------------------+----------------------------------+\n| ``List<T>``       | ``[t]``          | ``T[]``                          |\n+-------------------+------------------+----------------------------------+\n| ``Date``          | ``Date``         | ``string``                       |"
  }
]