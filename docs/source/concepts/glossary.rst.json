[
  {
    "id" : "28ea70d0-3574-40b0-b787-32f8da840846",
    "prId" : 4873,
    "comments" : [
      {
        "id" : "832b51ca-3f3c-4f30-848b-ce4f908dfdb7",
        "parentId" : null,
        "author" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "body" : "remove contract instance\r\n```suggestion\r\nContract\r\n```",
        "createdAt" : "2020-03-06T11:14:49Z",
        "updatedAt" : "2020-10-02T10:29:26Z",
        "lastEditedBy" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2ce83cebb77c5716528c45d857769d2585210bf1",
    "line" : null,
    "diffHunk" : "@@ -9,7 +9,7 @@ DAML\n \n **DAML** is a programming language for writing `smart contracts <#contract-contract-instance>`__, that you can use to build an application based on a `ledger <#ledger-daml-ledger>`__. You can run DAML contracts on many different ledgers.\n \n-Contract, contract instance\n+Contract, contract"
  },
  {
    "id" : "fb51a97d-6843-4989-b855-a4594be1a146",
    "prId" : 4873,
    "comments" : [
      {
        "id" : "4f674406-cd25-42a4-a3de-3572b51f1a8b",
        "parentId" : null,
        "author" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "body" : "They should not be referred as such.\r\n```suggestion\r\n\r\n```",
        "createdAt" : "2020-03-06T11:16:40Z",
        "updatedAt" : "2020-10-02T10:29:26Z",
        "lastEditedBy" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2ce83cebb77c5716528c45d857769d2585210bf1",
    "line" : null,
    "diffHunk" : "@@ -20,7 +20,7 @@ A **contract** is an item on a `ledger <#ledger-daml-ledger>`__. They are create\n \n Contracts are immutable: once they are created on the ledger, the information in the contract cannot be changed. The only thing that can happen to it is that the contract can be `archived <#active-contract-archived-contract>`__.\n \n-They're sometimes referred to as a **contract instance** to make clear that this is an instantiated contract, as opposed to a `template <#template>`__.\n+They're sometimes referred to as a **contract** to make clear that this is an instantiated contract, as opposed to a `template <#template>`__.\n "
  },
  {
    "id" : "85635e3b-a976-4b96-99de-69f744f3455f",
    "prId" : 4873,
    "comments" : [
      {
        "id" : "9fc083f5-a6dd-4744-84b8-ccd03492ba6e",
        "parentId" : null,
        "author" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "body" : "They should not be referred as such, so I removed this note.",
        "createdAt" : "2020-03-06T11:17:26Z",
        "updatedAt" : "2020-10-02T10:29:26Z",
        "lastEditedBy" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2ce83cebb77c5716528c45d857769d2585210bf1",
    "line" : 16,
    "diffHunk" : "@@ -20,8 +20,6 @@ A **contract** is an item on a `ledger <#ledger-daml-ledger>`__. They are create\n \n Contracts are immutable: once they are created on the ledger, the information in the contract cannot be changed. The only thing that can happen to it is that the contract can be `archived <#active-contract-archived-contract>`__.\n \n-They're sometimes referred to as a **contract instance** to make clear that this is an instantiated contract, as opposed to a `template <#template>`__."
  },
  {
    "id" : "dc0cb23a-a7bf-4f97-abd7-9dcbe44be380",
    "prId" : 4873,
    "comments" : [
      {
        "id" : "cd5aa36f-3fc6-4e3f-9846-a178afb934df",
        "parentId" : null,
        "author" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "body" : "```suggestion\r\nA **nonconsuming choice** does NOT `archive <#active-contract-archived-contract>`__ the `contract <#contract-contract-instance>`__ it is on when `exercised <#exercise>`__. This means the choice can be exercised more than once on the same `contract <#contract>`__. \r\n```",
        "createdAt" : "2020-03-06T11:18:00Z",
        "updatedAt" : "2020-10-02T10:29:26Z",
        "lastEditedBy" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2ce83cebb77c5716528c45d857769d2585210bf1",
    "line" : null,
    "diffHunk" : "@@ -70,7 +68,7 @@ A `choice <#choice>`__ marked **postconsuming** will not be `archived <#active-c\n Nonconsuming choice\n --------------------\n \n-A **nonconsuming choice** does NOT `archive <#active-contract-archived-contract>`__ the `contract <#contract-contract-instance>`__ it is on when `exercised <#exercise>`__. This means the choice can be exercised more than once on the same `contract instance <#contract-contract-instance>`__. \n+A **nonconsuming choice** does NOT `archive <#active-contract-archived-contract>`__ the `contract <#contract-contract-instance>`__ it is on when `exercised <#exercise>`__. This means the choice can be exercised more than once on the same `contract <#contract-contract-instance>`__. "
  },
  {
    "id" : "67c6ec7a-7042-48f2-8668-1a5ca8eb48fc",
    "prId" : 4873,
    "comments" : [
      {
        "id" : "3846d782-de34-40f7-84d7-4573cf101e96",
        "parentId" : null,
        "author" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "body" : "This is why I needed to change every ref from `contract-contract-instance` to `contract`",
        "createdAt" : "2020-03-06T14:48:23Z",
        "updatedAt" : "2020-10-02T10:29:26Z",
        "lastEditedBy" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2ce83cebb77c5716528c45d857769d2585210bf1",
    "line" : 7,
    "diffHunk" : "@@ -7,9 +7,9 @@ Glossary of concepts\n DAML\n ****\n \n-**DAML** is a programming language for writing `smart contracts <#contract-contract-instance>`__, that you can use to build an application based on a `ledger <#ledger-daml-ledger>`__. You can run DAML contracts on many different ledgers.\n+**DAML** is a programming language for writing `smart contracts <#contract>`__, that you can use to build an application based on a `ledger <#ledger-daml-ledger>`__. You can run DAML contracts on many different ledgers.\n \n-Contract, contract instance"
  },
  {
    "id" : "6f9fdc2b-4d0c-46cb-83c4-1f3199fedf89",
    "prId" : 3108,
    "comments" : [
      {
        "id" : "a7bb76c4-5f2c-4744-9bd6-466d66806287",
        "parentId" : null,
        "author" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "body" : "If you would like to integrate DAML with a storage infrastructure not already in development (see `daml.com <https://daml.com`__), please get in touch on `Slack <https://damldriven.slack.com/sso/saml/start>`__ in channel #daml-contributors.",
        "createdAt" : "2019-10-04T13:04:38Z",
        "updatedAt" : "2019-10-08T08:06:20Z",
        "lastEditedBy" : {
          "login" : "bame-da",
          "name" : "Bernhard Elsner",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/40762178?u=28b5edbfe9271d5db3fcfa3b80d30f93cce4321f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ef002427-f07e-4b81-abac-d34f246f525a",
        "parentId" : "a7bb76c4-5f2c-4744-9bd6-466d66806287",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Thanks.",
        "createdAt" : "2019-10-04T14:11:13Z",
        "updatedAt" : "2019-10-08T08:06:20Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d0deb0ebfd17b6a10850134aca0ad21ae3eebb35",
    "line" : null,
    "diffHunk" : "@@ -425,7 +425,7 @@ DAML ledgers provide various guarantees about what you can expect from it, all l\n \n When you're developing, you'll use `Sandbox <#sandbox>`__ as your ledger.\n \n-If you want to run DAML on a storage mechanism of your choice, you can use the :doc:`/daml-integration-kit/index` to help you do that.\n+If you want to run DAML on a storage mechanism of your choice, you can use one of the `supported platforms <https://daml.com>`__."
  },
  {
    "id" : "2787ca74-6176-40a5-bbf5-4b0321ae2af2",
    "prId" : 1557,
    "comments" : [
      {
        "id" : "4512bfed-57fb-43e8-a690-a0c0a5a6b479",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "I find this odd that the types of choice consumption does not include nonconsuming above - so omit the new section header.",
        "createdAt" : "2019-06-10T13:57:15Z",
        "updatedAt" : "2019-06-12T14:15:41Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "18455bc0-b6ea-4971-b171-1db04b9cec84",
        "parentId" : "4512bfed-57fb-43e8-a690-a0c0a5a6b479",
        "author" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "body" : "Well, all the ones above are variations on consuming choices. But I take your point",
        "createdAt" : "2019-06-12T13:29:11Z",
        "updatedAt" : "2019-06-12T14:15:41Z",
        "lastEditedBy" : {
          "login" : "bethaitman",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/3482051?u=97f3942927ae304a99251ea448bb8b65b6024e74&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9e47528cef27ac9f9fa6ca17325da22c8d48be3c",
    "line" : 70,
    "diffHunk" : "@@ -0,0 +1,438 @@\n+.. Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+.. SPDX-License-Identifier: Apache-2.0\n+\n+Glossary of concepts\n+####################\n+\n+DAML\n+****\n+\n+**DAML** is a programming language for writing `smart contracts`, that you can use to build an application based on a `ledger` . You can run DAML contracts on many different `ledgers`.\n+\n+Contract, contract instance\n+===========================\n+\n+A **contract** is an item on a `ledger`. They are created from blueprints called `templates`, and include:\n+\n+- data (parameters)\n+- roles (`signatory`, `observer`)\n+- `choices` (and `controllers`)\n+\n+Contracts are immutable: once they are created on the ledger, the information in the contract cannot be changed. The only thing that can happen to it is that the contract can be `archived`.\n+\n+They're sometimes referred to as a **contract instance** to make clear that this is an instantiated contract, as opposed to a `template`.\n+\n+Active contract, archived contract\n+----------------------------------\n+\n+When a `contract` is created on a `ledger`, it becomes **active**. But that doesn't mean it will stay active forever: it can be **archived**. This can happen:\n+\n+- if the `signatories` of the contract decide to archive it\n+- if a `consuming choice` is exercised on the contract\n+\n+Once the contract is archived, it is no longer valid, and `choices` on the contract can no longer be exercised.\n+\n+Template\n+========\n+\n+A **template** is a blueprint for creating a `contract`. This is the DAML code you write.\n+\n+For full documentation on what can be in a template, see :doc:`/daml/reference/templates`.\n+\n+Choice\n+======\n+\n+A **choice** is something that a `party` can `exercise` on a `contract`. You write code in the choice body that specifies what happens when the choice is exercised: for example, it could create a new contract.\n+\n+Choices give you a way to transform the data in a contract: while the contract itself is immutable, you can write a choice that `archives` the contract and creates a new version of it with updated data.\n+\n+A choice can only be exercised by its `controller`. Within the choice body, you have the `authorization` of all of the contract's `signatories`.\n+\n+For full documentation on choices, see :doc:`/daml/reference/choices`.\n+\n+Consuming choice, preconsuming choice, postconsuming choice\n+------------------------------------------------------------\n+\n+A **consuming choice** means that, when the choices is exercised, the `contract` it is gets `archived`. The alternative is a `nonconsuming choice`.\n+\n+A `choice` marked **preconsuming** will get `archived` at the start of that `exercise`.\n+\n+A `choice` marked **postconsuming** will not be `archived` until the end of the `exercise` choice body.\n+\n+Nonconsuming choice"
  },
  {
    "id" : "a94213ee-a02a-4b91-813a-494f3829661c",
    "prId" : 1557,
    "comments" : [
      {
        "id" : "728ed6dc-9ca2-49f8-a3ba-23e4da959b0a",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "```suggestion\r\nA `choice` marked **preconsuming** will be `archived` at the start of that `exercise`.\r\n```",
        "createdAt" : "2019-06-10T13:59:42Z",
        "updatedAt" : "2019-06-12T14:15:41Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9e47528cef27ac9f9fa6ca17325da22c8d48be3c",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,438 @@\n+.. Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+.. SPDX-License-Identifier: Apache-2.0\n+\n+Glossary of concepts\n+####################\n+\n+DAML\n+****\n+\n+**DAML** is a programming language for writing `smart contracts`, that you can use to build an application based on a `ledger` . You can run DAML contracts on many different `ledgers`.\n+\n+Contract, contract instance\n+===========================\n+\n+A **contract** is an item on a `ledger`. They are created from blueprints called `templates`, and include:\n+\n+- data (parameters)\n+- roles (`signatory`, `observer`)\n+- `choices` (and `controllers`)\n+\n+Contracts are immutable: once they are created on the ledger, the information in the contract cannot be changed. The only thing that can happen to it is that the contract can be `archived`.\n+\n+They're sometimes referred to as a **contract instance** to make clear that this is an instantiated contract, as opposed to a `template`.\n+\n+Active contract, archived contract\n+----------------------------------\n+\n+When a `contract` is created on a `ledger`, it becomes **active**. But that doesn't mean it will stay active forever: it can be **archived**. This can happen:\n+\n+- if the `signatories` of the contract decide to archive it\n+- if a `consuming choice` is exercised on the contract\n+\n+Once the contract is archived, it is no longer valid, and `choices` on the contract can no longer be exercised.\n+\n+Template\n+========\n+\n+A **template** is a blueprint for creating a `contract`. This is the DAML code you write.\n+\n+For full documentation on what can be in a template, see :doc:`/daml/reference/templates`.\n+\n+Choice\n+======\n+\n+A **choice** is something that a `party` can `exercise` on a `contract`. You write code in the choice body that specifies what happens when the choice is exercised: for example, it could create a new contract.\n+\n+Choices give you a way to transform the data in a contract: while the contract itself is immutable, you can write a choice that `archives` the contract and creates a new version of it with updated data.\n+\n+A choice can only be exercised by its `controller`. Within the choice body, you have the `authorization` of all of the contract's `signatories`.\n+\n+For full documentation on choices, see :doc:`/daml/reference/choices`.\n+\n+Consuming choice, preconsuming choice, postconsuming choice\n+------------------------------------------------------------\n+\n+A **consuming choice** means that, when the choices is exercised, the `contract` it is gets `archived`. The alternative is a `nonconsuming choice`.\n+\n+A `choice` marked **preconsuming** will get `archived` at the start of that `exercise`."
  }
]