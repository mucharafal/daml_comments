[
  {
    "id" : "2b89ab61-95d6-4d2b-989a-d4f05744c64a",
    "prId" : 7110,
    "comments" : [
      {
        "id" : "0c6f363c-d0d1-479b-81b7-c104b782c5fb",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Are you intentionally keeping the DAML prefix on `contract`?",
        "createdAt" : "2020-08-12T17:59:58Z",
        "updatedAt" : "2020-08-14T15:23:08Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "01d98950-3d46-4d8d-b835-f6174481511f",
        "parentId" : "0c6f363c-d0d1-479b-81b7-c104b782c5fb",
        "author" : {
          "login" : "leonidr-da",
          "name" : "Leonid Rozenberg",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/62256399?v=4"
        },
        "body" : "Yes. I removed it in other cases, but here (and in one place below) I thought it was useful. This is the next thing that is awkward about this document as \"contract\" has several meanings throughout this document.\r\n\r\n1. The set of things about which we want to have a (contract) model.\r\n2. An instance of a template (on a ledger).\r\n3. Sometimes, loosely refers to the template defining it. In cases where 2. has not been made.\r\n\r\nI would make a lot more changes to these documents, but `git` is just the wrong tool for this. So, I wanted to limit this change to an independent, small-delta commit.",
        "createdAt" : "2020-08-13T14:29:58Z",
        "updatedAt" : "2020-08-14T15:23:08Z",
        "lastEditedBy" : {
          "login" : "leonidr-da",
          "name" : "Leonid Rozenberg",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/62256399?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "206a4c86-674a-488d-b58f-08dae9b63ac0",
        "parentId" : "0c6f363c-d0d1-479b-81b7-c104b782c5fb",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Makes sense :+1: ",
        "createdAt" : "2020-08-13T14:31:35Z",
        "updatedAt" : "2020-08-14T15:23:08Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "496c3d1e-4a2f-436f-9595-1f28487a69df",
        "parentId" : "0c6f363c-d0d1-479b-81b7-c104b782c5fb",
        "author" : {
          "login" : "leonidr-da",
          "name" : "Leonid Rozenberg",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/62256399?v=4"
        },
        "body" : "And, I can be completely, wrong about this. After you stare at some text long enough, you lose your fresh, I-don't-understand-anything, view of the text. So let me know if you want to add the \"DAML\" back in front of contracts. Though that word is everywhere here.",
        "createdAt" : "2020-08-13T14:32:21Z",
        "updatedAt" : "2020-08-14T15:23:08Z",
        "lastEditedBy" : {
          "login" : "leonidr-da",
          "name" : "Leonid Rozenberg",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/62256399?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "fd7160c62ffa119ae43f705eefdc35d5387bc778",
    "line" : 29,
    "diffHunk" : "@@ -51,7 +51,7 @@ Intuitively, the allowed actions are:\n \n #. **NoSuchKey** assertions corresponding to a :ref:`lookupByKey` update statement for the given key that does not find a contract.\n \n-An instance of a DAML template, that is, a **DAML contract** or **contract instance**,\n+An instance of a template, that is, a **DAML contract** or **contract instance**,"
  },
  {
    "id" : "d057033f-d662-4056-9c52-b3cdf2901cb1",
    "prId" : 4873,
    "comments" : [
      {
        "id" : "0f99217b-2559-4848-a9a9-cc335e8f4ae0",
        "parentId" : null,
        "author" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "body" : "```suggestion\r\nAn instance of a DAML template, that is, a **DAML contract**,\r\n```",
        "createdAt" : "2020-03-06T12:06:23Z",
        "updatedAt" : "2020-10-02T10:29:26Z",
        "lastEditedBy" : {
          "login" : "richardkapolnai-da",
          "name" : "Richard Kapolnai",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/53859003?u=c5f7df62435454a9c8d1a01b0efb50a2a035eab9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2ce83cebb77c5716528c45d857769d2585210bf1",
    "line" : null,
    "diffHunk" : "@@ -51,7 +51,7 @@ Intuitively, the allowed actions are:\n \n #. **NoSuchKey** assertions corresponding to a :ref:`lookupByKey` update statement for the given key that does not find a contract.\n \n-An instance of a DAML template, that is, a **DAML contract** or **contract instance**,\n+An instance of a DAML template, that is, a **DAML contract** or **contract**,"
  },
  {
    "id" : "6fcbd37c-8d37-4b6c-9254-27b8c4a48cc2",
    "prId" : 2144,
    "comments" : [
      {
        "id" : "0f98da0b-f5bf-4a9b-86f5-86a65d7fa235",
        "parentId" : null,
        "author" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "body" : "Minor: I think it'd make sense to split off \"optional agreement text\" as a separate item now",
        "createdAt" : "2019-07-16T09:42:15Z",
        "updatedAt" : "2019-07-18T11:17:48Z",
        "lastEditedBy" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "0d1f3180-a54c-4012-91ae-06fe43ec3254",
        "parentId" : "0f98da0b-f5bf-4a9b-86f5-86a65d7fa235",
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "Done.",
        "createdAt" : "2019-07-17T09:14:40Z",
        "updatedAt" : "2019-07-18T11:17:48Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e90b0e8f28fd617f20f5dbb53ae00f5106fdf862",
    "line" : null,
    "diffHunk" : "@@ -11,7 +11,8 @@ a contract model, and such a model must specify:\n \n #. a set of allowed actions on the contracts, and\n #. the signatories, observers, and an optional agreement text associated with each"
  },
  {
    "id" : "9b49a2f8-37d6-49f9-bef8-0742cf5e1fc8",
    "prId" : 2144,
    "comments" : [
      {
        "id" : "00b7a419-af9c-4430-b81e-db1207d16fb1",
        "parentId" : null,
        "author" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "body" : "A key assertion is also an action.",
        "createdAt" : "2019-07-16T09:45:49Z",
        "updatedAt" : "2019-07-18T11:17:48Z",
        "lastEditedBy" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e90b0e8f28fd617f20f5dbb53ae00f5106fdf862",
    "line" : 25,
    "diffHunk" : "@@ -30,14 +31,12 @@ Intuitively, the allowed actions are:\n    DAML choices on that template, with given\n    choice arguments, such that:\n \n-   |\n-\n    #. The actors match the controllers of the choice.\n       That is, the DAML controllers define the :ref:`required authorizers <da-ledgers-required-authorizers>` of the choice.\n    #. The exercise kind matches.\n    #. All assertions in the update block hold for the given choice arguments.\n-   #. Create, exercise and fetch statements in the DAML update block are represented\n-      as create and exercise actions in the consequences of the exercise\n+   #. Create, exercise, fetch and key statements in the DAML update block are represented\n+      as create, exercise and fetch actions and key assertions in the consequences of the exercise"
  },
  {
    "id" : "f12cee81-f284-4f0c-8b83-418d16d3b459",
    "prId" : 2144,
    "comments" : [
      {
        "id" : "311bf2cc-e9d6-4379-8fcd-c7133f6b9407",
        "parentId" : null,
        "author" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "body" : "```suggestion\r\n   A :ref:`lookupbykey` statement that finds a contract also translates into a **Fetch** action, but all maintainers of the key are the actors.\r\n```",
        "createdAt" : "2019-07-16T09:46:38Z",
        "updatedAt" : "2019-07-18T11:17:48Z",
        "lastEditedBy" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a774e353-1b90-4dac-b66b-1b7b69ddcf2e",
        "parentId" : "311bf2cc-e9d6-4379-8fcd-c7133f6b9407",
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "Changed.",
        "createdAt" : "2019-07-17T07:23:04Z",
        "updatedAt" : "2019-07-18T11:17:48Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e90b0e8f28fd617f20f5dbb53ae00f5106fdf862",
    "line" : null,
    "diffHunk" : "@@ -47,6 +46,11 @@ Intuitively, the allowed actions are:\n    `ch` on a contract `c1`, and the fetched contract ID resolves to a contract `c2`, then the actors are defined as the\n    intersection of (1) the signatories of `c1` union the controllers of `ch` with (2) the signatories of `c2`.\n \n+   A :ref:`fetchbykey` statement also produce a **Fetch** action with the actors determined in the same way.\n+   A :ref:`lookupbykey` statement that finds a contract translates also in a **Fetch** action, but all maintainers of the key are the actors."
  },
  {
    "id" : "0a92e78e-1fc0-4ef4-aa2f-5b19c1d56c4e",
    "prId" : 2144,
    "comments" : [
      {
        "id" : "8702db43-03ac-44aa-b319-3b2960214610",
        "parentId" : null,
        "author" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "body" : "```suggestion\r\n#. **NoKey** assertions corresponding to a :ref:`lookupByKey` update statement for the given key that does not find a contract.\r\n```",
        "createdAt" : "2019-07-16T09:47:41Z",
        "updatedAt" : "2019-07-18T11:17:48Z",
        "lastEditedBy" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4dcc88f1-fe15-44bf-b258-49e92e64e090",
        "parentId" : "8702db43-03ac-44aa-b319-3b2960214610",
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "Changed.",
        "createdAt" : "2019-07-17T09:14:02Z",
        "updatedAt" : "2019-07-18T11:17:48Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e90b0e8f28fd617f20f5dbb53ae00f5106fdf862",
    "line" : null,
    "diffHunk" : "@@ -47,6 +46,11 @@ Intuitively, the allowed actions are:\n    `ch` on a contract `c1`, and the fetched contract ID resolves to a contract `c2`, then the actors are defined as the\n    intersection of (1) the signatories of `c1` union the controllers of `ch` with (2) the signatories of `c2`.\n \n+   A :ref:`fetchbykey` statement also produce a **Fetch** action with the actors determined in the same way.\n+   A :ref:`lookupbykey` statement that finds a contract translates also in a **Fetch** action, but all maintainers of the key are the actors.\n+\n+#. **NoKey** assertions correspond to a :ref:`lookupByKey` update statement for the given key that does not find a contract."
  }
]