[
  {
    "id" : "61d3ffa4-d1ce-4abd-a7a8-f4003eeb21e6",
    "prId" : 4794,
    "comments" : [
      {
        "id" : "fdedcb13-b1c7-4c6c-a4ab-ec48023099af",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "We might want to turn this into a DAML script (in a separate PR). That has the advantage that it’s easier to reproduce without including screenshots of navigator and we can test it.",
        "createdAt" : "2020-03-03T13:18:23Z",
        "updatedAt" : "2020-03-04T14:53:19Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ffa1da113ccd87d742c17bdafd8fe4ca866ce0ff",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +134,138 @@We point a browser to http://localhost:4000, and follow the steps:\n\n#. Login as Alice:\n    #. Select Templates tab.\n    #. Create a *CoinProposal* with Alice as issuer and Bob as owner."
  },
  {
    "id" : "1e4ce15b-b811-4fd5-bcb0-cdbc1540e72f",
    "prId" : 4794,
    "comments" : [
      {
        "id" : "e0cfb8c7-02b0-44a2-9b23-5c5f503be3c2",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I'm not sure I'm a big fan of this. Some of our users will get it wrong. Since we have the mechanisms to rename modules when importing packages, we should teach how to do this instead.",
        "createdAt" : "2020-03-04T15:59:09Z",
        "updatedAt" : "2020-03-04T17:03:33Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b470fa76-e96b-4c1a-a888-48f15677350a",
        "parentId" : "e0cfb8c7-02b0-44a2-9b23-5c5f503be3c2",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Yeah, we discussed this a bit. We do plan to move the example in this direction. As you say, we may as well show our users an example how to do this!",
        "createdAt" : "2020-03-04T17:29:28Z",
        "updatedAt" : "2020-03-04T17:29:28Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0e38a836-08c8-4cdb-82a1-19493f0e3750",
        "parentId" : "e0cfb8c7-02b0-44a2-9b23-5c5f503be3c2",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I think splitting it up into separate packages makes sense, I don’t really want to explain how to handle colliding module names here and e.g. danban uses the scheme used here. My idea was to leave this to a fairly simple but sensible (as in, I’m comfortable using this in production) example and then link to the packaging docs which will have all the details around data-dependencies, colliding module names, ….",
        "createdAt" : "2020-03-04T17:48:02Z",
        "updatedAt" : "2020-03-04T17:48:03Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b2e6e584-e669-42ef-a5d5-b67a3daa5b45",
        "parentId" : "e0cfb8c7-02b0-44a2-9b23-5c5f503be3c2",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "A link to an explanation of how to handle module name clashes does the job as well. Thanks.",
        "createdAt" : "2020-03-04T17:58:37Z",
        "updatedAt" : "2020-03-04T17:58:37Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ffa1da113ccd87d742c17bdafd8fe4ca866ce0ff",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +39,43 @@use the example of a simple *Coin* template as an example here.\nWe have some prescience that there will be future versions of *Coin*,\nand so place the definition of ``Coin`` in a module named ``CoinV1``\n\n.. literalinclude:: example/coinV1/daml/CoinV1.daml"
  },
  {
    "id" : "99364fd4-fc7e-4231-9185-d5760b9965fd",
    "prId" : 4750,
    "comments" : [
      {
        "id" : "1555d1c9-c87f-451c-86e2-65b488a0cf6c",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I'm not 100% sure but that feels better to me:\r\n```suggestion\r\nthat template would completely break the authorization guarantees provided\r\n ```",
        "createdAt" : "2020-03-04T13:56:40Z",
        "updatedAt" : "2020-03-04T14:05:16Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "640b866ae4363332d8f87196545558db2d66a968",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@template. Changing the definition of a template, e.g., by extending it\nwith a new choice without agreement from signatories of contracts of\nthat template would completely break the authority guarantees provided\nby DAML.\n"
  },
  {
    "id" : "40c450ef-b5f1-4597-bacb-c56042882a6a",
    "prId" : 4750,
    "comments" : [
      {
        "id" : "0ad9b444-0392-47a0-8149-db9ee0d6b723",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\nand module names for the sake of simplicity.\r\n```",
        "createdAt" : "2020-03-04T13:59:32Z",
        "updatedAt" : "2020-03-04T14:05:17Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "640b866ae4363332d8f87196545558db2d66a968",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +52,56 @@is not required as templates are identified by the triple\n``(PackageId, ModuleName, TemplateName)`` but here we omit package ids\nand module names for presentational purposes.\n\n.. literalinclude:: daml/Upgrade.daml"
  },
  {
    "id" : "caadab77-4c54-4bf3-8a4b-012fb5980bca",
    "prId" : 4750,
    "comments" : [
      {
        "id" : "abd62e46-fdc5-49ea-9b2b-e9531dc30373",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\nNext, we need to provide a way for\r\n```",
        "createdAt" : "2020-03-04T14:00:23Z",
        "updatedAt" : "2020-03-04T14:05:17Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "640b866ae4363332d8f87196545558db2d66a968",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +59,63 @@  :end-before: -- COIN_AMOUNT_END\n\nNow, that we defined our new template, we need to provide a way for\nthe signatories issuer and owner to agree to a contract being\nupgraded. It would be possible to structure this such that issuer and"
  },
  {
    "id" : "ce4b98af-915d-43c6-836a-ed57508b2818",
    "prId" : 4750,
    "comments" : [
      {
        "id" : "fd712d32-561c-48a7-91ab-c494282f9914",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\nthe signatories, issuer and owner, to agree to a contract being\r\n```",
        "createdAt" : "2020-03-04T14:00:54Z",
        "updatedAt" : "2020-03-04T14:05:17Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "640b866ae4363332d8f87196545558db2d66a968",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +60,64 @@\nNow, that we defined our new template, we need to provide a way for\nthe signatories issuer and owner to agree to a contract being\nupgraded. It would be possible to structure this such that issuer and\nowner have to agree to an upgrade for each *Coin* contract"
  },
  {
    "id" : "3ba54370-668c-4022-b3c9-2712d5b7d10b",
    "prId" : 4750,
    "comments" : [
      {
        "id" : "5e0d0aaa-f40a-4396-b96f-b188db148454",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\nowner have to agree to an upgrade for each individual *Coin* contract\r\n```",
        "createdAt" : "2020-03-04T14:01:46Z",
        "updatedAt" : "2020-03-04T14:05:17Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "640b866ae4363332d8f87196545558db2d66a968",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +62,66 @@the signatories issuer and owner to agree to a contract being\nupgraded. It would be possible to structure this such that issuer and\nowner have to agree to an upgrade for each *Coin* contract\nseparately. However, since the template definition for those is all\nthe same, this is usually not necessary for most"
  },
  {
    "id" : "2d4d9550-d196-433e-87d1-2a44d0f876dd",
    "prId" : 4750,
    "comments" : [
      {
        "id" : "da26ef7d-ac49-4055-88d4-c70ad81c2755",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\nseparately. However, since the template definition for all of them is\r\n```",
        "createdAt" : "2020-03-04T14:02:22Z",
        "updatedAt" : "2020-03-04T14:05:17Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "640b866ae4363332d8f87196545558db2d66a968",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +63,67 @@upgraded. It would be possible to structure this such that issuer and\nowner have to agree to an upgrade for each *Coin* contract\nseparately. However, since the template definition for those is all\nthe same, this is usually not necessary for most\napplications. Instead, we collect agreement from the signatories only"
  },
  {
    "id" : "669430a1-e86c-4a49-96d8-832e96608f93",
    "prId" : 4750,
    "comments" : [
      {
        "id" : "4357e946-3d34-4a7d-a717-8b404c2adf69",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "The word \"accept\" is a bit overloaded here. We also need to make it clear that we pass the contract by reference not by value.\r\n```suggestion\r\nhas one *nonconsuming* choice that takes the contract ID of a *Coin* contract, archives\r\n```",
        "createdAt" : "2020-03-04T14:03:40Z",
        "updatedAt" : "2020-03-04T14:05:18Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "640b866ae4363332d8f87196545558db2d66a968",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +79,83 @@\nNow we can define the *UpgradeCoinAgreement* template. This template\nhas one *nonconsuming* choice that accepts a *Coin* contract, archives\nthis *Coin* contract and creates a *CoinWithAmount* contract with\n*amount* set to 1."
  },
  {
    "id" : "50cb8a19-ea93-428b-b4d7-f4ad9511198d",
    "prId" : 4750,
    "comments" : [
      {
        "id" : "84efe365-39f6-4cc4-a5b0-b08ae5a780be",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\nthe same issuer and owner and the *amount* set to 1.\r\n```",
        "createdAt" : "2020-03-04T14:05:05Z",
        "updatedAt" : "2020-03-04T14:05:18Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "640b866ae4363332d8f87196545558db2d66a968",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +81,85 @@has one *nonconsuming* choice that accepts a *Coin* contract, archives\nthis *Coin* contract and creates a *CoinWithAmount* contract with\n*amount* set to 1.\n\n.. literalinclude:: daml/Upgrade.daml"
  }
]