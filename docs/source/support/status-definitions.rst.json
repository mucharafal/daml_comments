[
  {
    "id" : "796bb4ea-bad0-4dde-a7a6-e98f11ec227d",
    "prId" : 7458,
    "comments" : [
      {
        "id" : "f27c5b21-2564-4c81-928c-4204e2b72399",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I would make a stronger statement that existing usage of deprecated features should be reduced, removed, and migrated to the suggested alternative.\r\n\r\nAlso, one really shouldn't scan features with deprecated technology ðŸ˜‰ \r\n```suggestion\r\nDeprecated features can be relied upon during the deprecation cycle to the same degree as their non-deprecated counterparts, but building on deprecated features may hinder an upgrade to new DAML versions following the deprecation cycle.\r\n```",
        "createdAt" : "2020-09-24T07:25:46Z",
        "updatedAt" : "2020-09-24T12:12:48Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "78c7897a4ab9edbfbb402f0e91ed48d19c4dade6",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,127 @@\n+.. Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+.. SPDX-License-Identifier: Apache-2.0\n+\n+Status Definitions\n+==================\n+\n+Throughout the documentation, we use labels to mark features of APIs not yet deemed stable. This page gives meaning to those labels.\n+\n+Early Access Features\n+---------------------\n+\n+Features or components covered by these docs are :ref:`Stable <status_definitions>` by default. :ref:`Stable <status_definitions>` features and components constitute DAML's \"public API\" in the sense of :ref:`Semantic Versioning <versioning>`. Feature and components that are not :ref:`Stable <status_definitions>` are called \"Early Access\" and called out explicitly.\n+\n+Early Access features are opt-in whenever possible, needing to be activated with special commands or flags needing to be started up separately, or requiring the use of additional endpoints, for example.\n+\n+Within the Early Access category, we distinguish three labels:\n+\n+Labs\n+\n+  Labs components and features are experiments, introduced for evaluation, testing, or project-internal use. There is no intent to develop them into a stable feature other than to see whether they add value and find uptake. They can be changed or discontinued without advance notice. They may be poorly documented and it is not recommended to start relying on them.\n+\n+Alpha\n+\n+  Alpha components and features are early preview versions of features being actively developed to become a stable part of the ecosystem. At the Alpha stage, they are not yet feature complete, may have poor runtime characteristics, are still subject to frequent change, and may not be fully documented. Alpha features can be evaluated, and used in PoCs, but should not yet be relied upon for large projects or production use where breakages or changes to APIs would be costly. \n+\n+Beta\n+\n+  Beta components and features are preview versions of features that are close to maturity. They are characterized by being considered feature complete, and the APIs close to the final public APIs. It is relatively safe to build on Beta features as long as the documented caveats to runtime characteristics are understood and bugs and minor API adjustments are not too costly.\n+\n+Deprecation\n+-----------\n+\n+In addition to being labelled Early Access, features and components can also be labelled \"Deprecated\". Deprecation follows a deprecation cycle laid out in the table below. The date of deprecation is documented in :doc:`overview`.\n+\n+Deprecated feature scan be relied upon during the deprecation cycle to the same degree as their non-deprecated counterparts, but building on deprecated features may hinder an upgrade to new DAML versions following the deprecation cycle."
  },
  {
    "id" : "c8712244-6008-42f5-97da-2db6ea44166a",
    "prId" : 7458,
    "comments" : [
      {
        "id" : "09aceded-f43c-4d7b-8d0e-ddae82e3eff0",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "```suggestion\r\nThe table below gives a concise overview of the labels used for DAML features and components.\r\n```",
        "createdAt" : "2020-09-24T07:28:30Z",
        "updatedAt" : "2020-09-24T12:12:48Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "78c7897a4ab9edbfbb402f0e91ed48d19c4dade6",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,127 @@\n+.. Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+.. SPDX-License-Identifier: Apache-2.0\n+\n+Status Definitions\n+==================\n+\n+Throughout the documentation, we use labels to mark features of APIs not yet deemed stable. This page gives meaning to those labels.\n+\n+Early Access Features\n+---------------------\n+\n+Features or components covered by these docs are :ref:`Stable <status_definitions>` by default. :ref:`Stable <status_definitions>` features and components constitute DAML's \"public API\" in the sense of :ref:`Semantic Versioning <versioning>`. Feature and components that are not :ref:`Stable <status_definitions>` are called \"Early Access\" and called out explicitly.\n+\n+Early Access features are opt-in whenever possible, needing to be activated with special commands or flags needing to be started up separately, or requiring the use of additional endpoints, for example.\n+\n+Within the Early Access category, we distinguish three labels:\n+\n+Labs\n+\n+  Labs components and features are experiments, introduced for evaluation, testing, or project-internal use. There is no intent to develop them into a stable feature other than to see whether they add value and find uptake. They can be changed or discontinued without advance notice. They may be poorly documented and it is not recommended to start relying on them.\n+\n+Alpha\n+\n+  Alpha components and features are early preview versions of features being actively developed to become a stable part of the ecosystem. At the Alpha stage, they are not yet feature complete, may have poor runtime characteristics, are still subject to frequent change, and may not be fully documented. Alpha features can be evaluated, and used in PoCs, but should not yet be relied upon for large projects or production use where breakages or changes to APIs would be costly. \n+\n+Beta\n+\n+  Beta components and features are preview versions of features that are close to maturity. They are characterized by being considered feature complete, and the APIs close to the final public APIs. It is relatively safe to build on Beta features as long as the documented caveats to runtime characteristics are understood and bugs and minor API adjustments are not too costly.\n+\n+Deprecation\n+-----------\n+\n+In addition to being labelled Early Access, features and components can also be labelled \"Deprecated\". Deprecation follows a deprecation cycle laid out in the table below. The date of deprecation is documented in :doc:`overview`.\n+\n+Deprecated feature scan be relied upon during the deprecation cycle to the same degree as their non-deprecated counterparts, but building on deprecated features may hinder an upgrade to new DAML versions following the deprecation cycle.\n+\n+.. _status_definitions:\n+\n+Comparison of Statuses\n+----------------------\n+\n+The below table gives a concise overview of the labels used for DAML features and components."
  }
]