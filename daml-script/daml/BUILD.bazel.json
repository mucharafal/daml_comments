[
  {
    "id" : "9adc380f-f385-4fe7-98fc-6b8f00b79a33",
    "prId" : 7371,
    "comments" : [
      {
        "id" : "b21db677-da0c-40be-b099-b201c5e0cfed",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Side note: We should probably create some Bazel rules for this but Iâ€™ll leave that out of this PR.",
        "createdAt" : "2020-09-10T12:21:32Z",
        "updatedAt" : "2020-09-10T12:36:24Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "89b98e7452a18822102f3bc0acd3ea494d1b01b6",
    "line" : 3,
    "diffHunk" : "@@ -63,17 +63,40 @@ filegroup(\n )\n \n genrule("
  },
  {
    "id" : "8936c3c8-b03d-4df2-bddd-b8340ae7fef2",
    "prId" : 4513,
    "comments" : [
      {
        "id" : "328efbfa-cc37-4156-87e4-5a4506dfee95",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Two unnamed placeholders in the same interpolation scare me even more.\r\n```suggestion\r\nversion: {ghc_version}\r\n```",
        "createdAt" : "2020-02-20T08:37:16Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "81246bd2733ace93653cb663dca5a0cdaf7c11e9",
    "line" : null,
    "diffHunk" : "@@ -3,29 +3,30 @@\n \n # TODO Once daml_compile uses build instead of package we should use\n # daml_compile instead of a genrule.\n+load(\"@build_environment//:configuration.bzl\", \"ghc_version\", \"sdk_version\")\n \n genrule(\n     name = \"daml-script\",\n-    srcs = glob([\"**/*.daml\"]) + [\"//:VERSION\"],\n+    srcs = glob([\"**/*.daml\"]),\n     outs = [\"daml-script.dar\"],\n     cmd = \"\"\"\n       set -eou pipefail\n       TMP_DIR=$$(mktemp -d)\n       mkdir -p $$TMP_DIR/daml/Daml\n       cp -L $(location Daml/Script.daml) $$TMP_DIR/daml/Daml\n       cat << EOF > $$TMP_DIR/daml.yaml\n-sdk-version: $$(cat $(location //:VERSION))\n+sdk-version: {}\n name: daml-script\n source: daml\n-version: $$(cat $(location //:VERSION))\n+version: {}"
  }
]