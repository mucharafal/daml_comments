[
  {
    "id" : "f910a4bc-0315-4570-be2f-f033222f6324",
    "prId" : 7682,
    "comments" : [
      {
        "id" : "2905d7ac-102c-4b89-b195-e084db0c9d7b",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "`OneAnd` is way more flexible for this kind of thing.\r\n\r\n```suggestion\r\n        OneAnd(x, xs).traverse(toParty(_)).map(oafp => /*oafp: OneAnd[FrontStack, Party]; some conversion here*/)\r\n```",
        "createdAt" : "2020-10-14T14:03:54Z",
        "updatedAt" : "2020-10-14T14:06:43Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "29634a76-05de-4013-a6ac-1d39c0fb07be",
        "parentId" : "2905d7ac-102c-4b89-b195-e084db0c9d7b",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "ah good point, somehow it didnâ€™t occur to me to use `OneAnd` for something other than `Set` here.",
        "createdAt" : "2020-10-14T14:08:15Z",
        "updatedAt" : "2020-10-14T14:08:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d165b82f6311b3a5837d25035bd9c78b1f3b5e0c",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +382,386 @@    v match {\n      case SList(FrontStackCons(x, xs)) =>\n        NonEmptyList(x, xs.toList: _*).traverse(toParty(_)).map(toNonEmptySet(_))\n      case SParty(p) =>\n        Right(OneAnd(p, Set())) // For backwards compatibility, we support a single part here as well."
  },
  {
    "id" : "4d213060-417e-4047-b4d9-0ecb7a067392",
    "prId" : 7287,
    "comments" : [
      {
        "id" : "252ee8ff-f81b-444b-a64d-a77ad56e019f",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Is the idea that this is supposed to be sorted? If so, we should document this in a comment.",
        "createdAt" : "2020-09-01T08:06:32Z",
        "updatedAt" : "2020-09-01T09:15:16Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "32161a08-5dd5-42b4-b3c1-51bcb5150684",
        "parentId" : "252ee8ff-f81b-444b-a64d-a77ad56e019f",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "It is still not sorted. \r\nI just want the names and the indexes of the field factored out, so it simplify changes when I make the fields sorted. \r\nI will change the type of `SStruct#fiedls` in an upcoming PR. ",
        "createdAt" : "2020-09-01T08:22:08Z",
        "updatedAt" : "2020-09-01T09:15:16Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8cee5e0d-d6cf-4ead-9142-e580b713bde0",
        "parentId" : "252ee8ff-f81b-444b-a64d-a77ad56e019f",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "But the indices will be wrong if `tupleFieldNames` is not sorted right?",
        "createdAt" : "2020-09-01T08:23:19Z",
        "updatedAt" : "2020-09-01T09:15:16Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "97702b2b-021e-48b4-b5e0-83f80a9dc75c",
        "parentId" : "252ee8ff-f81b-444b-a64d-a77ad56e019f",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Currently, the indices should be in the same order as you build the arguments of the `SBStructCon` builtin.\r\nLatter `SBStructCon` will reorder the field, only then the order will be relevant.\r\n\r\nI replace the line \r\n```\r\n private[this] val Seq(fstIdx, sndIdx) = tupleFieldNames.indices\r\n```\r\nby \r\n```\r\n  private[this] val fstIdx = 0\r\n  private[this] val sndIdx = 1\r\n``` \r\nSo now, the change really just extract some expressions as values (+ renaming `\"a\"` to `\"fst\"` and `\"b\"` to `\"second\"`)\r\n",
        "createdAt" : "2020-09-01T09:15:24Z",
        "updatedAt" : "2020-09-01T09:15:25Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "16f174ce-66d1-4eda-80f6-425ebc4f980a",
        "parentId" : "252ee8ff-f81b-444b-a64d-a77ad56e019f",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Thanks for the explanation!",
        "createdAt" : "2020-09-01T09:17:28Z",
        "updatedAt" : "2020-09-01T09:17:28Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2e6415cad06ebb1042a067cefc30fe1269dcbfc5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +210,214 @@    }\n\n  private[this] val tupleFieldNames =\n    ImmArray(Name.assertFromString(\"fst\"), Name.assertFromString(\"snd\"))\n  private[this] val fstIdx = 0"
  }
]