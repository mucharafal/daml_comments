[
  {
    "id" : "61c1a204-f2b0-4bcf-b054-56677d2e8bc2",
    "prId" : 3918,
    "comments" : [
      {
        "id" : "859c9616-17c7-4ddf-bcba-dbf14604fe0d",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Is this comment out of sync with the code below? It looks like you do have code to start an in-memory ledger automatically.",
        "createdAt" : "2020-01-03T08:21:35Z",
        "updatedAt" : "2020-01-03T12:32:25Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "07bead5c-8f00-417b-b7f6-0c23b76a18cb",
        "parentId" : "859c9616-17c7-4ddf-bcba-dbf14604fe0d",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Good catch, yes, that comment was out of date.",
        "createdAt" : "2020-01-03T09:15:53Z",
        "updatedAt" : "2020-01-03T12:32:25Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c7a846c9d2d4667f802a5f078072d5c44f982816",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,79 @@\n+// Copyright (c) 2019 The DAML Authors. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.daml.lf.engine.script\n+\n+import java.io.File\n+import java.time.Duration\n+\n+import com.digitalasset.platform.services.time.TimeProviderType\n+\n+case class TestConfig(\n+    darPath: File,\n+    ledgerHost: Option[String],\n+    ledgerPort: Option[Int],\n+    participantConfig: Option[File],\n+    timeProviderType: TimeProviderType,\n+    commandTtl: Duration,\n+)\n+\n+object TestConfig {\n+  private val parser = new scopt.OptionParser[TestConfig](\"test-script\") {\n+    head(\"test-script\")\n+\n+    opt[File](\"dar\")\n+      .required()\n+      .action((f, c) => c.copy(darPath = f))\n+      .text(\"Path to the dar file containing the script\")\n+\n+    opt[String](\"ledger-host\")\n+      .optional()\n+      .action((t, c) => c.copy(ledgerHost = Some(t)))\n+      .text(\"Ledger hostname\")\n+\n+    opt[Int](\"ledger-port\")\n+      .optional()\n+      .action((t, c) => c.copy(ledgerPort = Some(t)))\n+      .text(\"Ledger port\")\n+\n+    opt[File](\"participant-config\")\n+      .optional()\n+      .action((t, c) => c.copy(participantConfig = Some(t)))\n+      .text(\"File containing the participant configuration in JSON format\")\n+\n+    opt[Unit]('w', \"wall-clock-time\")\n+      .action { (t, c) =>\n+        c.copy(timeProviderType = TimeProviderType.WallClock)\n+      }\n+      .text(\"Use wall clock time (UTC). When not provided, static time is used.\")\n+\n+    opt[Long](\"ttl\")\n+      .action { (t, c) =>\n+        c.copy(commandTtl = Duration.ofSeconds(t))\n+      }\n+      .text(\"TTL in seconds used for commands emitted by the trigger. Defaults to 30s.\")\n+\n+    checkConfig(c => {\n+      // TODO: Start in-memory ledger automatically. See #3687."
  }
]