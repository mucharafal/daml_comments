[
  {
    "id" : "b11a534f-c9c9-4641-a17d-98264110177e",
    "prId" : 5454,
    "comments" : [
      {
        "id" : "1c73d49a-4ee1-43f4-b79d-9557f0fea114",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "The point of the `CREATE_NEW` option is that putting a `exists()` guard is not reliable, so you might as well leave out this check entirely. Or, rather, if you really want to detect that case and convert it to data, then trap the exception that `Files.write` throws in this circumstance, instead.",
        "createdAt" : "2020-04-07T19:35:29Z",
        "updatedAt" : "2020-04-08T16:28:33Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d9cec789b9965322dc5e0bca30fec585e45ff851",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,43 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ports\n+\n+import java.nio.file.{Files, Path}\n+\n+import scalaz.{-\\/, Show, \\/}\n+\n+object PortFiles {\n+  sealed abstract class Error extends Serializable with Product\n+  final case class FileAlreadyExists(path: Path) extends Error\n+  final case class CannotWriteIntoFile(path: Path, reason: String) extends Error\n+\n+  object Error {\n+    implicit val showInstance: Show[Error] = Show.shows {\n+      case FileAlreadyExists(path) =>\n+        s\"Port file already exists: ${path.toAbsolutePath: Path}\"\n+      case CannotWriteIntoFile(path, reason) =>\n+        s\"Cannot write into port file: ${path.toAbsolutePath: Path}, reason: $reason\"\n+    }\n+  }\n+\n+  /**\n+    * Creates a port and requests that the created file be deleted when the virtual machine terminates.\n+    * See [[java.io.File#deleteOnExit()]].\n+    */\n+  def write(path: Path, port: Port): Error \\/ Unit =\n+    if (path.toFile.exists())"
  },
  {
    "id" : "fafa8597-4f37-460d-99db-7972f03a65ac",
    "prId" : 5454,
    "comments" : [
      {
        "id" : "6d1a689a-dea7-46c8-9c56-0285895e4c61",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I think `CannotWriteToFile` is slightly more idiomatic, but not fussed.",
        "createdAt" : "2020-04-08T14:44:48Z",
        "updatedAt" : "2020-04-08T16:28:33Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "93622969-d34a-40c7-b45d-fdbe4c136979",
        "parentId" : "6d1a689a-dea7-46c8-9c56-0285895e4c61",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "Tell me what you want to cal it... I wanted to have `FileAlreadyExists` as a separate error, don't care much about the other error.",
        "createdAt" : "2020-04-08T14:55:10Z",
        "updatedAt" : "2020-04-08T16:28:33Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3bc89c77-51c4-4510-94e6-89753dc8a8d0",
        "parentId" : "6d1a689a-dea7-46c8-9c56-0285895e4c61",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Eh, if the build passes, merge; if it fails, push the change. ðŸ˜› ",
        "createdAt" : "2020-04-08T14:58:34Z",
        "updatedAt" : "2020-04-08T16:28:33Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d9cec789b9965322dc5e0bca30fec585e45ff851",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,44 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.ports\n+\n+import java.nio.file.{Files, Path}\n+\n+import scalaz.{Show, \\/}\n+\n+import scala.collection.JavaConverters._\n+\n+object PortFiles {\n+  sealed abstract class Error extends Serializable with Product\n+  final case class FileAlreadyExists(path: Path) extends Error\n+  final case class CannotWriteIntoFile(path: Path, reason: String) extends Error"
  }
]