[
  {
    "id" : "826a2169-6f2c-4513-85c9-3c0c1f033548",
    "prId" : 7325,
    "comments" : [
      {
        "id" : "16d25031-3186-467e-883b-f298f3eef1ee",
        "parentId" : null,
        "author" : {
          "login" : "mjhopkins-da",
          "name" : "Mark Hopkins",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/44181993?u=c83604552ed3b18a8f064164d64ac262a29c41c5&v=4"
        },
        "body" : "Probably best to do a search and replace for \"fix trade\".",
        "createdAt" : "2020-09-09T06:30:09Z",
        "updatedAt" : "2020-09-11T13:32:14Z",
        "lastEditedBy" : {
          "login" : "mjhopkins-da",
          "name" : "Mark Hopkins",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/44181993?u=c83604552ed3b18a8f064164d64ac262a29c41c5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1923dae5-85fb-4972-b997-8bd025f2b3e7",
        "parentId" : "16d25031-3186-467e-883b-f298f3eef1ee",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "it is just a label in the `simulation.log`. However if you really think we should remove all references to fix-trade... It can be done. I just don't really see any value of doing this. Can be `foo` or `bar` right :)",
        "createdAt" : "2020-09-09T20:39:19Z",
        "updatedAt" : "2020-09-11T13:32:14Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4c9440e652dd2c98b104ede6120ec76fc9f35173",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,463 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.gatling.stats\n+\n+import java.io.File\n+\n+import org.scalactic.TypeCheckedTripleEquals\n+import scalaz.Scalaz._\n+\n+import scala.util.Random\n+import com.daml.gatling.stats.util.ReadFileSyntax._\n+import org.scalatest.{FlatSpec, Matchers}\n+import com.daml.bazeltools.BazelRunfiles.requiredResource\n+\n+@SuppressWarnings(Array(\"org.wartremover.warts.NonUnitStatements\"))\n+class SimulationLogSpec extends FlatSpec with Matchers with TypeCheckedTripleEquals {\n+  import SimulationLog._\n+\n+  behavior of \"SimulationLog\"\n+\n+  private val simulationLog = \"libs-scala/gatling-utils/src/test/resources/simulation-log\"\n+\n+  private def resultFor(fileName: String) =\n+    SimulationLog.fromFile(requiredResource(s\"$simulationLog/$fileName.txt\"))\n+\n+  it should \"fail if file does not exist\" in {\n+    SimulationLog.fromFile(new File(\"DOES-NOT-EXIST-OgUzdJsvKHc9TtfNiLXA\")) shouldBe 'left\n+  }\n+\n+  it should \"fail if no RUN entry\" in {\n+    resultFor(\"no-run\") shouldBe 'left\n+  }\n+\n+  it should \"fail if no USER entry\" in {\n+    resultFor(\"no-user\") shouldBe 'left\n+  }\n+\n+  it should \"fail if multiple RUN entries\" in {\n+    resultFor(\"multiple-run\") shouldBe 'left\n+  }\n+\n+  it should \"return correct result for minimal log\" in {\n+    val request = RequestStats(\n+      userId = 1,\n+      requestLabel = \"fix-trade-sync\","
  }
]