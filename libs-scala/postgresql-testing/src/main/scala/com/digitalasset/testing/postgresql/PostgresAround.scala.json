[
  {
    "id" : "fcdc4949-eceb-45f9-bcba-60ed6310dda9",
    "prId" : 5919,
    "comments" : [
      {
        "id" : "a9990fab-154d-4539-81ea-79f74eeffc4c",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Making the decision here implicitly seems a bit scary. Can we at least add some logging statement what we are doing?",
        "createdAt" : "2020-05-12T11:12:46Z",
        "updatedAt" : "2020-05-13T16:07:51Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0c2cb086-fc27-4e70-af21-10b277a6b660",
        "parentId" : "a9990fab-154d-4539-81ea-79f74eeffc4c",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "It's logged [on line 48](https://github.com/digital-asset/daml/pull/5919/files#diff-0f0e5ff754ef51098020dfd7c5408183R48).\r\n\r\nIt'll look like this:\r\n\r\n```\r\n[INFO] Connected to PostgreSQL on localhost:54321.\r\n```",
        "createdAt" : "2020-05-12T12:30:59Z",
        "updatedAt" : "2020-05-13T16:07:51Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5c4e606f-9545-4982-ade5-e44533a7d13f",
        "parentId" : "a9990fab-154d-4539-81ea-79f74eeffc4c",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "And [on line 53](https://github.com/digital-asset/daml/pull/5919/files#diff-0f0e5ff754ef51098020dfd7c5408183R53) for the other branch of the conditional.",
        "createdAt" : "2020-05-12T13:13:16Z",
        "updatedAt" : "2020-05-13T16:07:51Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f7e8bff0eb68cdffcfcee20ae1cf05195f1fa5c4",
    "line" : 29,
    "diffHunk" : "@@ -10,54 +10,86 @@ import java.nio.file.{Files, Path}\n import java.util.UUID\n import java.util.concurrent.atomic.AtomicBoolean\n \n+import com.daml.ports.Port\n import com.daml.testing.postgresql.PostgresAround._\n import org.apache.commons.io.{FileUtils, IOUtils}\n import org.slf4j.LoggerFactory\n \n import scala.collection.JavaConverters.asScalaBufferConverter\n+import scala.util.Try\n import scala.util.control.NonFatal\n \n trait PostgresAround {\n-  @volatile\n-  private var fixture: PostgresFixture = _\n+  @volatile private var server: PostgresServer = _\n+  @volatile private var paths: Option[PostgresServerPaths] = None\n \n   private val started: AtomicBoolean = new AtomicBoolean(false)\n \n-  protected def startEphemeralPostgres(): Unit = {\n+  protected def connectToPostgresqlServer(): Unit = {\n+    (\n+      sys.env.get(\"POSTGRESQL_HOST\"),\n+      sys.env.get(\"POSTGRESQL_PORT\").map(port => Port(port.toInt)),\n+      sys.env.get(\"POSTGRESQL_USERNAME\"),\n+      sys.env.get(\"POSTGRESQL_PASSWORD\"),\n+    ) match {\n+      case (Some(hostName), Some(port), Some(userName), Some(password)) =>"
  }
]