[
  {
    "id" : "10af18a6-01bb-4356-8901-b7ca920382e5",
    "prId" : 3594,
    "comments" : [
      {
        "id" : "21db4dae-e875-4428-b8ba-9c772c1d47db",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n  private[grpc] final class SpecificGrpcException(status: SpecificGrpcStatus) {\r\n```\r\nSince we're implementing `unapply` ourselves I don't think we need to make a `case class` out of this.",
        "createdAt" : "2019-11-22T16:08:35Z",
        "updatedAt" : "2019-11-22T16:31:16Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "631bc27ada32dc98bf43244f4e6d0228ffd327be",
    "line" : null,
    "diffHunk" : "@@ -3,15 +3,41 @@\n \n package com.digitalasset.grpc\n \n+import com.digitalasset.grpc.GrpcStatus.SpecificGrpcStatus\n import io.grpc.{Metadata, Status, StatusException, StatusRuntimeException}\n \n object GrpcException {\n-\n-  def unapply(arg: Exception): Option[(Status, Metadata)] =\n-    arg match {\n+  def unapply(exception: Exception): Option[(Status, Metadata)] =\n+    exception match {\n       case e: StatusRuntimeException => Some((e.getStatus, e.getTrailers))\n       case e: StatusException => Some((e.getStatus, e.getTrailers))\n       case _ => None\n     }\n \n+  case class SpecificGrpcException(status: SpecificGrpcStatus) {"
  }
]