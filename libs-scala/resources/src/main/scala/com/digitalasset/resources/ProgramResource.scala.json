[
  {
    "id" : "9358388e-da4a-47bf-b80c-f1e2b0fa2985",
    "prId" : 5564,
    "comments" : [
      {
        "id" : "24aa8040-7214-4547-a24c-65cb35746f89",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Probably passing the `executionContext` explicitly is simpler.",
        "createdAt" : "2020-04-15T12:31:23Z",
        "updatedAt" : "2020-04-15T12:31:59Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "571ba92b-1d7e-4503-a5bd-2d88c918b6e1",
        "parentId" : "24aa8040-7214-4547-a24c-65cb35746f89",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Tried that but you end up with:\r\n\r\n```scala\r\n         Try(owner.acquire()(executionContext)).fold(Resource.failed(_)(executionContext), identity) \r\n```\r\n\r\nThat's a bit too noisy for me.",
        "createdAt" : "2020-04-15T12:48:27Z",
        "updatedAt" : "2020-04-15T12:48:27Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a0409328b7bfd7d678eb30a63b01ecbd6cffd90d",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +27,31 @@      val resource = {\n        implicit val executionContext: ExecutionContext =\n          ExecutionContext.fromExecutor(executorService)\n        Try(owner.acquire()).fold(Resource.failed, identity)\n      }"
  },
  {
    "id" : "e48229db-3fe5-42fc-b2ae-68ae3fe8aec3",
    "prId" : 4607,
    "comments" : [
      {
        "id" : "ca3083f2-6a63-4d40-9af7-c2e5aafb0082",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Why the self-type?",
        "createdAt" : "2020-02-19T16:11:32Z",
        "updatedAt" : "2020-02-19T20:48:13Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0d6b5f43-77b1-43b7-90ef-e3567dd8ca87",
        "parentId" : "ca3083f2-6a63-4d40-9af7-c2e5aafb0082",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "To make sure people don't forget to actually extend `RuntimeException` or similar.",
        "createdAt" : "2020-02-19T16:58:03Z",
        "updatedAt" : "2020-02-19T20:48:13Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "469b977b-aa79-4ce4-a0b2-84c723ddc2b4",
        "parentId" : "ca3083f2-6a63-4d40-9af7-c2e5aafb0082",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Then why removing the `RuntimeException`? :slightly_smiling_face: ",
        "createdAt" : "2020-02-19T17:04:52Z",
        "updatedAt" : "2020-02-19T20:48:13Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "848ae526-3c94-4b12-af70-0c830428c946",
        "parentId" : "ca3083f2-6a63-4d40-9af7-c2e5aafb0082",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Because it allows me to do `new LedgerIdMismatchException(â€¦) with StartupException`, which means that `LedgerIdMismatchException` can be moved to _ledger-api-common_, which doesn't have access to `StartupException` and doesn't know anything about the concept of \"startup\".",
        "createdAt" : "2020-02-19T20:09:55Z",
        "updatedAt" : "2020-02-19T20:48:13Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2631a6f3d08f69f84454f5b30c7ebcb7581b0e28",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +70,74 @@\n  trait StartupException extends NoStackTrace {\n    self: Exception =>\n  }\n"
  },
  {
    "id" : "c6a035a7-d11b-4605-8e53-eb18d5ca7bad",
    "prId" : 4422,
    "comments" : [
      {
        "id" : "c87337b5-a7b9-478c-8835-8dc49e5fbd76",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n            s\"Shutting down because of an initialization error: ${exception.getMessage}\", exception)\r\n```\r\nWhy the newline? It may be just escaped if structured logging is used, anyhow.",
        "createdAt" : "2020-02-06T12:44:17Z",
        "updatedAt" : "2020-02-06T14:21:29Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "10c0c38d-a5a8-4ed2-9eb1-dfe62a91f66a",
        "parentId" : "c87337b5-a7b9-478c-8835-8dc49e5fbd76",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "It's not, I checked. The error looks like this:\r\n\r\n```\r\nShutting down because of an initialization error.\r\nUnknown database: jdbc:notathing\r\n```\r\n\r\nIf I pass the exception as an argument, I get this:\r\n\r\n```\r\nShutting down because of an initialization error.\r\ncom.daml.ledger.on.sql.Database$InvalidDatabaseException: Unknown database: jdbc:notathing\r\n```",
        "createdAt" : "2020-02-06T14:07:56Z",
        "updatedAt" : "2020-02-06T14:21:29Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a3e584e59ae39b77a6088641e3c5a3287071b5ff",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +52,56 @@        case Failure(exception: StartupException) =>\n          logger.error(\n            s\"Shutting down because of an initialization error.\\n${exception.getMessage}\")\n          stop()\n          sys.exit(1)"
  }
]