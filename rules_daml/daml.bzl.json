[
  {
    "id" : "915fd0b5-d5d5-4649-abb3-c44d9195d0fb",
    "prId" : 7183,
    "comments" : [
      {
        "id" : "ff549048-fa28-4925-93c6-0b9a3fcb518b",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I’m not quite clear why you need the `-gt 0` stuff. Shouldn’t this do the right thing for zero deps as well?",
        "createdAt" : "2020-08-28T16:09:39Z",
        "updatedAt" : "2020-08-28T16:09:55Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9e6ccbd5-9952-4447-a790-9ea8e04ac0fa",
        "parentId" : "ff549048-fa28-4925-93c6-0b9a3fcb518b",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "For zero deps it prints `,\"\"` which then fails with\r\n```\r\ndamlc: user error (Cannot resolve SDK dependency ''. Use daml assistant.)\r\n```",
        "createdAt" : "2020-08-28T16:11:52Z",
        "updatedAt" : "2020-08-28T16:11:53Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b224c872d43d188f86f321d9f3060fc84506ea6b",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +333,337 @@version: 0.0.1\nsource: .\ndependencies: [daml-stdlib, daml-prim $$([ $${{#DEPS[@]}} -gt 0 ] && printf ',\"%s\"' $${{DEPS[@]}})]\nEOF\n{cp_srcs}"
  },
  {
    "id" : "616f3da7-77bb-4af8-8f03-8642e83fc1d1",
    "prId" : 5070,
    "comments" : [
      {
        "id" : "80866a68-7aeb-498f-82ab-d25f0dcfcd13",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This needs to be `ghc_version` not SDK version. `sdk_version` will break when you are on a snapshot release commit.",
        "createdAt" : "2020-03-19T07:23:49Z",
        "updatedAt" : "2020-03-19T07:23:49Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b215329f-70c3-48dc-98b4-1bffb07f5ccd",
        "parentId" : "80866a68-7aeb-498f-82ab-d25f0dcfcd13",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Actually no sorry, I got confused. The `version` field needs to be in the format `ghc_version` gives you. `sdk_version` is fine :+1:",
        "createdAt" : "2020-03-19T07:32:49Z",
        "updatedAt" : "2020-03-19T16:36:38Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "92633fe2-3fca-45ea-8dd5-93567c19ee17",
        "parentId" : "80866a68-7aeb-498f-82ab-d25f0dcfcd13",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Thanks. @garyverhaegen-da Is there doc to explain what versions shoul dbe used where?\r\nI made the fix in PR #5094",
        "createdAt" : "2020-03-19T16:34:58Z",
        "updatedAt" : "2020-03-19T16:34:58Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c4876dd8-ffdb-4b72-a842-f13a22570594",
        "parentId" : "80866a68-7aeb-498f-82ab-d25f0dcfcd13",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "`ghc_version` needs to be used for anything that ends up as the version of a GHC (DAML) package, e.g. for the version of `daml-stdlib`. `sdk-version` is the “official” way to refer to an SDK version e.g. in the assistant. In this case `sdk_version` is completely correct. Sorry for forgetting to send the comment. I keep getting confused by githubs UX.",
        "createdAt" : "2020-03-19T16:45:44Z",
        "updatedAt" : "2020-03-19T16:45:45Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1124c3bce4e6881fde26f5bd070e74b01ce38a50",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +27,31 @@        output = daml_yaml,\n        content = \"\"\"\n            sdk-version: {sdk}\n            name: {name}\n            version: {version}"
  },
  {
    "id" : "4f0a78d2-6f85-465c-8abe-a45d4d5d8e5c",
    "prId" : 1894,
    "comments" : [
      {
        "id" : "00008fe4-bd2f-4d6a-b47a-fb59adef123f",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "How come this doesn't require the usual [bash `rlocation` boilerplate](https://github.com/bazelbuild/bazel/blob/168ee7c589955372843115f67d9df2b4cc42e6ba/examples/shell/test.sh#L18)?",
        "createdAt" : "2019-06-27T15:23:54Z",
        "updatedAt" : "2019-06-28T10:23:02Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0264d9a3-b119-4ca4-a1f2-12b44e79496d",
        "parentId" : "00008fe4-bd2f-4d6a-b47a-fb59adef123f",
        "author" : {
          "login" : "majcherm-da",
          "name" : "Michał Majcherski",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/43614029?u=8320ef35eb6289112c9c95df3e483f322c9aa60e&v=4"
        },
        "body" : "I was also a bit surprised, but it's injected automatically - the difference here is that it's a Bazel's rule, not plain bash script used in `sh_test`. Generated test exec files does not contain any defintion of the `rlocation`, so execution of these tests outside of Bazel runtime will fail, but not sure if we care about such case (running tests generated by Bazel outside of Bazel).",
        "createdAt" : "2019-06-28T09:06:42Z",
        "updatedAt" : "2019-06-28T10:23:02Z",
        "lastEditedBy" : {
          "login" : "majcherm-da",
          "name" : "Michał Majcherski",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/43614029?u=8320ef35eb6289112c9c95df3e483f322c9aa60e&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4ef4c9c8-511b-4182-a572-7e5a07d078d0",
        "parentId" : "00008fe4-bd2f-4d6a-b47a-fb59adef123f",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Interesting, that's good to know.\r\n\r\n> not sure if we care about such case (running tests generated by Bazel outside of Bazel).\r\n\r\nThe environment between `bazel run` and `bazel test` is typically different, so I guess it's fine if these tests require `bazel test`. It's still possible to pass arguments using `--test_args` if that's necessary at some point.",
        "createdAt" : "2019-06-28T09:26:27Z",
        "updatedAt" : "2019-06-28T10:23:02Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "04c42d8fd5873e96f3f2e104af65a66436bf3ea1",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +107,111 @@      set -eou pipefail\n\n      DAMLC=$(rlocation $TEST_WORKSPACE/{damlc})\n      rlocations () {{ for i in $@; do echo $(rlocation $TEST_WORKSPACE/$i); done; }}\n"
  }
]