[
  {
    "id" : "fec058e1-7fc6-4bc7-99e5-002d215ac236",
    "prId" : 1466,
    "comments" : [
      {
        "id" : "9090bad7-3797-4d03-9a1d-0e78231cf23c",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "These forkIO calls have a nasty smell to them... Are they temporary or permanent? Do we need better lifetime control on this function?",
        "createdAt" : "2019-05-31T10:19:54Z",
        "updatedAt" : "2019-05-31T11:22:01Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9804a98b-eaf8-48d9-8514-9302ce9d6f25",
        "parentId" : "9090bad7-3797-4d03-9a1d-0e78231cf23c",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Good point, Iâ€™ve changed it to tear down all of `runServer` if any of these threads die which corresponds to what the `runServer` in `json-rpc` does.",
        "createdAt" : "2019-05-31T11:21:49Z",
        "updatedAt" : "2019-05-31T11:22:01Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5d6745a5eee886338cb22d2940d13abf42e3c32c",
    "line" : null,
    "diffHunk" : "@@ -46,26 +59,143 @@ runServer loggerH reqHandler notifHandler notifChan = do\n     -- order not to mess up the output too much. Verified that this breaks\n     -- the language server tests without the redirection.\n     putStr \" \" >> hFlush stdout\n+    clientMsgChan <- newTChanIO\n+    void $ LSP.runWithHandles\n+        stdin\n+        newStdout\n+        (const $ Right (), handleInit clientMsgChan)\n+        (handlers clientMsgChan)\n+        options\n+        Nothing\n+    where\n+        reqHandler' :: (ServerRequest, LspId) -> IO LSP.FromServerMessage\n+        reqHandler' (req, reqId) =\n+            reqHandler\n+                (\\res -> ResponseMessage \"2.0\" (responseId reqId) (Just res) Nothing)\n+                (\\err -> ResponseMessage \"2.0\" (responseId reqId) Nothing (Just $ ResponseError err \"\" Nothing))\n+                req\n+        handleInit :: TChan LSP.FromClientMessage -> LSP.LspFuncs () -> IO (Maybe LSP.ResponseError)\n+        handleInit clientMsgChan LSP.LspFuncs{..} = do\n+            _ <- forkIO $ forever $ do"
  }
]