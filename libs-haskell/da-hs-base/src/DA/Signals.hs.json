[
  {
    "id" : "c4d07cd3-202a-4627-a464-79414d23d963",
    "prId" : 4365,
    "comments" : [
      {
        "id" : "952bc70a-4ca0-4c12-92c1-68410396e7d6",
        "parentId" : null,
        "author" : null,
        "body" : "Is this a busy loop, or does it not consume cycles constantly?\r\nIt might be better to use a short `threadDelay` between checks, or something.",
        "createdAt" : "2020-02-04T10:13:13Z",
        "updatedAt" : "2020-02-04T12:39:15Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "81874786-02a3-47a6-b8dc-152ccad5a6e7",
        "parentId" : "952bc70a-4ca0-4c12-92c1-68410396e7d6",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "`isEOF` blocks until something changes so this is not a busy loop. We will only loop if we get input (unlikely given that we donâ€™t accept legitimate stdin input) .",
        "createdAt" : "2020-02-04T10:15:53Z",
        "updatedAt" : "2020-02-04T12:39:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f1029174-0de2-410d-8d87-c242795b3aac",
        "parentId" : "952bc70a-4ca0-4c12-92c1-68410396e7d6",
        "author" : null,
        "body" : "Thanks for the explanation! It might be nice to add a comment.",
        "createdAt" : "2020-02-04T10:18:32Z",
        "updatedAt" : "2020-02-04T12:39:15Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "bbb1f89a-bd36-4172-82d6-37c36ce547b5",
        "parentId" : "952bc70a-4ca0-4c12-92c1-68410396e7d6",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "actually thatâ€™s not quite true, it will block at the beginning but once we have some input itâ€™s a busy loop. Iâ€™ve changed it to have some delay.",
        "createdAt" : "2020-02-04T10:19:19Z",
        "updatedAt" : "2020-02-04T12:39:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "aec77c0a-c8d4-4e2f-9e77-ef59ee723bea",
        "parentId" : "952bc70a-4ca0-4c12-92c1-68410396e7d6",
        "author" : null,
        "body" : "It looks like it only blocks if there's nothing in the input buffer.",
        "createdAt" : "2020-02-04T10:22:49Z",
        "updatedAt" : "2020-02-04T12:39:15Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b30afeaf-6e42-4464-b91c-ba2f7eff4667",
        "parentId" : "952bc70a-4ca0-4c12-92c1-68410396e7d6",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "exactly",
        "createdAt" : "2020-02-04T10:23:30Z",
        "updatedAt" : "2020-02-04T12:39:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1f0cdc5d-5671-4e4e-bab9-81f602e2d6d4",
        "parentId" : "952bc70a-4ca0-4c12-92c1-68410396e7d6",
        "author" : null,
        "body" : "Ah, I didn't see your second comment before my last one ^^",
        "createdAt" : "2020-02-04T10:25:57Z",
        "updatedAt" : "2020-02-04T12:39:15Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c775ac9f-5deb-40c5-bf1d-d791c6fc1fe4",
        "parentId" : "952bc70a-4ca0-4c12-92c1-68410396e7d6",
        "author" : null,
        "body" : "Another way to prevent the busy loop is to always be reading bytes (`hGetLine`) and handle the `isEOFError` IOError.",
        "createdAt" : "2020-02-04T10:32:08Z",
        "updatedAt" : "2020-02-04T12:39:15Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9386475e-376e-4bdf-8286-4b154edb34cc",
        "parentId" : "952bc70a-4ca0-4c12-92c1-68410396e7d6",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I considered that but then we are completely screwed if any program invoked by daml-helper tries to read from stdin which seems a bit fragile.",
        "createdAt" : "2020-02-04T10:34:10Z",
        "updatedAt" : "2020-02-04T12:39:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d4d70654da8fa0641585e3a1e2e40e25bbcfc522",
    "line" : null,
    "diffHunk" : "@@ -25,3 +29,15 @@ installSignalHandlers = do\n     mainThread <- myThreadId\n     void $ installHandler sigTERM (Catch $ throwTo mainThread UserInterrupt) Nothing\n #endif\n+\n+withCloseOnStdin :: IO a -> IO a\n+withCloseOnStdin a = do\n+    mainThread <- myThreadId\n+    -- We close stdin at the end to avoid potential issues\n+    -- with isEOF blocking on Windows.\n+    withAsync (go mainThread) (const $ a `finally` hClose stdin)\n+  where go mainThread = do\n+            b <- isEOF\n+            if b\n+                then throwTo mainThread UserInterrupt\n+                else go mainThread"
  },
  {
    "id" : "7de811e8-c661-4be0-9cb0-0bbf35e10520",
    "prId" : 4365,
    "comments" : [
      {
        "id" : "b1b09f9f-98f7-494f-b43a-847f90fe4963",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Lovely, like this it hangs on Windows since we cannot kill `isEOF` which I understand. If I change it to `(a >> hClose stdin)` as an attempt to fix this it even hangs on Linux for reasons that I do not understand. It is a mystery to me how anyone manages to write Haskell code that doesnâ€™t end up locking itself up on Windows.",
        "createdAt" : "2020-02-04T10:33:24Z",
        "updatedAt" : "2020-02-04T12:39:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "79bcc1b0-ae7b-4a2c-a5e4-ef5ae7c2ed43",
        "parentId" : "b1b09f9f-98f7-494f-b43a-847f90fe4963",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Oh I understand whatâ€™s going on `hClose stdin` blocks because the handle is being used by `isEOF`.",
        "createdAt" : "2020-02-04T10:40:18Z",
        "updatedAt" : "2020-02-04T12:39:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2b191533-576b-454c-89cf-9971ff0391ac",
        "parentId" : "b1b09f9f-98f7-494f-b43a-847f90fe4963",
        "author" : null,
        "body" : "`const a >> getPid >>= terminateProcess` ðŸ˜ˆ ",
        "createdAt" : "2020-02-04T10:43:58Z",
        "updatedAt" : "2020-02-04T12:39:15Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "63c49eca-591b-4689-b274-0f97c7f0e1b1",
        "parentId" : "b1b09f9f-98f7-494f-b43a-847f90fe4963",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I think I can write a loop around `hReady` to fix this slightly nicer :slightly_smiling_face: ",
        "createdAt" : "2020-02-04T10:44:50Z",
        "updatedAt" : "2020-02-04T12:39:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "010ccadd-f3ae-4542-a42a-80ee13264da6",
        "parentId" : "b1b09f9f-98f7-494f-b43a-847f90fe4963",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Tested the loop on Linux and Windows so this seems a workable solution. Tempted to start writing my own non-broken process library at this point.",
        "createdAt" : "2020-02-04T10:58:47Z",
        "updatedAt" : "2020-02-04T12:39:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d4d70654da8fa0641585e3a1e2e40e25bbcfc522",
    "line" : null,
    "diffHunk" : "@@ -25,3 +29,13 @@ installSignalHandlers = do\n     mainThread <- myThreadId\n     void $ installHandler sigTERM (Catch $ throwTo mainThread UserInterrupt) Nothing\n #endif\n+\n+withCloseOnStdin :: IO a -> IO a\n+withCloseOnStdin a = do\n+    mainThread <- myThreadId\n+    withAsync (go mainThread) (const a)"
  }
]