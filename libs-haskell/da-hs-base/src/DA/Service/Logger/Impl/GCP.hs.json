[
  {
    "id" : "42041d7c-f770-4723-afef-9e45d9e9871e",
    "prId" : 4506,
    "comments" : [
      {
        "id" : "a7e58540-3728-4d41-946a-fd9f3b6729e3",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Definitely not something for this PR but I somewhat wonder if we might be better off in the long term just writing stuff to a `sqlite` database instead of messing around with a bunch of files pretending we can safely lock them.",
        "createdAt" : "2020-02-13T16:07:09Z",
        "updatedAt" : "2020-02-14T15:06:45Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a27bf271bc01ccd6f378a901ed930f5ba85959ce",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +125,129 @@\nsentDataFile :: GCPState -> FilePath\nsentDataFile GCPState{..} =\n    gcpDamlDir </> (\".sent_data_\" <> unGCPTag gcpTag)\n"
  },
  {
    "id" : "cf3650f3-59b0-4af2-8e59-43344b9ec163",
    "prId" : 2102,
    "comments" : [
      {
        "id" : "a566813b-4767-469c-8df4-d0178d41040c",
        "parentId" : null,
        "author" : null,
        "body" : "save -> safe",
        "createdAt" : "2019-07-11T13:14:37Z",
        "updatedAt" : "2019-07-11T13:17:09Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "4f376a3c-7a9f-41d3-ad75-82de7da1b237",
        "parentId" : "a566813b-4767-469c-8df4-d0178d41040c",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Writing text without a typechecker is hard.",
        "createdAt" : "2019-07-11T13:21:01Z",
        "updatedAt" : "2019-07-11T13:21:01Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "611d931f-756c-4550-abf3-887b7c88e67c",
        "parentId" : "a566813b-4767-469c-8df4-d0178d41040c",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "https://github.com/digital-asset/daml/pull/2107",
        "createdAt" : "2019-07-11T13:23:30Z",
        "updatedAt" : "2019-07-11T13:23:31Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3dc43d88c2f53bdb63af24071fc1afad79b08650",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +75,79 @@    , gcpSentDataFileLock :: Lock\n    -- ^ Lock for accessing sendData.\n    -- Note that this is not save if there are multiple damlc executables\n    -- running. However, we can handle a corrupted data file gracefully\n    -- and cross-platform file locking is annoying so we do not bother"
  },
  {
    "id" : "743aea46-6dfa-42ea-8dd3-5ecc729c2d4b",
    "prId" : 1492,
    "comments" : [
      {
        "id" : "29f00b46-d410-4e0b-8b8b-e76d785f9774",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Thanks! This annoyed me too.",
        "createdAt" : "2019-06-03T12:17:32Z",
        "updatedAt" : "2019-06-03T12:19:17Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "98e0c09b95ae9fc4cd7dbd427aa3f5254b615ae0",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +357,361 @@        res <- try $ do\n            res <- sendLogs [optOut]\n            when (null res) $ writeFile fp \"\"\n        case res of\n            Left (err :: SomeException) -> logException hnd err"
  },
  {
    "id" : "a2fc635b-5b8a-46bf-9666-a2acffa5a257",
    "prId" : 1492,
    "comments" : [
      {
        "id" : "57e2b813-1a31-4fcf-adaf-eb320453539b",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Should this be somewhere shared? With the rest of the log functions?",
        "createdAt" : "2019-06-03T12:18:17Z",
        "updatedAt" : "2019-06-03T12:19:17Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2a65f162-30dc-4d57-9cb0-515c0eceb6d2",
        "parentId" : "57e2b813-1a31-4fcf-adaf-eb320453539b",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Should it also record the stack trace? Does displayException usually include that?",
        "createdAt" : "2019-06-03T12:18:35Z",
        "updatedAt" : "2019-06-03T12:19:17Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "156f5601-6b12-466f-bab2-8c7178f967b6",
        "parentId" : "57e2b813-1a31-4fcf-adaf-eb320453539b",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "You don’t get a stack trace for where the exception was thrown unless you compile with profiling info. I suppose we could include the location of the call to `logException` but I am not sure that’s particularly useful.\r\nI generally tend to keep these helpers local until I actually need them somewhere else.",
        "createdAt" : "2019-06-03T12:24:19Z",
        "updatedAt" : "2019-06-03T12:24:20Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b88a0be7-10f1-40c3-b4d9-6f53af1bbc40",
        "parentId" : "57e2b813-1a31-4fcf-adaf-eb320453539b",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Fair enough on both counts.",
        "createdAt" : "2019-06-03T12:43:55Z",
        "updatedAt" : "2019-06-03T12:43:55Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "98e0c09b95ae9fc4cd7dbd427aa3f5254b615ae0",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +312,316 @@\nlogException :: Exception e => Lgr.Handle m -> e -> m ()\nlogException handle e = Lgr.logJson handle Lgr.Error $ displayException e\n\n"
  },
  {
    "id" : "9f3983d0-1545-4489-bbd7-59e36dcb6c7e",
    "prId" : 1492,
    "comments" : [
      {
        "id" : "ab16014d-a409-41d3-aee3-3586815deff5",
        "parentId" : null,
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Thanks!",
        "createdAt" : "2019-06-03T12:18:44Z",
        "updatedAt" : "2019-06-03T12:19:17Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "98e0c09b95ae9fc4cd7dbd427aa3f5254b615ae0",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +51,55 @@import Data.Time as Time\nimport Data.UUID (UUID)\nimport qualified Data.UUID as UUID\nimport Control.Concurrent.Extra\nimport Control.Monad.Managed"
  }
]