[
  {
    "id" : "f2057524-30ee-4439-a8e1-50057d92069a",
    "prId" : 2374,
    "comments" : [
      {
        "id" : "75219bdd-63ce-4c81-942f-0ca7016789d1",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Just so I understand, you use this convention of adding spaces to names as a way to mark members to not be used explicitly, right?",
        "createdAt" : "2019-08-08T08:27:09Z",
        "updatedAt" : "2019-08-08T08:29:33Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5592ae21-5188-47a3-83df-92cc8c5fb795",
        "parentId" : "75219bdd-63ce-4c81-942f-0ca7016789d1",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "The main goal is to avoid name collisions; what you state is a secondary, albeit also useful goal.",
        "createdAt" : "2019-08-08T12:56:05Z",
        "updatedAt" : "2019-08-08T12:56:05Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d05f84484863ea3c861ab7849aff63c2e050ce00",
    "line" : 8,
    "diffHunk" : "@@ -6,16 +6,17 @@ package com.digitalasset.daml.lf.data\n import ImmArray.ImmArraySeq\n import org.scalacheck.{Arbitrary, Gen}\n import Arbitrary.arbitrary\n+import scalaz.{@@, Tag}\n \n object DataArbitrary {\n-  implicit def arbFrontStack[A: Arbitrary]: Arbitrary[FrontStack[A]] =\n+  implicit def `arb FrontStack`[A: Arbitrary]: Arbitrary[FrontStack[A]] ="
  }
]