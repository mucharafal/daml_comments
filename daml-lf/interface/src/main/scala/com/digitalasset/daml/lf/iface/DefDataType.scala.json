[
  {
    "id" : "43e16341-d131-44bd-a67f-4cce1ed74bd0",
    "prId" : 1529,
    "comments" : [
      {
        "id" : "8291f2ee-7699-4e59-8a43-448745f78f44",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n          case e @ Enum(_) =>\r\n```",
        "createdAt" : "2019-06-05T15:42:02Z",
        "updatedAt" : "2019-06-06T15:52:39Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d48adab2-5776-433b-acdd-4ebd4a00190f",
        "parentId" : "8291f2ee-7699-4e59-8a43-448745f78f44",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "done",
        "createdAt" : "2019-06-05T16:02:51Z",
        "updatedAt" : "2019-06-06T15:52:39Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "181ced0b995bc7875f05cc8260012e8f7fd9d6aa",
    "line" : null,
    "diffHunk" : "@@ -66,8 +66,8 @@ object DataType {\n             Traverse[Record].traverse(r)(f).widen\n           case v @ Variant(_) =>\n             Traverse[Variant].traverse(v)(g).widen\n-          case Enum(vs) =>\n-            Applicative[G].pure(Enum(vs))\n+          case e: Enum =>"
  },
  {
    "id" : "97019f9f-7995-4c18-94b7-309b6281c27c",
    "prId" : 678,
    "comments" : [
      {
        "id" : "d063fe61-6a08-43c8-aac0-12b29d15c29b",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Stray newline",
        "createdAt" : "2019-04-24T16:39:02Z",
        "updatedAt" : "2019-04-25T14:50:23Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ddaffff2-6b3d-4150-898d-f78a9eff6e22",
        "parentId" : "d063fe61-6a08-43c8-aac0-12b29d15c29b",
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "fixed",
        "createdAt" : "2019-04-24T16:44:17Z",
        "updatedAt" : "2019-04-25T14:50:23Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dbf45ad8ac1f86aefb9f28052d73da07469023cd",
    "line" : null,
    "diffHunk" : "@@ -67,44 +74,45 @@ object DataType {\n     }\n \n   sealed trait GetFields[+A] {\n-    def fields: ImmArraySeq[A]\n-    final def getFields: j.List[_ <: A] = fields.asJava\n+    def fields: ImmArraySeq[(String, A)]\n+    final def getFields: j.List[_ <: (String, A)] = fields.asJava\n   }\n }\n \n // Record TypeDecl`s have an object generated for them in their own file\n-final case class Record[+RF](fields: ImmArraySeq[RF])\n-    extends DataType[RF, Nothing]\n-    with DataType.GetFields[RF] {\n+final case class Record[+RT](fields: ImmArraySeq[(String, RT)])\n+    extends DataType[RT, Nothing]\n+    with DataType.GetFields[RT] {\n \n   /** Widen to DataType, in Java. */\n-  def asDataType[PRF >: RF, VF]: DataType[PRF, VF] = this\n+  def asDataType[PRT >: RT, VT]: DataType[PRT, VT] = this\n }\n \n object Record extends FWTLike[Record] {\n   implicit val `R traverse`: Traverse[Record] =\n     new Traverse[Record] {\n       override def traverseImpl[G[_]: Applicative, A, B](fa: Record[A])(\n           f: A => G[B]): G[Record[B]] =\n-        Applicative[G].map(fa.fields traverse f)(bs => fa.copy(fields = bs))\n+        Applicative[G].map(fa.fields traverse (_ traverse f))(bs => fa.copy(fields = bs))\n     }\n }\n \n // Variant TypeDecl`s have an object generated for them in their own file\n-final case class Variant[+VF](fields: ImmArraySeq[VF])\n-    extends DataType[Nothing, VF]\n-    with DataType.GetFields[VF] {\n+final case class Variant[+VT](fields: ImmArraySeq[(String, VT)])\n+    extends DataType[Nothing, VT]\n+    with DataType.GetFields[VT] {\n \n-  /** Widen to DataType, in Java. */\n-  def asDataType[RF, PVF >: VF]: DataType[RF, PVF] = this\n+  /** Widen to DataType, in Ja\n+    * va. */"
  }
]