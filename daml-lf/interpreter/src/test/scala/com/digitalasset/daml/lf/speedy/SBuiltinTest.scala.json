[
  {
    "id" : "6702eca3-70a6-474f-b6a0-ec6811313f9b",
    "prId" : 7501,
    "comments" : [
      {
        "id" : "88b60b90-27fd-43d2-aa93-637239ad4957",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "This seems a bit messy. Not quite sure what would be better. Maybe just a helper method to evaluate `pure x` in a scenario context?",
        "createdAt" : "2020-09-28T17:53:47Z",
        "updatedAt" : "2020-09-29T08:57:50Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f75833e5-fdf2-43c7-8a68-0c06740ceef6",
        "parentId" : "88b60b90-27fd-43d2-aa93-637239ad4957",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I think it is OK for tests.",
        "createdAt" : "2020-09-29T07:43:54Z",
        "updatedAt" : "2020-09-29T08:57:50Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b25c1c36b2946c9654397dda20c730c43a9168fc",
    "line" : 23,
    "diffHunk" : "@@ -1413,7 +1415,18 @@ object SBuiltinTest {\n   }\n \n   private def evalSExpr(e: SExpr, onLedger: Boolean): Either[SError, SValue] = {\n-    val machine = Speedy.Machine.fromPureSExpr(compiledPackages, e, onLedger)\n+    val machine = if (onLedger) {"
  },
  {
    "id" : "51b7f6bb-6cf9-435c-bb2d-d31799a23188",
    "prId" : 7319,
    "comments" : [
      {
        "id" : "462d8d79-46b8-41d0-a87b-41dfe8c1b779",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "We've already defined exactly the same in `SValue.scala`. Can't we reuse that here?",
        "createdAt" : "2020-09-04T11:13:37Z",
        "updatedAt" : "2020-09-04T16:34:01Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "abf995d1e965f73aac6422c0d37ee6362850f920",
    "line" : null,
    "diffHunk" : "@@ -1496,8 +1496,7 @@ object SBuiltinTest {\n     if (xs.isEmpty) \"(Nil @Int64)\"\n     else xs.mkString(s\"(Cons @Int64 [\", \", \", s\"] (Nil @Int64))\")\n \n-  private val entryFields: ImmArray[Ref.Name] =\n-    ImmArray(Ref.Name.assertFromString(\"key\"), Ref.Name.assertFromString(\"value\"))\n+  private val entryFields = Struct.assertFromSeq(List(keyFieldName -> (()), valueFieldName -> (())))"
  },
  {
    "id" : "a9e3942f-9fc5-42ac-9a7f-341fa0880c08",
    "prId" : 4893,
    "comments" : [
      {
        "id" : "b80fafa8-cfba-47c0-8b54-7f5e5d7c56cf",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n  val compiledPackages  =\r\n```",
        "createdAt" : "2020-03-09T13:06:24Z",
        "updatedAt" : "2020-03-13T08:47:05Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "75bd761e-8620-4093-bf85-631d7e75c833",
        "parentId" : "b80fafa8-cfba-47c0-8b54-7f5e5d7c56cf",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Thanks.",
        "createdAt" : "2020-03-12T10:07:02Z",
        "updatedAt" : "2020-03-13T08:47:05Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5e034c77dcd97984f03bcd3890b2ea06272f908a",
    "line" : null,
    "diffHunk" : "@@ -1425,11 +1430,22 @@ class SBuiltinTest extends FreeSpec with Matchers with TableDrivenPropertyChecks\n \n object SBuiltinTest {\n \n+  private val pkg =\n+    p\"\"\"\n+        module Mod {\n+          variant Either A B = Left : A | Right : B ;\n+        }\n+\n+    \"\"\"\n+\n+  val compilePackages  ="
  },
  {
    "id" : "68502ac4-4bc5-4360-8025-abba1bba2a92",
    "prId" : 4893,
    "comments" : [
      {
        "id" : "d59bd4d8-1c64-42f0-a03b-885b8a741ac8",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n      compiledPackages = compiledPackages,\r\n```",
        "createdAt" : "2020-03-09T13:06:34Z",
        "updatedAt" : "2020-03-13T08:47:05Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5e034c77dcd97984f03bcd3890b2ea06272f908a",
    "line" : null,
    "diffHunk" : "@@ -1425,11 +1430,22 @@ class SBuiltinTest extends FreeSpec with Matchers with TableDrivenPropertyChecks\n \n object SBuiltinTest {\n \n+  private val pkg =\n+    p\"\"\"\n+        module Mod {\n+          variant Either A B = Left : A | Right : B ;\n+        }\n+\n+    \"\"\"\n+\n+  val compilePackages  =\n+    PureCompiledPackages(Map(defaultParserParameters.defaultPackageId -> pkg)).right.get\n+\n   private def eval(e: Expr): Either[SError, SValue] = {\n     val machine = Speedy.Machine.fromExpr(\n       expr = e,\n       checkSubmitterInMaintainers = true,\n-      compiledPackages = PureCompiledPackages(Map.empty).right.get,\n+      compiledPackages = compilePackages,"
  },
  {
    "id" : "8a42acd6-6092-45ed-9f4e-9dcb59bdef0c",
    "prId" : 3752,
    "comments" : [
      {
        "id" : "08879420-89f9-4eb8-8914-43ac9c658df5",
        "parentId" : null,
        "author" : null,
        "body" : "```suggestion\r\n  \"EQUAL @TypeRep\" - {\r\n```",
        "createdAt" : "2019-12-06T12:43:09Z",
        "updatedAt" : "2019-12-06T13:22:14Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f134d108-98ab-44ea-86fd-b2208fee26cb",
        "parentId" : "08879420-89f9-4eb8-8914-43ac9c658df5",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2019-12-06T12:50:42Z",
        "updatedAt" : "2019-12-06T13:22:14Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2b61137407ee7fc37090ddd8c577e975b8f44595",
    "line" : null,
    "diffHunk" : "@@ -1285,7 +1285,7 @@ class SBuiltinTest extends FreeSpec with Matchers with TableDrivenPropertyChecks\n \n   }\n \n-  \"EQUAL_CONTRACT_ID\" - {\n+  \"EQUAL @(TypeRep)\" - {"
  },
  {
    "id" : "718d737a-3f06-41db-a5d7-458afbbb3bf9",
    "prId" : 2681,
    "comments" : [
      {
        "id" : "ff56db05-5e99-4c25-8b35-bed5cef04006",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Uncomment again?",
        "createdAt" : "2019-08-28T11:36:59Z",
        "updatedAt" : "2019-08-28T13:06:48Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "faf644e0-f1cf-4257-8c92-4b68df7ec49d",
        "parentId" : "ff56db05-5e99-4c25-8b35-bed5cef04006",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2019-08-28T12:22:55Z",
        "updatedAt" : "2019-08-28T13:06:48Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1a1c94ccb2d1f055e16c314d83381a9c11948792",
    "line" : null,
    "diffHunk" : "@@ -984,20 +1001,20 @@ class SBuiltinTest extends FreeSpec with Matchers with TableDrivenPropertyChecks\n           \"-3.1415926536\" -> \"-3.1415926536\",\n           \"-161803398.87499\" -> \"-161803398.87499\",\n           (\"-\" + \"0\" * 20 + \"1\" * 28) -> (\"-\" + \"1\" * 28),\n-          (\"-\" + \"9\" * 28 + \".\" + \"9\" * 10) -> (\"-\" + \"9\" * 28 + \".\" + \"9\" * 10)\n+          (\"-\" + \"9\" * 28 + \".\" + \"9\" * 10) -> (\"-\" + \"9\" * 28 + \".\" + \"9\" * 10),\n         )\n       val negativeTestCases =\n         Table(\n           \"strings\",\n-          \"pi\",\n-          \"0x11\",\n-          \"1E10\",\n-          \"2.\",\n-          \"1L\",\n-          \"+-1\",\n-          \"1\" * 29,\n-          \"-\" + \"1\" * 29,\n-          \"+\" + \"1\" * 29,\n+          //\"pi\","
  },
  {
    "id" : "2369c376-ca7a-47da-9ccb-506a1bc146cc",
    "prId" : 2569,
    "comments" : [
      {
        "id" : "6dd7f4a7-b603-4e83-94b2-683ad0a73619",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Why are these cases commented out?",
        "createdAt" : "2019-08-16T12:31:38Z",
        "updatedAt" : "2019-08-16T12:56:15Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "293abe96-b70e-4113-be8b-a838112bf418",
        "parentId" : "6dd7f4a7-b603-4e83-94b2-683ad0a73619",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed ",
        "createdAt" : "2019-08-16T12:56:21Z",
        "updatedAt" : "2019-08-16T12:56:21Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2131c18f31b60ca8666d21dd7ca584bb0e43e27a",
    "line" : null,
    "diffHunk" : "@@ -918,12 +928,12 @@ class SBuiltinTest extends FreeSpec with Matchers with TableDrivenPropertyChecks\n       val positiveTestCases =\n         Table(\n           \"strings\" -> \"canonical string\",\n-          (\"9\" * 28 + \".\" + \"9\" * 10) -> (\"9\" * 28 + \".\" + \"9\" * 10),\n-          (\"0\" * 20 + \"1\" * 28) -> (\"0\" * 20 + \"1\" * 28),\n-          \"161803398.87499\" -> \"161803398.87499\",\n-          \"3.1415926536\" -> \"3.1415926536\",\n-          \"2.7182818285\" -> \"2.7182818285\",\n-          \"0.0000000001\" -> \"0.0000000001\",\n+          //(\"9\" * 28 + \".\" + \"9\" * 10) -> (\"9\" * 28 + \".\" + \"9\" * 10),"
  }
]