[
  {
    "id" : "a56cfc8a-9810-4ec5-9f90-8f1a1a2648ae",
    "prId" : 7262,
    "comments" : [
      {
        "id" : "229af43b-4fcd-407e-9452-552e014ecfd5",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n    val Empty =\r\n```\r\nAny reason to create a new one every time this is called?",
        "createdAt" : "2020-08-28T13:09:19Z",
        "updatedAt" : "2020-08-28T13:51:00Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f9e27c84-f27c-4a95-b137-541f8fae1be3",
        "parentId" : "229af43b-4fcd-407e-9452-552e014ecfd5",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Nope",
        "createdAt" : "2020-08-28T13:34:08Z",
        "updatedAt" : "2020-08-28T13:51:00Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b8ee278eed595ea2a951f0ce0821150593ee04d3",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,107 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.lf.ledger\n+\n+import com.daml.lf.data.Ref.Party\n+import com.daml.lf.data.Relation.Relation\n+import com.daml.lf.transaction.BlindingInfo\n+import com.daml.lf.transaction.Node.{NodeCreate, NodeExercises, NodeFetch, NodeLookupByKey}\n+import com.daml.lf.transaction.{NodeId, Transaction => Tx}\n+import com.daml.lf.value.Value.ContractId\n+\n+object BlindingTransaction {\n+\n+  def crash(reason: String) =\n+    throw new IllegalArgumentException(reason)\n+\n+  private object BlindState {\n+    def Empty ="
  }
]