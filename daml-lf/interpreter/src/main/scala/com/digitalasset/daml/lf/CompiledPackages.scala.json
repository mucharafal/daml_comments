[
  {
    "id" : "6f3fe174-bb1d-4a9e-a3f6-2d2d0cc0800f",
    "prId" : 2860,
    "comments" : [
      {
        "id" : "a30b7db4-96a6-4c26-a394-58841daa19a2",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n  override val packageIds = packages.keySet\r\n```\r\nAny reason to recompute every time?",
        "createdAt" : "2019-09-10T13:28:37Z",
        "updatedAt" : "2019-09-13T09:55:56Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "27de42a8-4ce9-4e10-adf8-30844253f599",
        "parentId" : "a30b7db4-96a6-4c26-a394-58841daa19a2",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "`val` is significantly less safe here (there is no warning if you change `CompiledPackages` to make it crash, heck it might already), and `#keySet` is very cheap.",
        "createdAt" : "2019-09-10T18:39:54Z",
        "updatedAt" : "2019-09-13T09:55:56Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "66feacefba7b54019abe3376660df6e5301c989f",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +26,30 @@    defns: Map[SDefinitionRef, SExpr])\n    extends CompiledPackages {\n  override def packageIds = packages.keySet\n  override def getPackage(pkgId: PackageId): Option[Package] = packages.get(pkgId)\n  override def getDefinition(dref: SDefinitionRef): Option[SExpr] = defns.get(dref)"
  }
]