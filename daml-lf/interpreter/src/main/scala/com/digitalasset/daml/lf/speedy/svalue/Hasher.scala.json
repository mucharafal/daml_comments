[
  {
    "id" : "6a77e460-4a0a-42b9-8035-5ce68bbfbacd",
    "prId" : 3715,
    "comments" : [
      {
        "id" : "2a90fee3-c010-4dc2-aa09-578c98c2fecc",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "You can just use `opt.size` here.",
        "createdAt" : "2019-12-05T15:35:17Z",
        "updatedAt" : "2019-12-06T15:11:20Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "eb667050-9f6c-4820-afaa-616d9af0b330",
        "parentId" : "2a90fee3-c010-4dc2-aa09-578c98c2fecc",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "implicit conversion from Option to Traversable are considered warts.",
        "createdAt" : "2019-12-06T10:00:01Z",
        "updatedAt" : "2019-12-06T15:11:21Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0703e5eb35d9a96c6ea7a07d0899920f5b3df5d7",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +74,78 @@                loop(pushOrderedValues(values.size, values.iterator().asScala, cmdsRest), stack)\n              case SOptional(opt) =>\n                loop(pushOrderedValues(opt.fold(0)(_ => 1), opt.iterator, cmdsRest), stack)\n              case SList(values) =>\n                loop(pushOrderedValues(values.length, values.iterator, cmdsRest), stack)"
  },
  {
    "id" : "17c68079-b0b4-4149-9c94-dfa1fdb565b8",
    "prId" : 3715,
    "comments" : [
      {
        "id" : "2732da6c-cc63-4443-8f40-7d95ea45737a",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Nice catch.",
        "createdAt" : "2019-12-05T15:35:20Z",
        "updatedAt" : "2019-12-06T15:11:20Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0703e5eb35d9a96c6ea7a07d0899920f5b3df5d7",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +30,34 @@\n  private def pushOrderedValues(size: Int, values: Iterator[SValue], cmds: List[Command]) =\n    ((Ordered(size) :: cmds) /: values) { case (acc, v) => Value(v) :: acc }\n\n  @tailrec"
  },
  {
    "id" : "db87a487-ce98-4675-9aa4-a2bdb9517a57",
    "prId" : 3715,
    "comments" : [
      {
        "id" : "f1018ec4-683f-4c46-8d3a-785ba1d40a01",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "I am glad you're writing tests.",
        "createdAt" : "2019-12-05T15:35:59Z",
        "updatedAt" : "2019-12-06T15:11:20Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0703e5eb35d9a96c6ea7a07d0899920f5b3df5d7",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +88,92 @@                loop(newCmds, stack)\n              case SAny(t, v) =>\n                loop(Value(v) :: Mix(t.hashCode()) :: cmdsRest, stack)\n            }\n          case Mix(h) =>"
  }
]