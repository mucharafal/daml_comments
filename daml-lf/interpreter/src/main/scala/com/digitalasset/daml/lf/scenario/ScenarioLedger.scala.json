[
  {
    "id" : "6d407b16-e3bf-4b20-a024-d99431a82e34",
    "prId" : 7666,
    "comments" : [
      {
        "id" : "d31f2a5e-f844-434c-b025-0eac134c32af",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Is there nothing similar to\r\n```suggestion\r\n      case ParticipantView(parties) => parties.intersects(disclosures)\r\n```",
        "createdAt" : "2020-10-14T10:44:18Z",
        "updatedAt" : "2020-10-14T10:45:27Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ff14695fd1fb3e46a09494fe7f0bdbb3256d4895",
    "line" : 14,
    "diffHunk" : "@@ -181,7 +183,7 @@ object ScenarioLedger {\n     /** 'True' if the given 'View' contains the given 'Node'. */\n     def visibleIn(view: View): Boolean = view match {\n       case OperatorView => true\n-      case ParticipantView(party) => disclosures contains party\n+      case ParticipantView(parties) => parties.any(disclosures.contains(_))"
  },
  {
    "id" : "0dd4cfa5-4f94-4992-9534-cb68f5d6fe80",
    "prId" : 7291,
    "comments" : [
      {
        "id" : "0e8c34bc-3332-4456-a24e-7e8da33a3e27",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "```suggestion\r\n      effectiveAt: Time.Timestamp,\r\n    ): Seq[LookupOk] = {\r\n```",
        "createdAt" : "2020-09-01T09:24:22Z",
        "updatedAt" : "2020-09-01T09:46:05Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9b7bb21a057ab02ee56a99cd1bafb07278dc5bab",
    "line" : null,
    "diffHunk" : "@@ -593,11 +593,11 @@ case class ScenarioLedger(\n \n   def query(\n       view: View,\n-      effectiveAt: Time.Timestamp): Seq[(ContractId, ContractInst[Tx.Value[ContractId]])] = {\n+      effectiveAt: Time.Timestamp): Seq[LookupOk] = {"
  },
  {
    "id" : "8b300288-2a38-43c7-9f81-64dfb2935d52",
    "prId" : 6571,
    "comments" : [
      {
        "id" : "62426c65-6f32-45bc-81a9-cda93464837a",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "While Iâ€™m not really a fan of synonyms it also seems a bit confusing to work with `Relation.â€¦` in the body of this method but then not use the type synonym.",
        "createdAt" : "2020-07-02T06:26:30Z",
        "updatedAt" : "2020-07-02T06:46:05Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "82a28e91-1ca9-43b4-bbc6-c9ce92b86c06",
        "parentId" : "62426c65-6f32-45bc-81a9-cda93464837a",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Good catch. That's a relic from a failed attempt to change some things. I'll bring it back to its original state. I should have self-reviewed my PR better. ðŸ˜ž",
        "createdAt" : "2020-07-02T06:42:28Z",
        "updatedAt" : "2020-07-02T06:46:05Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4cd2d0f877a6068a0e42dc91938655381275d2cc",
    "line" : null,
    "diffHunk" : "@@ -83,7 +83,7 @@ object ScenarioLedger {\n       globalImplicitDisclosure: Relation[ContractId, Party],\n       failedAuthorizations: FailedAuthorizations,\n   ) {\n-    def disclosures(coidToEventId: ContractId => EventId): Relation[EventId, Party] =\n+    def disclosures(coidToEventId: ContractId => EventId): Map[EventId, Set[Party]] ="
  },
  {
    "id" : "b937cdf7-df3f-4105-b4e9-e0014ba16595",
    "prId" : 6571,
    "comments" : [
      {
        "id" : "ec1a5520-e9ab-419f-b00f-92a8b08a9485",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Shouldnâ€™t `witnesses` be called `divulgees` here?",
        "createdAt" : "2020-07-02T06:29:54Z",
        "updatedAt" : "2020-07-02T06:46:05Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "60d95b2b-1926-4609-a662-5b05623949b2",
        "parentId" : "ec1a5520-e9ab-419f-b00f-92a8b08a9485",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "That's a good idea. Thanks. I blindly copied the old code...",
        "createdAt" : "2020-07-02T06:44:37Z",
        "updatedAt" : "2020-07-02T06:46:05Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4cd2d0f877a6068a0e42dc91938655381275d2cc",
    "line" : null,
    "diffHunk" : "@@ -521,9 +526,18 @@ object ScenarioLedger {\n       processNodes(Right(ledgerData), List(None -> richTr.transaction.roots.toList))\n \n     mbCacheAfterProcess.map { cacheAfterProcess =>\n-      richTr.disclosures(cacheAfterProcess.coidToNodeId).foldLeft(cacheAfterProcess) {\n-        case (cacheP, (nodeId, witnesses)) =>\n-          cacheP.updateLedgerNodeInfo(nodeId)(_.addObservers(witnesses.map(_ -> trId).toMap))\n+      // NOTE(MH): Since `addDisclosures` is biased towards existing\n+      // disclosures, we need to add the \"stronger\" explicit ones first.\n+      val cacheWithExplicitDisclosures =\n+        richTr.explicitDisclosure.foldLeft(cacheAfterProcess) {\n+          case (cacheP, (nodeId, witnesses)) =>\n+            cacheP.updateLedgerNodeInfo(EventId(richTr.transactionId, nodeId))(\n+              _.addDisclosures(witnesses.map(_ -> Disclosure(since = trId, explicit = true)).toMap))\n+        }\n+      richTr.globalImplicitDisclosure.foldLeft(cacheWithExplicitDisclosures) {\n+        case (cacheP, (coid, witnesses)) =>"
  }
]