[
  {
    "id" : "11c067a4-f683-47ad-9311-7f667c66fc81",
    "prId" : 6606,
    "comments" : [
      {
        "id" : "d88bd2e3-cc89-4fb7-875c-3923e5cc8e37",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "You may find the formatting becomes much nicer if you split `k` into its own parameter list (in all cases).\r\n\r\nThis would become:\r\n\r\n```scala\r\n  private[this] def transformExp[A](\r\n      depth: DepthA,\r\n      env: Env,\r\n      exp: SExpr,\r\n      transform: Tx[SExpr, A],\r\n  )(k: K[AExpr, A]): Trampoline[A]\r\n```\r\n\r\nAnd its call site in `transformLet1` would look something like this:\r\n\r\n```scala\r\n      Bounce { () =>\r\n        transformExp(depth1, env1, body, transform) { body1 =>\r\n          Bounce(() => txK(AExpr(SELet1(rhs, body1.wrapped))))\r\n        }\r\n      }\r\n``` ",
        "createdAt" : "2020-07-06T12:42:03Z",
        "updatedAt" : "2020-07-06T12:43:02Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1d34a158-c31b-44a2-9b2b-cd068009bcda",
        "parentId" : "d88bd2e3-cc89-4fb7-875c-3923e5cc8e37",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "@SamirTalwar-DA Thanks, I might try this fix, because the current formatting is truly awful.",
        "createdAt" : "2020-07-06T14:18:50Z",
        "updatedAt" : "2020-07-06T14:18:50Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "65b3fbbee49dc3ce74eb132bd8e62c398a10ccbb",
    "line" : 337,
    "diffHunk" : "@@ -1,1 +277,281 @@      exp: SExpr,\n      transform: Tx[SExpr, A],\n      k: K[AExpr, A]): Trampoline[A] =\n    exp match {\n      case atom0: SExprAtomic =>"
  },
  {
    "id" : "91169f75-be06-4439-91aa-c962c1e3795c",
    "prId" : 6606,
    "comments" : [
      {
        "id" : "d62ebb7e-ceb1-4120-a0cc-93e6f6658322",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "There's probably a monad in here somewhere, but I don't think you should worry about finding it.",
        "createdAt" : "2020-07-06T12:42:57Z",
        "updatedAt" : "2020-07-06T12:43:02Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "65b3fbbee49dc3ce74eb132bd8e62c398a10ccbb",
    "line" : 411,
    "diffHunk" : "@@ -1,1 +351,355 @@                                  k))))\n                ))\n          ))\n\n      case SELocation(loc, body) => {"
  },
  {
    "id" : "c3ceef22-8eaf-4aa0-83fd-e280767e9662",
    "prId" : 6440,
    "comments" : [
      {
        "id" : "92198a5c-0680-4f31-aa60-243c966b028b",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I am surprise this compile. ",
        "createdAt" : "2020-06-22T08:56:43Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "805c2a39-2977-43c5-af76-59030ca073a2",
        "parentId" : "92198a5c-0680-4f31-aa60-243c966b028b",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "it did!...",
        "createdAt" : "2020-06-25T10:29:48Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f1ca0fa6575631a0602ea895e0155fae12fd986b",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +82,86 @@    final def bounce: T = this match {\n      case Land(x) => x\n      case Bounce(continue) => continue().bounce\n    }\n  }"
  },
  {
    "id" : "c3afd0b6-a5a6-4bdb-b39a-506cd4bf70bc",
    "prId" : 6440,
    "comments" : [
      {
        "id" : "1ec161f8-b9c0-41f3-ac77-674ce74d20a6",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Is this comment still valid? Doesn't the Scala type checker enforce this for us given the separate AST for ANF expressions?",
        "createdAt" : "2020-06-26T09:32:27Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5725aee1-b6fb-48b7-8335-bc5fdab58da6",
        "parentId" : "1ec161f8-b9c0-41f3-ac77-674ce74d20a6",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Yes this comment is still valid.\r\n`AExpr` is not currently a _proper_ separate type, but just a wrapper around `SExpr`.",
        "createdAt" : "2020-06-29T11:49:23Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bfb30f6e-a716-4c6d-badb-59f3ea0a456c",
        "parentId" : "1ec161f8-b9c0-41f3-ac77-674ce74d20a6",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Yeah, I noticed afterward. Please don't forget to update this comment when you turn `AExpr` to a separate type.",
        "createdAt" : "2020-06-29T11:58:02Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "208532c9-9aa9-43be-886e-2c029539f883",
        "parentId" : "1ec161f8-b9c0-41f3-ac77-674ce74d20a6",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "See #6521 ",
        "createdAt" : "2020-06-29T13:57:17Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f1ca0fa6575631a0602ea895e0155fae12fd986b",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +21,25 @@  execution to continue after a compound expression is reduced to a value.\n\n  The speedy machine now expects that it will never have to execute a non-ANF expression,\n  crashing at runtime if one is encountered.  In particular we must ensure that the\n  expression forms: SEAppGeneral and SECase are removed, and replaced by the simpler"
  },
  {
    "id" : "372402dd-a8d0-4f8f-a1c5-af7b6c3d5816",
    "prId" : 6440,
    "comments" : [
      {
        "id" : "bea777dd-50db-48ba-9375-e0dc22de073b",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I'm not sure this explanation really cuts it. I'd say it's rather that `ELocS` is indexing relative to the end of the stack and what you're calling \"absolute\" is relative to the beginning of the stack frame of the current function.",
        "createdAt" : "2020-06-29T12:56:50Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a85d047c-d3c4-49d9-9115-dffb963b563c",
        "parentId" : "bea777dd-50db-48ba-9375-e0dc22de073b",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "I've improved the explanation in the comment,",
        "createdAt" : "2020-06-30T09:01:57Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5ed92ea9-a837-439a-bf14-0857bf940c09",
        "parentId" : "bea777dd-50db-48ba-9375-e0dc22de073b",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "> An absolute stack depth is the offset from the bottom of the stack, which is empty when a function is entered.\r\n\r\nThat is not the case because we use the same stack throughout the whole interpretation. I would prefer to clarify this even further.",
        "createdAt" : "2020-06-30T10:19:37Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c2df1afb-c561-4ba9-8d2c-07cc5fe6f786",
        "parentId" : "bea777dd-50db-48ba-9375-e0dc22de073b",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "clarified further",
        "createdAt" : "2020-06-30T10:44:14Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f1ca0fa6575631a0602ea895e0155fae12fd986b",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +109,113 @@    expression which we traverse AND the new ANF expression we are constructing. The\n    relative-offset to a binding varies as new bindings are pushed on the stack.\n    */\n  case class AbsBinding(abs: DepthA)\n"
  },
  {
    "id" : "95303fb5-7928-4119-8971-e5fad1c7cf7f",
    "prId" : 6440,
    "comments" : [
      {
        "id" : "29ed40d4-cf03-41cc-91b5-0832e9399637",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "```suggestion\r\nprivate[speedy] object Anf {\r\n```",
        "createdAt" : "2020-06-30T12:35:59Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1ee10623-64a3-439f-a3e8-75d6641df208",
        "parentId" : "29ed40d4-cf03-41cc-91b5-0832e9399637",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "I tried this. But sadly `flattenToAnf` is used in daml-script. I put a note in the code.",
        "createdAt" : "2020-06-30T15:21:04Z",
        "updatedAt" : "2020-06-30T15:21:05Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bac38cd1-5eb8-4943-805e-f9e92b07e910",
        "parentId" : "29ed40d4-cf03-41cc-91b5-0832e9399637",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "then maybe \r\n\r\n```suggestion\r\nprivate[lf] object Anf {\r\n```",
        "createdAt" : "2020-06-30T15:29:27Z",
        "updatedAt" : "2020-06-30T15:30:56Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f1ca0fa6575631a0602ea895e0155fae12fd986b",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@\n//TODO: make this object private[speedy] when use of flattenToAnf is removed from daml-script\nobject Anf {\n\n  /*** Entry point for the ANF transformation phase */"
  },
  {
    "id" : "bbe05100-9551-4b0a-bdd4-442aca2c7e7b",
    "prId" : 6440,
    "comments" : [
      {
        "id" : "b0c60982-d977-4263-8544-5f450da0863e",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Could you please make all the other definition private ? \r\nIf you want to write unit tests for some of functions, you are authorize to make those package private (with a comment). \r\n ",
        "createdAt" : "2020-06-30T12:37:39Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fb534cfe-034f-4d91-9759-367bfc596690",
        "parentId" : "b0c60982-d977-4263-8544-5f450da0863e",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "made everything else private as you suggest",
        "createdAt" : "2020-06-30T15:21:23Z",
        "updatedAt" : "2020-06-30T15:21:23Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5e4e2a0b-d61b-413b-aa2a-858a54b1c35b",
        "parentId" : "b0c60982-d977-4263-8544-5f450da0863e",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "By definitions, I mean methods, **and** fields, **and** types. ",
        "createdAt" : "2020-06-30T15:30:36Z",
        "updatedAt" : "2020-06-30T17:06:57Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f1ca0fa6575631a0602ea895e0155fae12fd986b",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@\n  /*** Entry point for the ANF transformation phase */\n  def flattenToAnf(exp: SExpr): AExpr = {\n    val depth = DepthA(0)\n    val env = initEnv"
  }
]