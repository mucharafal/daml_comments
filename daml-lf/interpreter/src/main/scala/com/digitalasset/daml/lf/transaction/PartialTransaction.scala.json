[
  {
    "id" : "f684549a-183d-4f91-aaa2-c2bb62e1345a",
    "prId" : 7400,
    "comments" : [
      {
        "id" : "a70e580b-a82d-4104-b519-ee5c6bd2596a",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "(very minor detail) I would not at put this argument first.",
        "createdAt" : "2020-09-15T11:39:57Z",
        "updatedAt" : "2020-09-17T13:03:20Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a360635b966cdfe27bfd3cd6e156308321238660",
    "line" : null,
    "diffHunk" : "@@ -96,6 +99,7 @@ private[lf] object PartialTransaction {\n     *                       happening.\n     */\n   case class ExercisesContext(\n+      auth: Authorize,"
  },
  {
    "id" : "4ef340b9-fe70-452e-bd5b-d62b41127cb5",
    "prId" : 7400,
    "comments" : [
      {
        "id" : "050198b6-754a-42d6-b933-4a8585ca301e",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "```suggestion\r\n  private[this] def noteAuthFails(nid: NodeId, fails: List[FailedAuthorization]): PartialTransaction = {\r\n```",
        "createdAt" : "2020-09-15T12:02:38Z",
        "updatedAt" : "2020-09-17T13:03:20Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a360635b966cdfe27bfd3cd6e156308321238660",
    "line" : null,
    "diffHunk" : "@@ -423,6 +437,16 @@ private[lf] case class PartialTransaction(\n         noteAbort(Tx.EndExerciseInRootContext)\n     }\n \n+  /** Note that the transaction building failed due to an authorization failure */\n+  def noteAuthFails(nid: NodeId, fails: List[FailedAuthorization]): PartialTransaction = {"
  },
  {
    "id" : "6b3be4d1-1bd8-4d3c-9fa2-bd65e1162bfb",
    "prId" : 7400,
    "comments" : [
      {
        "id" : "3988f073-7bad-4450-b765-2b1a04c0760f",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "There's potential for simplification in a future PR here:\r\n1. If we only care about the first error, let's only compute the first error.\r\n2. If the map always contains one entry, let's use a pair instead.\r\n",
        "createdAt" : "2020-09-16T09:33:31Z",
        "updatedAt" : "2020-09-17T13:03:20Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d3e0be74-e2c2-4a24-a7cf-ca9377270251",
        "parentId" : "3988f073-7bad-4450-b765-2b1a04c0760f",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "again, I'll do this in the following PR",
        "createdAt" : "2020-09-16T16:49:29Z",
        "updatedAt" : "2020-09-17T13:03:20Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a360635b966cdfe27bfd3cd6e156308321238660",
    "line" : 167,
    "diffHunk" : "@@ -423,6 +437,16 @@ private[lf] case class PartialTransaction(\n         noteAbort(Tx.EndExerciseInRootContext)\n     }\n \n+  /** Note that the transaction building failed due to an authorization failure */\n+  def noteAuthFails(nid: NodeId, fails: List[FailedAuthorization]): PartialTransaction = {\n+    fails match {\n+      case Nil => this\n+      case fa1 :: _ => // take just the first failure\n+        val fas = Map(nid -> fa1)"
  },
  {
    "id" : "a70e59f2-63ce-4529-9db8-d708585347ea",
    "prId" : 7191,
    "comments" : [
      {
        "id" : "1329aed4-bc1c-4ea6-8d36-eba80946cfcc",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "What do you mean by \"later\" here?",
        "createdAt" : "2020-08-20T11:09:37Z",
        "updatedAt" : "2020-08-20T14:41:28Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5f2e991c-c22e-486b-bfb1-a2b84b12d2e7",
        "parentId" : "1329aed4-bc1c-4ea6-8d36-eba80946cfcc",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I replaced \"this later\" by \"it\"",
        "createdAt" : "2020-08-20T11:25:56Z",
        "updatedAt" : "2020-08-20T14:41:28Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "70f101648d63ed5b1a0139dc7bfabfd6182f8bab",
    "line" : null,
    "diffHunk" : "@@ -216,14 +221,17 @@ private[lf] case class PartialTransaction(\n     }\n \n   /** Finish building a transaction; i.e., try to extract a complete\n-    *  transaction from the given 'PartialTransaction'. This fails if\n-    *  the 'PartialTransaction' is not yet complete or has been\n-    *  aborted.\n+    *  transaction from the given 'PartialTransaction'. This returns:\n+    * - a SubmittedTransaction in case of success ;\n+    * - the 'PartialTransaction' itself if this later is not yet"
  },
  {
    "id" : "daababec-be9c-40e6-9589-5f4f2a593880",
    "prId" : 7191,
    "comments" : [
      {
        "id" : "b30439fb-a225-4b2d-bc9d-51764cff2e62",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I suggest adding flavor text at the last possible moment.\r\n\r\n```suggestion\r\n          message => SerializationError(message),\r\n```\r\n\r\n(BTW, you also meant \"serialize\", not \"serialized\".)",
        "createdAt" : "2020-08-20T13:02:45Z",
        "updatedAt" : "2020-08-20T14:41:28Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "70f101648d63ed5b1a0139dc7bfabfd6182f8bab",
    "line" : null,
    "diffHunk" : "@@ -233,11 +241,11 @@ private[lf] case class PartialTransaction(\n           nodes\n         )\n         .fold(\n-          s => Left(s\"Cannot serialized the transaction: $s\"),\n-          tx => Right(Right(SubmittedTransaction(tx)))\n+          s => SerializationError(s\"Cannot serialized the transaction: $s\"),"
  },
  {
    "id" : "35567036-a974-45e9-849c-432c7158dad6",
    "prId" : 7191,
    "comments" : [
      {
        "id" : "a12c5d60-6d82-4b76-8176-08c189f402dd",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "If you make these two extend `RuntimeException` (and make `Result` a trait), you can just throw them directly.\r\n\r\n```suggestion\r\n  final case class IncompleteTransaction(ptx: PartialTransaction)\r\n    extends RuntimeException(s\"Unexpected abort: $ptx\")\r\n    with Result\r\n  final case class SerializationError(msg: String)\r\n    extends RuntimeException(s\"Cannot serialize the transaction: $msg\")\r\n    with Result\r\n```",
        "createdAt" : "2020-08-20T13:04:28Z",
        "updatedAt" : "2020-08-20T14:41:28Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7a51baab-6d77-4086-a622-0b9fb6e33d60",
        "parentId" : "a12c5d60-6d82-4b76-8176-08c189f402dd",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I definitively do not want to throw any of this. The important of `PartialTransaction#finish` method is in Engine where I have to handle explicitly all the 3 cases. \r\n",
        "createdAt" : "2020-08-20T14:21:55Z",
        "updatedAt" : "2020-08-20T14:41:28Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f029440b-3d93-49e2-b328-a4c0d981ea09",
        "parentId" : "a12c5d60-6d82-4b76-8176-08c189f402dd",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "That's fair. We are throwing untyped `new RuntimeException`s elsewhere though; I'd appreciate it if, somehow, some more meaningful types emerged for those.",
        "createdAt" : "2020-08-20T14:24:17Z",
        "updatedAt" : "2020-08-20T14:41:28Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "238892cc-f93b-4217-8dfb-7473d1a589e3",
        "parentId" : "a12c5d60-6d82-4b76-8176-08c189f402dd",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Those untyped `new RuntimeException`s are part of dam-script. I prefer not touching too much this part. \r\ncc @cocreature ",
        "createdAt" : "2020-08-20T14:28:10Z",
        "updatedAt" : "2020-08-20T14:41:28Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "70f101648d63ed5b1a0139dc7bfabfd6182f8bab",
    "line" : null,
    "diffHunk" : "@@ -126,6 +126,11 @@ private[lf] object PartialTransaction {\n     keys = Map.empty,\n   )\n \n+  sealed abstract class Result extends Product with Serializable\n+  final case class CompleteTransaction(tx: SubmittedTransaction) extends Result\n+  final case class IncompleteTransaction(ptx: PartialTransaction) extends Result\n+  final case class SerializationError(msg: String) extends Result"
  },
  {
    "id" : "969fc56c-5220-4cea-a047-a70a3c0b6cfe",
    "prId" : 7189,
    "comments" : [
      {
        "id" : "a1cfe0d6-6ffd-413f-88f5-0374f22c1720",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I find nested eithers pretty confusing. Maybe time for a custom ADT for the error types.",
        "createdAt" : "2020-08-20T07:26:55Z",
        "updatedAt" : "2020-08-20T07:27:48Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b65b604a-786e-4eb4-ab92-544512de6a3e",
        "parentId" : "a1cfe0d6-6ffd-413f-88f5-0374f22c1720",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I will. ",
        "createdAt" : "2020-08-20T07:39:05Z",
        "updatedAt" : "2020-08-20T07:39:06Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4bea54adfba4d217c92a95e3c59673890277c712",
    "line" : 21,
    "diffHunk" : "@@ -223,23 +223,21 @@ private[lf] case class PartialTransaction(\n   def finish(\n       outputTransactionVersions: VersionRange[TransactionVersion],\n       packageLanguageVersion: Ref.PackageId => LanguageVersion,\n-  ): Either[PartialTransaction, SubmittedTransaction] = {\n-\n-    Either.cond(\n-      context.exeContext.isEmpty && aborted.isEmpty,\n-      SubmittedTransaction(\n-        TransactionVersions\n-          .asVersionedTransaction(\n-            outputTransactionVersions,\n-            packageLanguageVersion,\n-            context.children.toImmArray,\n-            nodes\n-          )\n-          .fold(SError.crash, identity)\n-      ),\n-      this\n-    )\n-  }\n+  ): Either[String, Either[PartialTransaction, SubmittedTransaction]] ="
  },
  {
    "id" : "5cc50dc9-80ba-458b-8c6e-0a886b09a371",
    "prId" : 5966,
    "comments" : [
      {
        "id" : "cdb09e58-f7a2-419e-afb6-04c725421b68",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "```suggestion\r\n          nodeSeeds = nodeSeeds :+ (nodeId -> nodeSeed),\r\n```",
        "createdAt" : "2020-05-13T15:46:09Z",
        "updatedAt" : "2020-05-13T16:46:59Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1c31fcd6f1afce560a4ef4dba5af7a6f877ec71a",
    "line" : null,
    "diffHunk" : "@@ -382,7 +384,7 @@ case class PartialTransaction(\n         copy(\n           context = ec.parent.addChild(nodeId),\n           nodes = nodes.updated(nodeId, exerciseNode),\n-          nodeSeeds = nodeSeed.fold(nodeSeeds)(s => nodeSeeds :+ (nodeId -> s)),\n+          nodeSeeds = nodeSeeds :+ (nodeId -> (nodeSeed)),"
  },
  {
    "id" : "9093283c-b006-441c-982d-c9c92dfcd1d1",
    "prId" : 5966,
    "comments" : [
      {
        "id" : "29bdbea4-1dad-43d9-8017-af9da094246a",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "```suggestion\r\n  // NoSeed may be used to initialize machines that are not intended to create transactions\r\n```",
        "createdAt" : "2020-05-13T15:46:37Z",
        "updatedAt" : "2020-05-13T16:46:59Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1c31fcd6f1afce560a4ef4dba5af7a6f877ec71a",
    "line" : null,
    "diffHunk" : "@@ -423,12 +425,8 @@ case class PartialTransaction(\n sealed abstract class InitialSeeding extends Product with Serializable\n \n object InitialSeeding {\n-  def apply(transactionSeed: Option[crypto.Hash]): InitialSeeding =\n-    transactionSeed match {\n-      case None => NoSeed\n-      case Some(hash) => TransactionSeed(hash)\n-    }\n-\n+  // NoSeed may be used to initiale machines that are not intended to create transactions"
  },
  {
    "id" : "5966e5ad-7b68-44d9-86d8-3def26d236e8",
    "prId" : 5578,
    "comments" : [
      {
        "id" : "680f0eff-afc2-4f49-8920-28978bda2593",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "As already before this PR, there is an assumption that `addChild` and `nextChildrenSeed` are always called in that order, right?",
        "createdAt" : "2020-04-16T10:21:38Z",
        "updatedAt" : "2020-04-16T11:23:02Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9058fc47-9f3a-4f16-a438-d534edeb41cf",
        "parentId" : "680f0eff-afc2-4f49-8920-28978bda2593",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "First you build your node using `nextChildrenSeed` if this node requires a seed (i.e. Create and Exercise nodes) and then you add this node with `addChild`",
        "createdAt" : "2020-04-16T10:35:47Z",
        "updatedAt" : "2020-04-16T11:23:02Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "bfacb978186e3ef87e64a15f506cbe0d17e7dd58",
    "line" : 11,
    "diffHunk" : "@@ -22,31 +22,42 @@ object PartialTransaction {\n   final class Context private (\n       val exeContext: Option[ExercisesContext], // empty if root context\n       val children: BackStack[Value.NodeId],\n-      protected val childrenSeeds: Stream[crypto.Hash]\n+      protected val childrenSeeds: Int => Option[crypto.Hash]\n   ) {\n     def addChild(child: Value.NodeId): Context =\n-      new Context(exeContext, children :+ child, childrenSeeds.drop(1))\n-    def nextChildrenSeed: Option[crypto.Hash] = childrenSeeds.headOption\n+      new Context(exeContext, children :+ child, childrenSeeds)\n+    def nextChildrenSeed: Option[crypto.Hash] ="
  },
  {
    "id" : "e0295495-3c06-436b-a140-88691f68e0fb",
    "prId" : 5570,
    "comments" : [
      {
        "id" : "20b49fbc-6346-4a46-8893-ccd07672c992",
        "parentId" : null,
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "This looks in the wrong order. `ec.parent.addChild` two lines above drops the current seed for the exercise. So when we update `nodeSeeds`, we get the seed already for the next child rather than the current exercise.",
        "createdAt" : "2020-04-16T05:58:38Z",
        "updatedAt" : "2020-04-16T15:56:18Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "116bd033-f539-4db6-9778-cc7123773946",
        "parentId" : "20b49fbc-6346-4a46-8893-ccd07672c992",
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "Oh forget it, contexts are immutable, so the order does not matter.",
        "createdAt" : "2020-04-16T10:04:57Z",
        "updatedAt" : "2020-04-16T15:56:18Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "30ef1a8f-68ca-4e5e-b52a-6b5cef7ebe58",
        "parentId" : "20b49fbc-6346-4a46-8893-ccd07672c992",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I moved up the call to `ec.parent.nextChildrenSeed`, hopefully it will be clearer. ",
        "createdAt" : "2020-04-16T12:02:58Z",
        "updatedAt" : "2020-04-16T15:56:18Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0131af72a15602be1889879e8178298a5cea4a63",
    "line" : null,
    "diffHunk" : "@@ -416,7 +418,11 @@ case class PartialTransaction(\n           key = ec.contractKey,\n         )\n         val nodeId = ec.nodeId\n-        copy(context = ec.parent.addChild(nodeId), nodes = nodes.updated(nodeId, exerciseNode))\n+        copy(\n+          context = ec.parent.addChild(nodeId),\n+          nodes = nodes.updated(nodeId, exerciseNode),\n+          nodeSeeds = ec.parent.nextChildrenSeed.fold(nodeSeeds)(s => nodeSeeds :+ (nodeId -> s)),"
  },
  {
    "id" : "bcd04b65-3ea0-454a-8205-7f38158aed39",
    "prId" : 5486,
    "comments" : [
      {
        "id" : "aec92759-83b5-403b-abc8-e1167744e807",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "This is the actual fix",
        "createdAt" : "2020-04-08T13:21:05Z",
        "updatedAt" : "2020-04-08T13:24:11Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "50e1d58f9542c576e6eab5cf0f45f84b6f1fa196",
    "line" : 6,
    "diffHunk" : "@@ -453,6 +453,6 @@ case class PartialTransaction(\n   }\n \n   def deriveChildSeed: Option[crypto.Hash] =\n-    context.contextSeed.map(crypto.Hash.deriveNodeSeed(_, nodes.size))\n+    context.contextSeed.map(crypto.Hash.deriveNodeSeed(_, context.children.length))\n "
  },
  {
    "id" : "55dcd3f3-e967-4c43-a38b-ba52b3ed2365",
    "prId" : 5277,
    "comments" : [
      {
        "id" : "de4a5f96-6b86-4de6-9654-60d3f2f0d8c3",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "```suggestion\r\n  *                      node in which it was created.\r\n```",
        "createdAt" : "2020-03-31T07:26:33Z",
        "updatedAt" : "2020-03-31T14:38:38Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6ca9b958a6dd0d1321a55144786f9213389f07e6",
    "line" : null,
    "diffHunk" : "@@ -123,6 +124,11 @@ object PartialTransaction {\n   *              we archive. This is not an optimization and is required for\n   *              correct semantics, since otherwise lookups for keys for\n   *              locally archived absolute contract ids will succeed wrongly.\n+  * @param localContracts A map that associates to each contract created the\n+  *                      contract the node in which it was created."
  },
  {
    "id" : "ffedd1b9-da25-4f02-87fe-1ca83eae5a1e",
    "prId" : 5277,
    "comments" : [
      {
        "id" : "085438d8-d7b9-4836-bec6-48541f2164d1",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "This doesn't add the contract to the map if it already exists.\r\n```suggestion\r\n            globalContracts.getOrElse(discriminator, Map.empty) + (suffix -> contract))\r\n```",
        "createdAt" : "2020-03-31T07:43:49Z",
        "updatedAt" : "2020-03-31T14:38:38Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "95c999ee-1e7d-4fdf-9f73-001176aba822",
        "parentId" : "085438d8-d7b9-4836-bec6-48541f2164d1",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Good catch. ",
        "createdAt" : "2020-03-31T10:23:46Z",
        "updatedAt" : "2020-03-31T14:38:38Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6ca9b958a6dd0d1321a55144786f9213389f07e6",
    "line" : null,
    "diffHunk" : "@@ -213,11 +216,43 @@ case class PartialTransaction(\n       }\n     } yield coinst\n \n+  private def lookupGlobalContract(\n+      gcoid: Value.ContractId\n+  ): Option[Tx.ContractInst[Value.ContractId]] =\n+    gcoid match {\n+      case Value.AbsoluteContractId.V1(discriminator, suffix) =>\n+        globalContracts.get(discriminator).flatMap(_.get(suffix))\n+      case _ =>\n+        None\n+    }\n+\n+  def lookupCachedContract(\n+      coid: Value.ContractId\n+  ): Option[Tx.ContractInst[Value.ContractId]] =\n+    lookupLocalContract(coid).orElse(lookupGlobalContract(coid))\n+\n+  /** Update the globalContract if coid is an `Value.AbsoluteContractId.V1`,\n+    *  idempotent otherwise.\n+    */\n+  def cachedContract(\n+      coid: Value.ContractId,\n+      contract: Tx.ContractInst[Value.ContractId]\n+  ): PartialTransaction =\n+    coid match {\n+      case Value.AbsoluteContractId.V1(discriminator, suffix) =>\n+        copy(\n+          globalContracts = globalContracts.updated(\n+            discriminator,\n+            globalContracts.getOrElse(discriminator, Map(suffix -> contract))))"
  }
]