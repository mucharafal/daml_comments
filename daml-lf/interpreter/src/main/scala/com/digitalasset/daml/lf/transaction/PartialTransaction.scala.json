[
  {
    "id" : "a6038d18-0e61-4a3b-bbd5-1f8b73a50a8b",
    "prId" : 7400,
    "comments" : [
      {
        "id" : "5ffc955f-369c-4278-a9f4-c9f4499eeb4e",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "There's potential for simplification in a future PR here:\r\n1. If we only care about the first error, let's only compute the first error.\r\n2. If the map always contains one entry, let's use a pair instead.\r\n",
        "createdAt" : "2020-09-16T09:33:31Z",
        "updatedAt" : "2020-09-17T13:03:20Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "773e7f00-85ef-4efe-95de-ff04a3b40e35",
        "parentId" : "5ffc955f-369c-4278-a9f4-c9f4499eeb4e",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "again, I'll do this in the following PR",
        "createdAt" : "2020-09-16T16:49:29Z",
        "updatedAt" : "2020-09-17T13:03:20Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a360635b966cdfe27bfd3cd6e156308321238660",
    "line" : 167,
    "diffHunk" : "@@ -1,1 +443,447 @@      case Nil => this\n      case fa1 :: _ => // take just the first failure\n        val fas = Map(nid -> fa1)\n        noteAbort(Tx.AuthErrorsDuringExecution(fas))\n    }"
  },
  {
    "id" : "99d3dfe0-87ea-4fb7-b7f6-02b6852abebe",
    "prId" : 7189,
    "comments" : [
      {
        "id" : "49f5ffa1-b233-49ae-a526-1790f4815b3d",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I find nested eithers pretty confusing. Maybe time for a custom ADT for the error types.",
        "createdAt" : "2020-08-20T07:26:55Z",
        "updatedAt" : "2020-08-20T07:27:48Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "eda458e4-3826-4651-9c3a-325167742e12",
        "parentId" : "49f5ffa1-b233-49ae-a526-1790f4815b3d",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I will. ",
        "createdAt" : "2020-08-20T07:39:05Z",
        "updatedAt" : "2020-08-20T07:39:06Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4bea54adfba4d217c92a95e3c59673890277c712",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +224,228 @@      outputTransactionVersions: VersionRange[TransactionVersion],\n      packageLanguageVersion: Ref.PackageId => LanguageVersion,\n  ): Either[String, Either[PartialTransaction, SubmittedTransaction]] =\n    if (context.exeContext.isEmpty && aborted.isEmpty)\n      TransactionVersions"
  },
  {
    "id" : "1e21e328-fc44-487e-aa8e-804b7eca4503",
    "prId" : 5578,
    "comments" : [
      {
        "id" : "c1109415-88af-4e29-a1a9-f87b85bcd6cc",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "As already before this PR, there is an assumption that `addChild` and `nextChildrenSeed` are always called in that order, right?",
        "createdAt" : "2020-04-16T10:21:38Z",
        "updatedAt" : "2020-04-16T11:23:02Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5086248d-8bea-43ee-925c-f97651b669bb",
        "parentId" : "c1109415-88af-4e29-a1a9-f87b85bcd6cc",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "First you build your node using `nextChildrenSeed` if this node requires a seed (i.e. Create and Exercise nodes) and then you add this node with `addChild`",
        "createdAt" : "2020-04-16T10:35:47Z",
        "updatedAt" : "2020-04-16T11:23:02Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "bfacb978186e3ef87e64a15f506cbe0d17e7dd58",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +27,31 @@    def addChild(child: Value.NodeId): Context =\n      new Context(exeContext, children :+ child, childrenSeeds)\n    def nextChildrenSeed: Option[crypto.Hash] =\n      childrenSeeds(children.length)\n  }"
  },
  {
    "id" : "49c6edc4-55e7-42e3-936f-f88d20633175",
    "prId" : 5486,
    "comments" : [
      {
        "id" : "f831e906-3a76-4029-81b5-067a7620586c",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "This is the actual fix",
        "createdAt" : "2020-04-08T13:21:05Z",
        "updatedAt" : "2020-04-08T13:24:11Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "50e1d58f9542c576e6eab5cf0f45f84b6f1fa196",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +455,459 @@  def deriveChildSeed: Option[crypto.Hash] =\n    context.contextSeed.map(crypto.Hash.deriveNodeSeed(_, context.children.length))\n\n}"
  }
]