[
  {
    "id" : "43cda85b-5172-49dc-a65c-0143e6d36423",
    "prId" : 5805,
    "comments" : [
      {
        "id" : "2cc9d964-2a4b-42bc-9c3a-7f004849651e",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "cc @andreaslochbihler-da @oliverse-da ",
        "createdAt" : "2020-04-30T17:58:09Z",
        "updatedAt" : "2020-05-05T08:29:24Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2664365f2e72bcf952999ef3e7ec83798c6f5dc0",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +147,151 @@    data.assertRight(ensureNoRelCid.left.map(message))\n\n  final def cids[Cid](\n      implicit consumer: CidConsumer[A, Cid]\n  ): Set[Cid] = {"
  },
  {
    "id" : "22d101f4-37f9-4c72-a218-a201214c443d",
    "prId" : 5319,
    "comments" : [
      {
        "id" : "8928a8b2-b464-4028-8433-73f30663d7d9",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "@andreaslochbihler-da @oliverse-da \r\nHere is the new method to suffix new Contract ids.\r\nSee the `TransactionSpec` to see how to use it on transaction. It works similarly on nodes, values ... ",
        "createdAt" : "2020-03-31T17:34:41Z",
        "updatedAt" : "2020-03-31T17:40:04Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "df0dffe7-519a-4165-a492-529355d83ac3",
        "parentId" : "8928a8b2-b464-4028-8433-73f30663d7d9",
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "Thanks for the pointer. I'll study this in more detail when I get to switch to V1 contract ids in Canton.",
        "createdAt" : "2020-04-01T05:42:04Z",
        "updatedAt" : "2020-04-01T05:42:05Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "cc8b7d96a1259071bd764cef687263978350d3d9",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +101,105 @@  // Uses `f(coid.discriminator)` as suffix.\n  // Fails if encounters relative contract id or a V0 contract id.\n  final def suffixCid[B](f: crypto.Hash => Bytes)(\n      implicit suffixer: CidSuffixer[A, B]\n  ): Either[Value.ContractId, B] ="
  },
  {
    "id" : "c166d49a-9bd8-4577-8470-d4a0cde44e00",
    "prId" : 4411,
    "comments" : [
      {
        "id" : "bbc333f3-a69a-4c3d-8d96-900b9635add9",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Seems that we use `mapper` in most places for resolvers.",
        "createdAt" : "2020-02-07T15:56:19Z",
        "updatedAt" : "2020-02-10T08:12:25Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f4682523e5bcc7e82eb08998241391055840ee84",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +101,105 @@  final def resolveRelCidV1[B](\n      f: Value.RelativeContractId => Either[String, Ref.ContractIdStringV1])(\n      implicit resolver: RelCidV1Resolver[A, B],\n  ): Either[String, B] =\n    resolver.traverse[String](f)(self)"
  }
]