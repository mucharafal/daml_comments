[
  {
    "id" : "6f522cc2-9af6-4d3e-b5b9-e70ba92ccdc9",
    "prId" : 7617,
    "comments" : [
      {
        "id" : "e0b125d6-414a-45e2-8cde-b9f6b8ad218e",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Why do we always set this to `false` during decoding? Does the encoded version not contain the required information? Same question a bit further down.",
        "createdAt" : "2020-10-09T14:09:18Z",
        "updatedAt" : "2020-10-13T08:21:59Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a7dab778-f0fd-4512-9a9c-5f8cb445b5fc",
        "parentId" : "e0b125d6-414a-45e2-8cde-b9f6b8ad218e",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "The encoded version does not contain the required information.\r\nWe have to add the flag to `transaction.proto`. I will do that in a following up PR.  \r\nThis PR is concerned with replacing the field `PartialTransaction#byKeyNodes` by the `byKey` flag in `GenNode`.",
        "createdAt" : "2020-10-09T16:36:28Z",
        "updatedAt" : "2020-10-13T08:21:59Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "df704dc4-d7df-4642-b429-46e2dc5c325b",
        "parentId" : "e0b125d6-414a-45e2-8cde-b9f6b8ad218e",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Thanks for the explanation.",
        "createdAt" : "2020-10-12T08:58:56Z",
        "updatedAt" : "2020-10-13T08:21:59Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "028bbced28b92a3143f68f3f65bf48954cba4025",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +356,360 @@          else decodeKeyWithMaintainers(decodeCid, protoFetch.getKeyWithMaintainers).map(Some(_))\n        } yield\n          (ni, NodeFetch(c, templateId, None, actingParties, signatories, stakeholders, key, false))\n\n      case NodeTypeCase.EXERCISE =>"
  },
  {
    "id" : "55e879d0-efb6-4ba4-8d8b-f3b5af2dd955",
    "prId" : 4425,
    "comments" : [
      {
        "id" : "29c1316a-a8bb-44af-9d81-4c0cbde23d27",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n  val NidEncoder: EncodeNid[Value.NodeId] = _.index.toString\r\n```",
        "createdAt" : "2020-02-06T16:54:33Z",
        "updatedAt" : "2020-02-07T10:48:52Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c774c104-c0d2-4d00-8491-bd0b1dc2ee50",
        "parentId" : "29c1316a-a8bb-44af-9d81-4c0cbde23d27",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "does not work with the `private[lf]`at line 29 ",
        "createdAt" : "2020-02-06T17:50:50Z",
        "updatedAt" : "2020-02-07T10:48:52Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "76171aef4450ee340eab6ce616663f8242cf25c9",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +34,38 @@  }\n\n  val NidEncoder: EncodeNid[Value.NodeId] = new EncodeNid[Value.NodeId] {\n    override def asString(id: Value.NodeId): String = id.index.toString\n  }"
  },
  {
    "id" : "1b7a060c-f74c-406b-a327-112da81b28a3",
    "prId" : 4425,
    "comments" : [
      {
        "id" : "772043d3-0a18-4615-9823-4ed870dcbee4",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n  val NidDecoder: DecodeNid[Value.NodeId] = s => parseInt(s).fold(...)\r\n```\r\n\r\nand so on for the other instances.",
        "createdAt" : "2020-02-06T16:55:20Z",
        "updatedAt" : "2020-02-07T10:48:52Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "76171aef4450ee340eab6ce616663f8242cf25c9",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +38,42 @@  }\n\n  val NidDecoder: DecodeNid[Value.NodeId] = new DecodeNid[Value.NodeId] {\n    override def fromString(s: String): Either[DecodeError, Value.NodeId] =\n      scalaz.std.string"
  },
  {
    "id" : "85a8f53a-b426-4763-a59d-1bf89c27e2f3",
    "prId" : 4425,
    "comments" : [
      {
        "id" : "f1f766c8-396e-487e-af3a-42ee86a0bad8",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "ðŸ†’ ",
        "createdAt" : "2020-02-06T16:56:45Z",
        "updatedAt" : "2020-02-07T10:48:52Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "76171aef4450ee340eab6ce616663f8242cf25c9",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +77,81 @@    * @return protobuf wire format contract instance\n    */\n  def encodeContractInstance[Cid](\n      encodeCid: EncodeCid[Cid],\n      coinst: Value.ContractInst[Value.VersionedValue[Cid]],"
  },
  {
    "id" : "88a35671-248d-4cca-aa4c-dbbded8510bf",
    "prId" : 4048,
    "comments" : [
      {
        "id" : "39f7ea5a-2b65-43cb-885e-50e11b699486",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "```suggestion\r\n```",
        "createdAt" : "2020-01-15T10:18:38Z",
        "updatedAt" : "2020-01-20T14:12:53Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "dc2b942e21c744f7822b8e099b9269bc6d0f16bc",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +337,341 @@              decodeKeyWithMaintainers(decodeVal, protoExe.getKeyWithMaintainers).map(k => Some(k))\n          } else Right(None)\n\n          ni <- nodeId\n          targetCoid <- protoExe.decodeContractIdOrStruct(decodeCid, txVersion)("
  },
  {
    "id" : "6591be04-4b69-47c0-9984-e7110f067992",
    "prId" : 766,
    "comments" : [
      {
        "id" : "8f7af7e3-8923-44fb-86ec-a4d7658589cc",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n          decodedControllers <- toPartySet(protoExe.getControllersList)\r\n```",
        "createdAt" : "2019-05-02T16:44:47Z",
        "updatedAt" : "2019-05-03T13:49:25Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "296332ca23791717faee6e5d5787d0262be907ad",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +286,290 @@          templateId <- ValueCoder.decodeIdentifier(protoExe.getTemplateId)\n          actingParties <- toPartySet(protoExe.getActorsList)\n          encodedControllers <- toPartySet(protoExe.getControllersList)\n          controllers <- if (!(txVersion precedes minNoControllers)) {\n            if (encodedControllers.isEmpty) {"
  },
  {
    "id" : "96cf18e8-68d1-491b-9320-eda76f540fe1",
    "prId" : 766,
    "comments" : [
      {
        "id" : "14d16e0d-40f2-4814-a15b-c36ccec59b49",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "@bitonic As you say,\r\n\r\n> we can't [delete the controllers field] if we keep the validation separate.\r\n\r\nI want to remove the possibility that the field is used for anything but that separate validation, then, rather than leaving the separate `controllers` field open to \"interpretation\", so to speak; depending on how we report validation failures here, that can be as simple as\r\n\r\n```suggestion\r\n            Right(decodedControllers != actingParties)\r\n```\r\n\r\nand the other case on line 291 is `Right(false)`.",
        "createdAt" : "2019-05-02T16:49:54Z",
        "updatedAt" : "2019-05-03T13:49:25Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "296332ca23791717faee6e5d5787d0262be907ad",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +294,298 @@            }\n          } else {\n            Right(encodedControllers)\n          }\n          signatories <- toPartySet(protoExe.getSignatoriesList)"
  },
  {
    "id" : "cf131be9-d7ac-4335-85dc-026610f7bfd2",
    "prId" : 583,
    "comments" : [
      {
        "id" : "5fa3b263-0e0d-404d-ac19-01f061b3038e",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "We're going with @bitonic's plan elsewhere so when precedes, ignore `retValue`, otherwise fold it (do not use `get` or `nonEmpty`). Also this expression has to occur as the result of the whole containing block; you're just dropping the `Left` or `Right` on the floor right now.",
        "createdAt" : "2019-04-30T13:14:18Z",
        "updatedAt" : "2019-05-06T11:45:15Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7dba066e451634d93091257340a85b47cb24ff23",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +180,184 @@                s\"As of version $transactionVersion, the controllers and actingParties of an exercise node _must_ be the same, but I got ${e.controllers} as controllers and ${e.actingParties} as actingParties.\"))\n            }\n          }\n\n          retValue match {"
  }
]