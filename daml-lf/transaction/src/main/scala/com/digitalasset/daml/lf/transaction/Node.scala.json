[
  {
    "id" : "5f9e5450-edc6-4ccb-8401-e50b77cdd33a",
    "prId" : 7617,
    "comments" : [
      {
        "id" : "584bc1e2-f743-4b0e-a46f-d927afe12c3a",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I assume there's some invariant here we should document. I would guess that when `key` is `None` then `byKey` must be false. Does the inverse also hold? If not, why do we do store key information in the node if we didn't exercise by key?\r\n\r\nEither way, if the presence of `key` means we've exercise by key, we don't need `byKey` at all. If `key` can be present even when we've exercised by contract id, we might want to put the boolean for `byKey` into `key`.",
        "createdAt" : "2020-10-09T14:15:50Z",
        "updatedAt" : "2020-10-13T08:21:59Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6a008f7f-a0e6-4b25-be77-1ad616013853",
        "parentId" : "584bc1e2-f743-4b0e-a46f-d927afe12c3a",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "The invariant is `!byKey || key.isDefined`.\r\n\r\nThe reason why the `byKey` is not inside the `key` option is that this is a more drastic change, i.e. this will at least double the size of the PR. It is also a change of API that will impact ledger implementers. \r\n\r\nIf you wish I can do it in another PR. \r\n\r\n",
        "createdAt" : "2020-10-12T07:46:25Z",
        "updatedAt" : "2020-10-13T08:21:59Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ffe92a74-877a-4985-b558-330c374aa616",
        "parentId" : "584bc1e2-f743-4b0e-a46f-d927afe12c3a",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I think I do now understand why we need the `byKey` field where it is. Let's keep it there and add a comment documenting the invariant between `key` and `byKey`.",
        "createdAt" : "2020-10-12T08:58:03Z",
        "updatedAt" : "2020-10-13T08:21:59Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "028bbced28b92a3143f68f3f65bf48954cba4025",
    "line" : null,
    "diffHunk" : "@@ -240,6 +247,7 @@ object Node {\n       children: ImmArray[Nid],\n       exerciseResult: Option[Val],\n       key: Option[KeyWithMaintainers[Val]],\n+      override val byKey: Boolean,"
  },
  {
    "id" : "49a28b9c-5e0d-45b2-a919-43418a804bad",
    "prId" : 7617,
    "comments" : [
      {
        "id" : "cf4f672b-bb8f-4867-a830-afa33ed89253",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I find this confusing. Why would somebody ask a create note if it was \"by key\"?",
        "createdAt" : "2020-10-09T14:16:51Z",
        "updatedAt" : "2020-10-13T08:21:59Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9beee749-90ab-45b5-ac70-30afa4e1cb46",
        "parentId" : "cf4f672b-bb8f-4867-a830-afa33ed89253",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "There is an example in the PR, in `EngineTest.scala`\r\n```\r\n private[this] def byKeyNodes[Nid, Cid](tx: VersionedTransaction[Nid, Cid]) =\r\n    tx.nodes.collect { case (nodeId, node) if node.byKey => nodeId }.toSet\r\n```",
        "createdAt" : "2020-10-12T07:49:18Z",
        "updatedAt" : "2020-10-13T08:21:59Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9313c81c-0b95-4840-8179-b3d4b7846006",
        "parentId" : "cf4f672b-bb8f-4867-a830-afa33ed89253",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Oh, so it is mostly because of this old structure where the metadata contained information on whether a node was \"by key\" or not. That's not pretty but acceptable.",
        "createdAt" : "2020-10-12T08:56:46Z",
        "updatedAt" : "2020-10-13T08:21:59Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "028bbced28b92a3143f68f3f65bf48954cba4025",
    "line" : 46,
    "diffHunk" : "@@ -196,7 +202,7 @@ object Node {\n       with NodeInfo.Create {\n \n     override def templateId: TypeConName = coinst.template\n-\n+    override def byKey: Boolean = false"
  },
  {
    "id" : "21d91d94-5c97-4045-b9ce-4d27fe7e3a49",
    "prId" : 7548,
    "comments" : [
      {
        "id" : "daad24a0-8b16-426d-8cde-2efebff07eaa",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "When computing the witnesses of an exercise node, you'll need to consider the template observers and the choice observers. Thus, I would prefer to call this field `choiceObservers` (or `informees` if we go with that) to avoid any confusion.\r\n\r\n@remyhaemmerle-da Do we need to make this field optional for the sake of backward compatibility?",
        "createdAt" : "2020-10-14T11:03:07Z",
        "updatedAt" : "2020-10-21T08:55:23Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8601495b-52a0-4777-8e04-950b700cfe11",
        "parentId" : "daad24a0-8b16-426d-8cde-2efebff07eaa",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I would not speak of \"additional choice observers\". It should either be \"choice observers\" or \"additional informees\".",
        "createdAt" : "2020-10-15T11:54:07Z",
        "updatedAt" : "2020-10-21T08:55:23Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1968095863437d26708412e9478b8d076d85897c",
    "line" : null,
    "diffHunk" : "@@ -227,6 +229,7 @@ object Node {\n     *     actual validation stage.\n     */\n   final case class NodeExercises[+Nid, +Cid, +Val](\n+      observers: Set[Party], //additional choice observers. -- NICK: re-order after signatories"
  },
  {
    "id" : "a79a83df-0b93-4a94-9d62-5cd752b49cd5",
    "prId" : 6781,
    "comments" : [
      {
        "id" : "fd810806-e50b-4cab-89f5-7fb715cb4977",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "```suggestion\r\n      globalKey: GlobalKey,\r\n```",
        "createdAt" : "2020-07-17T12:53:55Z",
        "updatedAt" : "2020-07-17T15:26:15Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "657f9797-31c1-41b1-b386-01bb5f9198eb",
        "parentId" : "fd810806-e50b-4cab-89f5-7fb715cb4977",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "done.",
        "createdAt" : "2020-07-17T13:10:56Z",
        "updatedAt" : "2020-07-17T15:26:15Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d17b2f48010c128b582ee24ee1a4c0120b2ddbd8",
    "line" : null,
    "diffHunk" : "@@ -427,6 +427,11 @@ object Node {\n   sealed trait WithTxValue3[F[+ _, + _, + _]] {\n     type WithTxValue[+Nid, +Cid] = F[Nid, Cid, Transaction.Value[Cid]]\n   }\n+\n+  final case class GlobalKeyWithMaintainers(\n+      gkey: GlobalKey,"
  },
  {
    "id" : "c12d1ff3-9e64-4583-ac78-e4f979c2ab62",
    "prId" : 6781,
    "comments" : [
      {
        "id" : "d93725ed-8516-4e36-bb4d-f239bedddb69",
        "parentId" : null,
        "author" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "body" : "Minor: it feels odd to see this in `Node.scala`, since it's not used here. I don't have a better suggestion, though.",
        "createdAt" : "2020-07-20T14:47:29Z",
        "updatedAt" : "2020-07-20T14:47:48Z",
        "lastEditedBy" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d17b2f48010c128b582ee24ee1a4c0120b2ddbd8",
    "line" : 5,
    "diffHunk" : "@@ -427,6 +427,11 @@ object Node {\n   sealed trait WithTxValue3[F[+ _, + _, + _]] {\n     type WithTxValue[+Nid, +Cid] = F[Nid, Cid, Transaction.Value[Cid]]\n   }\n+\n+  final case class GlobalKeyWithMaintainers("
  },
  {
    "id" : "3c164d6a-091c-4f1e-81fa-12e9613fe388",
    "prId" : 6714,
    "comments" : [
      {
        "id" : "e6f87542-bfb4-401c-a9d0-80bddb32abf9",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "This comment is misleading as there is no `private` keyword used below.",
        "createdAt" : "2020-07-14T08:30:28Z",
        "updatedAt" : "2020-07-14T11:01:31Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1a710b3d-d16c-49fb-a863-8056ccb46aef",
        "parentId" : "e6f87542-bfb4-401c-a9d0-80bddb32abf9",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : ":+1: ",
        "createdAt" : "2020-07-14T10:42:48Z",
        "updatedAt" : "2020-07-14T11:01:31Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "abbbd00618a037c1a12fd6080434dcd3248dfc6e",
    "line" : null,
    "diffHunk" : "@@ -422,3 +422,13 @@ object Node {\n     type WithTxValue[+Nid, +Cid] = F[Nid, Cid, Transaction.Value[Cid]]\n   }\n }\n+\n+/** The constructor is private so that we make sure that only this object constructs"
  },
  {
    "id" : "30b595fe-5945-4a35-893e-0097ade2b968",
    "prId" : 6714,
    "comments" : [
      {
        "id" : "ed90198e-4fe0-4eef-89d0-116f35a4070f",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "This was simply copied and pasted here but I agree with Miklos' comment, this comment can simply go away.\r\n```suggestion\r\n```",
        "createdAt" : "2020-07-14T09:05:29Z",
        "updatedAt" : "2020-07-14T11:01:31Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6746d895-de20-4086-a9ff-b1de71c896cd",
        "parentId" : "ed90198e-4fe0-4eef-89d0-116f35a4070f",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : ":+1: \r\n",
        "createdAt" : "2020-07-14T10:42:59Z",
        "updatedAt" : "2020-07-14T11:01:31Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "abbbd00618a037c1a12fd6080434dcd3248dfc6e",
    "line" : null,
    "diffHunk" : "@@ -422,3 +422,13 @@ object Node {\n     type WithTxValue[+Nid, +Cid] = F[Nid, Cid, Transaction.Value[Cid]]\n   }\n }\n+\n+/** The constructor is private so that we make sure that only this object constructs\n+  * node ids -- we don't want external code to manipulate them.\n+  */"
  },
  {
    "id" : "2069c974-f225-4a93-a478-4acb5ecd5741",
    "prId" : 5805,
    "comments" : [
      {
        "id" : "aa6ac48d-5191-4e12-9092-a3e198b92aaf",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "is `children.foreach(f1)` missing here?",
        "createdAt" : "2020-05-05T08:24:27Z",
        "updatedAt" : "2020-05-05T08:29:24Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d8b1c735-2265-4573-9a30-313d033a0bac",
        "parentId" : "aa6ac48d-5191-4e12-9092-a3e198b92aaf",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Indeed. ",
        "createdAt" : "2020-05-05T08:27:50Z",
        "updatedAt" : "2020-05-05T08:29:24Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2664365f2e72bcf952999ef3e7ec83798c6f5dc0",
    "line" : 58,
    "diffHunk" : "@@ -136,6 +137,62 @@ object Node {\n           result = result.map(f2),\n         )\n     }\n+\n+    override private[lf] def foreach3[A, B, C](\n+        f1: A => Unit,\n+        f2: B => Unit,\n+        f3: C => Unit,\n+    ): GenNode[A, B, C] => Unit = {\n+      case NodeCreate(\n+          coid,\n+          coinst,\n+          optLocation @ _,\n+          signatories @ _,\n+          stakeholders @ _,\n+          key,\n+          ) =>\n+        f2(coid)\n+        value.Value.ContractInst.foreach1(f3)(coinst)\n+        key.foreach(KeyWithMaintainers.foreach1(f3))\n+      case NodeFetch(\n+          coid,\n+          templateId @ _,\n+          optLocationd @ _,\n+          actingPartiesd @ _,\n+          signatoriesd @ _,\n+          stakeholdersd @ _,\n+          key,\n+          ) =>\n+        f2(coid)\n+        key.foreach(KeyWithMaintainers.foreach1(f3))\n+      case NodeExercises(\n+          targetCoid,\n+          templateId @ _,\n+          choiceId @ _,\n+          optLocation @ _,\n+          consuming @ _,\n+          actingParties @ _,\n+          chosenValue,\n+          stakeholders @ _,\n+          signatories @ _,\n+          controllers @ _,\n+          children @ _,\n+          exerciseResult,\n+          key,\n+          ) =>\n+        f2(targetCoid)\n+        f3(chosenValue)\n+        exerciseResult.foreach(f3)\n+        key.foreach(KeyWithMaintainers.foreach1(f3))"
  },
  {
    "id" : "d8f8165c-9854-461b-a213-56f075845273",
    "prId" : 4741,
    "comments" : [
      {
        "id" : "cf394b17-4c9f-459d-88de-0dcec0f112d7",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Why the change from `Value[Nothing]` to `Value[AbsoluteContractId]`?",
        "createdAt" : "2020-02-28T08:11:26Z",
        "updatedAt" : "2020-03-02T09:32:20Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2f2906cc-0378-467f-ba48-5ede8c499e4d",
        "parentId" : "cf394b17-4c9f-459d-88de-0dcec0f112d7",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "the middle plan is to get rid of `RelativeContractId`,  together with the parametrization of  `Value`.  Here the hashing of `key` done at the initialization of the `GlobalKey` object ensure there is no `ContractId` in `key`. \r\n\r\n",
        "createdAt" : "2020-02-28T09:17:59Z",
        "updatedAt" : "2020-03-02T09:32:20Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6fdd134e28edcb94e9bf2aff60e5605405bf6128",
    "line" : 62,
    "diffHunk" : "@@ -345,14 +337,31 @@ object Node {\n     }(recorded, isReplayedBy)\n \n   /** Useful in various circumstances -- basically this is what a ledger implementation must use as\n-    * a key. The 'hash' should be used when storing the key as value serialization is not guaranteed\n-    * to be stable over time (e.g. a new encoding might be introduced).\n+    * a key. The 'hash' is guaranteed to be stable over time.\n     */\n-  sealed abstract case class GlobalKey(templateId: Identifier, key: Value[Nothing], hash: Hash)\n+  final class GlobalKey private (\n+      val templateId: Identifier,\n+      val key: Value[AbsoluteContractId],"
  },
  {
    "id" : "bec0a202-5b9f-43a9-bb34-efb488cee4a0",
    "prId" : 4542,
    "comments" : [
      {
        "id" : "33c7ee78-206d-4cb0-a5e9-b3cfbdb336aa",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Not necessary, but a different approach I could suggest is using a `sealed abstract case class`: https://gist.github.com/tpolecat/a5cb0dc9adeacc93f846835ed21c92d2",
        "createdAt" : "2020-02-17T12:20:15Z",
        "updatedAt" : "2020-02-19T10:57:23Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "0faba805-4536-411d-8e8d-ba074590c386",
        "parentId" : "33c7ee78-206d-4cb0-a5e9-b3cfbdb336aa",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "this language never ceases to amaze me with the amount of footguns it has to offer.",
        "createdAt" : "2020-02-17T13:24:20Z",
        "updatedAt" : "2020-02-19T10:57:23Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "fbc2660afe9d3e007e4fd907f341697c73d3cb7c",
    "line" : null,
    "diffHunk" : "@@ -343,9 +345,15 @@ object Node {\n     }(recorded, isReplayedBy)\n \n   /** Useful in various circumstances -- basically this is what a ledger implementation must use as\n-    * a key.\n+    * a key. The 'hash' should be used when storing the key as value serialization is not guaranteed\n+    * to be stable over time (e.g. a new encoding might be introduced).\n     */\n-  case class GlobalKey(templateId: Identifier, key: VersionedValue[Nothing])\n+  case class GlobalKey private (templateId: Identifier, key: Value[Nothing], hash: Hash)"
  },
  {
    "id" : "b567da8c-f1c3-4d88-9255-370069ce9329",
    "prId" : 4364,
    "comments" : [
      {
        "id" : "5b7db79f-d588-4c6e-aa21-cabb1434fcd3",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "We should really be using the `copy` method and only change the fields explicitly that need to be mapped. ",
        "createdAt" : "2020-02-04T09:42:08Z",
        "updatedAt" : "2020-02-05T15:43:03Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ed7aa085e66c23d39da73f99079c0647ab202aa2",
    "line" : 52,
    "diffHunk" : "@@ -35,7 +48,88 @@ object Node {\n     def requiredAuthorizers: Set[Party]\n   }\n \n-  object GenNode extends WithTxValue3[GenNode]\n+  object GenNode extends WithTxValue3[GenNode] with value.CidResolver3[GenNode] {\n+    override private[lf] def map3[A1, A2, A3, B1, B2, B3](\n+        f1: A1 => B1,\n+        f2: A2 => B2,\n+        f3: A3 => B3,\n+    ): GenNode[A1, A2, A3] => GenNode[B1, B2, B3] = {\n+      case NodeCreate(\n+          coid,\n+          coinst,\n+          optLocation,\n+          signatories,\n+          stakeholders,\n+          key,\n+          ) =>\n+        NodeCreate("
  },
  {
    "id" : "02a9f732-5db1-4ada-bcec-be24181debe9",
    "prId" : 1783,
    "comments" : [
      {
        "id" : "2412d30f-ae62-483b-807f-35536f09e793",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "If validating a past transaction (where key = None) will produce a NodeExercises where key = Some, then this needs to use the same approach as `exerciseResult`.",
        "createdAt" : "2019-06-20T14:20:02Z",
        "updatedAt" : "2019-06-26T17:06:23Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "75cc87cc-c460-48e4-a811-71eff067866b",
        "parentId" : "2412d30f-ae62-483b-807f-35536f09e793",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "thanks, good catch!",
        "createdAt" : "2019-06-26T07:52:50Z",
        "updatedAt" : "2019-06-26T17:06:23Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "de2ab281497a82b34ce5979595bae31473d086d0",
    "line" : null,
    "diffHunk" : "@@ -205,12 +209,14 @@ object Node {\n             signatories2,\n             controllers2,\n             _,\n-            exerciseResult2) =>\n+            exerciseResult2,\n+            key2) =>\n           import ne._\n           targetCoid === targetCoid2 && templateId == templateId2 && choiceId == choiceId2 &&\n           consuming == consuming2 && actingParties == actingParties2 && chosenValue === chosenValue2 &&\n           stakeholders == stakeholders2 && signatories == signatories2 && controllers == controllers2 &&\n-          exerciseResult.fold(true)(_ => exerciseResult === exerciseResult2)\n+          exerciseResult.fold(true)(_ => exerciseResult === exerciseResult2) &&\n+          key === key2"
  },
  {
    "id" : "35d26416-8461-4d7c-9b89-c3eadf674430",
    "prId" : 1586,
    "comments" : [
      {
        "id" : "fbaccda1-f0d2-4afd-9b1e-ab816b8c6b6b",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Don't do this, these have a purpose.",
        "createdAt" : "2019-06-12T18:29:16Z",
        "updatedAt" : "2019-06-14T16:11:37Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2eaebf01-3b3c-4c11-b9ca-35bbd896532e",
        "parentId" : "fbaccda1-f0d2-4afd-9b1e-ab816b8c6b6b",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "@S11001001: could you also elaborate on what that purpose is, please?",
        "createdAt" : "2019-06-13T06:59:26Z",
        "updatedAt" : "2019-06-14T16:11:37Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4eafaa32-1a9b-46d6-a981-c81d4cbbb66f",
        "parentId" : "fbaccda1-f0d2-4afd-9b1e-ab816b8c6b6b",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I'll put it as it was but I'm also interested in understanding what the purpose would be.",
        "createdAt" : "2019-06-13T08:23:22Z",
        "updatedAt" : "2019-06-14T16:11:37Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "97582717-4fac-4a64-9c95-1484b2da8ab5",
        "parentId" : "fbaccda1-f0d2-4afd-9b1e-ab816b8c6b6b",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/1586/commits/cae6a3302ba4d11a11917cee146762e7a0c74e5c",
        "createdAt" : "2019-06-13T08:43:53Z",
        "updatedAt" : "2019-06-14T16:11:37Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "20b0f1885b012a4746444d093ee4c22d94978e27",
    "line" : null,
    "diffHunk" : "@@ -197,7 +197,7 @@ object Node {\n             targetCoid2,\n             templateId2,\n             choiceId2,\n-            optLocation2 @ _,\n+            _,"
  },
  {
    "id" : "5f5d99c4-d59b-4d03-8080-42063a205fdc",
    "prId" : 1586,
    "comments" : [
      {
        "id" : "d0796248-ef56-4d90-ba33-23040a927946",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Likewise.",
        "createdAt" : "2019-06-12T18:29:25Z",
        "updatedAt" : "2019-06-14T16:11:37Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "43e7688a-d8a3-43cc-81b5-6c89915c497f",
        "parentId" : "d0796248-ef56-4d90-ba33-23040a927946",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/1586/commits/cae6a3302ba4d11a11917cee146762e7a0c74e5c",
        "createdAt" : "2019-06-13T08:43:59Z",
        "updatedAt" : "2019-06-14T16:11:37Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "20b0f1885b012a4746444d093ee4c22d94978e27",
    "line" : null,
    "diffHunk" : "@@ -213,7 +213,7 @@ object Node {\n           exerciseResult.fold(true)(_ => exerciseResult === exerciseResult2)\n       }\n       case nl: NodeLookupByKey[Cid, Val] => {\n-        case NodeLookupByKey(templateId2, optLocation2 @ _, key2, result2) =>\n+        case NodeLookupByKey(templateId2, _, key2, result2) =>"
  },
  {
    "id" : "6092d404-ef6a-47db-b9f8-11fac076f328",
    "prId" : 1414,
    "comments" : [
      {
        "id" : "9cc82ca2-ab7b-45c8-a665-fed76f5b9255",
        "parentId" : null,
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "This is also dangerous -- is it actually correct?",
        "createdAt" : "2019-06-10T17:09:36Z",
        "updatedAt" : "2019-06-28T13:00:45Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "04f59877-3f1d-42ef-bfb8-36ee657d8d39",
        "parentId" : "9cc82ca2-ab7b-45c8-a665-fed76f5b9255",
        "author" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "body" : "It's not correct for versions of LF transactions that have authorized fetches, but no no fetch actors. But I'm unsure what to do; let's discuss when you have time.",
        "createdAt" : "2019-06-11T17:18:04Z",
        "updatedAt" : "2019-06-28T13:00:45Z",
        "lastEditedBy" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ab0ead601a9595d13f63af85647223621775e3eb",
    "line" : null,
    "diffHunk" : "@@ -64,6 +67,9 @@ object Node {\n       copy(coid = f(coid))\n \n     override def mapNodeId[Nid2](f: Nothing => Nid2): NodeFetch[Cid] = this\n+\n+    override def requiredAuthorizers: Set[Party] = actingParties.getOrElse(Set.empty)"
  },
  {
    "id" : "77114566-3501-49b8-b9f4-167f6b27b667",
    "prId" : 766,
    "comments" : [
      {
        "id" : "7c18ab51-2e61-4ad0-9f6d-6b5bc9225ae3",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Maybe a missing \"why\" as in \"why we removed\"?",
        "createdAt" : "2019-04-29T13:45:47Z",
        "updatedAt" : "2019-05-03T13:49:25Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "32fe4426-689c-4c39-91c9-376675ded217",
        "parentId" : "7c18ab51-2e61-4ad0-9f6d-6b5bc9225ae3",
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "done",
        "createdAt" : "2019-04-29T13:58:53Z",
        "updatedAt" : "2019-05-03T13:49:25Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "296332ca23791717faee6e5d5787d0262be907ad",
    "line" : null,
    "diffHunk" : "@@ -81,6 +81,11 @@ object Node {\n       chosenValue: Val,\n       stakeholders: Set[Party],\n       signatories: Set[Party],\n+      /** Note that here we have both actors and controllers because we use this\n+        * data structure _before_ we validate the transaction. However for every\n+        * valid transaction the actors must be the same as the controllers. This\n+        * is we removed the controllers field in transaction version 6."
  },
  {
    "id" : "651a9387-d459-4050-a3b9-5876f6d07930",
    "prId" : 766,
    "comments" : [
      {
        "id" : "214a23af-436f-495e-bb31-b11be17fce32",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "What if we delete this field from the case class?",
        "createdAt" : "2019-04-29T14:16:15Z",
        "updatedAt" : "2019-05-03T13:49:25Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2549f803-1d48-443b-9e3d-9e0120d056a8",
        "parentId" : "214a23af-436f-495e-bb31-b11be17fce32",
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "we can't if we keep the validation separate.",
        "createdAt" : "2019-04-29T15:36:04Z",
        "updatedAt" : "2019-05-03T13:49:25Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "178076f0-a3d3-4aa7-90cd-40a0292b269c",
        "parentId" : "214a23af-436f-495e-bb31-b11be17fce32",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Maybe we should collapse the data cases here, then: make this `controllersDifferFromActors: Boolean`, add `def controllers: actingParties.type` to the class body, and reject if the boolean is true.",
        "createdAt" : "2019-04-29T16:55:37Z",
        "updatedAt" : "2019-05-03T13:49:25Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "413c0297-d462-42a4-8855-02e5021d9e61",
        "parentId" : "214a23af-436f-495e-bb31-b11be17fce32",
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "@S11001001 I'm not sure I understand the proposal. Could you clarify with a code suggestion, maybe?",
        "createdAt" : "2019-05-02T14:30:49Z",
        "updatedAt" : "2019-05-03T13:49:25Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0f9ea61e-9fcb-490a-90c8-8f817e006835",
        "parentId" : "214a23af-436f-495e-bb31-b11be17fce32",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "and here\r\n\r\n```suggestion\r\n       controllersDifferFromActors: Boolean,\r\n```",
        "createdAt" : "2019-05-02T16:51:09Z",
        "updatedAt" : "2019-05-03T13:49:25Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "296332ca23791717faee6e5d5787d0262be907ad",
    "line" : 9,
    "diffHunk" : "@@ -81,6 +81,11 @@ object Node {\n       chosenValue: Val,\n       stakeholders: Set[Party],\n       signatories: Set[Party],\n+      /** Note that here we have both actors and controllers because we use this\n+        * data structure _before_ we validate the transaction. However for every\n+        * valid transaction the actors must be the same as the controllers. This\n+        * is why we removed the controllers field in transaction version 6.\n+        */\n       controllers: Set[Party],"
  },
  {
    "id" : "c383029d-e11d-4a5a-8588-54ebe05c6a20",
    "prId" : 766,
    "comments" : [
      {
        "id" : "8df2d48b-fd06-4b65-8fe6-8e9269d6ecaf",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "And this is more for type-level documentation of a fact of our model; it might make porting nicer, but you might consider it more confusing than helpful, whichever way you think:\r\n\r\n```suggestion\r\n       extends GenNode[Nid, Cid, Val] {\r\n         def controllers: actingParties.type = actingParties\r\n```",
        "createdAt" : "2019-05-02T16:52:50Z",
        "updatedAt" : "2019-05-03T13:49:25Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "296332ca23791717faee6e5d5787d0262be907ad",
    "line" : 11,
    "diffHunk" : "@@ -81,6 +81,11 @@ object Node {\n       chosenValue: Val,\n       stakeholders: Set[Party],\n       signatories: Set[Party],\n+      /** Note that here we have both actors and controllers because we use this\n+        * data structure _before_ we validate the transaction. However for every\n+        * valid transaction the actors must be the same as the controllers. This\n+        * is why we removed the controllers field in transaction version 6.\n+        */\n       controllers: Set[Party],\n       children: ImmArray[Nid])\n       extends GenNode[Nid, Cid, Val] {"
  },
  {
    "id" : "1d5c7b56-7554-4616-b0f1-d44e34545bb1",
    "prId" : 583,
    "comments" : [
      {
        "id" : "12b66f74-7738-460c-b4ef-10526ad330f7",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "~e: deleted probably-wrong suggestion~",
        "createdAt" : "2019-04-25T15:41:59Z",
        "updatedAt" : "2019-05-06T11:45:15Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e7e9804e-b2c6-48c1-8c7a-0ace8ca9ff51",
        "parentId" : "12b66f74-7738-460c-b4ef-10526ad330f7",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Considering this again, if replaying a transaction fills in a value for `exerciseResult` unconditionally (which I assume it does), then this needs to be\r\n\r\n```suggestion\r\n            exerciseResult.fold(true)(_ => exerciseResult === exerciseResult2)\r\n```\r\n\r\nNote the `===`.",
        "createdAt" : "2019-04-25T17:11:04Z",
        "updatedAt" : "2019-05-06T11:45:15Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c5b35658-2858-4704-a105-4d051534e402",
        "parentId" : "12b66f74-7738-460c-b4ef-10526ad330f7",
        "author" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "body" : "Done",
        "createdAt" : "2019-04-29T12:35:03Z",
        "updatedAt" : "2019-05-06T11:45:15Z",
        "lastEditedBy" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6cfcfff1-2527-45db-af3c-a35bca5e65a7",
        "parentId" : "12b66f74-7738-460c-b4ef-10526ad330f7",
        "author" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "body" : "Done",
        "createdAt" : "2019-04-30T07:53:36Z",
        "updatedAt" : "2019-05-06T11:45:15Z",
        "lastEditedBy" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7dba066e451634d93091257340a85b47cb24ff23",
    "line" : null,
    "diffHunk" : "@@ -168,11 +172,13 @@ object Node {\n               stakeholders2,\n               signatories2,\n               controllers2,\n-              _) =>\n+              _,\n+              exerciseResult2) =>\n             import ne._\n             targetCoid === targetCoid2 && templateId == templateId2 && choiceId == choiceId2 &&\n             consuming == consuming2 && actingParties == actingParties2 && chosenValue === chosenValue2 &&\n-            stakeholders == stakeholders2 && signatories == signatories2 && controllers == controllers2\n+            stakeholders == stakeholders2 && signatories == signatories2 && controllers == controllers2 &&\n+            exerciseResult == exerciseResult2"
  },
  {
    "id" : "c09e9d31-b669-40f2-9e11-c28d9cc9010c",
    "prId" : 583,
    "comments" : [
      {
        "id" : "a71df058-79d2-46e1-a399-58c0fb16b7dc",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Because `return_value` is not present in transactions < version 6:\r\n\r\n```suggestion\r\n      exerciseResult: Option[Val])\r\n```",
        "createdAt" : "2019-04-25T15:53:11Z",
        "updatedAt" : "2019-05-06T11:45:15Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7eb4efa5-df6c-477a-aec9-d97b53bbe7ab",
        "parentId" : "a71df058-79d2-46e1-a399-58c0fb16b7dc",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "When present, the `Val` also needs to be visited in `GenTransaction#foldValues`.",
        "createdAt" : "2019-04-25T17:15:22Z",
        "updatedAt" : "2019-05-06T11:45:15Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "0390fd63-c32c-4ebd-99bd-9077c97f1b46",
        "parentId" : "a71df058-79d2-46e1-a399-58c0fb16b7dc",
        "author" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "body" : " I was under the (maybe false) impression that because Exercises are never received over the wire but only created in the engine that we can assume that the `exerciseResult` will always be present. Am I missing something?",
        "createdAt" : "2019-04-26T13:13:23Z",
        "updatedAt" : "2019-05-06T11:45:15Z",
        "lastEditedBy" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "24dfa394-3ced-43fa-a3ce-b76e00d3dada",
        "parentId" : "a71df058-79d2-46e1-a399-58c0fb16b7dc",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "[For posterity] This is the format of permanently recorded transactions; the ledger API commands to exercise are elsewhere.",
        "createdAt" : "2019-04-26T19:23:27Z",
        "updatedAt" : "2019-05-06T11:45:15Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c6000583-ff93-4b94-b2cd-1e7d8c9b6367",
        "parentId" : "a71df058-79d2-46e1-a399-58c0fb16b7dc",
        "author" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "body" : "Done",
        "createdAt" : "2019-04-29T12:35:19Z",
        "updatedAt" : "2019-05-06T11:45:15Z",
        "lastEditedBy" : {
          "login" : "nicholassmith-da",
          "name" : "Nick Smith",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/47316213?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7dba066e451634d93091257340a85b47cb24ff23",
    "line" : null,
    "diffHunk" : "@@ -82,12 +82,16 @@ object Node {\n       stakeholders: Set[Party],\n       signatories: Set[Party],\n       controllers: Set[Party],\n-      children: ImmArray[Nid])\n+      children: ImmArray[Nid],\n+      exerciseResult: Val)"
  }
]