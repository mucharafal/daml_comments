[
  {
    "id" : "aaa35a58-4ec6-4a6f-98e3-21aee1a40534",
    "prId" : 6509,
    "comments" : [
      {
        "id" : "8c04ed38-b33e-4da9-86d4-3fc5efe4638f",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "This field still exists on the protobuf message. We're now just ignoring it. Is that the right thing to do or should we rather assert that it is empty?",
        "createdAt" : "2020-06-26T11:08:43Z",
        "updatedAt" : "2020-06-26T14:07:06Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "11152058-33b2-4f28-908a-b7625a202738",
        "parentId" : "8c04ed38-b33e-4da9-86d4-3fc5efe4638f",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I'm not entirely sure. Could an assert end up causing issues with backwards compatibility?",
        "createdAt" : "2020-06-26T11:20:19Z",
        "updatedAt" : "2020-06-26T14:07:06Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f9026865-8d20-41de-9ce7-efc9bd7bf0ea",
        "parentId" : "8c04ed38-b33e-4da9-86d4-3fc5efe4638f",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "If it caused issues with backward compatibility, then ignoring the field would be the wrong thing, wouldn't it? @gerolf-da @remyhaemmerle-da do you know more?",
        "createdAt" : "2020-06-26T11:22:13Z",
        "updatedAt" : "2020-06-26T14:07:06Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0debc513-a90d-48d1-8884-f686750d2276",
        "parentId" : "8c04ed38-b33e-4da9-86d4-3fc5efe4638f",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "I don't think we use the `BlindingInfo` protobuf message anywhere. Whenever `com.daml.lf.transaction.BlindingInfo` is needed, it is computed from the `Transaction` itself by using one of the `com.daml.lf.engine.Blinding` functions.\r\n@remyhaemmerle-da can you confirm that? Might be worth checking with other ledger integrations to be sure though.",
        "createdAt" : "2020-06-26T11:29:52Z",
        "updatedAt" : "2020-06-26T14:07:06Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "410ce97d-c8c7-4fea-b72b-99ac63a35508",
        "parentId" : "8c04ed38-b33e-4da9-86d4-3fc5efe4638f",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I was not really aware of this proto encoding.\r\nIt seems to be completly dead code with the `BlindingCoder` class and a test.\r\n",
        "createdAt" : "2020-06-26T12:07:34Z",
        "updatedAt" : "2020-06-26T14:07:06Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f2dca976-e2f0-4181-bd86-53501c1dba11",
        "parentId" : "8c04ed38-b33e-4da9-86d4-3fc5efe4638f",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I push a commit where I drop this useless file.",
        "createdAt" : "2020-06-26T12:15:43Z",
        "updatedAt" : "2020-06-26T14:07:06Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "de6bb64767bd356fae9e44e64331dd0939944e54",
    "line" : 29,
    "diffHunk" : "@@ -25,13 +25,6 @@ object BlindingCoder {\n           parties <- toPartySet(n.getPartiesList)\n         } yield ni -> parties)\n \n-    val implicitLocal =\n-      p.getLocalImplicitDisclosureList.asScala.map(n =>"
  }
]