[
  {
    "id" : "6d6093c0-258f-40c0-86f2-4e3e9e0577e1",
    "prId" : 6739,
    "comments" : [
      {
        "id" : "cf480d7b-b267-43ed-b367-b0f2fa32230a",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Don't put `class`es, `trait`s, or `object`s in a `package object`. They can just go in the package.",
        "createdAt" : "2020-07-15T11:57:59Z",
        "updatedAt" : "2020-07-15T19:43:20Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2cd69ef8-f409-4f07-99e6-c9b105b98666",
        "parentId" : "cf480d7b-b267-43ed-b367-b0f2fa32230a",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Indeed. ",
        "createdAt" : "2020-07-15T15:21:09Z",
        "updatedAt" : "2020-07-15T19:43:20Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "56f970d2f86437d6e9b09a51bc1648fd3ae8e4c8",
    "line" : null,
    "diffHunk" : "@@ -23,4 +28,25 @@ package object transaction {\n       }\n       Right(b.result())\n     }\n+\n+  sealed abstract class DiscriminatedSubtype[X] {\n+    type T <: X\n+    def apply(x: X): T\n+    def subst[F[_]](fx: F[X]): F[T]\n+  }\n+\n+  object DiscriminatedSubtype {\n+    def apply[X]: DiscriminatedSubtype[X] = new DiscriminatedSubtype[X] {\n+      override type T = X\n+      override def apply(x: X): T = x\n+      override def subst[F[_]](fx: F[X]): F[T] = fx\n+    }\n+  }"
  }
]