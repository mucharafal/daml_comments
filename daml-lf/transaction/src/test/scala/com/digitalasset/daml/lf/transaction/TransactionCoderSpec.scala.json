[
  {
    "id" : "bc8fc04a-f1d5-449e-8948-dbbcfc74fcbf",
    "prId" : 7795,
    "comments" : [
      {
        "id" : "bb9a1f4e-db76-4b7f-877f-2d5f89d4e0b5",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Since #6365, default version is deprecated. no need to bother any more with this test.",
        "createdAt" : "2020-10-23T12:52:27Z",
        "updatedAt" : "2020-10-23T13:17:14Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e6e1a991001c06a11ca07fd7ac51b755fe255953",
    "line" : 12,
    "diffHunk" : "@@ -127,46 +126,6 @@ class TransactionCoderSpec\n       }\n     }\n \n-    \"do transactions with default versions\" in {"
  },
  {
    "id" : "a04a40db-de67-492a-9ac9-35f83d1249dd",
    "prId" : 5186,
    "comments" : [
      {
        "id" : "d5a24dad-2f43-4f35-a821-17b56a2a2873",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "```suggestion\r\n        (node: NodeFetch.WithTxValue[Tx.TContractId], valVer: ValueVersion) =>\r\n```",
        "createdAt" : "2020-03-26T09:35:29Z",
        "updatedAt" : "2020-03-26T11:00:44Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "66d880bfd3506c1d95fc2e0178dcfd79755b55b9",
    "line" : null,
    "diffHunk" : "@@ -76,7 +76,7 @@ class TransactionCoderSpec\n \n     \"do NodeFetch\" in {\n       forAll(fetchNodeGen, valueVersionGen()) {\n-        (node: NodeFetch[ContractId], valVer: ValueVersion) =>\n+        (node: NodeFetch[Tx.TContractId, Tx.Value[Tx.TContractId]], valVer: ValueVersion) =>"
  },
  {
    "id" : "2823e37c-e113-43f8-8ac4-18b7ed0923e4",
    "prId" : 4048,
    "comments" : [
      {
        "id" : "d4fe14bb-a641-4a7b-81ff-d7b6048ec490",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "You need to do `withoutMaintainersInExercise` in both prior `if` branches (see how `withoutContractKeyInExercise` is also done in the branch prior its precedence test), or (ideally) reorganize this function so the precedence tests are independent of each other.",
        "createdAt" : "2020-01-15T16:54:33Z",
        "updatedAt" : "2020-01-20T14:12:53Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "32b5f1b5-b26c-4527-a2d0-b3edcb5d71d8",
        "parentId" : "d4fe14bb-a641-4a7b-81ff-d7b6048ec490",
        "author" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "body" : "Added and reorganized. Less efficient when no changes need to be done, but this is test code.",
        "createdAt" : "2020-01-16T11:38:54Z",
        "updatedAt" : "2020-01-20T14:12:53Z",
        "lastEditedBy" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc2b942e21c744f7822b8e099b9269bc6d0f16bc",
    "line" : null,
    "diffHunk" : "@@ -315,6 +322,8 @@ class TransactionCoderSpec\n         (x: GenNode[Nid, Cid, Val]) => withoutExerciseResult(withoutContractKeyInExercise(x)))\n     else if (txvMin precedes minContractKeyInExercise)\n       transactionWithout(tx, (x: GenNode[Nid, Cid, Val]) => withoutContractKeyInExercise(x))\n+    else if (txvMin precedes minMaintainersInExercise)\n+      transactionWithout(tx, (x: GenNode[Nid, Cid, Val]) => withoutMaintainersInExercise(x))"
  },
  {
    "id" : "c00bc90d-9dc1-4103-8805-263efe75af36",
    "prId" : 1783,
    "comments" : [
      {
        "id" : "b5deb3b4-c616-49a6-8c0a-a937dad34236",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "You're making me feel bad about introducing this pattern in the first place :)\r\n\r\nWould you  mind factoring this pattern out even further? Taking the transaction and the txVer/txvMin.",
        "createdAt" : "2019-06-20T14:26:52Z",
        "updatedAt" : "2019-06-26T17:06:23Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "48ea10cf-6ce1-4404-affb-d1daef867c49",
        "parentId" : "b5deb3b4-c616-49a6-8c0a-a937dad34236",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Something like\r\n\r\n```scala\r\n  def minimalistTx[Nid, Cid, Val](txvMin: TransactionVersion, tx: GenTransaction[Nid, Cid, Val]): GenTransaction[Nid, Cid, Val] =\r\n        if (txvMin precedes minExerciseResult)\r\n                                                   transactionWithout(tx, { x: Tx.Node =>\r\n                                                     withoutExerciseResult(\r\n                                                       withoutContractKeyInExercise(x))\r\n                                                   })\r\n                                                 else if (txvMin precedes minContractKeyInExercise)\r\n                                                   transactionWithout(tx, { x: Tx.Node =>\r\n                                                     withoutContractKeyInExercise(x)\r\n                                                   })\r\n                                                 else tx\r\n```",
        "createdAt" : "2019-06-26T09:11:59Z",
        "updatedAt" : "2019-06-26T17:06:23Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "bdca428b-a319-4666-a243-f51158a09349",
        "parentId" : "b5deb3b4-c616-49a6-8c0a-a937dad34236",
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "thanks, done.",
        "createdAt" : "2019-06-26T13:24:34Z",
        "updatedAt" : "2019-06-26T17:06:23Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "de2ab281497a82b34ce5979595bae31473d086d0",
    "line" : null,
    "diffHunk" : "@@ -172,10 +179,26 @@ class TransactionCoderSpec\n               .decodeVersionedTransaction(defaultNidDecode, defaultCidDecode, _))) {\n               case (Right(decWithMin), Right(decWithMax)) =>\n                 decWithMin.transaction shouldBe (if (txvMin precedes minExerciseResult)\n-                                                   withoutExerciseResult(tx)\n+                                                   transactionWithout(tx, { x: Tx.Node =>\n+                                                     withoutExerciseResult(\n+                                                       withoutContractKeyInExercise(x))\n+                                                   })\n+                                                 else if (txvMin precedes minContractKeyInExercise)\n+                                                   transactionWithout(tx, { x: Tx.Node =>\n+                                                     withoutContractKeyInExercise(x)\n+                                                   })\n                                                  else tx)\n                 decWithMin.transaction shouldBe (if (txvMin precedes minExerciseResult)\n-                                                   withoutExerciseResult(decWithMax.transaction)\n+                                                   transactionWithout(decWithMax.transaction, {\n+                                                     x: Tx.Node =>\n+                                                       withoutExerciseResult(\n+                                                         withoutContractKeyInExercise(x))\n+                                                   })\n+                                                 else if (txvMin precedes minContractKeyInExercise)\n+                                                   transactionWithout(decWithMax.transaction, {\n+                                                     x: Tx.Node =>\n+                                                       withoutContractKeyInExercise(x)\n+                                                   })"
  }
]