[
  {
    "id" : "64f12f8e-c46e-4d6b-a85e-b7ba15d45181",
    "prId" : 7345,
    "comments" : [
      {
        "id" : "d90a33ed-f5b7-4217-8195-ce4464185d99",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "I still think the other functions could work on `Iterator[(String, X)]`. If you go back to using `sliding` you only need one.",
        "createdAt" : "2020-09-08T18:05:00Z",
        "updatedAt" : "2020-09-09T11:42:41Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e6a231fc-7cf2-4ac9-b06f-ff7c5013d6ea",
        "parentId" : "d90a33ed-f5b7-4217-8195-ce4464185d99",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I do not get it. Please feel free to improve my code ;).",
        "createdAt" : "2020-09-08T18:15:11Z",
        "updatedAt" : "2020-09-09T11:42:41Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "58e6ddc3-685e-419c-b969-29112ec7a235",
        "parentId" : "d90a33ed-f5b7-4217-8195-ce4464185d99",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Hmmmâ€¦ looks like you can probably just delete this function (`fromOrderedIterator`) entirely. It's unused. Does it exist for a reason?",
        "createdAt" : "2020-09-08T18:51:10Z",
        "updatedAt" : "2020-09-09T11:42:41Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a4072fda-7146-4fcf-beb3-34b8a999a19e",
        "parentId" : "d90a33ed-f5b7-4217-8195-ce4464185d99",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Good catch. I was using it in the first version of #7334, but apparently I dropped it. ",
        "createdAt" : "2020-09-09T07:17:38Z",
        "updatedAt" : "2020-09-09T11:42:41Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "81e2464e-301d-4600-a976-0e2c6e00a6ae",
        "parentId" : "d90a33ed-f5b7-4217-8195-ce4464185d99",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "pruned",
        "createdAt" : "2020-09-09T07:18:00Z",
        "updatedAt" : "2020-09-09T11:42:41Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f41ed979-cfe5-4442-8f82-73a4ded170d6",
        "parentId" : "d90a33ed-f5b7-4217-8195-ce4464185d99",
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "And pushed? ðŸ™ƒ ",
        "createdAt" : "2020-09-09T08:00:18Z",
        "updatedAt" : "2020-09-09T11:42:41Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a82153ed56fe4391c031f6ea4ab2172d2af765d3",
    "line" : null,
    "diffHunk" : "@@ -48,34 +49,34 @@ final class SortedLookupList[+X] private (entries: ImmArray[(String, X)]) extend\n \n object SortedLookupList extends SortedLookupListInstances {\n \n-  def fromImmArray[X](entries: ImmArray[(String, X)]): Either[String, SortedLookupList[X]] = {\n-    entries.toSeq\n-      .groupBy(_._1)\n-      .collectFirst {\n-        case (k, l) if l.size > 1 => s\"key $k duplicated when trying to build map\"\n-      }\n-      .toLeft(new SortedLookupList(entries.toSeq.sortBy(_._1)(Utf8.Ordering).toImmArray))\n+  private[this] val EntryOrdering: Ordering[(String, _)] = {\n+    case ((key1, _), (key2, _)) => Utf8.Ordering.compare(key1, key2)\n   }\n \n-  def fromOrderedImmArray[X](\n-      entries: ImmArray[(String, X)]): Either[String, SortedLookupList[X]] = {\n-    entries\n-      .map(_._1)\n-      .toSeq\n-      .sliding(2)\n-      .collectFirst {\n-        case Seq(k1, k2) if Utf8.Ordering.gteq(k1, k2) => s\"the list $entries is not sorted by key\"\n-      }\n-      .toLeft(new SortedLookupList(entries))\n-  }\n+  private[this] def nonOrderedEntry[X](entries: ImmArray[(String, X)]): Option[(String, X)] =\n+    (entries.iterator zip entries.iterator.drop(1)).collectFirst {\n+      case (entry1, entry2) if EntryOrdering.gteq(entry1, entry2) => entry2\n+    }\n+\n+  def fromImmArray[X](entries: ImmArray[(String, X)]): Either[String, SortedLookupList[X]] =\n+    nonOrderedEntry(entries.toSeq.sorted(EntryOrdering).toImmArray) match {\n+      case None => Right(new SortedLookupList(entries))\n+      case Some((key, _)) => Left(s\"key $key duplicated when trying to build map\")\n+    }\n+\n+  def fromOrderedImmArray[X](entries: ImmArray[(String, X)]): Either[String, SortedLookupList[X]] =\n+    nonOrderedEntry(entries) match {\n+      case None => Right(new SortedLookupList(entries))\n+      case Some(_) => Left(s\"the entries $entries is not sorted by key\")\n+    }\n \n   def fromOrderedIterator[X](entries: Iterator[(String, X)]): Either[String, SortedLookupList[X]] =\n     fromOrderedImmArray(entries.to[ImmArray])"
  },
  {
    "id" : "e335592f-a288-4357-a2a7-62a40a23605b",
    "prId" : 7345,
    "comments" : [
      {
        "id" : "8ac448a1-6aca-4676-8996-eb73c8a9472f",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n      case Some(_) => Left(s\"the entries $entries are not sorted by key\")\r\n```",
        "createdAt" : "2020-09-09T08:40:49Z",
        "updatedAt" : "2020-09-09T11:42:41Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a82153ed56fe4391c031f6ea4ab2172d2af765d3",
    "line" : null,
    "diffHunk" : "@@ -48,34 +49,31 @@ final class SortedLookupList[+X] private (entries: ImmArray[(String, X)]) extend\n \n object SortedLookupList extends SortedLookupListInstances {\n \n-  def fromImmArray[X](entries: ImmArray[(String, X)]): Either[String, SortedLookupList[X]] = {\n-    entries.toSeq\n-      .groupBy(_._1)\n-      .collectFirst {\n-        case (k, l) if l.size > 1 => s\"key $k duplicated when trying to build map\"\n-      }\n-      .toLeft(new SortedLookupList(entries.toSeq.sortBy(_._1)(Utf8.Ordering).toImmArray))\n+  private[this] val EntryOrdering: Ordering[(String, _)] = {\n+    case ((key1, _), (key2, _)) => Utf8.Ordering.compare(key1, key2)\n   }\n \n-  def fromOrderedImmArray[X](\n-      entries: ImmArray[(String, X)]): Either[String, SortedLookupList[X]] = {\n-    entries\n-      .map(_._1)\n-      .toSeq\n-      .sliding(2)\n-      .collectFirst {\n-        case Seq(k1, k2) if Utf8.Ordering.gteq(k1, k2) => s\"the list $entries is not sorted by key\"\n-      }\n-      .toLeft(new SortedLookupList(entries))\n-  }\n+  private[this] def nonOrderedEntry[X](entries: ImmArray[(String, X)]): Option[(String, X)] =\n+    (entries.iterator zip entries.iterator.drop(1)).collectFirst {\n+      case (entry1, entry2) if EntryOrdering.gteq(entry1, entry2) => entry2\n+    }\n \n-  def fromOrderedIterator[X](entries: Iterator[(String, X)]): Either[String, SortedLookupList[X]] =\n-    fromOrderedImmArray(entries.to[ImmArray])\n+  def fromImmArray[X](entries: ImmArray[(String, X)]): Either[String, SortedLookupList[X]] =\n+    nonOrderedEntry(entries.toSeq.sorted(EntryOrdering).toImmArray) match {\n+      case None => Right(new SortedLookupList(entries))\n+      case Some((key, _)) => Left(s\"key $key duplicated when trying to build map\")\n+    }\n+\n+  def fromOrderedImmArray[X](entries: ImmArray[(String, X)]): Either[String, SortedLookupList[X]] =\n+    nonOrderedEntry(entries) match {\n+      case None => Right(new SortedLookupList(entries))\n+      case Some(_) => Left(s\"the entries $entries is not sorted by key\")"
  },
  {
    "id" : "16932b20-c118-4857-ab93-16da5748e336",
    "prId" : 7334,
    "comments" : [
      {
        "id" : "7890e82e-47f3-4b88-854e-3f9f1b0893c4",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "You may want to flip these around so that you're not constructing an `ImmArray` which is immediately thrown away.\r\n\r\n`ImmArray#iterator` is basically free.",
        "createdAt" : "2020-09-08T09:28:09Z",
        "updatedAt" : "2020-09-08T18:04:37Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e25bff12-954d-448f-aa23-fba16645c30f",
        "parentId" : "7890e82e-47f3-4b88-854e-3f9f1b0893c4",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "If you take an attentive look, you can see that the `ImmArray`  built in `SortedLookupList.fromOrderedIterator` function actually ends up in the contructor of the `SortedLookupList` in the body of `SortedLookupList.fromOrderedImmArray` function.\r\n\r\nThe only construction of `ImmArray` that can be avoid is done my `.map(_._1)` method call in the body of  `SortedLookupList.fromOrderedImmArray`. I will take care of that in another PR.",
        "createdAt" : "2020-09-08T17:26:51Z",
        "updatedAt" : "2020-09-08T18:04:37Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b9287729a15d23b6de2b6a2cfb39e2d599b87085",
    "line" : 15,
    "diffHunk" : "@@ -68,6 +69,9 @@ object SortedLookupList extends SortedLookupListInstances {\n       .toLeft(new SortedLookupList(entries))\n   }\n \n+  def fromOrderedIterator[X](entries: Iterator[(String, X)]): Either[String, SortedLookupList[X]] =\n+    fromOrderedImmArray(entries.to[ImmArray])"
  }
]