[
  {
    "id" : "6f3f4bc7-7d56-4058-b752-f68731717b76",
    "prId" : 5270,
    "comments" : [
      {
        "id" : "39e4a0bf-c181-4f6d-9b5b-d9ad354f378a",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : ":+1: ",
        "createdAt" : "2020-03-30T10:42:17Z",
        "updatedAt" : "2020-03-30T12:27:13Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b511451bcf0806c49741be12577939e1d17d4bf1",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +147,151 @@  }\n\n  final case class QualifiedName private (module: ModuleName, name: DottedName) {\n    override def toString: String = module.toString + \":\" + name.toString\n    def qualifiedName: String = toString"
  },
  {
    "id" : "d4238fb8-9dcd-4369-b0fb-73f5f810f536",
    "prId" : 983,
    "comments" : [
      {
        "id" : "b7a1195e-583a-43f2-a2f6-103ad122935e",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n  type Name = Name.T\r\n  implicit def `Name equal instance`: Equal[Name] = Name.equalInstance\r\n```\r\n\r\nWith `-Xsource:2.13` this will be discovered automatically; there is no need to import `equalInstance` at points of use.",
        "createdAt" : "2019-05-09T23:42:40Z",
        "updatedAt" : "2019-05-13T10:32:18Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1ec0feba-c72c-4363-a81e-c8c11ed167c2",
        "parentId" : "b7a1195e-583a-43f2-a2f6-103ad122935e",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I am not sure what you mean. ",
        "createdAt" : "2019-05-10T09:48:38Z",
        "updatedAt" : "2019-05-13T10:32:19Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ec253c7f-9f6f-48a4-9c94-65eca70864ac",
        "parentId" : "b7a1195e-583a-43f2-a2f6-103ad122935e",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I add in `-XSource:2.13` in both \r\n`daml-lf/data/BUILD.bazel` and `daml-lf/scenario-interpreter/BUILD.bazel` and \r\n`daml-lf/transaction/src/main/scala/com/digitalasset/daml/lf/value/Value.scala` does not compile without the import of `Name equal instance`",
        "createdAt" : "2019-05-10T13:22:56Z",
        "updatedAt" : "2019-05-13T10:32:19Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8032f825-8e02-4f99-ae78-0ff5109d1432",
        "parentId" : "b7a1195e-583a-43f2-a2f6-103ad122935e",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "This _should_ work, but I might have an even better idea, and anyway you've addressed my main concern very nicely, so let's take it to a separate PR, along with the `CanBuildFrom`.",
        "createdAt" : "2019-05-13T02:15:06Z",
        "updatedAt" : "2019-05-13T10:32:19Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f651a1e798c15873f3499c8b7e583ea010b3d99f",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +36,40 @@  // In a language like C# you'll need to use some other unicode char for `$`.\n  val Name = MatchingStringModule(\"\"\"[A-Za-z\\$_][A-Za-z0-9\\$_]*\"\"\".r)\n  type Name = Name.T\n  implicit def `Name equal instance`: Equal[Name] = Name.equalInstance\n"
  }
]