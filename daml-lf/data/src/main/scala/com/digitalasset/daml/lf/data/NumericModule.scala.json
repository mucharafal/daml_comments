[
  {
    "id" : "357b4aeb-15a8-43fa-a7ce-1eda52133377",
    "prId" : 2958,
    "comments" : [
      {
        "id" : "694461dc-4fd4-42c5-8201-273e4321fbb0",
        "parentId" : null,
        "author" : null,
        "body" : "As discussed, max scale should be 37\r\n\r\n```suggestion\r\n   val maxPrecision = 37\r\n```",
        "createdAt" : "2019-09-18T15:12:50Z",
        "updatedAt" : "2019-09-18T19:06:09Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "cfa675c0-d7a4-4073-8e1c-60ffae98ba01",
        "parentId" : "694461dc-4fd4-42c5-8201-273e4321fbb0",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "`maxPrecision` will remain 38.\r\nI will change the  maximun scale (line 41) in a subsequent PR.  ",
        "createdAt" : "2019-09-18T15:26:24Z",
        "updatedAt" : "2019-09-18T19:06:09Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1d5aabf8-a122-4481-b2d0-9fe734dafdfb",
        "parentId" : "694461dc-4fd4-42c5-8201-273e4321fbb0",
        "author" : null,
        "body" : "^ ah, I misunderstood. Yes, that's right.",
        "createdAt" : "2019-09-18T15:30:12Z",
        "updatedAt" : "2019-09-18T19:06:09Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "f4ae120994218a9914934213c98fd0913dde1067",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +34,38 @@    * Maximum usable precision for Numerics\n    */\n  val maxPrecision = 38\n\n  val Scale: ScaleModule = new ScaleModule {"
  },
  {
    "id" : "f2fbef82-0d7e-451e-bf1c-816f52082d1d",
    "prId" : 2556,
    "comments" : [
      {
        "id" : "b9d739cc-7219-4fb8-834a-bf1b19160cf7",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Add test.",
        "createdAt" : "2019-08-15T11:40:36Z",
        "updatedAt" : "2019-08-15T12:55:31Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "345fe4def2e17284c6baa0861466c188242ef708",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +99,103 @@    * ```Requires the scale of `x` and `y` are the same.```\n    */\n  final def toLong(x: Numeric): Either[String, Long] =\n    Try(x.setScale(0, ROUND_DOWN).longValueExact()).toEither.left.map(\n      _ => s\"(Numeric ${x.scale()}) $x does not fit into an Int64\","
  }
]