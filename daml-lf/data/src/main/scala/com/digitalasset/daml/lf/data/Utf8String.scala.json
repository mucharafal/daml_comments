[
  {
    "id" : "d85d9559-21a6-4636-b269-63edc8f4eae9",
    "prId" : 1098,
    "comments" : [
      {
        "id" : "8b5ee6f1-70b4-4674-add6-2239cdbcac1b",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Two things:\r\n\r\n1. `AnyVal` boxes _more_ often, that's why they only really get that benefit for use as extension methods, not so much for newtypes. If you want it to be unboxed, use an abstract member that _doesn't_ have the `<: String` part in the signature.\r\n2. No one can use `toString` wisely.\r\n\r\n```suggestion\r\ncase class Utf8String(override val javaString: String) extends Ordered[Utf8String] {\r\n\r\n  @deprecated(\"use javaString instead\", since = \"0.12.18\")\r\n  override final def toString = javaString\r\n```",
        "createdAt" : "2019-05-13T15:33:45Z",
        "updatedAt" : "2019-05-14T17:15:30Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9c00d03c-12da-4e4b-aa0b-e23b86730bea",
        "parentId" : "8b5ee6f1-70b4-4674-add6-2239cdbcac1b",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "OK. That's my last attempt to introduce an `AnyVal` ! ",
        "createdAt" : "2019-05-13T16:08:53Z",
        "updatedAt" : "2019-05-14T17:15:30Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "69ef178c-4377-4c47-ac57-3c809b980a41",
        "parentId" : "8b5ee6f1-70b4-4674-add6-2239cdbcac1b",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed ",
        "createdAt" : "2019-05-13T16:09:15Z",
        "updatedAt" : "2019-05-14T17:15:30Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ab6f3555f4a5b4f43e28f13d031553f39ed5f5c9",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,94 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.daml.lf.data\n+\n+import java.nio.charset.StandardCharsets\n+import java.security.MessageDigest\n+\n+import scalaz.Equal\n+import scalaz.std.string._\n+\n+import scala.collection.mutable\n+\n+// The DAML-LF strings are supposed to be UTF-8 while standard java string are UTF16\n+// We box standard UTF16 java String to prevent non intentional usages of UTF16 operations\n+// (for instance length, charAt, ordering ...) and provide UTF8 emulation methods.\n+\n+// Use `toString` wisely. As a rule on the thumb, you should use `toString` only for logging,\n+// testing, or sending to external libraries (as for instance protobuf/json builders).\n+case class Utf8String(override val toString: String) extends AnyVal with Ordered[Utf8String] {"
  },
  {
    "id" : "58d12c42-6031-4dbf-859a-8d03df119de5",
    "prId" : 1098,
    "comments" : [
      {
        "id" : "93f7a93c-fdcf-449b-b94b-c7a26b95c66e",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n    val arr = ImmArray.newBuilder[Utf8String]\r\n    arr.sizeHint(javaString.codePointCount(0, len))\r\n```\r\n\r\nThen `arr += Utf8...` and `arr.result()` below to fix up the types.",
        "createdAt" : "2019-05-13T15:41:33Z",
        "updatedAt" : "2019-05-14T17:15:30Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b7228bc5-cf2c-423a-a120-5cb00d4d153a",
        "parentId" : "93f7a93c-fdcf-449b-b94b-c7a26b95c66e",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2019-05-13T16:15:57Z",
        "updatedAt" : "2019-05-14T17:15:30Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ab6f3555f4a5b4f43e28f13d031553f39ed5f5c9",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,94 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.daml.lf.data\n+\n+import java.nio.charset.StandardCharsets\n+import java.security.MessageDigest\n+\n+import scalaz.Equal\n+import scalaz.std.string._\n+\n+import scala.collection.mutable\n+\n+// The DAML-LF strings are supposed to be UTF-8 while standard java string are UTF16\n+// We box standard UTF16 java String to prevent non intentional usages of UTF16 operations\n+// (for instance length, charAt, ordering ...) and provide UTF8 emulation methods.\n+\n+// Use `toString` wisely. As a rule on the thumb, you should use `toString` only for logging,\n+// testing, or sending to external libraries (as for instance protobuf/json builders).\n+case class Utf8String(override val toString: String) extends AnyVal with Ordered[Utf8String] {\n+\n+  // The DAML-LF strings are supposed to be UTF-8.\n+  // However standard \"exploding\" java/scala methods like\n+  // _.toList split in Character which are not Unicode codepoint.\n+  def explode: ImmArray[Utf8String] = {\n+    val len = toString.length\n+    val arr = new mutable.ArraySeq[Utf8String](toString.codePointCount(0, len))"
  }
]