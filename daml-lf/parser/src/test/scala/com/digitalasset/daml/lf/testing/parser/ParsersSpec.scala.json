[
  {
    "id" : "1bc72616-7624-4907-9b1f-15feacc0c0cf",
    "prId" : 7548,
    "comments" : [
      {
        "id" : "f3a04115-bd2a-49f2-a88d-cbba988e4a29",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "We'll need a test for the `Some` case here as well.",
        "createdAt" : "2020-10-15T11:53:16Z",
        "updatedAt" : "2020-10-21T08:55:23Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1968095863437d26708412e9478b8d076d85897c",
    "line" : null,
    "diffHunk" : "@@ -475,6 +475,7 @@ class ParsersSpec extends WordSpec with TableDrivenPropertyChecks with Matchers\n               name = n\"Sleep\",\n               consuming = true,\n               controllers = e\"Cons @Party [person] (Nil @Party)\",\n+              observers = None, // NICK, was: e\"Nil @Party\","
  },
  {
    "id" : "8c17e30a-7aea-48b6-a398-63e32b25e71e",
    "prId" : 4983,
    "comments" : [
      {
        "id" : "c3a48808-1689-45cc-9c61-ee5fa6665c06",
        "parentId" : null,
        "author" : null,
        "body" : "```suggestion\r\n        \"GREATER_EQ\" -> BEGreaterEq,\r\n```",
        "createdAt" : "2020-03-13T15:04:42Z",
        "updatedAt" : "2020-03-13T16:40:33Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "034cc94c45b4451105e3469d62baf353006c86d8",
    "line" : null,
    "diffHunk" : "@@ -227,7 +227,10 @@ class ParsersSpec extends WordSpec with TableDrivenPropertyChecks with Matchers\n         \"EQUAL_NUMERIC\" -> BEqualNumeric,\n         \"EQUAL_LIST\" -> BEqualList,\n         \"EQUAL_CONTRACT_ID\" -> BEqualContractId,\n-        \"EQUAL\" -> BEqual,\n+        \"LESS\" -> BELess,\n+        \"LESS_EQ\" -> BELessEq,\n+        \"GREATER\" -> BEGreater,\n+        \"GREATER_EQ\" -> BEGreater,"
  }
]