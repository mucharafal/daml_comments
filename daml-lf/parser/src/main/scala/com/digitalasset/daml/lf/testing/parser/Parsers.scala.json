[
  {
    "id" : "fe0948c4-a3cf-4e10-872e-7d3572954aa5",
    "prId" : 761,
    "comments" : [
      {
        "id" : "7387345a-af0b-4a4c-ae05-a92e5c4ca2ae",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n  val pkgId: Parser[Ref.PackageId] = accept(\"PackageId\", Function unlift {\r\n    case SimpleString(s) => Ref.PackageId.fromString(s).toOption\r\n    case _ => None\r\n```",
        "createdAt" : "2019-05-06T16:32:28Z",
        "updatedAt" : "2019-05-06T17:01:29Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e94116f0-3875-46a0-81d4-2443505621f5",
        "parentId" : "7387345a-af0b-4a4c-ae05-a92e5c4ca2ae",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "done",
        "createdAt" : "2019-05-06T16:59:45Z",
        "updatedAt" : "2019-05-06T17:01:29Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "47aa8737384d1d20c8aabc0ccd0be804a42e3003",
    "line" : null,
    "diffHunk" : "@@ -23,13 +23,16 @@ private[parser] object Parsers extends scala.util.parsing.combinator.Parsers {\n \n   val id: Parser[String] = accept(\"Identifier\", { case Id(s) => s })\n   val text: Parser[String] = accept(\"Text\", { case Text(s) => s })\n-  val simple: Parser[Ref.SimpleString] = accept(\"SimpleString\", { case SimpleString(s) => s })\n+  val pkgId: Parser[Ref.PackageId] = accept(\"PackageId\", {"
  }
]