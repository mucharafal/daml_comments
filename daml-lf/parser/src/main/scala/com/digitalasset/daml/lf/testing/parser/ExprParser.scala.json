[
  {
    "id" : "524656e2-b113-4fc0-84cd-7d8badb39a6b",
    "prId" : 6932,
    "comments" : [
      {
        "id" : "7da7361d-560c-4c77-8047-08df918d5feb",
        "parentId" : null,
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Could this be  `expr` instead of `expr0`?",
        "createdAt" : "2020-07-30T14:30:48Z",
        "updatedAt" : "2020-07-30T15:15:05Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a68b6ecc-c456-4421-ab90-da9915f229fe",
        "parentId" : "7da7361d-560c-4c77-8047-08df918d5feb",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Are you asking about replacing the `expr0` in this line with `expr` or making this rule part of `expr` instead of `expr0` further up?\r\n\r\nThe answer to the former is \"no\". I want the `loc(...)` construct to look like a function and arguments are of the `expr0` form.\r\n\r\nThe answer to the second would be \"good catch\". In fact, `eLoc` should be part of `expr` since it looks like an application. Otherwise expressions like `loc(...) f g` would be parsed as `(loc(...) f) g`, which seems somewhat counterintuitive. When `eLoc` is part of `expr`, this expression will be rejected.\r\n\r\nI moved `eLoc` to `expr` and added a test case demonstrating that the expression above gets rejected.",
        "createdAt" : "2020-07-30T14:57:30Z",
        "updatedAt" : "2020-07-30T15:15:05Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3109c58e342d7cc654c81ed03b022ce9f979c0df",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +390,394 @@\n  private lazy val eLoc: Parser[Expr] =\n    `loc` ~>! (`(` ~> dottedName) ~ (`,` ~> id) ~ (`,` ~> int) ~ (`,` ~> int) ~ (`,` ~> int) ~ (`,` ~> int) ~ (`)` ~> expr0) ^^ {\n      case m ~ d ~ ls ~ cs ~ le ~ ce ~ e =>\n        val location ="
  }
]