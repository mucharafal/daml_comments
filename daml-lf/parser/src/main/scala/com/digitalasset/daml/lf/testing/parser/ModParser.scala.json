[
  {
    "id" : "05f86b05-0a04-4ff5-8ddd-222fa76c6ac9",
    "prId" : 7548,
    "comments" : [
      {
        "id" : "9245db9c-1824-47db-be73-b75123cbed1b",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Yes, extend it for optional choice observers.",
        "createdAt" : "2020-10-14T10:58:11Z",
        "updatedAt" : "2020-10-21T08:55:23Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1968095863437d26708412e9478b8d076d85897c",
    "line" : null,
    "diffHunk" : "@@ -141,6 +141,7 @@ private[parser] class ModParser[P](parameters: ParserParameters[P]) {\n           name,\n           !choiceTags(nonConsumingTag),\n           controllers,\n+          observers = ENil(TBuiltin(BTParty)), //NICK, extend parser for (optional?) observers."
  },
  {
    "id" : "28e7c431-5493-40ba-86be-28e150987347",
    "prId" : 7548,
    "comments" : [
      {
        "id" : "05e6f8f4-a49f-4015-b83f-d7316f7e9197",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "If you do not plan to fix the parser in this PR, please add a FIXME with a github issue.",
        "createdAt" : "2020-10-15T08:13:03Z",
        "updatedAt" : "2020-10-21T08:55:23Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1968095863437d26708412e9478b8d076d85897c",
    "line" : null,
    "diffHunk" : "@@ -141,6 +141,7 @@ private[parser] class ModParser[P](parameters: ParserParameters[P]) {\n           name,\n           !choiceTags(nonConsumingTag),\n           controllers,\n+          observers = None, //ENil(TBuiltin(BTParty)), //NICK, extend parser for (optional?) observers."
  },
  {
    "id" : "7f3c28ba-c270-4bc7-9061-cc5f8c477083",
    "prId" : 4101,
    "comments" : [
      {
        "id" : "0368408e-df1a-4535-93d5-75a3819a4646",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Scala parser combinators are lovely â€¦",
        "createdAt" : "2020-01-23T08:03:34Z",
        "updatedAt" : "2020-01-23T08:08:06Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e9b7ff4849afb993cbda3dc7bea03b90e9dd9c19",
    "line" : 14,
    "diffHunk" : "@@ -56,6 +56,13 @@ private[parser] class ModParser[P](parameters: ParserParameters[P]) {\n   private lazy val binder: Parser[(Name, Type)] =\n     id ~ `:` ~ typ ^^ { case id ~ _ ~ typ => id -> typ }\n \n+  private lazy val synDefinition: Parser[DataDef] =\n+    Id(\"synonym\") ~>! dottedName ~ rep(typeBinder) ~"
  }
]