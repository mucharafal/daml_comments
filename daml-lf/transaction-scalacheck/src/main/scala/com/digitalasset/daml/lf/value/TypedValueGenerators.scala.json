[
  {
    "id" : "dedcc09a-5ac9-427a-9339-063c2d20cf07",
    "prId" : 2136,
    "comments" : [
      {
        "id" : "4efa622c-37d2-4f8c-b877-172462d661c7",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "The name \"addend\" refers to how values of the type will be summed with other values to form a description of possible Values.",
        "createdAt" : "2019-07-16T18:02:07Z",
        "updatedAt" : "2019-07-16T19:07:50Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8e58c11a-ed59-443a-959c-8c30e417a817",
        "parentId" : "4efa622c-37d2-4f8c-b877-172462d661c7",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "`inj` and `prj` what do they stand for? Injection and what?",
        "createdAt" : "2019-07-16T19:54:32Z",
        "updatedAt" : "2019-07-16T20:05:27Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b0a7875e-4a9b-4ee0-9caa-caa3dd314843",
        "parentId" : "4efa622c-37d2-4f8c-b877-172462d661c7",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Projection",
        "createdAt" : "2019-07-16T20:12:22Z",
        "updatedAt" : "2019-07-16T20:12:23Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "efb2080e2b5a2a0b5eb73e3493af263b896954ca",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +28,32 @@  */\nobject TypedValueGenerators {\n  sealed abstract class ValueAddend {\n    type Inj[Cid]\n    def t: Type"
  },
  {
    "id" : "fbba95a6-49a7-40f1-be78-56b0804618f1",
    "prId" : 2136,
    "comments" : [
      {
        "id" : "714b279d-dd9e-4d4c-91f1-d4f21c3f14d5",
        "parentId" : null,
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "what about `PT.List` and `PT.Optional`",
        "createdAt" : "2019-07-16T20:03:22Z",
        "updatedAt" : "2019-07-16T20:05:27Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6fbf6658-46c5-4eca-b163-497cfdff6f3d",
        "parentId" : "714b279d-dd9e-4d4c-91f1-d4f21c3f14d5",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "and also `PT.Map`",
        "createdAt" : "2019-07-16T20:03:51Z",
        "updatedAt" : "2019-07-16T20:05:27Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "145978ff-d1ae-4c5e-b287-8059b95641a2",
        "parentId" : "714b279d-dd9e-4d4c-91f1-d4f21c3f14d5",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Not possible to do with `noCid`, scroll down for support for those three, and also contractId.",
        "createdAt" : "2019-07-16T20:10:30Z",
        "updatedAt" : "2019-07-16T20:10:30Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "efb2080e2b5a2a0b5eb73e3493af263b896954ca",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +66,70 @@    val bool = noCid(PT.Bool, ValueBool) { case ValueBool(b) => b }\n    val party = noCid(PT.Party, ValueParty) { case ValueParty(p) => p }\n\n    val contractId: Aux[Id] = new ValueAddend {\n      type Inj[Cid] = Cid"
  }
]