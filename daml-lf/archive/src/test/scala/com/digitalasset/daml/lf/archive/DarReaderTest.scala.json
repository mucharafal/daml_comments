[
  {
    "id" : "c316f5f1-7145-4325-8a95-14ac0f10d0a5",
    "prId" : 4590,
    "comments" : [
      {
        "id" : "9b1cda1f-707c-4169-bcbd-f3460c911325",
        "parentId" : null,
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "Maybe it is not important, but the check for `dalfDeps` version number is gone `LanguageMajorVersion.V1`",
        "createdAt" : "2020-02-18T22:34:06Z",
        "updatedAt" : "2020-02-19T07:12:06Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4b240e90-d0b1-45a5-b2a7-7457b0bf742d",
        "parentId" : "9b1cda1f-707c-4169-bcbd-f3460c911325",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "I would just use `com.digitalasset.daml.lf.archive.Dar#all` instead of `main :: dalfDeps` in `forAll` and add acheck for language major version. But it is up to you. I see that you need `main` below.",
        "createdAt" : "2020-02-18T22:41:11Z",
        "updatedAt" : "2020-02-19T07:12:06Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "641dbe9b-b73f-4638-887a-08e2bd9be371",
        "parentId" : "9b1cda1f-707c-4169-bcbd-f3460c911325",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "thanks, I’ve added the check for the version number and switched to `all`.",
        "createdAt" : "2020-02-19T07:12:15Z",
        "updatedAt" : "2020-02-19T07:12:15Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3380268372a246046df6e73f9a088407c1d5e4ee",
    "line" : 84,
    "diffHunk" : "@@ -30,103 +30,54 @@ class DarReaderTest extends WordSpec with Matchers with Inside with BazelRunfile\n       DarReaderWithVersion.readArchiveFromFile(darFile)\n \n     inside(archives) {\n-      case Success(\n-          Dar(\n-            ((packageId1, archive1), LanguageMajorVersion.V1),\n-            ((packageId2, archive2), LanguageMajorVersion.V1) ::\n-              ((packageId3, archive3), LanguageMajorVersion.V1) ::\n-              ((packageId4, archive4), LanguageMajorVersion.V1) ::\n-              ((packageId5, archive5), LanguageMajorVersion.V1) ::\n-              ((packageId6, archive6), LanguageMajorVersion.V1) ::\n-              ((packageId7, archive7), LanguageMajorVersion.V1) ::\n-              ((packageId8, archive8), LanguageMajorVersion.V1) ::\n-              ((packageId9, archive9), LanguageMajorVersion.V1) ::\n-              ((packageId10, archive10), LanguageMajorVersion.V1) ::\n-              ((packageId11, archive11), LanguageMajorVersion.V1) ::\n-              ((packageId12, archive12), LanguageMajorVersion.V1) ::\n-              ((packageId13, archive13), LanguageMajorVersion.V1) ::\n-              ((packageId14, archive14), LanguageMajorVersion.V1) ::\n-              ((packageId15, archive15), LanguageMajorVersion.V1) ::\n-              ((packageId16, archive16), LanguageMajorVersion.V1) ::\n-              ((packageId17, archive17), LanguageMajorVersion.V1) ::\n-              ((packageId18, archive18), LanguageMajorVersion.V1) ::\n-              Nil)) =>\n-        packageId1 shouldNot be('empty)\n-        packageId2 shouldNot be('empty)\n-        packageId3 shouldNot be('empty)\n-        packageId4 shouldNot be('empty)\n-        packageId5 shouldNot be('empty)\n-        packageId6 shouldNot be('empty)\n-        packageId7 shouldNot be('empty)\n-        packageId8 shouldNot be('empty)\n-        packageId9 shouldNot be('empty)\n-        packageId10 shouldNot be('empty)\n-        packageId11 shouldNot be('empty)\n-        packageId12 shouldNot be('empty)\n-        packageId13 shouldNot be('empty)\n-        packageId14 shouldNot be('empty)\n-        packageId15 shouldNot be('empty)\n-        packageId16 shouldNot be('empty)\n-        packageId17 shouldNot be('empty)\n-        packageId18 shouldNot be('empty)\n-        archive1.getDamlLf1.getModulesCount should be > 0\n-        archive2.getDamlLf1.getModulesCount should be > 0\n-        archive3.getDamlLf1.getModulesCount should be > 0\n-        archive4.getDamlLf1.getModulesCount should be > 0\n-        archive5.getDamlLf1.getModulesCount should be > 0\n-        archive6.getDamlLf1.getModulesCount should be > 0\n-        archive7.getDamlLf1.getModulesCount should be > 0\n-        archive8.getDamlLf1.getModulesCount should be > 0\n-        archive9.getDamlLf1.getModulesCount should be > 0\n-        archive10.getDamlLf1.getModulesCount should be > 0\n-        archive11.getDamlLf1.getModulesCount should be > 0\n-        archive12.getDamlLf1.getModulesCount should be > 0\n-        archive13.getDamlLf1.getModulesCount should be > 0\n-        archive14.getDamlLf1.getModulesCount should be > 0\n-        archive15.getDamlLf1.getModulesCount should be > 0\n-        archive16.getDamlLf1.getModulesCount should be > 0\n-        archive17.getDamlLf1.getModulesCount should be > 0\n-        archive18.getDamlLf1.getModulesCount should be > 0\n+      case Success(Dar(main @ ((_, mainArchive), LanguageMajorVersion.V1), dalfDeps)) =>\n+        forAll(main :: dalfDeps) {\n+          case ((packageId, archive), _) =>\n+            packageId shouldNot be('empty)\n+            archive.getDamlLf1.getModulesCount should be > 0\n+        }\n "
  },
  {
    "id" : "9e53b6aa-1ed2-45b6-ad80-df648a60aa16",
    "prId" : 4474,
    "comments" : [
      {
        "id" : "63064818-4e11-4eb3-a2b4-02a22523efa2",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Is there a way to make this less repetitive?",
        "createdAt" : "2020-02-11T21:31:21Z",
        "updatedAt" : "2020-02-11T21:57:34Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "50a06472-a13b-4cee-8067-22ab69c58aa5",
        "parentId" : "63064818-4e11-4eb3-a2b4-02a22523efa2",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "We definitely can and I would go as far as saying that all tests that break just because there is a new stable package are broken but I don’t want to fix this in this PR.",
        "createdAt" : "2020-02-11T21:47:04Z",
        "updatedAt" : "2020-02-11T21:57:34Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9ada9a757fbb117d5c645e777b7623f8be5b1cd5",
    "line" : 4,
    "diffHunk" : "@@ -49,6 +49,7 @@ class DarReaderTest extends WordSpec with Matchers with Inside with BazelRunfile\n               ((packageId15, archive15), LanguageMajorVersion.V1) ::\n               ((packageId16, archive16), LanguageMajorVersion.V1) ::\n               ((packageId17, archive17), LanguageMajorVersion.V1) ::\n+              ((packageId18, archive18), LanguageMajorVersion.V1) ::"
  }
]