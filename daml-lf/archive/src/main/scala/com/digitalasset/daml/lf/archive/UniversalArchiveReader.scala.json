[
  {
    "id" : "e19fd0e0-4d1e-46f4-b3df-6cf8c3f60e20",
    "prId" : 2005,
    "comments" : [
      {
        "id" : "39c6dd6a-e9a0-48f3-ae10-3baa343166e8",
        "parentId" : null,
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "I might be missing something, but I believe we are not closing the above `inputStream`. In the original implementation, `bracket` was handling this.",
        "createdAt" : "2019-07-08T14:58:10Z",
        "updatedAt" : "2019-07-11T14:55:46Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "00720b1d-94f1-480b-9b08-325f080b313c",
        "parentId" : "39c6dd6a-e9a0-48f3-ae10-3baa343166e8",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "The only case I can think of which is not handled is when the InputStream is instantiated, the rest should be managed by the numerous decorating layers. I put something to handle issues at instantiation.",
        "createdAt" : "2019-07-09T07:29:07Z",
        "updatedAt" : "2019-07-11T14:55:46Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1f4117b5-c14a-4169-992c-6b9820c9850a",
        "parentId" : "39c6dd6a-e9a0-48f3-ae10-3baa343166e8",
        "author" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "body" : "You're right, I thought the parseDar/Dalf will eventually close the stream. Also, when the stream blows up at instantiation there is nothing to close.",
        "createdAt" : "2019-07-09T09:24:59Z",
        "updatedAt" : "2019-07-11T14:55:46Z",
        "lastEditedBy" : {
          "login" : "gabor-aranyossy",
          "name" : "Gabor Aranyossy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/29858875?u=03b5eca13ed32e74056ee216f2def12e249bcfed&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3ad17e497cfec277fb5878ad7865ec99b598053c",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +36,40 @@    for {\n      fileType <- supportedFileType(file)\n      inputStream <- fileToInputStream(file)\n      dar <- readStream(file.getName, inputStream, fileType)\n    } yield dar"
  },
  {
    "id" : "be06254c-ba32-4d9f-93c5-9dda4e5d358b",
    "prId" : 359,
    "comments" : [
      {
        "id" : "569b32e6-d0eb-492b-aad3-089ea977a682",
        "parentId" : null,
        "author" : {
          "login" : "stephencompall-DA",
          "name" : "Actually @S11001001 (Stephen Compall)",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/32464278?u=2f0eaeb2500ecacccd6c1af95b27424d5193ad65&v=4"
        },
        "body" : "Should this check be case-insensitive?",
        "createdAt" : "2019-04-10T14:05:42Z",
        "updatedAt" : "2019-04-10T14:06:11Z",
        "lastEditedBy" : {
          "login" : "stephencompall-DA",
          "name" : "Actually @S11001001 (Stephen Compall)",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/32464278?u=2f0eaeb2500ecacccd6c1af95b27424d5193ad65&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "850156b8-43e2-44c3-bcb8-fabdc35818e3",
        "parentId" : "569b32e6-d0eb-492b-aad3-089ea977a682",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "it can be... I actually thought about this initially. But I believe our tools create DARs and DALFs with `*.dar` and `*.dalf` extensions and that is how it is supposed to be. But if you think the case is important, it is easy to fix.",
        "createdAt" : "2019-04-10T14:08:27Z",
        "updatedAt" : "2019-04-10T14:09:31Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "90355c1705aeacdc6ee627081dcdfeadbec76a81",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +77,81 @@\n  sealed abstract class SupportedFileType(fileExtension: String) extends Serializable with Product {\n    def matchesFileExtension(f: File): Boolean = f.getName.endsWith(fileExtension)\n  }\n  final case object DarFile extends SupportedFileType(\".dar\")"
  }
]