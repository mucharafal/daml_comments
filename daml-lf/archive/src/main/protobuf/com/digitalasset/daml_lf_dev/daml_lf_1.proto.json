[
  {
    "id" : "310b7ae2-1642-4ac0-9063-ceabe1f6c88f",
    "prId" : 3829,
    "comments" : [
      {
        "id" : "532d70d8-17bd-4fd8-a88f-8848c0994fd8",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n// A fully qualified reference to a type synonym name.\r\n// *Available in versions >=  1.dev*\r\n```",
        "createdAt" : "2019-12-12T13:33:45Z",
        "updatedAt" : "2019-12-13T11:43:28Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "91e36b522dfdac028317d379b5b7991fdef29483",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +113,117 @@}\n\n// A fully qualified reference to a type synonym name.\n// *Available in versions >= 1.dev*\nmessage TypeSynName {"
  },
  {
    "id" : "ad13f369-ccce-4e3e-9550-0adbd0e0365d",
    "prId" : 3829,
    "comments" : [
      {
        "id" : "f3165389-0829-44f0-8a71-6ea390b58863",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "We enforce that everything is interned for DAML-LF `>= 1.7` so we don’t need to have a non-interned version of this.",
        "createdAt" : "2019-12-12T13:34:54Z",
        "updatedAt" : "2019-12-13T11:43:28Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "91e36b522dfdac028317d379b5b7991fdef29483",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +120,124 @@  ModuleRef module = 1;\n\n  oneof name {\n    // type synonym name.\n    DottedName name_dname = 2;"
  },
  {
    "id" : "2d95952b-3c73-45fb-82f6-153661a4641f",
    "prId" : 3703,
    "comments" : [
      {
        "id" : "9666053a-7ed9-4790-8fec-d4e0b06d4cf0",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "As mentioned before, `DataCons` isn’t really a good name with this change anymore. Sadly, I don’t have a great suggestion for what to use instead. @remyhaemmerle-da and ideas? Otherwise, I’m also fine to just go with this for now and figure out better names in separate PRs.",
        "createdAt" : "2019-12-03T07:56:21Z",
        "updatedAt" : "2019-12-03T12:40:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1a0ed5b6-77f7-4b58-8f88-7f127647a53a",
        "parentId" : "9666053a-7ed9-4790-8fec-d4e0b06d4cf0",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "You are right but I do not have a good idea right now. ",
        "createdAt" : "2019-12-03T08:46:45Z",
        "updatedAt" : "2019-12-03T12:40:39Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "87c60dec-c2a4-4f1e-998a-9cc2d8677485",
        "parentId" : "9666053a-7ed9-4790-8fec-d4e0b06d4cf0",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Alright, then let’s keep the naming at least as part of this PR.",
        "createdAt" : "2019-12-03T09:28:59Z",
        "updatedAt" : "2019-12-03T12:40:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f83db09e-6a2d-4e23-97cc-7ac8329778cb",
        "parentId" : "9666053a-7ed9-4790-8fec-d4e0b06d4cf0",
        "author" : {
          "login" : "Nick-Chapman",
          "name" : "Nick Chapman",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/7867928?u=69447afebf94adceb0dce70221641775915bedea&v=4"
        },
        "body" : "To be clear. We wont change the names in this PR.\r\nBut we might change the names (if we can think of better ones!) in a subsequent PR.",
        "createdAt" : "2019-12-03T12:33:11Z",
        "updatedAt" : "2019-12-03T12:40:39Z",
        "lastEditedBy" : {
          "login" : "Nick-Chapman",
          "name" : "Nick Chapman",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/7867928?u=69447afebf94adceb0dce70221641775915bedea&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fc5ef9be-94db-4e39-9dcb-e15e91dbdb36",
        "parentId" : "9666053a-7ed9-4790-8fec-d4e0b06d4cf0",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Fine with me.",
        "createdAt" : "2019-12-03T12:37:21Z",
        "updatedAt" : "2019-12-03T12:40:39Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8e10f3d85f2547f8c6f1968d814c0ffeba77445b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1310,1314 @@    Fields variant = 4; // Variants without constructors are explicitly allowed.\n    EnumConstructors enum = 7; // *Available in versions >= 1.6*\n    Type synonym = 9; // *Available in versions >= 1.dev*\n  }\n"
  },
  {
    "id" : "dfccbc36-8a2d-4450-ad25-3efa55f99f46",
    "prId" : 3703,
    "comments" : [
      {
        "id" : "a59601f2-20b0-4222-8e8c-3eef7c184ad0",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Given that we always require type synonyms to be fully applied it might be worth considering to have a separate case in `Type` for a fully applied type synonym. That might make it a bit easier to expand the type synonym in various places.",
        "createdAt" : "2019-12-03T08:07:34Z",
        "updatedAt" : "2019-12-03T12:40:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7a1e7795-8dd3-4653-a2a5-ede7caff5d32",
        "parentId" : "a59601f2-20b0-4222-8e8c-3eef7c184ad0",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I prefer not to not have a special case in the encoding. \r\nWe already have the message `Type.Con` which encodes applied type in compact way. \r\n",
        "createdAt" : "2019-12-03T08:43:14Z",
        "updatedAt" : "2019-12-03T12:40:39Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8e10f3d85f2547f8c6f1968d814c0ffeba77445b",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +1307,1311 @@\n  oneof DataCons {\n    Fields record = 3; // Records without fields are explicitly allowed.\n    Fields variant = 4; // Variants without constructors are explicitly allowed.\n    EnumConstructors enum = 7; // *Available in versions >= 1.6*"
  },
  {
    "id" : "3009541f-8486-4f23-aff4-75ec68714b24",
    "prId" : 3326,
    "comments" : [
      {
        "id" : "ee4539a6-3bca-498a-835f-1bbd1ec50df8",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Did you forget to add the equality primitive here?",
        "createdAt" : "2019-11-04T13:15:00Z",
        "updatedAt" : "2019-11-04T16:19:34Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0a540bb7-34d3-4d3d-9e9e-1560f53a7e9d",
        "parentId" : "ee4539a6-3bca-498a-835f-1bbd1ec50df8",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Indeed. ",
        "createdAt" : "2019-11-04T13:23:37Z",
        "updatedAt" : "2019-11-04T16:19:34Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1a581551-e226-499b-b097-6a6f352c82cd",
        "parentId" : "ee4539a6-3bca-498a-835f-1bbd1ec50df8",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Fixing that now. \r\n",
        "createdAt" : "2019-11-04T13:25:36Z",
        "updatedAt" : "2019-11-04T16:19:34Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "609c22d98f12f9cd4dc89a8e0d9f1cf0af882a2d",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +274,278 @@  // Builtin type 'Any'\n  // *Available in versions >= 1.dev*\n  ANY = 18;\n\n  // Builtin type 'TypeRep'"
  },
  {
    "id" : "b6d96fb9-93d1-4822-98d2-de6ea5b01e1d",
    "prId" : 3296,
    "comments" : [
      {
        "id" : "6b406dd1-3fc3-4edd-ab47-e80680c64c40",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "why `_str` suffix for interned field? `field_str` and `field_interned` (or interned_id) would feel more natural to me. (not a strong opinion). EDIT: I change my mind, having `interned_str` is good as we might have other types of interned things and it might not always be obvious what the type is.",
        "createdAt" : "2019-11-01T15:14:04Z",
        "updatedAt" : "2019-11-01T16:19:25Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e4b307bce38672100ce0d80a27efe67f1499f824",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +128,132 @@\n      // *Must a valid interned identifier*\n      int32 field_interned_str = 3; // *Available in versions >= 1.dev*\n  }\n"
  }
]