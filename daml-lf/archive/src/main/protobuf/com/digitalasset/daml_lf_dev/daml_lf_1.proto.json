[
  {
    "id" : "88cdd798-8848-4103-9662-325071db75ec",
    "prId" : 4616,
    "comments" : [
      {
        "id" : "fb01f633-8242-4bd9-88da-8673811153f4",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "We should say it's also mandatory for `>= 1.dev`. We also need to add it to the changelog at the top of the file.",
        "createdAt" : "2020-02-20T11:16:19Z",
        "updatedAt" : "2020-02-20T11:28:14Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "fa73a24c-3934-4ead-9206-d18511bef82e",
        "parentId" : "fb01f633-8242-4bd9-88da-8673811153f4",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "thanks, added",
        "createdAt" : "2020-02-20T11:28:16Z",
        "updatedAt" : "2020-02-20T11:28:16Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9f1fb74887df8292873e1d6f27279d6e6dea53d8",
    "line" : null,
    "diffHunk" : "@@ -1445,8 +1445,14 @@ message InternedDottedName {\n   repeated int32 segments_interned_str = 1; // *Available in versions >= 1.7*\n }\n \n+message PackageMetadata {\n+  int32 name_interned_str = 1; // *Available in versions >= 1.dev*\n+  int32 version_interned_str = 2; // *Available in versions >= 1.dev*\n+}\n+\n message Package {\n   repeated Module modules = 1;\n   repeated string interned_strings = 2; // *Available in versions >= 1.6*\n   repeated InternedDottedName interned_dotted_names = 3; // *Available in versions >= 1.7*\n+  PackageMetadata metadata = 4; // * Available in versions >= 1.dev*"
  },
  {
    "id" : "96cb27be-84f4-4c23-ada4-dbbdf8208ee3",
    "prId" : 3829,
    "comments" : [
      {
        "id" : "7ecdc865-228a-4d2a-8c45-948152c67a40",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n// A fully qualified reference to a type synonym name.\r\n// *Available in versions >=  1.dev*\r\n```",
        "createdAt" : "2019-12-12T13:33:45Z",
        "updatedAt" : "2019-12-13T11:43:28Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "91e36b522dfdac028317d379b5b7991fdef29483",
    "line" : 4,
    "diffHunk" : "@@ -112,6 +112,21 @@ message TypeConName {\n   }\n }\n \n+// A fully qualified reference to a type synonym name."
  },
  {
    "id" : "282eaac3-1dac-49c5-bf30-0507e1c65f3f",
    "prId" : 3829,
    "comments" : [
      {
        "id" : "49d6c646-f6d0-4bbb-90f2-d35e1c537750",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "We enforce that everything is interned for DAML-LF `>= 1.7` so we don’t need to have a non-interned version of this.",
        "createdAt" : "2019-12-12T13:34:54Z",
        "updatedAt" : "2019-12-13T11:43:28Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "91e36b522dfdac028317d379b5b7991fdef29483",
    "line" : 11,
    "diffHunk" : "@@ -112,6 +112,21 @@ message TypeConName {\n   }\n }\n \n+// A fully qualified reference to a type synonym name.\n+message TypeSynName {\n+\n+  // Module where the type is defined.\n+  ModuleRef module = 1;\n+\n+  oneof name {"
  },
  {
    "id" : "b7fbcfda-f212-493e-8de6-32cca02a9679",
    "prId" : 3829,
    "comments" : [
      {
        "id" : "7f731bd5-d9f9-4028-a881-e8a771d3b3f6",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Same here, you can remove the `name_dname` case. For consistency it is probably still nice fo have a wrapper but a `oneof` with only one entry should be sufficient for that.",
        "createdAt" : "2019-12-12T13:36:16Z",
        "updatedAt" : "2019-12-13T11:43:28Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8dc7b4c9-2a63-4db4-9086-f4779dffbe23",
        "parentId" : "7f731bd5-d9f9-4028-a881-e8a771d3b3f6",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "I tried this, but it causes type errors, which I don't want to deal with now.\r\nSo I didn't make this change.\r\n\r\nIs it worth having a special case for names which must be interned, simply because they didn't exist prior to interning being implemented. Maybe! But if so, we can do this later.\r\n",
        "createdAt" : "2019-12-13T11:34:02Z",
        "updatedAt" : "2019-12-13T11:43:28Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "91e36b522dfdac028317d379b5b7991fdef29483",
    "line" : null,
    "diffHunk" : "@@ -1337,6 +1363,25 @@ message DefDataType {\n   Location location = 6;\n }\n \n+// Type synonym definition\n+message DefTypeSyn {\n+\n+  // name of the defined type synonym\n+  oneof name {\n+    DottedName name_dname = 1;\n+\n+    // *Must be a valid interned name*\n+    int32 name_interned_dname = 8; // *Available in versions >= 1.7*"
  },
  {
    "id" : "31212ac7-c126-46d3-af0e-720fc43342d5",
    "prId" : 3734,
    "comments" : [
      {
        "id" : "8aa7fbb7-2af4-4106-be47-2cde57dbc029",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I would prefer to use an other range of number to add easily stable built-in. ",
        "createdAt" : "2019-12-04T16:36:57Z",
        "updatedAt" : "2019-12-05T13:34:25Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c66750ca-09fb-40a0-bd77-32a2b99f538d",
        "parentId" : "8aa7fbb7-2af4-4106-be47-2cde57dbc029",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I would like also having something like `experimental` or `unstable` in the name.",
        "createdAt" : "2019-12-04T16:37:52Z",
        "updatedAt" : "2019-12-05T13:34:25Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "833d4b5d-b428-4860-b8b1-2a147e188d37",
        "parentId" : "8aa7fbb7-2af4-4106-be47-2cde57dbc029",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Both sounds fine to me but I’m not sure the names matter much given that this is only in the `1.dev` proto.",
        "createdAt" : "2019-12-04T16:45:20Z",
        "updatedAt" : "2019-12-05T13:34:25Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "53df6082-288d-4a6c-b9a7-39a89bd0ee2d",
        "parentId" : "8aa7fbb7-2af4-4106-be47-2cde57dbc029",
        "author" : null,
        "body" : "I changed the numbers. I'm leaving the names for now at least.",
        "createdAt" : "2019-12-05T11:10:14Z",
        "updatedAt" : "2019-12-05T13:34:25Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ea94ecd7a45890252cd55edbd0adda2787b8cbdc",
    "line" : null,
    "diffHunk" : "@@ -512,7 +513,17 @@ enum BuiltinFunction {\n \n   TEXT_FROM_CODE_POINTS = 105;  // *Available in versions >= 1.6*\n   TEXT_TO_CODE_POINTS = 106; // *Available in versions >= 1.6*\n-  // Next id is 131. 130 is GENMAP_SIZE.\n+\n+  TEXT_TO_UPPER = 131; // *Available in versions >= 1.dev*\n+  TEXT_TO_LOWER = 132; // *Available in versions >= 1.dev*\n+  TEXT_SLICE = 133;\n+  TEXT_SLICE_INDEX = 134; // *Available in versions >= 1.dev*\n+  TEXT_CONTAINS_ONLY = 135; // *Available in versions >= 1.dev*\n+  TEXT_REPLICATE = 136; // *Available in versions >= 1.dev*\n+  TEXT_SPLIT_ON = 137; // *Available in versions >= 1.dev*\n+  TEXT_INTERCALATE = 138; // *Available in versions >= 1.dev*"
  },
  {
    "id" : "cbb71e4a-07ec-4577-b2b2-13f093c9229c",
    "prId" : 3734,
    "comments" : [
      {
        "id" : "045672cc-e4b0-4aaf-8c17-3c29063250d3",
        "parentId" : null,
        "author" : {
          "login" : "jberthold-da",
          "name" : "Jost Berthold",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/28879196?u=41dee6fb7ab2761a566b324e2f4e5ad9b577ae0e&v=4"
        },
        "body" : "```suggestion\r\n  // Next id is 139. 138 is TEXT_INTERCALATE.\r\n```",
        "createdAt" : "2019-12-04T21:30:51Z",
        "updatedAt" : "2019-12-05T13:34:25Z",
        "lastEditedBy" : {
          "login" : "jberthold-da",
          "name" : "Jost Berthold",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/28879196?u=41dee6fb7ab2761a566b324e2f4e5ad9b577ae0e&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3791d415-a1f7-4c6e-94fe-b1eed81039a3",
        "parentId" : "045672cc-e4b0-4aaf-8c17-3c29063250d3",
        "author" : null,
        "body" : "Nice catch, thank you!",
        "createdAt" : "2019-12-05T10:46:45Z",
        "updatedAt" : "2019-12-05T13:34:25Z",
        "lastEditedBy" : null,
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ea94ecd7a45890252cd55edbd0adda2787b8cbdc",
    "line" : null,
    "diffHunk" : "@@ -512,7 +513,17 @@ enum BuiltinFunction {\n \n   TEXT_FROM_CODE_POINTS = 105;  // *Available in versions >= 1.6*\n   TEXT_TO_CODE_POINTS = 106; // *Available in versions >= 1.6*\n-  // Next id is 131. 130 is GENMAP_SIZE.\n+\n+  TEXT_TO_UPPER = 131; // *Available in versions >= 1.dev*\n+  TEXT_TO_LOWER = 132; // *Available in versions >= 1.dev*\n+  TEXT_SLICE = 133;\n+  TEXT_SLICE_INDEX = 134; // *Available in versions >= 1.dev*\n+  TEXT_CONTAINS_ONLY = 135; // *Available in versions >= 1.dev*\n+  TEXT_REPLICATE = 136; // *Available in versions >= 1.dev*\n+  TEXT_SPLIT_ON = 137; // *Available in versions >= 1.dev*\n+  TEXT_INTERCALATE = 138; // *Available in versions >= 1.dev*\n+\n+  // Next id is 139. 138 is TEXT_JOIN."
  },
  {
    "id" : "e182f50d-49b4-4497-9697-3babb95196d8",
    "prId" : 3703,
    "comments" : [
      {
        "id" : "7cc93747-1100-4884-a991-4f6db18c119a",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "As mentioned before, `DataCons` isn’t really a good name with this change anymore. Sadly, I don’t have a great suggestion for what to use instead. @remyhaemmerle-da and ideas? Otherwise, I’m also fine to just go with this for now and figure out better names in separate PRs.",
        "createdAt" : "2019-12-03T07:56:21Z",
        "updatedAt" : "2019-12-03T12:40:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a9674273-b2a7-470c-970d-9721058d1748",
        "parentId" : "7cc93747-1100-4884-a991-4f6db18c119a",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "You are right but I do not have a good idea right now. ",
        "createdAt" : "2019-12-03T08:46:45Z",
        "updatedAt" : "2019-12-03T12:40:39Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "764da535-cec2-4233-be84-11d082e5f440",
        "parentId" : "7cc93747-1100-4884-a991-4f6db18c119a",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Alright, then let’s keep the naming at least as part of this PR.",
        "createdAt" : "2019-12-03T09:28:59Z",
        "updatedAt" : "2019-12-03T12:40:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5fdb7f0e-bbfa-4869-aca1-c933904a1a5a",
        "parentId" : "7cc93747-1100-4884-a991-4f6db18c119a",
        "author" : {
          "login" : "Nick-Chapman",
          "name" : "Nick Chapman",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/7867928?u=69447afebf94adceb0dce70221641775915bedea&v=4"
        },
        "body" : "To be clear. We wont change the names in this PR.\r\nBut we might change the names (if we can think of better ones!) in a subsequent PR.",
        "createdAt" : "2019-12-03T12:33:11Z",
        "updatedAt" : "2019-12-03T12:40:39Z",
        "lastEditedBy" : {
          "login" : "Nick-Chapman",
          "name" : "Nick Chapman",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/7867928?u=69447afebf94adceb0dce70221641775915bedea&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "70f8bfe1-25f3-40ac-8938-627855157034",
        "parentId" : "7cc93747-1100-4884-a991-4f6db18c119a",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Fine with me.",
        "createdAt" : "2019-12-03T12:37:21Z",
        "updatedAt" : "2019-12-03T12:40:39Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8e10f3d85f2547f8c6f1968d814c0ffeba77445b",
    "line" : 4,
    "diffHunk" : "@@ -1309,6 +1309,7 @@ message DefDataType {\n     Fields record = 3; // Records without fields are explicitly allowed.\n     Fields variant = 4; // Variants without constructors are explicitly allowed.\n     EnumConstructors enum = 7; // *Available in versions >= 1.6*\n+    Type synonym = 9; // *Available in versions >= 1.dev*"
  },
  {
    "id" : "cdfbd8f6-b6c6-4266-8545-10d8bc23a009",
    "prId" : 3703,
    "comments" : [
      {
        "id" : "c3dd09d1-8ab8-4ae2-87c5-dd7e5fcfff7c",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Given that we always require type synonyms to be fully applied it might be worth considering to have a separate case in `Type` for a fully applied type synonym. That might make it a bit easier to expand the type synonym in various places.",
        "createdAt" : "2019-12-03T08:07:34Z",
        "updatedAt" : "2019-12-03T12:40:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c302e575-abc8-4822-acf1-f3242314d589",
        "parentId" : "c3dd09d1-8ab8-4ae2-87c5-dd7e5fcfff7c",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I prefer not to not have a special case in the encoding. \r\nWe already have the message `Type.Con` which encodes applied type in compact way. \r\n",
        "createdAt" : "2019-12-03T08:43:14Z",
        "updatedAt" : "2019-12-03T12:40:39Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8e10f3d85f2547f8c6f1968d814c0ffeba77445b",
    "line" : 1,
    "diffHunk" : "@@ -1309,6 +1309,7 @@ message DefDataType {\n     Fields record = 3; // Records without fields are explicitly allowed."
  },
  {
    "id" : "808a0f5c-7c64-4c13-8507-c7c53624f11d",
    "prId" : 3431,
    "comments" : [
      {
        "id" : "e7967c65-bebb-4c6c-9c9d-d204f164027b",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I suggest we move this down below `TYPE_REP` to keep the numbers in order.",
        "createdAt" : "2019-11-12T13:09:05Z",
        "updatedAt" : "2019-11-12T13:24:52Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "be7f4356-35ca-4ebf-9b81-b65d79a762fe",
        "parentId" : "e7967c65-bebb-4c6c-9c9d-d204f164027b",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2019-11-12T13:18:16Z",
        "updatedAt" : "2019-11-12T13:24:52Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "100650c2b9398b69a6f0315c442acedb917736c5",
    "line" : null,
    "diffHunk" : "@@ -269,6 +269,10 @@ enum PrimType {\n   // *Available in versions >= 1.3*\n   MAP = 16;\n \n+  // Builtin type 'TGenMap`\n+  // *Available in versions >= 1.dev*\n+  GENMAP = 20;"
  },
  {
    "id" : "bd0fb11f-f4c6-45d7-89ef-94c7d63e7588",
    "prId" : 3326,
    "comments" : [
      {
        "id" : "38fa59c2-2d0b-46fd-a1e3-a7d73409c85b",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Did you forget to add the equality primitive here?",
        "createdAt" : "2019-11-04T13:15:00Z",
        "updatedAt" : "2019-11-04T16:19:34Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3163163d-bbae-4380-96e7-2607b5c24e39",
        "parentId" : "38fa59c2-2d0b-46fd-a1e3-a7d73409c85b",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Indeed. ",
        "createdAt" : "2019-11-04T13:23:37Z",
        "updatedAt" : "2019-11-04T16:19:34Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b9ce9a75-0116-4b46-a5ac-8c720c3a772e",
        "parentId" : "38fa59c2-2d0b-46fd-a1e3-a7d73409c85b",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Fixing that now. \r\n",
        "createdAt" : "2019-11-04T13:25:36Z",
        "updatedAt" : "2019-11-04T16:19:34Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "609c22d98f12f9cd4dc89a8e0d9f1cf0af882a2d",
    "line" : 3,
    "diffHunk" : "@@ -274,6 +274,10 @@ enum PrimType {\n   // Builtin type 'Any'\n   // *Available in versions >= 1.dev*\n   ANY = 18;"
  },
  {
    "id" : "281d79be-eb59-4cb7-93fe-21e60bf85d0b",
    "prId" : 3296,
    "comments" : [
      {
        "id" : "a5d564e3-cc6c-416a-b596-17dfbf79b998",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "add `reserved 2`?",
        "createdAt" : "2019-11-01T15:13:16Z",
        "updatedAt" : "2019-11-01T16:19:25Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0250eb65-5b86-412a-b0f9-d8a93285eabc",
        "parentId" : "a5d564e3-cc6c-416a-b596-17dfbf79b998",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "No needs since, it was never frozen in stable LF version. ",
        "createdAt" : "2019-11-01T15:44:38Z",
        "updatedAt" : "2019-11-01T16:19:25Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e4b307bce38672100ce0d80a27efe67f1499f824",
    "line" : 27,
    "diffHunk" : "@@ -57,23 +57,23 @@ message PackageRef {\n     Unit self = 1;\n \n     // A `Package identifier` for an imported Package.\n-    // A ascii7 lowercase hex-encoded package identifier. This refers\n-    // to the DAML LF Archive Hash.\n-    string package_id = 2;\n+    // *Must be a list of valid packageId string*\n+    string package_id_str = 2; // *Available in versions < 1.dev*\n \n     // An index into `interned_package_ids` of the Package containing\n     // this reference.\n-    int32 interned_id = 3; // *Available in versions >= 1.6*\n+    // *Must be a valid interned package Id string*\n+    int32 package_id_interned_str = 3; // *Available in versions >= 1.6*\n   }\n }\n \n // A `name`, e.g. Util.Either.isLeft\n+// *Available in version < 1.dev*\n message DottedName {\n-  // *Must be a non-empty list of a valid identifiers unless `segments_interned_id` is set.*\n+\n+  // *Must be a non-empty list of a valid identifiers*\n   repeated string segments = 1;\n \n-  // *Must be set if and only if `segments` is an empty list.*\n-  int32 segments_interned_id = 2; // *Available in versions >= 1.dev*"
  },
  {
    "id" : "bdb91916-0187-4e10-a4a2-1292961615b3",
    "prId" : 3296,
    "comments" : [
      {
        "id" : "5798626b-4101-4bb0-b38c-2583dbfb88e4",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "why `_str` suffix for interned field? `field_str` and `field_interned` (or interned_id) would feel more natural to me. (not a strong opinion). EDIT: I change my mind, having `interned_str` is good as we might have other types of interned things and it might not always be obvious what the type is.",
        "createdAt" : "2019-11-01T15:14:04Z",
        "updatedAt" : "2019-11-01T16:19:25Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e4b307bce38672100ce0d80a27efe67f1499f824",
    "line" : 89,
    "diffHunk" : "@@ -104,21 +112,22 @@ message ValName {\n   // Module where the value is defined\n   ModuleRef module = 1;\n \n-  // *Must be a non-empty list of a valid identifiers unless `interned_id` is set.*\n-  repeated string name = 2;\n+  // *Must be a non-empty list of valid identifier*\n+  repeated string name_dname = 2; // *Available in version < 1.dev*\n \n-  // *Must be set if and only if `segments` is an empty list.*\n-  int32 name_interned_id = 3; // *Available in versions >= 1.dev*\n+  // *Must be a valid interned name*\n+  int32 name_interned_dname = 3; // *Available in versions >= 1.dev*\n }\n \n // A field name definition in a record or a variant associated with a type.\n message FieldWithType {\n \n-  // Name of the field .\n-  // *Must be a valid identifier*\n   oneof field {\n-    string name = 1;\n-    int32 interned_id = 3; // *Available in versions >= 1.dev*\n+      // *Must be a valid identifier*\n+      string field_str = 1; // *Available in version < 1.dev*\n+\n+      // *Must a valid interned identifier*\n+      int32 field_interned_str = 3; // *Available in versions >= 1.dev*"
  },
  {
    "id" : "e9b97a09-16d8-4482-8096-88010a442039",
    "prId" : 3296,
    "comments" : [
      {
        "id" : "e2e4697a-915b-4a68-adac-d6a3e929b4d4",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "inconsistent indentation?",
        "createdAt" : "2019-11-01T15:17:24Z",
        "updatedAt" : "2019-11-01T16:19:25Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "78af9a75-5e1d-43f1-a18d-f7d48f782f9c",
        "parentId" : "e2e4697a-915b-4a68-adac-d6a3e929b4d4",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2019-11-01T15:45:14Z",
        "updatedAt" : "2019-11-01T16:19:25Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e4b307bce38672100ce0d80a27efe67f1499f824",
    "line" : null,
    "diffHunk" : "@@ -993,11 +1016,16 @@ message Update {\n   message Exercise {\n     // Template type\n     TypeConName template = 1;\n+\n     // name of the exercised template choice\n     oneof choice {\n-      string name = 2;\n-      int32 interned_id = 6; // *Available in versions >= 1.dev*\n+        // *Must be a valid identifier*"
  }
]