[
  {
    "id" : "0a7994a0-b855-4a70-a007-ded21c10d496",
    "prId" : 1529,
    "comments" : [
      {
        "id" : "91c7fb44-d840-4d1d-822a-114d4b01f51d",
        "parentId" : null,
        "author" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "body" : "```suggestion\r\n                fail(s\"Mismatching enum id, the type tells us $id, but the value tells us $id_\")\r\n```",
        "createdAt" : "2019-06-05T13:54:32Z",
        "updatedAt" : "2019-06-06T15:52:39Z",
        "lastEditedBy" : {
          "login" : "rautenrieth-da",
          "name" : "Robert Autenrieth",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/31539813?u=e5fe17e2c6f986e9ee04c5b9ca5f6a5a90d1c94a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "93099586-e7f0-4f76-aa37-e1b34740a8d4",
        "parentId" : "91c7fb44-d840-4d1d-822a-114d4b01f51d",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "changes 3 times",
        "createdAt" : "2019-06-05T14:31:02Z",
        "updatedAt" : "2019-06-06T15:52:39Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "181ced0b995bc7875f05cc8260012e8f7fd9d6aa",
    "line" : null,
    "diffHunk" : "@@ -243,6 +244,33 @@ private[engine] class CommandPreprocessor(compiledPackages: ConcurrentCompiledPa\n                 }\n             }\n \n+          case (TTyCon(id), ValueEnum(mbId, constructor)) =>\n+            mbId match {\n+              case Some(id_) if id_ != id =>\n+                fail(s\"Mismatching enum id, the types tell us $id, but the value tells us $id_\")"
  },
  {
    "id" : "3349f5dd-03f5-4dbd-844c-46c6e9b1a5f0",
    "prId" : 989,
    "comments" : [
      {
        "id" : "b0e25241-132d-4cbd-b3ed-b8db85f2a4e7",
        "parentId" : null,
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "```suggestion\r\n        case ImmArray() => Some(map)\r\n        case ImmArrayCons((None, _), _) => None\r\n        case ImmArrayCons((Some(label), value), tail) => ...\r\n```",
        "createdAt" : "2019-05-07T17:43:11Z",
        "updatedAt" : "2019-05-08T09:15:27Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "309834acc21f17e78e0636638f220e22f482484e",
    "line" : null,
    "diffHunk" : "@@ -237,6 +248,32 @@ private[engine] class CommandPreprocessor(compiledPackages: ConcurrentCompiledPa\n     exceptionToResultError(go(0, ty0, v0.value))\n   }\n \n+  private[engine] def labeledRecordToMap(\n+      fields: ImmArray[(Option[String], Value[AbsoluteContractId])])\n+    : Option[Map[String, Value[AbsoluteContractId]]] = {\n+    @tailrec\n+    def go(\n+        fields: ImmArray[(Option[String], Value[AbsoluteContractId])],\n+        map: Map[String, Value[AbsoluteContractId]])\n+      : Option[Map[String, Value[AbsoluteContractId]]] = {\n+      fields match {\n+        case ImmArrayCons(LabeledValue(label, value), tail) =>"
  },
  {
    "id" : "c434972a-86d6-4f98-aa8c-a5aa2e16154e",
    "prId" : 989,
    "comments" : [
      {
        "id" : "8578c263-c8be-48f2-b194-266dc4e48538",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "What's append if the `label` is repeated ?\r\nI think the desirialization should failed. ",
        "createdAt" : "2019-05-07T17:58:14Z",
        "updatedAt" : "2019-05-08T09:15:27Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b0973c80-1f99-4f78-8047-fa5c1874d293",
        "parentId" : "8578c263-c8be-48f2-b194-266dc4e48538",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Very good point, thanks! I'm adding a test and ruling this out, thanks.",
        "createdAt" : "2019-05-08T06:20:26Z",
        "updatedAt" : "2019-05-08T09:15:27Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "363b7c73-7351-4d30-81b4-177fcab69452",
        "parentId" : "8578c263-c8be-48f2-b194-266dc4e48538",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Added a test, turns out this is already covered: the possible cases are that\r\n* you have all keys and one is repeated, meaning a wrong number of keys, which is already checked before\r\n* you have an equal number of repeated and missing keys, which is still caught as missing keys are reported",
        "createdAt" : "2019-05-08T07:02:04Z",
        "updatedAt" : "2019-05-08T09:15:27Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "309834acc21f17e78e0636638f220e22f482484e",
    "line" : 111,
    "diffHunk" : "@@ -237,6 +248,32 @@ private[engine] class CommandPreprocessor(compiledPackages: ConcurrentCompiledPa\n     exceptionToResultError(go(0, ty0, v0.value))\n   }\n \n+  private[engine] def labeledRecordToMap(\n+      fields: ImmArray[(Option[String], Value[AbsoluteContractId])])\n+    : Option[Map[String, Value[AbsoluteContractId]]] = {\n+    @tailrec\n+    def go(\n+        fields: ImmArray[(Option[String], Value[AbsoluteContractId])],\n+        map: Map[String, Value[AbsoluteContractId]])\n+      : Option[Map[String, Value[AbsoluteContractId]]] = {\n+      fields match {\n+        case ImmArrayCons(LabeledValue(label, value), tail) =>\n+          go(tail, map + (label -> value))"
  },
  {
    "id" : "0d6a1559-f0f2-4d8c-b841-e4c1ffc5c0e9",
    "prId" : 989,
    "comments" : [
      {
        "id" : "d5ceabe7-13b9-4cf5-9513-11eddfb7a2a2",
        "parentId" : null,
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "```suggestion\r\n                        // note that we check the number of fields _before_ checking if we can do\r\n                        // field reordering by looking at the labels. this means that it's forbidden to\r\n                        // repeat keys even if we provide all the labels, which might be surprising\r\n                        // since in JavaScript / Scala / most languages (but _not_ JSON, interestingly)\r\n                        // it's ok to do `{\"a\": 1, \"a\": 2}`, where the second occurrence would just win.\r\n                        if (recordFlds.length != flds.length) {\r\n```",
        "createdAt" : "2019-05-08T09:12:20Z",
        "updatedAt" : "2019-05-08T09:15:27Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "309834acc21f17e78e0636638f220e22f482484e",
    "line" : 50,
    "diffHunk" : "@@ -193,7 +193,7 @@ private[engine] class CommandPreprocessor(compiledPackages: ConcurrentCompiledPa\n                   case Some(pkg) =>\n                     PackageLookup.lookupRecord(pkg, recordId.qualifiedName) match {\n                       case Left(err) => ResultError(err)\n-                      case Right((dataTypParams, DataRecord(recordFlds, _mbTpl @ _))) =>\n+                      case Right((dataTypParams, DataRecord(recordFlds, _))) =>\n                         if (recordFlds.length != flds.length) {"
  }
]