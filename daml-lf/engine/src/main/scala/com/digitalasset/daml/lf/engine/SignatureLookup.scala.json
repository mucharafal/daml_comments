[
  {
    "id" : "50ec9b54-2beb-4a21-8d16-59882ab100b9",
    "prId" : 7577,
    "comments" : [
      {
        "id" : "33b16cc3-a70d-4ccc-882f-8507c7b93648",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Why do we need a new type for data type signatures? `DDataType` does not contain any expressions, does it?",
        "createdAt" : "2020-10-09T11:18:09Z",
        "updatedAt" : "2020-10-12T12:30:48Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5ccc1c9e-7fa9-4fdb-9be4-0e1b141986b6",
        "parentId" : "33b16cc3-a70d-4ccc-882f-8507c7b93648",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "In the meantime, I've learned about the link to the template and shared a few thoughts about that further down. I'll leave my first question around as a \"proof\" of my confusion. ðŸ˜„",
        "createdAt" : "2020-10-09T11:45:09Z",
        "updatedAt" : "2020-10-12T12:30:48Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "35c48bfa-2520-4019-9cab-7795ea09fa9d",
        "parentId" : "33b16cc3-a70d-4ccc-882f-8507c7b93648",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2020-10-12T12:23:47Z",
        "updatedAt" : "2020-10-12T12:30:48Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d6d8aeac74d12178596915f46b0e6afbe8a23966",
    "line" : null,
    "diffHunk" : "@@ -7,16 +7,22 @@ import com.daml.lf.data.ImmArray\n import com.daml.lf.data.Ref._\n import com.daml.lf.language.Ast._\n \n-object PackageLookup {\n-  def lookupDefinition(pkg: Package, identifier: QualifiedName): Either[Error, Definition] =\n+object SignatureLookup {\n+  def lookupDefinition(\n+      pkg: PackageSignature,\n+      identifier: QualifiedName,\n+  ): Either[Error, DefinitionSignature] =\n     pkg.lookupIdentifier(identifier).fold(err => Left(Error(err)), Right(_))\n \n-  def lookupDataType(pkg: Package, identifier: QualifiedName): Either[Error, DDataType] =\n+  def lookupDataType(\n+      pkg: PackageSignature,\n+      identifier: QualifiedName,\n+  ): Either[Error, DDataTypeSignature] =\n     for {\n       defn <- lookupDefinition(pkg, identifier)\n       dataTyp <- defn match {\n-        case dataType: DDataType => Right(dataType)\n-        case _: DValue =>\n+        case dataType: DDataTypeSignature => Right(dataType)"
  }
]