[
  {
    "id" : "421c993c-27b2-42cf-88e0-3c98d35bdb70",
    "prId" : 6763,
    "comments" : [
      {
        "id" : "e649e17e-079b-41a7-8741-5dcc5f518884",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "```suggestion\r\n        .collect {\r\n          case v if config.outputTransactionVersions.contains(v) =>\r\n            v.protoValue\r\n        }\r\n```",
        "createdAt" : "2020-07-22T07:33:35Z",
        "updatedAt" : "2020-07-22T08:24:46Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7217a05c9f0407d6667855dfd82e39cb78d89a59",
    "line" : null,
    "diffHunk" : "@@ -7,31 +7,31 @@ import com.daml.lf.language.{LanguageVersion => LV}\n import com.daml.lf.transaction.TransactionVersions\n import com.daml.lf.value.ValueVersions\n \n-class EngineInfo(config: Engine.Config) {\n+class EngineInfo(config: EngineConfig) {\n \n   override lazy val toString: String = show\n \n   lazy val show: String =\n     s\"DAML LF Engine supports LF versions: $formatLfVersions; Input Transaction versions: $formatInputTransactionVersions; Input Value versions: $formatInputValueVersions; Output Transaction versions: $formatOutputTransactionVersions; Output Value versions: $formatOutputValueVersions\"\n \n-  private[this] def formatInputValueVersions: String =\n-    format(ValueVersions.acceptedVersions.map(_.protoValue))\n-\n-  private[this] def formatOutputValueVersions: String =\n-    format(\n-      ValueVersions.acceptedVersions\n-        .filter(config.allowedOutputValueVersions.contains)\n-        .map(_.protoValue)\n-    )\n-\n   private[this] def formatInputTransactionVersions: String =\n     format(TransactionVersions.acceptedVersions.map(_.protoValue))\n \n   private[this] def formatOutputTransactionVersions: String =\n     format(\n       TransactionVersions.acceptedVersions\n-        .filter(config.allowedOutputTransactionVersions.contains)\n-        .map(_.protoValue))\n+        .filter(config.outputTransactionVersions.contains)\n+        .map(_.protoValue)"
  }
]