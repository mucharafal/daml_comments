[
  {
    "id" : "75b41fc2-98f4-42af-a8d3-2f17386060a8",
    "prId" : 7440,
    "comments" : [
      {
        "id" : "97457829-7a41-429c-8816-51152a8893c5",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I assume the engine config contains more things than the compiler config. If so, I would find it slightly confusing to call this method `to...` since we're not really converting something isomorphic into a compiler config but rather extract the compiler config.\r\n```suggestion\r\n  private[lf] def getCompilerConfig: Compiler.Config =\r\n```",
        "createdAt" : "2020-09-21T14:33:04Z",
        "updatedAt" : "2020-09-22T07:29:28Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9868638b-9098-4077-9cee-85293db5b813",
        "parentId" : "97457829-7a41-429c-8816-51152a8893c5",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Good point.",
        "createdAt" : "2020-09-21T15:01:30Z",
        "updatedAt" : "2020-09-22T07:29:28Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0cb172120f08ff90098e7aa876a73dcbdd1fec6e",
    "line" : null,
    "diffHunk" : "@@ -30,6 +31,26 @@ final case class EngineConfig(\n       TransactionVersions.assignValueVersion(allowedOutputTransactionVersions.max),\n     )\n \n+  private[lf] def toCompilerConfig: Compiler.Config ="
  },
  {
    "id" : "b436339a-f7d3-4b5a-be2e-79b3ee0d88f4",
    "prId" : 7420,
    "comments" : [
      {
        "id" : "ad03fe45-ec00-4953-8f0e-3be32efade12",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n  * @param stackTraceMode Enables runtime support for stack traces\r\n```",
        "createdAt" : "2020-09-18T15:50:53Z",
        "updatedAt" : "2020-09-21T18:04:18Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4698f619e0b1718f57f5c1a4193ddca0b7501f54",
    "line" : 30,
    "diffHunk" : "@@ -7,23 +7,63 @@ package engine\n import java.nio.file.Path\n \n import com.daml.lf.language.{LanguageVersion => LV}\n-import com.daml.lf.transaction.{TransactionVersions, TransactionVersion => TV}\n+import com.daml.lf.transaction.{TransactionVersions, TransactionVersion}\n+import com.daml.lf.value.ValueVersion\n \n+/**\n+  * Engine configuration. This describe the  version of language and\n+  * transaction the engine is allowed to read and write. This also\n+  * parameterized debugging option.\n+  *\n+  * <p>\n+  *\n+  * @param allowedLanguageVersions The range of language versions the\n+  *     engine is allowed to load.  The engine will crash if it asked\n+  *     to load a language version that is not included in this range.\n+  *\n+  * @param allowedInputTransactionVersions The range of transaction\n+  *     version the engine is allowed to load. The engine will crash\n+  *     if it is asked to load transaction version that is not\n+  *     included in this range\n+  *\n+  * @param allowedOutputTransactionVersions The range of output\n+  *     transactions the engine is allowed to produces. The Engine\n+  *     will always use the lowest possible version from this range to\n+  *     encode the output transaction, and fails if such version does\n+  *     not exist.\n+  *\n+  * @param stackTraceMode The flag enables the runtime support for\n+  *     stack trace."
  },
  {
    "id" : "5986fd23-120c-4976-ba9a-aa69d5593802",
    "prId" : 7420,
    "comments" : [
      {
        "id" : "1c2c320d-ebbc-458d-9126-4e47dea19637",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n  * @param profileDir Optional directory to save output of the DAML profiler. The profiler is\r\n  *     disabled if this is not set.\r\n```",
        "createdAt" : "2020-09-18T15:51:39Z",
        "updatedAt" : "2020-09-21T18:04:18Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4698f619e0b1718f57f5c1a4193ddca0b7501f54",
    "line" : null,
    "diffHunk" : "@@ -7,23 +7,63 @@ package engine\n import java.nio.file.Path\n \n import com.daml.lf.language.{LanguageVersion => LV}\n-import com.daml.lf.transaction.{TransactionVersions, TransactionVersion => TV}\n+import com.daml.lf.transaction.{TransactionVersions, TransactionVersion}\n+import com.daml.lf.value.ValueVersion\n \n+/**\n+  * Engine configuration. This describe the  version of language and\n+  * transaction the engine is allowed to read and write. This also\n+  * parameterized debugging option.\n+  *\n+  * <p>\n+  *\n+  * @param allowedLanguageVersions The range of language versions the\n+  *     engine is allowed to load.  The engine will crash if it asked\n+  *     to load a language version that is not included in this range.\n+  *\n+  * @param allowedInputTransactionVersions The range of transaction\n+  *     version the engine is allowed to load. The engine will crash\n+  *     if it is asked to load transaction version that is not\n+  *     included in this range\n+  *\n+  * @param allowedOutputTransactionVersions The range of output\n+  *     transactions the engine is allowed to produces. The Engine\n+  *     will always use the lowest possible version from this range to\n+  *     encode the output transaction, and fails if such version does\n+  *     not exist.\n+  *\n+  * @param stackTraceMode The flag enables the runtime support for\n+  *     stack trace.\n+  *\n+  * @param profileDir The optional specifies the directory where to\n+  *     save the output of the DAML scenario profiler. The profiler is\n+  *     disable if the option is empty."
  },
  {
    "id" : "91149583-d44c-4c3f-91c2-4ed0f62e1148",
    "prId" : 7420,
    "comments" : [
      {
        "id" : "00af68f2-f8ac-4142-882d-7ed8797ec515",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\n    * Recommended production configuration.\r\n```",
        "createdAt" : "2020-09-18T15:52:01Z",
        "updatedAt" : "2020-09-21T18:04:18Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4698f619e0b1718f57f5c1a4193ddca0b7501f54",
    "line" : 111,
    "diffHunk" : "@@ -43,18 +99,16 @@ object EngineConfig {\n         max = TransactionVersions.acceptedVersions.last),\n     )\n \n-  // recommended configuration\n-  val Stable: EngineConfig = new EngineConfig(\n-    allowedLanguageVersions = VersionRange(\n-      LV(LV.Major.V1, LV.Minor.Stable(\"6\")),\n-      LV(LV.Major.V1, LV.Minor.Stable(\"8\")),\n-    ),\n-    allowedInputTransactionVersions = VersionRange(TV(\"10\"), TV(\"10\")),\n-    allowedOutputTransactionVersions = VersionRange(TV(\"10\"), TV(\"10\"))\n-  )\n+  /**\n+    * Recommanded production configuration."
  },
  {
    "id" : "8bc2c329-4974-49bd-941a-16e66c853a9f",
    "prId" : 7420,
    "comments" : [
      {
        "id" : "5aa0ef38-d382-4950-89c5-58bb82417f1b",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n  * Engine configuration. This describes the version of language and\r\n```",
        "createdAt" : "2020-09-21T13:25:54Z",
        "updatedAt" : "2020-09-21T18:04:18Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4698f619e0b1718f57f5c1a4193ddca0b7501f54",
    "line" : null,
    "diffHunk" : "@@ -7,24 +7,64 @@ package engine\n import java.nio.file.Path\n \n import com.daml.lf.language.{LanguageVersion => LV}\n-import com.daml.lf.transaction.{TransactionVersions, TransactionVersion => TV}\n+import com.daml.lf.transaction.{TransactionVersions, TransactionVersion}\n+import com.daml.lf.value.ValueVersion\n \n+/**\n+  * Engine configuration. This describe the  version of language and"
  },
  {
    "id" : "fa402632-95d9-405e-b3a4-486e4bd3a146",
    "prId" : 7420,
    "comments" : [
      {
        "id" : "b4559738-3abc-4760-b685-5ff31d2a8360",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I'm not sure I understand what you want to say here. Is this particular class parametrized by a debugging option or are the debugging options parametrized by this class?",
        "createdAt" : "2020-09-21T13:26:50Z",
        "updatedAt" : "2020-09-21T18:04:18Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4698f619e0b1718f57f5c1a4193ddca0b7501f54",
    "line" : null,
    "diffHunk" : "@@ -7,24 +7,64 @@ package engine\n import java.nio.file.Path\n \n import com.daml.lf.language.{LanguageVersion => LV}\n-import com.daml.lf.transaction.{TransactionVersions, TransactionVersion => TV}\n+import com.daml.lf.transaction.{TransactionVersions, TransactionVersion}\n+import com.daml.lf.value.ValueVersion\n \n+/**\n+  * Engine configuration. This describe the  version of language and\n+  * transaction the engine is allowed to read and write. This also\n+  * parameterized debugging option."
  },
  {
    "id" : "482270e9-5b16-4c16-b951-4d143c629b51",
    "prId" : 7420,
    "comments" : [
      {
        "id" : "e9938ff1-027f-45ca-a25a-62cad51c055b",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n  *     transactions the engine is allowed to produce. The Engine\r\n```",
        "createdAt" : "2020-09-21T13:27:20Z",
        "updatedAt" : "2020-09-21T18:04:18Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4698f619e0b1718f57f5c1a4193ddca0b7501f54",
    "line" : null,
    "diffHunk" : "@@ -7,24 +7,64 @@ package engine\n import java.nio.file.Path\n \n import com.daml.lf.language.{LanguageVersion => LV}\n-import com.daml.lf.transaction.{TransactionVersions, TransactionVersion => TV}\n+import com.daml.lf.transaction.{TransactionVersions, TransactionVersion}\n+import com.daml.lf.value.ValueVersion\n \n+/**\n+  * Engine configuration. This describe the  version of language and\n+  * transaction the engine is allowed to read and write. This also\n+  * parameterized debugging option.\n+  *\n+  * <p>\n+  *\n+  * @param allowedLanguageVersions The range of language versions the\n+  *     engine is allowed to load.  The engine will crash if it asked\n+  *     to load a language version that is not included in this range.\n+  *\n+  * @param allowedInputTransactionVersions The range of transaction\n+  *     version the engine is allowed to load. The engine will crash\n+  *     if it is asked to load transaction version that is not\n+  *     included in this range\n+  *\n+  * @param allowedOutputTransactionVersions The range of output\n+  *     transactions the engine is allowed to produces. The Engine"
  },
  {
    "id" : "e6eef44c-a9a7-4f92-aa7e-6809e750111c",
    "prId" : 7420,
    "comments" : [
      {
        "id" : "cbe73146-f800-4ef6-8c5a-596ca0b44890",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n  *     stack traces.\r\n```",
        "createdAt" : "2020-09-21T13:27:34Z",
        "updatedAt" : "2020-09-21T18:04:18Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4698f619e0b1718f57f5c1a4193ddca0b7501f54",
    "line" : 30,
    "diffHunk" : "@@ -7,24 +7,64 @@ package engine\n import java.nio.file.Path\n \n import com.daml.lf.language.{LanguageVersion => LV}\n-import com.daml.lf.transaction.{TransactionVersions, TransactionVersion => TV}\n+import com.daml.lf.transaction.{TransactionVersions, TransactionVersion}\n+import com.daml.lf.value.ValueVersion\n \n+/**\n+  * Engine configuration. This describe the  version of language and\n+  * transaction the engine is allowed to read and write. This also\n+  * parameterized debugging option.\n+  *\n+  * <p>\n+  *\n+  * @param allowedLanguageVersions The range of language versions the\n+  *     engine is allowed to load.  The engine will crash if it asked\n+  *     to load a language version that is not included in this range.\n+  *\n+  * @param allowedInputTransactionVersions The range of transaction\n+  *     version the engine is allowed to load. The engine will crash\n+  *     if it is asked to load transaction version that is not\n+  *     included in this range\n+  *\n+  * @param allowedOutputTransactionVersions The range of output\n+  *     transactions the engine is allowed to produces. The Engine\n+  *     will always use the lowest possible version from this range to\n+  *     encode the output transaction, and fails if such version does\n+  *     not exist.\n+  *\n+  * @param stackTraceMode The flag enables the runtime support for\n+  *     stack trace."
  },
  {
    "id" : "50056efa-c23c-44a2-b0f2-c77188b4d5b3",
    "prId" : 7420,
    "comments" : [
      {
        "id" : "ea0acb56-be9e-40e6-9a19-6cacdedfdae4",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n  *     disabled if the option is empty.\r\n```",
        "createdAt" : "2020-09-21T13:28:03Z",
        "updatedAt" : "2020-09-21T18:04:18Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4698f619e0b1718f57f5c1a4193ddca0b7501f54",
    "line" : null,
    "diffHunk" : "@@ -7,24 +7,64 @@ package engine\n import java.nio.file.Path\n \n import com.daml.lf.language.{LanguageVersion => LV}\n-import com.daml.lf.transaction.{TransactionVersions, TransactionVersion => TV}\n+import com.daml.lf.transaction.{TransactionVersions, TransactionVersion}\n+import com.daml.lf.value.ValueVersion\n \n+/**\n+  * Engine configuration. This describe the  version of language and\n+  * transaction the engine is allowed to read and write. This also\n+  * parameterized debugging option.\n+  *\n+  * <p>\n+  *\n+  * @param allowedLanguageVersions The range of language versions the\n+  *     engine is allowed to load.  The engine will crash if it asked\n+  *     to load a language version that is not included in this range.\n+  *\n+  * @param allowedInputTransactionVersions The range of transaction\n+  *     version the engine is allowed to load. The engine will crash\n+  *     if it is asked to load transaction version that is not\n+  *     included in this range\n+  *\n+  * @param allowedOutputTransactionVersions The range of output\n+  *     transactions the engine is allowed to produces. The Engine\n+  *     will always use the lowest possible version from this range to\n+  *     encode the output transaction, and fails if such version does\n+  *     not exist.\n+  *\n+  * @param stackTraceMode The flag enables the runtime support for\n+  *     stack trace.\n+  *\n+  * @param profileDir The optional specifies the directory where to\n+  *     save the output of the DAML scenario profiler. The profiler is\n+  *     disable if the option is empty."
  },
  {
    "id" : "547d8b5f-d7e1-4be5-9097-41cba876bcc7",
    "prId" : 7127,
    "comments" : [
      {
        "id" : "28a79d4c-54ab-4780-8639-bc3addca2185",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "This seems to have changed from v1.1 to v0. Was this intentional?",
        "createdAt" : "2020-08-13T15:11:06Z",
        "updatedAt" : "2020-08-13T19:45:44Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "29c8f7b7-6cc3-4627-90b6-0c215cb41031",
        "parentId" : "28a79d4c-54ab-4780-8639-bc3addca2185",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Yes. But, it does not really matter as we does not really support V0.\r\nI should probably remove it. ",
        "createdAt" : "2020-08-13T15:21:01Z",
        "updatedAt" : "2020-08-13T19:45:44Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e82a6b71607763a9604804e8eccd1345e7ab4616",
    "line" : null,
    "diffHunk" : "@@ -97,4 +40,23 @@ object EngineConfig {\n     outputTransactionVersions = VersionRange(TV(\"10\"), TV(\"10\"))\n   )\n \n+  // development configuration, should not be used in PROD.\n+  // accept all language and transaction versions supported by SDK_1_x plus development versions.\n+  val Dev: EngineConfig = toDev(Stable)\n+\n+  // Legacy configuration, to be used by sandbox classic only\n+  @deprecated(\"Sandbox_Classic_Stable is to be used by sandbox classic only\", since = \"1.5.0\")\n+  val Sandbox_Classic_Stable: EngineConfig =\n+    Stable.copy(\n+      languageVersions = Stable.languageVersions.copy(min = LV(LV.Major.V0, LV.Minor.Stable(\"\"))),"
  }
]