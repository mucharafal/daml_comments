[
  {
    "id" : "5be30d9d-9065-44db-b9d7-d1c8b9e16625",
    "prId" : 1864,
    "comments" : [
      {
        "id" : "efbcdbc4-3883-45ca-8d28-bd845c91f7d4",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n      copy(events = events.transform { (_, value) => value.mapContractId(f, g) })\r\n```\r\n\r\nand likewise elsewhere. (Scala does not optimize this, it does exactly the silliest thing you can imagine.)",
        "createdAt" : "2019-06-26T08:47:02Z",
        "updatedAt" : "2019-07-04T11:21:33Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "61f2afcd-20f2-448c-9a89-011b85350d8f",
        "parentId" : "efbcdbc4-3883-45ca-8d28-bd845c91f7d4",
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "done.",
        "createdAt" : "2019-07-01T13:09:23Z",
        "updatedAt" : "2019-07-04T11:21:33Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "8ea72c5c03d4c80d7f7cd972edff25e4bdec7f2b",
    "line" : null,
    "diffHunk" : "@@ -112,7 +112,8 @@ object Event {\n     }\n \n     def mapContractIdAndValue[Cid2, Val2](f: Cid => Cid2, g: Val => Val2): Events[Nid, Cid2, Val2] =\n-      copy(events = events.mapValues(_.mapContractId(f, g)))\n+      // do NOT use `Map#mapValues`! it applies the function lazily on lookup. see #1861\n+      copy(events = events.transform { case (_, value) => value.mapContractId(f, g) })"
  },
  {
    "id" : "875445a9-20d7-4d64-9926-5faf52f0d9c2",
    "prId" : 583,
    "comments" : [
      {
        "id" : "96e351f5-1e74-4e62-807a-41c6aedf198c",
        "parentId" : null,
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "```suggestion\r\n  *  @param exerciseResult result of exercise of the choice. Optional since this feature was introduced in transaction version 6.\r\n```",
        "createdAt" : "2019-04-30T07:43:15Z",
        "updatedAt" : "2019-05-06T11:45:15Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7dba066e451634d93091257340a85b47cb24ff23",
    "line" : null,
    "diffHunk" : "@@ -57,6 +57,7 @@ final case class CreateEvent[Cid, Val](\n   *  @param children consequence events. note that they're paired with the NodeId of the transaction that originated the event.\n   *  @param stakeholders the stakeholders of the target contract -- must be a subset of witnesses. see comment for `collectEvents`\n   *  @param witnesses additional witnesses induced by parent exercises\n+  *  @param exerciseResult result of exercise of the choice"
  }
]