[
  {
    "id" : "168cd592-1aab-4864-be00-3cc731ce86bf",
    "prId" : 6515,
    "comments" : [
      {
        "id" : "4e172a02-d8ba-4261-a409-013631bb7a57",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Just code tidying here.",
        "createdAt" : "2020-06-29T08:35:58Z",
        "updatedAt" : "2020-06-30T08:52:03Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5b5d17d48af638f059d785c2d530c2f7d89eec0e",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +71,75 @@    * </li>\n    * </ul>\n    *\n    *\n    * [[transactionSeed]] is the master hash used to derive node and contractId discriminator."
  },
  {
    "id" : "9997ed64-5157-48e0-9a4e-c8628f8a7713",
    "prId" : 6515,
    "comments" : [
      {
        "id" : "5f1143d1-0728-41e0-974b-4245a80baa6c",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "This must be non-final in order to mock.",
        "createdAt" : "2020-06-29T12:52:02Z",
        "updatedAt" : "2020-06-30T08:52:03Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5b5d17d48af638f059d785c2d530c2f7d89eec0e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +47,51 @@  * This class is thread safe as long `nextRandomInt` is.\n  */\nclass Engine(config: Engine.Config) {\n  private[this] val compiledPackages = ConcurrentCompiledPackages()\n  private[this] val preprocessor = new preprocessing.Preprocessor(compiledPackages)"
  },
  {
    "id" : "f6c98121-cc88-43ba-af92-746afc65b839",
    "prId" : 6464,
    "comments" : [
      {
        "id" : "a019a340-43ed-40c7-9aad-8ee6c6b0ad43",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Excellent diff minimization. üëç ",
        "createdAt" : "2020-07-07T12:13:43Z",
        "updatedAt" : "2020-07-07T20:12:09Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5e4534ddfd19654c1da5ce2930793a4eaa7a12cf",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +225,229 @@    //reinterpret\n    for {\n      result <- replay(tx, ledgerEffectiveTime, participantId, submissionTime, submissionSeed)\n      (rtx, _) = result\n      validationResult <- if (tx.transaction isReplayedBy rtx.transaction) {"
  },
  {
    "id" : "99f3fddc-b1c9-4b3b-8cd4-307b0c64f1dd",
    "prId" : 6151,
    "comments" : [
      {
        "id" : "38e473dd-e346-4321-a6f9-ae72dc63361b",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "It does not work for `LF-REPL` as the `submissionTime` is always EPOCH and the sequence of `hashes` may repeat (for the same program /scenario it is guarantee it will be the same).\r\nThe fix time and fix sequence of seed is done to have reproducible runs. \r\nIn case of sandbox it should be fine.",
        "createdAt" : "2020-05-29T11:32:17Z",
        "updatedAt" : "2020-05-29T11:34:26Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2283fd68-7532-4b1d-b531-94af75ad8b8e",
        "parentId" : "38e473dd-e346-4321-a6f9-ae72dc63361b",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "`LF-REPL` does not use the engine but rather the speedy machine directly. for `daml-lf-repl profile` you need to specify an output file directly hence.",
        "createdAt" : "2020-05-29T13:02:12Z",
        "updatedAt" : "2020-05-29T13:02:13Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "fa42faf4fffb4e6c0891d323b87bdf1cb115576f",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +425,429 @@        s\"compound:${tx.roots.length}\"\n      }\n    s\"${meta.submissionTime}-${desc}-${hash}.json\"\n  }\n}"
  },
  {
    "id" : "e9365a31-4e02-48c3-ad12-e41f3c5c1023",
    "prId" : 6143,
    "comments" : [
      {
        "id" : "0a06132b-e590-4aec-a0c1-636df340b2d8",
        "parentId" : null,
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "It's good to document that `validate` only works for submitted transaction, not for committed ones. üëè ",
        "createdAt" : "2020-06-08T13:56:24Z",
        "updatedAt" : "2020-06-08T14:24:10Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "89af6d420800adee764159fb1c3073fae07859e9",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +167,171 @@    */\n  def validate(\n      tx: Tx.SubmittedTransaction,\n      ledgerEffectiveTime: Time.Timestamp,\n      participantId: Ref.ParticipantId,"
  },
  {
    "id" : "cc241fe1-0fd3-417f-aa5a-e8d290f8991d",
    "prId" : 5570,
    "comments" : [
      {
        "id" : "23ca4797-bb6c-44a8-b220-3ab22ebcef48",
        "parentId" : null,
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "Please update the comment according to the changed parameters:\r\n- there is no transactionSeed any more\r\n- the seed argument and the submission time should be added to `reinterpret(cmds.submitter, ...)` and `reinterpret(n.requiredAuthorizers, ...)`\r\n- renaming of relative contract IDs is now suffixing of contract IDs\r\n\r\nI also recommend to extend the comment with a warning that it is not sensible to run `reinterpret` for a several nodes unless they are not exactly the roots of the original transaction.",
        "createdAt" : "2020-04-16T05:42:37Z",
        "updatedAt" : "2020-04-16T15:56:18Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3e2fd7a2-9cee-4240-a3a2-9bec69100a75",
        "parentId" : "23ca4797-bb6c-44a8-b220-3ab22ebcef48",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I do not get the last sentence. Could you reformulate ? ",
        "createdAt" : "2020-04-16T12:00:04Z",
        "updatedAt" : "2020-04-16T15:56:18Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0131af72a15602be1889879e8178298a5cea4a63",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +133,137 @@    * The value of [[nodeSeed]] does not matter for other kind of nodes.\n    */\n  def reinterpret(\n      submitters: Set[Party],\n      node: GenNode.WithTxValue[Value.NodeId, Value.ContractId],"
  },
  {
    "id" : "2ef233c2-fb99-4791-9373-640bec9d1e7a",
    "prId" : 5570,
    "comments" : [
      {
        "id" : "3530d479-f99c-4b15-807d-8eff35e6da70",
        "parentId" : null,
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "Can you update the comment? We no longer have [[transactionSeed]] here anymore.",
        "createdAt" : "2020-04-16T05:46:32Z",
        "updatedAt" : "2020-04-16T15:56:18Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "73a2fe24-881c-4861-9fa0-8ca63ef5671b",
        "parentId" : "3530d479-f99c-4b15-807d-8eff35e6da70",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2020-04-16T12:03:46Z",
        "updatedAt" : "2020-04-16T15:56:18Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0131af72a15602be1889879e8178298a5cea4a63",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +244,248 @@      commands: ImmArray[SpeedyCommand],\n      ledgerTime: Time.Timestamp,\n      submissionTime: Time.Timestamp,\n      seeding: speedy.InitialSeeding,\n  ): Result[(Transaction, Boolean, ImmArray[(Tx.NodeId, crypto.Hash)])] = {"
  },
  {
    "id" : "551373d5-f710-4f2a-b4f4-55ea4f541a21",
    "prId" : 5570,
    "comments" : [
      {
        "id" : "6e36e93b-ee30-4f40-b95d-a6de7b190430",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "```suggestion\r\n    * If undefined the contract IDs are derived using V0 scheme.\r\n```",
        "createdAt" : "2020-04-17T09:03:04Z",
        "updatedAt" : "2020-04-17T09:10:47Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0131af72a15602be1889879e8178298a5cea4a63",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +130,134 @@    *\n    * [[nodeSeed]] is the seed of the Create and Exercise node as generated during submission.\n    * If undefined the contract IDs are derive using V0 scheme.\n    * The value of [[nodeSeed]] does not matter for other kind of nodes.\n    */"
  },
  {
    "id" : "c4716424-45d3-40f3-b9fe-ad183c51c2f3",
    "prId" : 5570,
    "comments" : [
      {
        "id" : "5bffecfe-1707-498f-9f1f-8eeede5dbd8c",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "It may be worth referencing what 'V0 scheme' means.",
        "createdAt" : "2020-04-17T09:09:12Z",
        "updatedAt" : "2020-04-17T09:10:47Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0131af72a15602be1889879e8178298a5cea4a63",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +130,134 @@    *\n    * [[nodeSeed]] is the seed of the Create and Exercise node as generated during submission.\n    * If undefined the contract IDs are derive using V0 scheme.\n    * The value of [[nodeSeed]] does not matter for other kind of nodes.\n    */"
  },
  {
    "id" : "45687f8a-2b34-4f4d-9cf3-5bf58ebdc52c",
    "prId" : 5570,
    "comments" : [
      {
        "id" : "eefd1576-e909-423c-814b-f0caefaf0b25",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Did you mean `seeding used to derive node and contractId discriminator`?",
        "createdAt" : "2020-04-17T09:10:21Z",
        "updatedAt" : "2020-04-17T09:10:47Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0131af72a15602be1889879e8178298a5cea4a63",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +235,239 @@    * (a subtransaction can be authorized by multiple parties).\n    *\n    * [[seeding]] is seeding used to derive node seed and contractId discriminator.\n    */\n  private[engine] def interpretCommands("
  },
  {
    "id" : "4c37982f-07f1-4b29-b3f8-4796cec7f4ff",
    "prId" : 4533,
    "comments" : [
      {
        "id" : "1c5581b1-234d-4b07-a2d1-c85482c97694",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Looks like the submission seed is only used once to derive the transaction seed. Instead of passing `participantId` and `submissionSeed`, can we instead pass the `transactionSeed` directly?",
        "createdAt" : "2020-02-17T09:37:19Z",
        "updatedAt" : "2020-02-17T12:34:30Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "580c8907-07ae-45b8-818e-e22a5e0ee149",
        "parentId" : "1c5581b1-234d-4b07-a2d1-c85482c97694",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "The `submissionSeed` is used twice:\r\n- It is used to compute the `transactionSeed` \r\n- It is stored in the transaction itself, so the receiver of the transaction can verify the `transactionSeed` was derived properly.",
        "createdAt" : "2020-02-17T09:46:08Z",
        "updatedAt" : "2020-02-17T12:34:30Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0ac94059-0450-4046-b98b-150fd3a12567",
        "parentId" : "1c5581b1-234d-4b07-a2d1-c85482c97694",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Hm, where is it actually stored in the transaction? Sorry if I'm missing something obvious.",
        "createdAt" : "2020-02-17T12:16:00Z",
        "updatedAt" : "2020-02-17T12:34:30Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "430b89e5-7ec2-48bf-bc08-2e609464c49c",
        "parentId" : "1c5581b1-234d-4b07-a2d1-c85482c97694",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "See @remyhaemmerle-da's [comment](https://github.com/digital-asset/daml/pull/4533#discussion_r380156077).",
        "createdAt" : "2020-02-17T12:36:42Z",
        "updatedAt" : "2020-02-17T12:36:42Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "69e42150daf521f93631ef81bea5b8b2314d7beb",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +79,83 @@      cmds: Commands,\n      participantId: ParticipantId,\n      submissionSeed: Option[crypto.Hash],\n  ): Result[Transaction.Transaction] = {\n    _commandTranslation"
  },
  {
    "id" : "cac1bfd7-7d0b-4e34-9855-57e664e0d619",
    "prId" : 4077,
    "comments" : [
      {
        "id" : "156f55a9-33a8-4a33-8ae5-8e16bf3962ab",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M√§ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "a more descriptive name would be good (nodeIdSeed? I don't know...) and we should document how it is used.",
        "createdAt" : "2020-01-21T15:23:55Z",
        "updatedAt" : "2020-01-22T16:15:50Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M√§ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e8dbefd5-4c2e-403b-ab68-fb469feccb8b",
        "parentId" : "156f55a9-33a8-4a33-8ae5-8e16bf3962ab",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "add description in the comment above\r\n",
        "createdAt" : "2020-01-22T07:50:07Z",
        "updatedAt" : "2020-01-22T16:15:50Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b715411c8916b18ec1c64dcd871e8a0fd22b9adb",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +78,82 @@  def submit(\n      cmds: Commands,\n      transactionSeed: Option[crypto.Hash] = None\n  ): Result[Transaction.Transaction] = {\n    _commandTranslation"
  },
  {
    "id" : "c5f8d2a5-a596-446e-99f1-8fef6c1b6cd8",
    "prId" : 4077,
    "comments" : [
      {
        "id" : "fa128bbf-c236-4f1a-8cb3-b28b9a6b5361",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M√§ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "```suggestion\r\n    * If left undefined, no discriminator will be generated.\r\n```",
        "createdAt" : "2020-01-22T10:23:54Z",
        "updatedAt" : "2020-01-22T16:15:50Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M√§ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b715411c8916b18ec1c64dcd871e8a0fd22b9adb",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +132,136 @@    *\n    * [[transactionSeed]] is the master hash te be used to derive node and contractId discriminator.\n    * If let undefined, no discriminator will be generated.\n    */\n  def reinterpret("
  },
  {
    "id" : "62d4f447-a0ae-4701-b88d-6e3c98b8b212",
    "prId" : 4077,
    "comments" : [
      {
        "id" : "feac2622-8a53-48eb-83c4-f57ad88e5ece",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi M√§ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "```suggestion\r\n    * If left undefined, no discriminator will be generated.\r\n```",
        "createdAt" : "2020-01-22T10:24:08Z",
        "updatedAt" : "2020-01-22T16:15:50Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi M√§ki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b715411c8916b18ec1c64dcd871e8a0fd22b9adb",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +320,324 @@    *\n    * [[transactionSeed]] is the master hash used to derive node and contractId discriminator.\n    * If let undefined, no discriminator will be generated.\n    */\n  private[engine] def interpretCommands("
  }
]