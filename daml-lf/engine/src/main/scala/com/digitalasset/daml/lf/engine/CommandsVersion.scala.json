[
  {
    "id" : "d355e6a0-3ab2-499b-a6f0-26244a7b6af1",
    "prId" : 1967,
    "comments" : [
      {
        "id" : "7be875be-1d79-4ee6-9804-12281a14cabb",
        "parentId" : null,
        "author" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "body" : "the submitter check is not an authorization check.\r\n\r\nSuggestion: adapt comment to state that command interpretation can depend on the language version that the command originated from. For example <text about submitter check>.\r\n\r\nThis way the explanation is more context independent.",
        "createdAt" : "2019-07-04T09:33:44Z",
        "updatedAt" : "2019-07-05T08:39:36Z",
        "lastEditedBy" : {
          "login" : "meiersi-da",
          "name" : "Simon Meier",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/13766136?u=a00dd223b1cde8578fe208ebbb7cccd4db41eb9a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f0328b4d-650a-4c19-abca-e65bd1e955e6",
        "parentId" : "7be875be-1d79-4ee6-9804-12281a14cabb",
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "Done",
        "createdAt" : "2019-07-04T11:50:06Z",
        "updatedAt" : "2019-07-05T08:39:36Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5ab26f081f43a184ed21982c7e26995630d1f49e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,89 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.daml.lf.engine\n+\n+import com.digitalasset.daml.lf.transaction.VersionTimeline\n+import com.digitalasset.daml.lf.language.{LanguageVersion, LanguageMajorVersion => LMV}\n+import com.digitalasset.daml.lf.data.Ref._\n+import com.digitalasset.daml.lf.command._\n+import com.digitalasset.daml.lf.data.{ImmArray, ImmArrayCons}\n+import com.digitalasset.daml.lf.language.Ast.Package\n+\n+import scala.annotation.tailrec\n+\n+/** Tx authorization is parametrized by the language version that \"originated it\"."
  },
  {
    "id" : "17ff19d4-c77a-48b1-9e54-990ab46a20fc",
    "prId" : 1967,
    "comments" : [
      {
        "id" : "2ea7bd59-7764-48c3-a096-b6503b75e549",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I think it is a bad idea to parametrized the interpreter by daml-lf version.\r\n\r\nI will let this consideration in the deserialization layer, and use for instance the `feature flags` concept.\r\n(for instance, for versions < x, the unserialization set the feature flag to on, and for version >= s to off).\r\n\r\n- This introduces unecessary complexity in the core of the system that is already very complex. \r\n- It is simpler to reason about a set of featur  flags that is well established and that is defined in the unique place, than a set of feature distributed in the code (and not so cleary identified) parametrized by  version.\r\n- This opens the pandora box to parametrize operational semantics by language versions.\r\n- you put the language version, in the module level exactly in the same place as the feature flag.",
        "createdAt" : "2019-07-04T21:21:15Z",
        "updatedAt" : "2019-07-05T08:39:36Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7979a08d-c6a9-41c5-bd29-69dfcfafc828",
        "parentId" : "2ea7bd59-7764-48c3-a096-b6503b75e549",
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "@remyhaemmerle-da I agree that it is undesirable, however:\r\n\r\n* I disagree that it's \"unnecessary\". How do you propose to deal with cases like the one in this pr?\r\n* I do not understand the last point. Could you clarify?",
        "createdAt" : "2019-07-05T06:48:04Z",
        "updatedAt" : "2019-07-05T08:39:36Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b2c82406-54bd-42ef-950e-3ceaac29a1fc",
        "parentId" : "2ea7bd59-7764-48c3-a096-b6503b75e549",
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "I've taked to @remyhaemmerle-da and agreed that it's better to parametrize execution by a flag, rather than by a version. I've implemented this refactor in 06e76885b6931c27de1e633330c2dcf9666955fd .",
        "createdAt" : "2019-07-05T08:23:00Z",
        "updatedAt" : "2019-07-05T08:39:36Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5ab26f081f43a184ed21982c7e26995630d1f49e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,91 @@\n+// Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.digitalasset.daml.lf.engine\n+\n+import com.digitalasset.daml.lf.transaction.VersionTimeline\n+import com.digitalasset.daml.lf.language.{LanguageVersion, LanguageMajorVersion => LMV}\n+import com.digitalasset.daml.lf.data.Ref._\n+import com.digitalasset.daml.lf.command._\n+import com.digitalasset.daml.lf.data.{ImmArray, ImmArrayCons}\n+import com.digitalasset.daml.lf.language.Ast.Package\n+\n+import scala.annotation.tailrec\n+\n+/** Some DAML-LF operations (curently contract key lookup and fetch) are parametrized\n+  * by the language version that \"originated\" the transactions.\n+  *"
  }
]