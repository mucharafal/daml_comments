[
  {
    "id" : "27e7ffec-eb24-4024-a2a9-21e3999380cc",
    "prId" : 5434,
    "comments" : [
      {
        "id" : "7fc14fdf-a64b-4114-b1d3-73a3728ad5c8",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "replace with `paramsMap.getOrElse(v, fail(....))`?",
        "createdAt" : "2020-04-08T15:14:51Z",
        "updatedAt" : "2020-04-08T19:14:17Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c1ba3fbf-fbd4-48c0-b147-4f0da14dcd75",
        "parentId" : "7fc14fdf-a64b-4114-b1d3-73a3728ad5c8",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "done",
        "createdAt" : "2020-04-08T19:09:12Z",
        "updatedAt" : "2020-04-08T19:14:17Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "15d20c06d3a28aa8099fedae3c1eaab0786182ae",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,238 @@\n+// Copyright (c) 2020 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package com.daml.lf.engine\n+package preprocessing\n+\n+import com.daml.lf.CompiledPackages\n+import com.daml.lf.data.{Ref, _}\n+import com.daml.lf.language.Ast._\n+import com.daml.lf.language.Util._\n+import com.daml.lf.speedy.SValue\n+import com.daml.lf.value.Value\n+import com.daml.lf.value.Value._\n+\n+import scala.annotation.tailrec\n+import scala.collection.immutable.HashMap\n+\n+private[engine] final class ValueTranslator(compiledPackages: CompiledPackages) {\n+\n+  import Preprocessor._\n+\n+  // note: all the types in params must be closed.\n+  //\n+  // this is not tail recursive, but it doesn't really matter, since types are bounded\n+  // by what's in the source, which should be short enough...\n+  @throws[PreprocessorException]\n+  private def replaceParameters(params: ImmArray[(TypeVarName, Type)], typ0: Type): Type =\n+    if (params.isEmpty) { // optimization\n+      typ0\n+    } else {\n+      val paramsMap: Map[TypeVarName, Type] = Map(params.toSeq: _*)\n+\n+      def go(typ: Type): Type =\n+        typ match {\n+          case TVar(v) =>\n+            paramsMap.get(v) match {"
  }
]