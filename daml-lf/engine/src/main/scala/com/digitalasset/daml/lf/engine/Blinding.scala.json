[
  {
    "id" : "86fdf17e-0315-444c-8582-a0cc621d4f26",
    "prId" : 7437,
    "comments" : [
      {
        "id" : "32f38c80-3ae7-4089-99ce-d3b20223bb44",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : ":+1: \r\n",
        "createdAt" : "2020-09-18T13:24:39Z",
        "updatedAt" : "2020-09-18T16:01:59Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e82dbe9c-e051-49a4-b162-ee3fa4708df7",
        "parentId" : "32f38c80-3ae7-4089-99ce-d3b20223bb44",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "ðŸ”¥ ",
        "createdAt" : "2020-09-21T12:15:16Z",
        "updatedAt" : "2020-09-21T12:17:01Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d2d0de2d68e8b984633eefb02b8cadbe21e6d4dc",
    "line" : 15,
    "diffHunk" : "@@ -16,30 +16,16 @@ object Blinding {\n \n   /**\n     * Given a transaction provide concise information on visibility\n-    * for all stakeholders returns error if the transaction is not\n-    * well-authorized.\n+    * for all stakeholders\n     *\n     * We keep this in Engine since it needs the packages and your\n     * typical engine already has a way to look those up and we do not\n     * want to reinvent the wheel.\n     *\n     *  @param tx transaction to be blinded\n-    *  @param initialAuthorizers set of parties claimed to be authorizers of the transaction\n-    */\n-  def checkAuthorizationAndBlind( //TODO: remove this method. Authorization now performed when transaction is constructed"
  },
  {
    "id" : "c53547c4-a15c-4175-a26b-9be828ca7f4d",
    "prId" : 7400,
    "comments" : [
      {
        "id" : "bee67fe4-1e4e-4412-8753-56a4a83c6703",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Let's please do this straight afterward.",
        "createdAt" : "2020-09-16T08:57:49Z",
        "updatedAt" : "2020-09-17T13:03:20Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "484b6b00-f758-426f-b790-e2733f2aaf98",
        "parentId" : "bee67fe4-1e4e-4412-8753-56a4a83c6703",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "ok",
        "createdAt" : "2020-09-16T16:48:21Z",
        "updatedAt" : "2020-09-17T13:03:20Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a360635b966cdfe27bfd3cd6e156308321238660",
    "line" : 66,
    "diffHunk" : "@@ -71,11 +26,13 @@ object Blinding {\n     *  @param tx transaction to be blinded\n     *  @param initialAuthorizers set of parties claimed to be authorizers of the transaction\n     */\n-  def checkAuthorizationAndBlind(\n+  def checkAuthorizationAndBlind( //TODO: remove this method. Authorization now performed when transaction is constructed"
  },
  {
    "id" : "9f618f05-d77d-49cc-b847-4141156c574e",
    "prId" : 7262,
    "comments" : [
      {
        "id" : "c75b2f98-36ca-41d1-8d3e-f38e551c3e5f",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Wouldn't it make more sense to calculate blinding only if we get here instead of doing it anyway?",
        "createdAt" : "2020-08-28T13:07:07Z",
        "updatedAt" : "2020-08-28T13:51:00Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "651c4d2b-ff07-4ebf-a26c-beb36c7128e9",
        "parentId" : "c75b2f98-36ca-41d1-8d3e-f38e551c3e5f",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Yes it would. Thanks.",
        "createdAt" : "2020-08-28T13:33:31Z",
        "updatedAt" : "2020-08-28T13:51:00Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e59ef5c6-c1a4-4dee-9b8b-ab618bb3b145",
        "parentId" : "c75b2f98-36ca-41d1-8d3e-f38e551c3e5f",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Someone's coming from lazy-land. :wink: ",
        "createdAt" : "2020-08-28T14:19:02Z",
        "updatedAt" : "2020-08-28T14:19:02Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b8ee278eed595ea2a951f0ce0821150593ee04d3",
    "line" : 27,
    "diffHunk" : "@@ -47,16 +52,12 @@ object Blinding {\n         }\n         .mkString(\";\")\n     }\n-    if (enrichedTx.failedAuthorizations.isEmpty) {\n-      Right(\n-        BlindingInfo(\n-          disclosure = enrichedTx.explicitDisclosure,\n-          divulgence = enrichedTx.implicitDisclosure,\n-        ))\n+    if (failedAuthorizations.isEmpty) {\n+      Right(blindingInfo)"
  },
  {
    "id" : "f842c91c-1b2d-4266-aae7-a4a17424211a",
    "prId" : 7262,
    "comments" : [
      {
        "id" : "fbf60d78-7ba7-414f-b656-2e3fdbcacf5f",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Just for your information. \r\nTo build an either conditionally you could use `Either.cond` function.\r\nExplicit use of `if ... then ... else ...` is also fine",
        "createdAt" : "2020-09-01T09:20:09Z",
        "updatedAt" : "2020-09-01T09:22:40Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a8ae8841-c0ac-43b6-8f72-a41d13ba6287",
        "parentId" : "fbf60d78-7ba7-414f-b656-2e3fdbcacf5f",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "ok. thanks\r\n\r\non a very slightly related issue (it's to do with conditional code!)\r\nI noticed a coding pattern which looks rather inefficient, and I wonder if we care.\r\n\r\nIn `AuthorizingTransaction.scala` (prev `EnrichedTransaction.scala` there are many calls to `authorize` of the form:\r\n```\r\n        .authorize(\r\n          nodeId = nodeId,\r\n          passIf = create.signatories subsetOf auth.authParties,\r\n          failWith = FailedAuthorization.CreateMissingAuthorization(\r\n            templateId = create.coinst.template,\r\n            optLocation = create.optLocation,\r\n            authorizingParties = auth.authParties,\r\n            requiredParties = create.signatories,\r\n          ),\r\n        )\r\n```\r\nwhich construct a `FailedAuthorization` object, even when `passIf` is false.\r\n\r\nMaybe this could be improved by using a non-strict/by-name argument to the `authorize` function.\r\nIs this regarded as good scala style?",
        "createdAt" : "2020-09-01T10:15:06Z",
        "updatedAt" : "2020-09-01T10:15:06Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c3318ae5-ddc9-435b-aedd-d7224764eae4",
        "parentId" : "fbf60d78-7ba7-414f-b656-2e3fdbcacf5f",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I do not really care ;). \r\nIn the case you are describing, call-by-name argument seem pretty reasonable.  \r\n",
        "createdAt" : "2020-09-01T11:48:05Z",
        "updatedAt" : "2020-09-01T11:48:06Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b8ee278eed595ea2a951f0ce0821150593ee04d3",
    "line" : 25,
    "diffHunk" : "@@ -47,16 +49,13 @@ object Blinding {\n         }\n         .mkString(\";\")\n     }\n-    if (enrichedTx.failedAuthorizations.isEmpty) {\n-      Right(\n-        BlindingInfo(\n-          disclosure = enrichedTx.explicitDisclosure,\n-          divulgence = enrichedTx.implicitDisclosure,\n-        ))\n+    if (failedAuthorizations.isEmpty) {"
  },
  {
    "id" : "8ef36b47-8c15-46ea-b889-e96a38e75560",
    "prId" : 6507,
    "comments" : [
      {
        "id" : "59f2136b-62df-46e9-8253-8cc5790c28ad",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I don't know if we could be more aggressively clean up here and would need some advice on this. If we can clean up more, I'd leave for a separate PR nevertheless.",
        "createdAt" : "2020-06-26T10:11:46Z",
        "updatedAt" : "2020-06-26T10:11:46Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6804f68b-84f4-4f57-8a09-27562c7d2f12",
        "parentId" : "59f2136b-62df-46e9-8253-8cc5790c28ad",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I thinks @gerolf-da (or maybe @stefanobaghino-da) would be better at giving advice on this.  ",
        "createdAt" : "2020-06-26T10:55:13Z",
        "updatedAt" : "2020-06-26T10:55:13Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b3e86090-e700-4b8f-86a7-6312f50208e5",
        "parentId" : "59f2136b-62df-46e9-8253-8cc5790c28ad",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I see only four lines that use `localDivulgence`. You can probably safely remove it and keep this PR very small. In any case, I would prefer if you could at least put this so that it's an invariant at construction, rather than a comment here where it's called.",
        "createdAt" : "2020-06-26T10:55:35Z",
        "updatedAt" : "2020-06-26T10:55:40Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "02b663cf-01c0-4f04-ba3f-8e1e2f1d0d71",
        "parentId" : "59f2136b-62df-46e9-8253-8cc5790c28ad",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Yes, with the removal of `RelativeContractId`, `localDivulgence` lost it's justification to be a thing.",
        "createdAt" : "2020-06-26T11:00:56Z",
        "updatedAt" : "2020-06-26T11:00:56Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5689da74-7f89-4a7d-a8a1-1da0dd6d1e91",
        "parentId" : "59f2136b-62df-46e9-8253-8cc5790c28ad",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "[This](https://github.com/digital-asset/daml/pull/6509) looks like it would do it, testing if it doesn't breaking anything.",
        "createdAt" : "2020-06-26T11:04:05Z",
        "updatedAt" : "2020-06-26T11:04:06Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "dc576157-2182-4b32-a0d2-df4b22e4a9d9",
        "parentId" : "59f2136b-62df-46e9-8253-8cc5790c28ad",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "@stefanobaghino-da I'm fine with merging your suggestion in once we've discussed my comment on it.",
        "createdAt" : "2020-06-26T11:09:39Z",
        "updatedAt" : "2020-06-26T11:09:39Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5d9929ee-eb7d-40c0-add4-03b7a4497a40",
        "parentId" : "59f2136b-62df-46e9-8253-8cc5790c28ad",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Ran all tests under `//daml-lf` and one conformance test, all good, unfortunately I cannot run the full thing on CI unless I'm trying to merge on `master`.",
        "createdAt" : "2020-06-26T11:25:59Z",
        "updatedAt" : "2020-06-26T11:26:00Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6a38a375-a80e-4ae1-8766-af31f0189284",
        "parentId" : "59f2136b-62df-46e9-8253-8cc5790c28ad",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "> Yes, with the removal of `RelativeContractId`, `localDivulgence` lost it's justification to be a thing.\r\n\r\n@remyhaemmerle-da is crying of joy.",
        "createdAt" : "2020-06-26T11:49:40Z",
        "updatedAt" : "2020-06-26T11:49:40Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "be025091-5cc9-44ed-87ec-20e5b6287005",
        "parentId" : "59f2136b-62df-46e9-8253-8cc5790c28ad",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Since it's still unclear if we can apply @stefanobaghino-da's suggestion without breaking backward compatibility, we merge this as is. Because of backward compatibility concerns, we can also not address\r\n> In any case, I would prefer if you could at least put this so that it's an invariant at construction, rather than a comment here where it's called.",
        "createdAt" : "2020-06-26T12:39:07Z",
        "updatedAt" : "2020-06-26T12:39:07Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "36d55559080ed0b0c660df3cf7b13847ecca25f9",
    "line" : 10,
    "diffHunk" : "@@ -50,9 +50,12 @@ object Blinding {\n     if (enrichedTx.failedAuthorizations.isEmpty) {\n       Right(\n         BlindingInfo(\n-          enrichedTx.explicitDisclosure,\n-          enrichedTx.localImplicitDisclosure,\n-          enrichedTx.globalImplicitDisclosure))\n+          disclosure = enrichedTx.explicitDisclosure,\n+          // NOTE(MH): Local divulgences are a thing of the past and are not\n+          // produced by the current implementation anymore.\n+          localDivulgence = Map.empty,"
  },
  {
    "id" : "c76c6a95-7c16-4433-824d-a5ed2377f69e",
    "prId" : 4140,
    "comments" : [
      {
        "id" : "2e19de8c-92c0-480a-beea-9f1fced267ca",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Out of curiosity: why do you prefer `filter` over `filterKeys`?",
        "createdAt" : "2020-01-22T10:20:11Z",
        "updatedAt" : "2020-01-22T15:09:29Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f6d3df8d-93a3-498d-beac-af990722c405",
        "parentId" : "2e19de8c-92c0-480a-beea-9f1fced267ca",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "in this case, `filterKeys` returns a `Map` while `filter` returns a `HashMap`",
        "createdAt" : "2020-01-22T10:30:34Z",
        "updatedAt" : "2020-01-22T15:09:29Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ce47083e96a3dbf6bb0c0bf69c86173751f13080",
    "line" : 14,
    "diffHunk" : "@@ -109,15 +109,15 @@ object Blinding {\n     * transaction has Nid references that are not present in its nodes. Use `isWellFormed`\n     * if you are getting the transaction from a third party.\n     */\n-  def divulgedTransaction[Nid: Ordering, Cid, Val](\n+  def divulgedTransaction[Nid, Cid, Val](\n       divulgences: Relation[Nid, Party],\n       party: Party,\n       tx: GenTransaction[Nid, Cid, Val]): GenTransaction[Nid, Cid, Val] = {\n     val partyDivulgences = Relation.invert(divulgences)(party)\n     // Note that this relies on the local divulgence to be well-formed:\n     // if an exercise node is divulged to A but some of its descendants\n     // aren't the resulting transaction will not be well formed.\n-    val filteredNodes = tx.nodes.filterKeys(partyDivulgences.contains)\n+    val filteredNodes = tx.nodes.filter { case (k, _) => partyDivulgences.contains(k) }"
  },
  {
    "id" : "ca02fe72-ed0e-4984-b853-c7bf9d1b7ba8",
    "prId" : 1967,
    "comments" : [
      {
        "id" : "81b85351-68a8-4376-822b-29e877d17042",
        "parentId" : null,
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "This change looks like noise. The inserted `,` is not really needed, is it?",
        "createdAt" : "2019-07-04T07:05:37Z",
        "updatedAt" : "2019-07-05T08:39:36Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5ab26f081f43a184ed21982c7e26995630d1f49e",
    "line" : 5,
    "diffHunk" : "@@ -80,7 +80,8 @@ object Blinding {\n     */\n   def checkAuthorizationAndBlind(\n       tx: Transaction.Transaction,\n-      initialAuthorizers: Set[Party]): Either[AuthorizationError, BlindingInfo] =\n+      initialAuthorizers: Set[Party],"
  }
]