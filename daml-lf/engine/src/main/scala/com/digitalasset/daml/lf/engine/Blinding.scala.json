[
  {
    "id" : "a9142a24-a272-448a-8af6-8733c2086bb2",
    "prId" : 7400,
    "comments" : [
      {
        "id" : "658610be-bd60-4d1f-aca1-4ff3ed093e88",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Let's please do this straight afterward.",
        "createdAt" : "2020-09-16T08:57:49Z",
        "updatedAt" : "2020-09-17T13:03:20Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6614c1b1-e29c-4430-887b-1bd2b5952651",
        "parentId" : "658610be-bd60-4d1f-aca1-4ff3ed093e88",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "ok",
        "createdAt" : "2020-09-16T16:48:21Z",
        "updatedAt" : "2020-09-17T13:03:20Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a360635b966cdfe27bfd3cd6e156308321238660",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +27,31 @@    *  @param initialAuthorizers set of parties claimed to be authorizers of the transaction\n    */\n  def checkAuthorizationAndBlind( //TODO: remove this method. Authorization now performed when transaction is constructed\n      tx: Transaction.Transaction,\n      initialAuthorizers: Set[Party],"
  },
  {
    "id" : "c3ec31d3-c7a0-4d91-8616-b938c4efde73",
    "prId" : 7262,
    "comments" : [
      {
        "id" : "de46f6e5-b295-487d-9899-fad95f4f1675",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Wouldn't it make more sense to calculate blinding only if we get here instead of doing it anyway?",
        "createdAt" : "2020-08-28T13:07:07Z",
        "updatedAt" : "2020-08-28T13:51:00Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b57181dd-f1de-4984-867d-38bc0051bc8b",
        "parentId" : "de46f6e5-b295-487d-9899-fad95f4f1675",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Yes it would. Thanks.",
        "createdAt" : "2020-08-28T13:33:31Z",
        "updatedAt" : "2020-08-28T13:51:00Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "250d6678-b0f4-487e-a6be-2f6b7c83ab56",
        "parentId" : "de46f6e5-b295-487d-9899-fad95f4f1675",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Someone's coming from lazy-land. :wink: ",
        "createdAt" : "2020-08-28T14:19:02Z",
        "updatedAt" : "2020-08-28T14:19:02Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b8ee278eed595ea2a951f0ce0821150593ee04d3",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +52,56 @@    if (failedAuthorizations.isEmpty) {\n      val blindingInfo = BlindingTransaction.calculateBlindingInfo(tx)\n      Right(blindingInfo)\n    } else {\n      Left("
  },
  {
    "id" : "5f1d65d0-681f-4a9a-a280-733066c00350",
    "prId" : 7262,
    "comments" : [
      {
        "id" : "b0f595b1-5107-4c78-aaa3-6dc42c311004",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Just for your information. \r\nTo build an either conditionally you could use `Either.cond` function.\r\nExplicit use of `if ... then ... else ...` is also fine",
        "createdAt" : "2020-09-01T09:20:09Z",
        "updatedAt" : "2020-09-01T09:22:40Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "10c0ac7c-1fb1-47c6-99f6-00f0283c1cab",
        "parentId" : "b0f595b1-5107-4c78-aaa3-6dc42c311004",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "ok. thanks\r\n\r\non a very slightly related issue (it's to do with conditional code!)\r\nI noticed a coding pattern which looks rather inefficient, and I wonder if we care.\r\n\r\nIn `AuthorizingTransaction.scala` (prev `EnrichedTransaction.scala` there are many calls to `authorize` of the form:\r\n```\r\n        .authorize(\r\n          nodeId = nodeId,\r\n          passIf = create.signatories subsetOf auth.authParties,\r\n          failWith = FailedAuthorization.CreateMissingAuthorization(\r\n            templateId = create.coinst.template,\r\n            optLocation = create.optLocation,\r\n            authorizingParties = auth.authParties,\r\n            requiredParties = create.signatories,\r\n          ),\r\n        )\r\n```\r\nwhich construct a `FailedAuthorization` object, even when `passIf` is false.\r\n\r\nMaybe this could be improved by using a non-strict/by-name argument to the `authorize` function.\r\nIs this regarded as good scala style?",
        "createdAt" : "2020-09-01T10:15:06Z",
        "updatedAt" : "2020-09-01T10:15:06Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "18b027b3-91d2-4bd4-aeba-3ba2a2dc2fe1",
        "parentId" : "b0f595b1-5107-4c78-aaa3-6dc42c311004",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I do not really care ;). \r\nIn the case you are describing, call-by-name argument seem pretty reasonable.  \r\n",
        "createdAt" : "2020-09-01T11:48:05Z",
        "updatedAt" : "2020-09-01T11:48:06Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b8ee278eed595ea2a951f0ce0821150593ee04d3",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +50,54 @@        .mkString(\";\")\n    }\n    if (failedAuthorizations.isEmpty) {\n      val blindingInfo = BlindingTransaction.calculateBlindingInfo(tx)\n      Right(blindingInfo)"
  },
  {
    "id" : "04f18a20-1830-4b9a-8a67-833aa51a5eb8",
    "prId" : 6507,
    "comments" : [
      {
        "id" : "89dfc325-a84b-4e86-a7a0-2231492f1490",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I don't know if we could be more aggressively clean up here and would need some advice on this. If we can clean up more, I'd leave for a separate PR nevertheless.",
        "createdAt" : "2020-06-26T10:11:46Z",
        "updatedAt" : "2020-06-26T10:11:46Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "393a8677-2f2c-474a-a2bd-872545844645",
        "parentId" : "89dfc325-a84b-4e86-a7a0-2231492f1490",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I thinks @gerolf-da (or maybe @stefanobaghino-da) would be better at giving advice on this.  ",
        "createdAt" : "2020-06-26T10:55:13Z",
        "updatedAt" : "2020-06-26T10:55:13Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a1bcd18b-e934-45e1-8c72-54b2c7f9b0df",
        "parentId" : "89dfc325-a84b-4e86-a7a0-2231492f1490",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I see only four lines that use `localDivulgence`. You can probably safely remove it and keep this PR very small. In any case, I would prefer if you could at least put this so that it's an invariant at construction, rather than a comment here where it's called.",
        "createdAt" : "2020-06-26T10:55:35Z",
        "updatedAt" : "2020-06-26T10:55:40Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d51bc98a-daee-4235-bedf-bd49bf539608",
        "parentId" : "89dfc325-a84b-4e86-a7a0-2231492f1490",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Yes, with the removal of `RelativeContractId`, `localDivulgence` lost it's justification to be a thing.",
        "createdAt" : "2020-06-26T11:00:56Z",
        "updatedAt" : "2020-06-26T11:00:56Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6617ed4f-e655-494f-aa81-0d4341522995",
        "parentId" : "89dfc325-a84b-4e86-a7a0-2231492f1490",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "[This](https://github.com/digital-asset/daml/pull/6509) looks like it would do it, testing if it doesn't breaking anything.",
        "createdAt" : "2020-06-26T11:04:05Z",
        "updatedAt" : "2020-06-26T11:04:06Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bb08ef62-36e6-464c-892a-df370d35887f",
        "parentId" : "89dfc325-a84b-4e86-a7a0-2231492f1490",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "@stefanobaghino-da I'm fine with merging your suggestion in once we've discussed my comment on it.",
        "createdAt" : "2020-06-26T11:09:39Z",
        "updatedAt" : "2020-06-26T11:09:39Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "069f6086-4a9e-4959-8a88-5375ad52b7e0",
        "parentId" : "89dfc325-a84b-4e86-a7a0-2231492f1490",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Ran all tests under `//daml-lf` and one conformance test, all good, unfortunately I cannot run the full thing on CI unless I'm trying to merge on `master`.",
        "createdAt" : "2020-06-26T11:25:59Z",
        "updatedAt" : "2020-06-26T11:26:00Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cdf59a70-afb6-455c-9833-6333badf0de1",
        "parentId" : "89dfc325-a84b-4e86-a7a0-2231492f1490",
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "> Yes, with the removal of `RelativeContractId`, `localDivulgence` lost it's justification to be a thing.\r\n\r\n@remyhaemmerle-da is crying of joy.",
        "createdAt" : "2020-06-26T11:49:40Z",
        "updatedAt" : "2020-06-26T11:49:40Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "76d1a91f-c773-4d53-9538-073c2b5c6430",
        "parentId" : "89dfc325-a84b-4e86-a7a0-2231492f1490",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Since it's still unclear if we can apply @stefanobaghino-da's suggestion without breaking backward compatibility, we merge this as is. Because of backward compatibility concerns, we can also not address\r\n> In any case, I would prefer if you could at least put this so that it's an invariant at construction, rather than a comment here where it's called.",
        "createdAt" : "2020-06-26T12:39:07Z",
        "updatedAt" : "2020-06-26T12:39:07Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "36d55559080ed0b0c660df3cf7b13847ecca25f9",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +54,58 @@          // NOTE(MH): Local divulgences are a thing of the past and are not\n          // produced by the current implementation anymore.\n          localDivulgence = Map.empty,\n          globalDivulgence = enrichedTx.globalImplicitDisclosure,\n        ))"
  },
  {
    "id" : "f772e66a-c354-4ee4-8ce5-400e77431783",
    "prId" : 4140,
    "comments" : [
      {
        "id" : "f92c8b83-60a9-4c98-921c-88fe2d8fecf4",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Out of curiosity: why do you prefer `filter` over `filterKeys`?",
        "createdAt" : "2020-01-22T10:20:11Z",
        "updatedAt" : "2020-01-22T15:09:29Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "26c17488-0f9b-4e7b-b60c-219888bcffbc",
        "parentId" : "f92c8b83-60a9-4c98-921c-88fe2d8fecf4",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "in this case, `filterKeys` returns a `Map` while `filter` returns a `HashMap`",
        "createdAt" : "2020-01-22T10:30:34Z",
        "updatedAt" : "2020-01-22T15:09:29Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ce47083e96a3dbf6bb0c0bf69c86173751f13080",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +118,122 @@    // if an exercise node is divulged to A but some of its descendants\n    // aren't the resulting transaction will not be well formed.\n    val filteredNodes = tx.nodes.filter { case (k, _) => partyDivulgences.contains(k) }\n\n    @tailrec"
  },
  {
    "id" : "813fa48f-d6a1-4b65-aa67-a1c71d3772d0",
    "prId" : 1967,
    "comments" : [
      {
        "id" : "2aad3aec-baa8-4835-a0d4-3fc6db5e8d6f",
        "parentId" : null,
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "This change looks like noise. The inserted `,` is not really needed, is it?",
        "createdAt" : "2019-07-04T07:05:37Z",
        "updatedAt" : "2019-07-05T08:39:36Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5ab26f081f43a184ed21982c7e26995630d1f49e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +81,85 @@  def checkAuthorizationAndBlind(\n      tx: Transaction.Transaction,\n      initialAuthorizers: Set[Party],\n  ): Either[AuthorizationError, BlindingInfo] =\n    maybeAuthorizeAndBlind(tx, Authorize(initialAuthorizers))"
  }
]