[
  {
    "id" : "7cf0cb18-12ed-46d7-970f-15724a5bfa20",
    "prId" : 4101,
    "comments" : [
      {
        "id" : "97960859-f6b7-4cfe-9809-f44685771f17",
        "parentId" : null,
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "And completing this missing piece!",
        "createdAt" : "2020-01-21T14:56:56Z",
        "updatedAt" : "2020-01-22T18:54:57Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d96e6853-1803-4ccb-b362-f1773b4c322b",
        "parentId" : "97960859-f6b7-4cfe-9809-f44685771f17",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Happy to do this in a separate PR. We should still be able to test expansion of type synonyms without checking that the definition is well formed",
        "createdAt" : "2020-01-21T15:02:15Z",
        "updatedAt" : "2020-01-22T18:54:57Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e9b7ff4849afb993cbda3dc7bea03b90e9dd9c19",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +266,270 @@      case (dfnName, dfn: DValue) =>\n        Env(mod.languageVersion, world, ContextDefValue(pkgId, mod.name, dfnName)).checkDValue(dfn)\n      case (_, _: DTypeSyn) => // TODO #3616: check type synonyms\n    }\n"
  },
  {
    "id" : "8c2eb033-39e3-4d17-872d-2a9cb418a7ed",
    "prId" : 2950,
    "comments" : [
      {
        "id" : "0642378a-1e5e-49c4-a8b5-40c70ac459a5",
        "parentId" : null,
        "author" : null,
        "body" : "@remyhaemmerle-da  This was a bug in the scala daml-lf typechecker that only affected the new MUL_NUMERIC and DIV_NUMERIC.",
        "createdAt" : "2019-09-19T10:55:57Z",
        "updatedAt" : "2019-09-24T14:18:02Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "bae243c1ecdc420b8ddb5e91675a9a0deec24993",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +43,47 @@    val alpha = TVar(Name.assertFromString(\"$alpha$\"))\n    val beta = TVar(Name.assertFromString(\"$beta$\"))\n    val gamma = TVar(Name.assertFromString(\"$gamma$\"))\n    def tBinop(typ: Type): Type = typ ->: typ ->: typ\n    val tNumBinop = TForall(alpha.name -> KNat, tBinop(TNumeric(alpha)))"
  }
]