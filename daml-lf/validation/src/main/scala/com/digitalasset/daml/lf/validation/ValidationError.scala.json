[
  {
    "id" : "a1569547-7f12-4931-b910-f8f7a5b0f2f0",
    "prId" : 7460,
    "comments" : [
      {
        "id" : "278643cb-9417-4f98-b8b2-5236ddcf0f36",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "```suggestion\r\n    s\"The set of packages ${pkgIds.mkString(\"{\", \",\", \"}\")} is not self-consistent, it is missing the dependencies ${pkgIds\r\n```",
        "createdAt" : "2020-09-30T09:53:17Z",
        "updatedAt" : "2020-10-08T09:30:43Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0a4599bcbf38cacac4088b9b73021b01c997c440",
    "line" : null,
    "diffHunk" : "@@ -386,3 +386,14 @@ final case class EModuleVersionDependencies(\n \n   override def context: Context = NoContext\n }\n+\n+final case class ESelfConsistency(\n+    pkgIds: Set[PackageId],\n+    missingDeps: Set[PackageId]\n+) extends ValidationError {\n+  override def context: Context = NoContext\n+\n+  override protected def prettyInternal: String =\n+    s\"the set of packages ${pkgIds.mkString(\"{\", \",\", \"}\")} is not self consistent, it missing the dependencies ${pkgIds"
  },
  {
    "id" : "0522319f-d09f-4bb9-a21b-aaf028192b20",
    "prId" : 7050,
    "comments" : [
      {
        "id" : "eea08c62-3e78-4d08-a0fb-7dc3f1be7bc6",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n    s\"module $modName using version $pkgLangVersion depends on pacakge $depPkgId using newer version $dependencyLangVersion\"\r\n```",
        "createdAt" : "2020-08-07T06:08:32Z",
        "updatedAt" : "2020-08-07T15:26:46Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "edd5726604b0278196086666e0c0dae724cae3ff",
    "line" : null,
    "diffHunk" : "@@ -367,3 +371,22 @@ final case class ECollision(\n   override protected def prettyInternal: String =\n     s\"collision between ${entity1.pretty} and ${entity2.pretty}\"\n }\n+\n+final case class EModuleVersionDependencies(\n+    pkgId: PackageId,\n+    modName: ModuleName,\n+    pkgLangVersion: LanguageVersion,\n+    depPkgId: PackageId,\n+    depModName: ModuleName,\n+    dependencyLangVersion: LanguageVersion,\n+) extends ValidationError {\n+  import com.daml.lf.transaction.VersionTimeline.Implicits._\n+\n+  assert(!(pkgId == pkgLangVersion && modName == depModName))\n+  assert(pkgLangVersion precedes dependencyLangVersion)\n+\n+  override protected def prettyInternal: String =\n+    s\"module $modName compiled with $pkgLangVersion dependents on module $depModName compiled with newer version $dependencyLangVersion\""
  },
  {
    "id" : "136e3e33-eb1e-48b1-9a63-5dff21fa11f1",
    "prId" : 7050,
    "comments" : [
      {
        "id" : "3dba5754-e5c4-44c7-a940-69bf6046fe91",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "As above, I don't think we need this field.",
        "createdAt" : "2020-08-07T06:08:55Z",
        "updatedAt" : "2020-08-07T15:26:46Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "edd5726604b0278196086666e0c0dae724cae3ff",
    "line" : null,
    "diffHunk" : "@@ -367,3 +371,22 @@ final case class ECollision(\n   override protected def prettyInternal: String =\n     s\"collision between ${entity1.pretty} and ${entity2.pretty}\"\n }\n+\n+final case class EModuleVersionDependencies(\n+    pkgId: PackageId,\n+    modName: ModuleName,\n+    pkgLangVersion: LanguageVersion,\n+    depPkgId: PackageId,\n+    depModName: ModuleName,"
  },
  {
    "id" : "cf46b2da-f6d3-476e-aa27-554fc0e74aa8",
    "prId" : 7050,
    "comments" : [
      {
        "id" : "ca99807e-ba4c-4e5a-bcc9-8775aba829ee",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I don’t understand this check? This shouldn’t even typecheck if Scala didn’t insist on screwing you over by allowing heretogenous equality.",
        "createdAt" : "2020-08-07T08:31:50Z",
        "updatedAt" : "2020-08-07T15:26:46Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e0caa984-6675-4ecf-9b41-dde8474e493c",
        "parentId" : "ca99807e-ba4c-4e5a-bcc9-8775aba829ee",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Equalities and dis equalities are inherited from java, i.e. they are untyped :(",
        "createdAt" : "2020-08-07T08:34:58Z",
        "updatedAt" : "2020-08-07T15:26:46Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "edd5726604b0278196086666e0c0dae724cae3ff",
    "line" : null,
    "diffHunk" : "@@ -367,3 +368,20 @@ final case class ECollision(\n   override protected def prettyInternal: String =\n     s\"collision between ${entity1.pretty} and ${entity2.pretty}\"\n }\n+\n+final case class EModuleVersionDependencies(\n+    pkgId: PackageId,\n+    pkgLangVersion: LanguageVersion,\n+    depPkgId: PackageId,\n+    dependencyLangVersion: LanguageVersion,\n+) extends ValidationError {\n+  import com.daml.lf.transaction.VersionTimeline.Implicits._\n+\n+  assert(pkgId != pkgLangVersion)"
  }
]