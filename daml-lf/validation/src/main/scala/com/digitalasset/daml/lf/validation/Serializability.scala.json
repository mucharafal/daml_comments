[
  {
    "id" : "7b768c28-8d51-43a5-91d6-d4e06c9dd6ec",
    "prId" : 4101,
    "comments" : [
      {
        "id" : "49b53971-fc3d-4948-985c-118868197c7c",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I don’t understand this comment, aren’t you already handling the case that you added?",
        "createdAt" : "2020-01-20T08:05:49Z",
        "updatedAt" : "2020-01-22T18:54:57Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f84d8e69-dcf5-45ae-8f1e-1cdccad492b7",
        "parentId" : "49b53971-fc3d-4948-985c-118868197c7c",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "This comments is noting that the scala exhaustivity checking is not being done on this match expression. Which is sad. And it would be nice to get it fixed.",
        "createdAt" : "2020-01-20T19:46:34Z",
        "updatedAt" : "2020-01-22T18:54:57Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1c0ab466-36ae-450a-99b3-c32cb085dcc6",
        "parentId" : "49b53971-fc3d-4948-985c-118868197c7c",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Some more details: The match expression makes use of `unapply` methods defined for `ParametricType[12]` in \r\ndaml-lf/language/src/main/scala/com/digitalasset/daml/lf/language/Util.scala\r\n\r\nSadly, unapply methods cause the scala match-exhaustivity checker to get disabled (without any warning).",
        "createdAt" : "2020-01-20T20:26:36Z",
        "updatedAt" : "2020-01-22T18:54:57Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e89b10d4-421b-4e4f-8761-7eafc0e4caff",
        "parentId" : "49b53971-fc3d-4948-985c-118868197c7c",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "scala is great …",
        "createdAt" : "2020-01-20T20:31:59Z",
        "updatedAt" : "2020-01-22T18:54:57Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "fdacd860-b6b0-4aee-8043-3ea5b6204432",
        "parentId" : "49b53971-fc3d-4948-985c-118868197c7c",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Maybe we should remove the TODO, but I think it worth keeping the comment that there is no exhaustivity check for these two match expressions.",
        "createdAt" : "2020-01-20T20:37:52Z",
        "updatedAt" : "2020-01-22T18:54:57Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "21f9202d-b679-4e4a-90ed-f926aead02de",
        "parentId" : "49b53971-fc3d-4948-985c-118868197c7c",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Happy to keep the comment. I would suggest to turn it into a non-TODO comment and make it a bit more explicit that this is about the scala exhaustiveness checker not checking this match rather and not this match not being exhaustive (at least at this point :slightly_smiling_face:)",
        "createdAt" : "2020-01-21T08:08:07Z",
        "updatedAt" : "2020-01-22T18:54:57Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1939e8b6-a81d-458d-aa13-6832aa05f395",
        "parentId" : "49b53971-fc3d-4948-985c-118868197c7c",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "I made a separate PR to fix this case of lost exhaustivity checking. #4139 ",
        "createdAt" : "2020-01-21T12:07:55Z",
        "updatedAt" : "2020-01-22T18:54:57Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e9b7ff4849afb993cbda3dc7bea03b90e9dd9c19",
    "line" : null,
    "diffHunk" : "@@ -37,7 +37,8 @@ private[validation] object Serializability {\n \n     def checkType(): Unit = checkType(typeToSerialize)\n \n-    def checkType(typ0: Type): Unit = typ0 match {\n+    def checkType(typ0: Type): Unit = typ0 match { //TODO: fix the exhaustiveness checking"
  },
  {
    "id" : "c3e1a912-0f5c-4142-9f91-26ee78f1875e",
    "prId" : 4101,
    "comments" : [
      {
        "id" : "30c00127-efa6-425c-9495-23392c097633",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "In the Haskell typechecker you throw `URTypeSyn` instead of `URDataType`. I think we should be consistent here.",
        "createdAt" : "2020-01-20T08:06:14Z",
        "updatedAt" : "2020-01-22T18:54:57Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4d8e9f61-6560-4db8-a4cc-0322cff9534e",
        "parentId" : "30c00127-efa6-425c-9495-23392c097633",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "Thanks, nice catch. I wrote the `URTypeSyn` case class, but forgot to use it.",
        "createdAt" : "2020-01-20T19:47:20Z",
        "updatedAt" : "2020-01-22T18:54:57Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a14efad2-e213-4184-8e41-45b372292235",
        "parentId" : "30c00127-efa6-425c-9495-23392c097633",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "fixed now",
        "createdAt" : "2020-01-20T19:47:28Z",
        "updatedAt" : "2020-01-22T18:54:57Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e9b7ff4849afb993cbda3dc7bea03b90e9dd9c19",
    "line" : null,
    "diffHunk" : "@@ -37,7 +37,8 @@ private[validation] object Serializability {\n \n     def checkType(): Unit = checkType(typeToSerialize)\n \n-    def checkType(typ0: Type): Unit = typ0 match {\n+    def checkType(typ0: Type): Unit = typ0 match { //TODO: fix the exhaustiveness checking\n+      case TSynApp(syn,_) => unserializable(URDataType(syn))"
  }
]