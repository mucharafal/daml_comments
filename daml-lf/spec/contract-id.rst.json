[
  {
    "id" : "e3e0b914-bb0c-489b-8034-6b3f0596b850",
    "prId" : 5876,
    "comments" : [
      {
        "id" : "f3e767d5-02ad-4015-bfb2-f2f150f35e55",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "in #5784 @hurryabit wrote:\r\n> Should it be `versionPrefix`? If so, the same type happened further below again.",
        "createdAt" : "2020-05-06T18:10:53Z",
        "updatedAt" : "2020-05-06T18:10:54Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0953318a-c3a0-420b-bc60-0b54aead7801",
        "parentId" : "f3e767d5-02ad-4015-bfb2-f2f150f35e55",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "good catch. ",
        "createdAt" : "2020-05-06T18:11:15Z",
        "updatedAt" : "2020-05-06T18:11:15Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a986d2bbeb660bd1f4ff36a1909e53966b144273",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +47,51 @@bytes defined as follows ::\n\n  ContractID := versionPrefix ∥ discriminator ∥ suffix\n\nwhere"
  },
  {
    "id" : "d9c66aad-c12b-4632-a264-f9b86692d28a",
    "prId" : 5784,
    "comments" : [
      {
        "id" : "bf6a3506-666d-4cfd-b867-d6518837ee38",
        "parentId" : null,
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "```suggestion\r\n* Allows ledgers to store arbitrary information about the contract and the creating transaction in the contract ID if necessary.\r\n\r\n```",
        "createdAt" : "2020-05-04T08:11:24Z",
        "updatedAt" : "2020-05-05T12:28:37Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1740b4aad8b549fda29ee37d8663f4d503545a20",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@* Eliminate all contract ID translations for central commiter ledger\n* Allows ledgers to store arbitrary information about the contract and the creating transaction in the contract ID if necessary.\n\nRequirements\n^^^^^^^^^^^^"
  },
  {
    "id" : "6fa7ce43-2ff9-4762-9fad-84ac8b48c621",
    "prId" : 5784,
    "comments" : [
      {
        "id" : "0620c195-0fad-4f26-892c-002453af10f5",
        "parentId" : null,
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "This is the first time in this document that you mention \"input seeds\". Can you explain them briefly here or put a forward reference to their definition?",
        "createdAt" : "2020-05-04T08:13:02Z",
        "updatedAt" : "2020-05-05T12:28:37Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f92ff544-89db-4919-a970-1a903db277e5",
        "parentId" : "0620c195-0fad-4f26-892c-002453af10f5",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I drop the \"input seeds\". I just consider the seed of the node to be part of the projection. ",
        "createdAt" : "2020-05-05T12:26:42Z",
        "updatedAt" : "2020-05-05T12:28:37Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1740b4aad8b549fda29ee37d8663f4d503545a20",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@projection. That is, the contract IDs for contracts created in the\nprojection of a transaction to a set of parties can be computed\nsolely from the projection and input seeds.\n\n**Unlinkability**: It is computationally infeasible to link the contract"
  },
  {
    "id" : "3cdd5852-84f2-4a75-aaf2-ee9b2ca19303",
    "prId" : 5784,
    "comments" : [
      {
        "id" : "d861f3f8-9a1d-463f-9926-df8305b5ce21",
        "parentId" : null,
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "```suggestion\r\n* ``discriminator`` is a sequence of 32 bytes. It is generated from an initial seed (called *submission seed*)\r\n```\r\nI'd try to avoid the technical term \"UUID\" because there's a standard that describes the precise format. In particular, a UUID consists of exactly 16 bytes.",
        "createdAt" : "2020-05-04T08:47:02Z",
        "updatedAt" : "2020-05-05T12:28:37Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1740b4aad8b549fda29ee37d8663f4d503545a20",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +54,58 @@  contract ID scheme;\n* ``discriminator`` is a sequence of 32 bytes. It is like a random\n  UUID, but generated from an initial seed (called *submission seed*)\n  via a fixed `derivation scheme <Allocation scheme for\n  discriminators_>`_ that supports validation (see below)."
  },
  {
    "id" : "27241d4d-912d-4bdc-819e-678fd06ab26e",
    "prId" : 5784,
    "comments" : [
      {
        "id" : "d32071db-3267-4264-a663-0254ac3bc601",
        "parentId" : null,
        "author" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "body" : "Is this enforced in the implementation anywhere? In our tests, even very long suffixes seem to be accepted: https://github.com/DACH-NY/canton/blob/master/common/src/test/scala/com/digitalasset/canton/protocol/ContractIdTest.scala#L70",
        "createdAt" : "2020-05-04T08:48:37Z",
        "updatedAt" : "2020-05-05T12:28:37Z",
        "lastEditedBy" : {
          "login" : "andreaslochbihler-da",
          "name" : "Andreas Lochbihler",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/36634420?u=e4612b8608d57496b2fbe1939276b8b8b04e4d67&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "611d448e-8af5-444f-8993-61fb76396911",
        "parentId" : "d32071db-3267-4264-a663-0254ac3bc601",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "It is specified in the [DAML-LF spec](https://github.com/digital-asset/daml/blob/remy-contract-id-spec/daml-lf/spec/daml-lf-1.rst) line 564 (with a typo :().\r\nI will fix the typo and add a check in a upcoming PR. \r\n",
        "createdAt" : "2020-05-04T17:04:57Z",
        "updatedAt" : "2020-05-05T12:28:37Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1740b4aad8b549fda29ee37d8663f4d503545a20",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +58,62 @@  discriminators_>`_ that supports validation (see below).\n* ``suffix`` is a sequence of 0 to 95 bytes used to enforce global\n  uniqueness of the contract ID in a distributed ledger.\n\nDiscriminator freshness"
  },
  {
    "id" : "0f4f39b8-78bd-4a9b-a577-e60cf896c35f",
    "prId" : 5784,
    "comments" : [
      {
        "id" : "6a9bf6d0-6620-4249-b528-583b03bda704",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Should it be `versionPrefix`? If so, the same type happened further below again.",
        "createdAt" : "2020-05-06T16:11:18Z",
        "updatedAt" : "2020-05-06T16:22:43Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1740b4aad8b549fda29ee37d8663f4d503545a20",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +46,50 @@bytes defined as follows ::\n\n  ContractID := verisionPrefix ∥ discriminator ∥ suffix  \n\nwhere"
  },
  {
    "id" : "371a50e1-2e7a-4ba4-a4d0-62a9c33b6fd8",
    "prId" : 5784,
    "comments" : [
      {
        "id" : "f529e5b2-1f65-48ce-b8c6-fbdab36c26a1",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Doesn't it say 96 in the DAML-LF 1 spec?",
        "createdAt" : "2020-05-06T16:21:47Z",
        "updatedAt" : "2020-05-06T16:22:43Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1740b4aad8b549fda29ee37d8663f4d503545a20",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +57,61 @@  via a fixed `derivation scheme <Allocation scheme for\n  discriminators_>`_ that supports validation (see below).\n* ``suffix`` is a sequence of 0 to 95 bytes used to enforce global\n  uniqueness of the contract ID in a distributed ledger.\n"
  }
]