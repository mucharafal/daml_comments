[
  {
    "id" : "6f8e7506-b51b-43f0-9dd0-27722a1d0b5d",
    "prId" : 3583,
    "comments" : [
      {
        "id" : "0407cd75-5385-4270-91be-9f0706ec1eb3",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "```suggestion\r\nA map where keys and values are homogeneous.\r\n```",
        "createdAt" : "2019-11-22T12:04:49Z",
        "updatedAt" : "2019-11-26T12:53:52Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c1383fa14c7b88c29c69f359b78fbefb142afbc8",
    "line" : null,
    "diffHunk" : "@@ -579,3 +594,34 @@ In this version, these fields are included:\n \n Only ``value`` is required, and it is required to be one of the values\n of the enum type to which this ``message Enum`` conforms.\n+\n+\n+message GenMap.Entry\n+^^^^^^^^^^^^^^^^^\n+\n+*since version 7*\n+\n+A map entry (key-value pair) used to build `message GenMap`_.\n+\n+As of version 7, these fields are included:\n+\n+* `message Value`_  key\n+\n+* `message Value`_ value\n+\n+Both ``key`` and ``value`` are required.\n+\n+message GenMap\n+^^^^^^^^^^^\n+\n+*since version 7*\n+\n+A map where keys are values are homogeneous."
  },
  {
    "id" : "3576c568-0d9f-4141-b1e5-0975cefe32ba",
    "prId" : 3583,
    "comments" : [
      {
        "id" : "0fe119da-d044-44d1-92b5-94fddf2330d3",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "```suggestion\r\nconform to the same types. Entries occur in insertion order. If two ore more\r\n```",
        "createdAt" : "2019-11-22T12:05:24Z",
        "updatedAt" : "2019-11-26T12:53:52Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c1383fa14c7b88c29c69f359b78fbefb142afbc8",
    "line" : null,
    "diffHunk" : "@@ -579,3 +594,34 @@ In this version, these fields are included:\n \n Only ``value`` is required, and it is required to be one of the values\n of the enum type to which this ``message Enum`` conforms.\n+\n+\n+message GenMap.Entry\n+^^^^^^^^^^^^^^^^^\n+\n+*since version 7*\n+\n+A map entry (key-value pair) used to build `message GenMap`_.\n+\n+As of version 7, these fields are included:\n+\n+* `message Value`_  key\n+\n+* `message Value`_ value\n+\n+Both ``key`` and ``value`` are required.\n+\n+message GenMap\n+^^^^^^^^^^^\n+\n+*since version 7*\n+\n+A map where keys are values are homogeneous.\n+\n+In this version, these fields are included:\n+\n+* repeated `message GenMap.Entry`_ entries\n+\n+The ``keys`` and the ``value`` fields of every member of ``entries`` must\n+conform to the same types. Entries occur in assertion order, if two ore more"
  },
  {
    "id" : "aa9f1ed9-a066-4f78-b024-b5514d015a96",
    "prId" : 3583,
    "comments" : [
      {
        "id" : "14624c85-4332-4f66-b594-7274e1b458c0",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "```suggestion\r\nentries have the same keys, the last one override the former entries.\r\n```",
        "createdAt" : "2019-11-22T12:06:05Z",
        "updatedAt" : "2019-11-26T12:53:52Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c1383fa14c7b88c29c69f359b78fbefb142afbc8",
    "line" : null,
    "diffHunk" : "@@ -579,3 +594,34 @@ In this version, these fields are included:\n \n Only ``value`` is required, and it is required to be one of the values\n of the enum type to which this ``message Enum`` conforms.\n+\n+\n+message GenMap.Entry\n+^^^^^^^^^^^^^^^^^\n+\n+*since version 7*\n+\n+A map entry (key-value pair) used to build `message GenMap`_.\n+\n+As of version 7, these fields are included:\n+\n+* `message Value`_  key\n+\n+* `message Value`_ value\n+\n+Both ``key`` and ``value`` are required.\n+\n+message GenMap\n+^^^^^^^^^^^\n+\n+*since version 7*\n+\n+A map where keys are values are homogeneous.\n+\n+In this version, these fields are included:\n+\n+* repeated `message GenMap.Entry`_ entries\n+\n+The ``keys`` and the ``value`` fields of every member of ``entries`` must\n+conform to the same types. Entries occur in assertion order, if two ore more\n+entries have the same keys, the last one override the formers."
  },
  {
    "id" : "db87b53d-fafe-40e1-b18f-a491d0dad7b9",
    "prId" : 3583,
    "comments" : [
      {
        "id" : "b72bdbd9-b305-4375-beb7-0c253d1871d6",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "```suggestion\r\n^^^^^^^^^^^^^^\r\n```",
        "createdAt" : "2019-11-25T14:48:57Z",
        "updatedAt" : "2019-11-26T12:53:52Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c1383fa14c7b88c29c69f359b78fbefb142afbc8",
    "line" : 53,
    "diffHunk" : "@@ -579,3 +594,34 @@ In this version, these fields are included:\n \n Only ``value`` is required, and it is required to be one of the values\n of the enum type to which this ``message Enum`` conforms.\n+\n+\n+message GenMap.Entry\n+^^^^^^^^^^^^^^^^^\n+\n+*since version 7*\n+\n+A map entry (key-value pair) used to build `message GenMap`_.\n+\n+As of version 7, these fields are included:\n+\n+* `message Value`_  key\n+\n+* `message Value`_ value\n+\n+Both ``key`` and ``value`` are required.\n+\n+message GenMap\n+^^^^^^^^^^^"
  },
  {
    "id" : "d0a45c07-1461-45ff-9735-12041cd242db",
    "prId" : 3001,
    "comments" : [
      {
        "id" : "67325dc4-8bfb-4c78-9c3a-bf71eb31d2b1",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "```suggestion\r\nNote the field was named `decimal` in SDK 0.13.26 or earlier.\r\n```",
        "createdAt" : "2019-09-27T12:12:50Z",
        "updatedAt" : "2019-10-07T16:53:01Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "16ed755353339e1c8993a492a7a67e3522430f59",
    "line" : null,
    "diffHunk" : "@@ -249,29 +249,55 @@ field contract_id\n \n Its text must be a valid contract ID.\n \n-field decimal\n+field numeric\n ~~~~~~~~~~~~~\n \n *since version 1*\n \n-Expresses a number in [–(10³⁸–1)÷10¹⁰, (10³⁸–1)÷10¹⁰] with at most 10\n-digits of decimal precision.  In other words, in base-10, a number with\n-28 digits before the decimal point and up to 10 after the decimal point.\n-A leading sign, + or -, may be optionally included.  In regular\n-expression terms::\n+Expresses a number in [–(10³⁸–1)÷10¹⁰, (10³⁸–1)÷10¹⁰] with a precision\n+38 and a scale 10 digits.  In other words, in base-10, a number with\n+28 digits before the decimal point and up to 10 after the decimal\n+point.  A leading sign, `+` or `-`, may be optionally included.  In\n+regular expression terms::\n \n   [+-]?[0-9]{1,28}(\\.[0-9]{1,10})?\n \n Any value that does not conform, either by being outside the range or\n-having too many decimal digits or for any other reason, must be rejected\n-as an invalid message; consumers must not round, overflow, or otherwise\n-try to compensate for \"bad\" input when reading decimal fields.  As such,\n-value producers should take care to properly format these decimals.\n+having too many decimal digits or for any other reason, must be\n+rejected as an invalid message; consumers must not round, overflow, or\n+otherwise try to compensate for \"bad\" input when reading decimal\n+fields.  As such, value producers should take care to properly format\n+these decimals.\n \n It may seem strange that the value specification uses ``string`` here\n rather than a protobuf-supported numeric type; however, none of\n protobuf's numeric types have the proper precision for this field.\n \n+Note the field was nammed `decimal` in SDK 0.13.26 or earlier."
  },
  {
    "id" : "23c30eaf-236f-4aea-857c-a250b6605e02",
    "prId" : 2997,
    "comments" : [
      {
        "id" : "d00993e5-d5ef-41e2-b08e-ea771fd944a1",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "```suggestion\r\nAn Enum value, an optimized form of variant without argument.\r\n```",
        "createdAt" : "2019-09-24T12:32:04Z",
        "updatedAt" : "2019-09-25T08:18:46Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b01abed5-b330-4b2d-acbf-3d5a91679cd0",
        "parentId" : "d00993e5-d5ef-41e2-b08e-ea771fd944a1",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Thanks! fixed. ",
        "createdAt" : "2019-09-24T12:42:50Z",
        "updatedAt" : "2019-09-25T08:18:46Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ae077c222310c578283f1bdb62e60a6a745b7fb2",
    "line" : null,
    "diffHunk" : "@@ -524,10 +529,25 @@ message Map\n \n A homogeneous map of values.\n \n-In this version, these fields are include:\n+In this version, these fields are included:\n \n * repeated `message Map.Entry`_ entries\n \n The ``value`` field of every member of ``entries`` must conform to the\n same type. Furthermore,the ``key`` fields of the entries must be distinct.\n Entries may occur in arbitrary order.\n+\n+message Enum\n+^^^^^^^^^^^^\n+\n+*since version 5*\n+\n+A Enum value, a optimized form of variant without argument."
  },
  {
    "id" : "54962a18-2a87-4cd8-beb2-d141c2c60956",
    "prId" : 2997,
    "comments" : [
      {
        "id" : "6e07480f-ae8d-47b9-a64e-5d5f8e846a44",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Nice; please add to version history in this file as well.",
        "createdAt" : "2019-09-24T15:51:00Z",
        "updatedAt" : "2019-09-25T08:18:46Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "eca4297a-6e14-4ddc-88ad-15b204f10698",
        "parentId" : "6e07480f-ae8d-47b9-a64e-5d5f8e846a44",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "done",
        "createdAt" : "2019-09-25T08:13:07Z",
        "updatedAt" : "2019-09-25T08:18:46Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ae077c222310c578283f1bdb62e60a6a745b7fb2",
    "line" : 5,
    "diffHunk" : "@@ -4,7 +4,7 @@\n DAML-LF Value Specification\n ===========================\n \n-**version 4, 2 April 2019**\n+**version 5, 29 May 2019**"
  },
  {
    "id" : "530883e5-9e2a-4f47-bfb6-a96c172c299e",
    "prId" : 2997,
    "comments" : [
      {
        "id" : "893408fe-9ef6-4d09-81b9-434b9cb5a491",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n* `message Identifier`_ enum_id\r\n```",
        "createdAt" : "2019-09-24T15:55:07Z",
        "updatedAt" : "2019-09-25T08:18:46Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "30b8f05c-c60b-48d9-97b4-1ff0ece3cb45",
        "parentId" : "893408fe-9ef6-4d09-81b9-434b9cb5a491",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Good catch. Thanks.",
        "createdAt" : "2019-09-25T08:16:13Z",
        "updatedAt" : "2019-09-25T08:18:46Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ae077c222310c578283f1bdb62e60a6a745b7fb2",
    "line" : null,
    "diffHunk" : "@@ -524,10 +529,25 @@ message Map\n \n A homogeneous map of values.\n \n-In this version, these fields are include:\n+In this version, these fields are included:\n \n * repeated `message Map.Entry`_ entries\n \n The ``value`` field of every member of ``entries`` must conform to the\n same type. Furthermore,the ``key`` fields of the entries must be distinct.\n Entries may occur in arbitrary order.\n+\n+message Enum\n+^^^^^^^^^^^^\n+\n+*since version 5*\n+\n+An Enum value, a specialized form of variant without argument.\n+\n+In this version, these fields are included:\n+\n+* `message Identifier`_ `field variant_id`_"
  },
  {
    "id" : "53c970f2-1da1-4eb0-959a-af9897bd7185",
    "prId" : 2997,
    "comments" : [
      {
        "id" : "3c8a6b45-7e23-45c3-8bb2-50ffdaf83e9c",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n* ``string`` value\r\n\r\nOnly ``value`` is required, and it is required to be one of the values\r\nof the enum type to which this ``message Enum`` conforms.\r\n```\r\n\r\n`Variant` and `Record` don't mention this immediately because they have `field`-specific sections that say whether they're optional or not. This PR links to the variant fields, which have the correct rules technically but might be confusing since they focus on their role in the variant message.\r\n\r\nThe notion of values conforming to types remains sort of implicit and informal throughout the specification, but some mention of the rules in practice is valuable.",
        "createdAt" : "2019-09-24T15:55:35Z",
        "updatedAt" : "2019-09-25T08:18:46Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "dcf923f7-7444-4f8d-969a-650cb3be9176",
        "parentId" : "3c8a6b45-7e23-45c3-8bb2-50ffdaf83e9c",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : ":+1: ",
        "createdAt" : "2019-09-25T08:15:05Z",
        "updatedAt" : "2019-09-25T08:18:46Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ae077c222310c578283f1bdb62e60a6a745b7fb2",
    "line" : null,
    "diffHunk" : "@@ -524,10 +529,25 @@ message Map\n \n A homogeneous map of values.\n \n-In this version, these fields are include:\n+In this version, these fields are included:\n \n * repeated `message Map.Entry`_ entries\n \n The ``value`` field of every member of ``entries`` must conform to the\n same type. Furthermore,the ``key`` fields of the entries must be distinct.\n Entries may occur in arbitrary order.\n+\n+message Enum\n+^^^^^^^^^^^^\n+\n+*since version 5*\n+\n+An Enum value, a specialized form of variant without argument.\n+\n+In this version, these fields are included:\n+\n+* `message Identifier`_ `field variant_id`_\n+* ``string`` `field constructor`_"
  },
  {
    "id" : "97e2ad60-da61-482c-ac9f-6cf11dfc1c9e",
    "prId" : 606,
    "comments" : [
      {
        "id" : "ad11d678-7578-4d1a-840f-7ee1512ba082",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Should this be considered retroactively applicable to value version 1?",
        "createdAt" : "2019-04-18T16:17:32Z",
        "updatedAt" : "2019-04-24T23:45:20Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "12a47ba2-453c-4f14-ad7b-7fdd20133378",
        "parentId" : "ad11d678-7578-4d1a-840f-7ee1512ba082",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "The current spec is clearly buggy. For instance, it was accepted ``\".\"`` (the string containing only dot) and ``\"\"`` (empty string).  Therefore, we have to \"retroactively\" fix it. \r\n\r\nI took the intersection between :\r\n\r\n- the originally specified reegex ```[+-]?[0-9]{0,28}(\\.[0-9]{0,10})?```\r\n- and the regexp that was actually used in the code ```[+-]?\\d+(\\.\\d+)?```\r\n\r\nLike that we actually do not accept less correct string representations than before.\r\n\r\nI find this to be the most reasonable.  \r\n",
        "createdAt" : "2019-04-23T07:36:08Z",
        "updatedAt" : "2019-04-24T23:45:20Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "030d75ad-71d2-4f1c-8209-bfa3cbda81d7",
        "parentId" : "ad11d678-7578-4d1a-840f-7ee1512ba082",
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "yes, me and @remyhaemmerle-da discussed this and we're retroactively applying this as a bug fix.",
        "createdAt" : "2019-04-24T08:00:17Z",
        "updatedAt" : "2019-04-24T23:45:20Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b6368f541c8ac07e1b0e9babb831481db8ecd406",
    "line" : 5,
    "diffHunk" : "@@ -253,7 +253,7 @@ digits of decimal precision.  In other words, in base-10, a number with\n A leading sign, + or -, may be optionally included.  In regular\n expression terms::\n \n-  [+-]?[0-9]{0,28}(\\.[0-9]{0,10})?\n+  [+-]?[0-9]{1,28}(\\.[0-9]{1,10})?"
  },
  {
    "id" : "a2632f9b-a165-4fc4-bf1b-77f0390f63aa",
    "prId" : 401,
    "comments" : [
      {
        "id" : "7ea34a88-1650-4498-a9f7-6eabdcdf3407",
        "parentId" : null,
        "author" : {
          "login" : "stephencompall-DA",
          "name" : "Actually @S11001001 (Stephen Compall)",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/32464278?u=2f0eaeb2500ecacccd6c1af95b27424d5193ad65&v=4"
        },
        "body" : "3-27 might still be more accurate; at your discretion.",
        "createdAt" : "2019-04-11T14:20:03Z",
        "updatedAt" : "2019-04-11T14:40:21Z",
        "lastEditedBy" : {
          "login" : "stephencompall-DA",
          "name" : "Actually @S11001001 (Stephen Compall)",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/32464278?u=2f0eaeb2500ecacccd6c1af95b27424d5193ad65&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "afda4548-5a19-4682-a5c0-0bde059e7276",
        "parentId" : "7ea34a88-1650-4498-a9f7-6eabdcdf3407",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "I was not sure. I follow your opinion. ",
        "createdAt" : "2019-04-11T14:41:05Z",
        "updatedAt" : "2019-04-11T14:41:05Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "db4d114676038e84a295264843fb4e36e566a34e",
    "line" : null,
    "diffHunk" : "@@ -155,7 +155,7 @@ This table lists every version of this specification in ascending order\n +--------------------+-----------------+\n |                  3 |      2019-02-14 |\n +--------------------+-----------------+\n-|                  4 |      2019-03-27 |\n+|                  4 |      2019-04-10 |"
  }
]