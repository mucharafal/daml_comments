[
  {
    "id" : "0a3e2bf4-7305-4158-b2d6-b056308c4c68",
    "prId" : 7666,
    "comments" : [
      {
        "id" : "5e54f024-5452-430c-939d-9ddf013b0bf9",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Should we attach a ticket to this so we don't forget it?",
        "createdAt" : "2020-10-14T10:45:03Z",
        "updatedAt" : "2020-10-14T10:45:27Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b1d9cb12-760d-4570-815a-ceab8c56a958",
        "parentId" : "5e54f024-5452-430c-939d-9ddf013b0bf9",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "You can’t implement multi-party submissions without this so I don’t think there is any danger of forgetting this.",
        "createdAt" : "2020-10-14T10:47:45Z",
        "updatedAt" : "2020-10-14T10:47:45Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ff14695fd1fb3e46a09494fe7f0bdbb3256d4895",
    "line" : 4,
    "diffHunk" : "@@ -176,6 +176,7 @@ final case class ScenarioRunner(\n       cbMissing: Unit => Boolean,\n       cbPresent: ContractInst[Tx.Value[ContractId]] => Unit) = {\n \n+    // Once we support multi-party reads, we can drop this restriction."
  },
  {
    "id" : "9b8d877f-09a0-4195-9525-625d3b153dd0",
    "prId" : 7501,
    "comments" : [
      {
        "id" : "19f8bd85-ebec-4685-92ca-d12c9cd94958",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "This feels a bit hacky. Maybe that's a bias coming from Haskell, but to me `withOnLedger` implies that the `onLedger` should be limited to the scope of the continuation and should not leak out. Either `machine.getOnLedger` or moving `machine.withOnLedger` to the relevant places would seem cleaner. ",
        "createdAt" : "2020-09-29T08:18:45Z",
        "updatedAt" : "2020-09-29T08:57:50Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f94ee07a-d0d7-43c7-ba45-f16ff306a765",
        "parentId" : "19f8bd85-ebec-4685-92ca-d12c9cd94958",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Yeah I agree that it’s a bit weird. The reason why I went for this is that the machine is t the class level so it seems weird to limit the scope of the onledger stuff to anything less.",
        "createdAt" : "2020-09-29T08:21:15Z",
        "updatedAt" : "2020-09-29T08:57:50Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "911e0932-1357-48be-b5b4-17dcb53620d3",
        "parentId" : "19f8bd85-ebec-4685-92ca-d12c9cd94958",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "I’ve inlined the implementation in those two cases to make this a bit less confusing.",
        "createdAt" : "2020-09-29T08:56:05Z",
        "updatedAt" : "2020-09-29T08:57:50Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d58a02a1-43d2-49ea-b4a6-a43e27dd567c",
        "parentId" : "19f8bd85-ebec-4685-92ca-d12c9cd94958",
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "Thanks, yes, that's clearer.",
        "createdAt" : "2020-09-29T09:15:41Z",
        "updatedAt" : "2020-09-29T09:15:42Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b25c1c36b2946c9654397dda20c730c43a9168fc",
    "line" : null,
    "diffHunk" : "@@ -29,6 +29,7 @@ final case class ScenarioRunner(\n     machine: Speedy.Machine,\n     partyNameMangler: (String => String) = identity) {\n   var ledger: ScenarioLedger = ScenarioLedger.initialLedger(Time.Timestamp.Epoch)\n+  val onLedger = machine.withOnLedger(\"ScenarioRunner\")(identity)"
  },
  {
    "id" : "5b1cf9d7-0664-453e-a98d-71d07ee1c77e",
    "prId" : 6907,
    "comments" : [
      {
        "id" : "8a10f046-0b90-461f-a865-fb36fa31e05d",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "```suggestion\r\n              stakeholders,\r\n            ) =>\r\n```",
        "createdAt" : "2020-08-06T20:16:39Z",
        "updatedAt" : "2020-08-07T14:57:00Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a0ce4d61-383a-4720-a034-4cdaf5f7c6ca",
        "parentId" : "8a10f046-0b90-461f-a865-fb36fa31e05d",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "ead2923dd0",
        "createdAt" : "2020-08-06T21:07:27Z",
        "updatedAt" : "2020-08-07T14:57:00Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0be6183109e0ca2416eea13d320bcf30594c3988",
    "line" : null,
    "diffHunk" : "@@ -251,7 +251,11 @@ final case class ScenarioRunner(\n             missingWith(SErrorCrash(s\"contract $acoid not effective, but we found its key!\"))\n           case ScenarioLedger.LookupContractNotActive(_, _, _) =>\n             missingWith(SErrorCrash(s\"contract $acoid not active, but we found its key!\"))\n-          case ScenarioLedger.LookupContractNotVisible(coid, tid, observers @ _, stakeholders) =>\n+          case ScenarioLedger.LookupContractNotVisible(\n+              coid,\n+              tid @ _,\n+              observers @ _,\n+              stakeholders) =>"
  },
  {
    "id" : "918a7845-2147-4e90-990d-a6060d134646",
    "prId" : 6434,
    "comments" : [
      {
        "id" : "32a215c2-2596-472b-8ac9-39187b9a58ba",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n          case ScenarioLedger.LookupContractNotVisible(coid, tid, observers@_, stakeholders) =>\r\n```",
        "createdAt" : "2020-06-22T08:17:19Z",
        "updatedAt" : "2020-06-22T09:37:43Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4358f94c7f3f18a53d2a80ed41aab36237482492",
    "line" : null,
    "diffHunk" : "@@ -222,9 +222,9 @@ final case class ScenarioRunner(\n             missingWith(SErrorCrash(s\"contract $acoid not effective, but we found its key!\"))\n           case ScenarioLedger.LookupContractNotActive(_, _, _) =>\n             missingWith(SErrorCrash(s\"contract $acoid not active, but we found its key!\"))\n-          case ScenarioLedger.LookupContractNotVisible(coid, tid, observers) =>\n+          case ScenarioLedger.LookupContractNotVisible(coid, tid, _, stakeholders) =>"
  },
  {
    "id" : "7dcd0404-95d9-49d9-8f75-2302d2fd8ea1",
    "prId" : 6434,
    "comments" : [
      {
        "id" : "f9fcd00d-bcbe-472a-9082-51e2491fbbd2",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "```suggestion\r\n      case ScenarioLedger.LookupContractNotVisible(coid, tid, observers, stakeholders@_) =>\r\n```",
        "createdAt" : "2020-06-22T08:17:40Z",
        "updatedAt" : "2020-06-22T09:37:43Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4358f94c7f3f18a53d2a80ed41aab36237482492",
    "line" : null,
    "diffHunk" : "@@ -184,7 +184,7 @@ final case class ScenarioRunner(\n       case ScenarioLedger.LookupContractNotActive(coid, tid, consumedBy) =>\n         missingWith(ScenarioErrorContractNotActive(coid, tid, consumedBy))\n \n-      case ScenarioLedger.LookupContractNotVisible(coid, tid, observers) =>\n+      case ScenarioLedger.LookupContractNotVisible(coid, tid, observers, _) =>"
  },
  {
    "id" : "2563b8db-8c87-452a-a7cb-d2bf89298e2f",
    "prId" : 6433,
    "comments" : [
      {
        "id" : "ea9b38bd-d467-4f52-8d89-3264c8fd5553",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Wasn't `cb` clear enough? 😉\r\nDid you figure out what it stands for?",
        "createdAt" : "2020-06-22T08:07:09Z",
        "updatedAt" : "2020-06-22T08:13:47Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b976a024-15d0-4741-8c48-69b0f351bc5a",
        "parentId" : "ea9b38bd-d467-4f52-8d89-3264c8fd5553",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "`callback` presumably but that isn’t much more useful than `cb` so I’ve renamed it to what it actually does :slightly_smiling_face: ",
        "createdAt" : "2020-06-22T08:17:42Z",
        "updatedAt" : "2020-06-22T08:17:42Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9497e1da-1341-47a5-83b9-1f150e912723",
        "parentId" : "ea9b38bd-d467-4f52-8d89-3264c8fd5553",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Yeah, `callback` sounds very reasonable. Thanks. I haven't done enough JS yet to make the word omnipresent in my head. And I agree that `callback` carries almost as little information as `cb`.",
        "createdAt" : "2020-06-22T08:54:23Z",
        "updatedAt" : "2020-06-22T08:54:23Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9dbb098cbf4f272279020897d81b39029f9b2d73",
    "line" : 5,
    "diffHunk" : "@@ -192,14 +192,18 @@ final case class ScenarioRunner(\n   private def lookupKey(\n       gk: GlobalKey,\n       committers: Set[Party],\n-      cb: SKeyLookupResult => Boolean,\n+      canContinue: SKeyLookupResult => Boolean,"
  },
  {
    "id" : "226f516d-6dbc-46b9-a7cd-7919a58ccd41",
    "prId" : 6123,
    "comments" : [
      {
        "id" : "cb0a5297-b8c7-4175-bd75-0480c8a508d7",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "Whoops.",
        "createdAt" : "2020-05-27T12:53:33Z",
        "updatedAt" : "2020-05-27T13:28:06Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1100327b1a3d0385f89c660ee2a6461cee831ae6",
    "line" : null,
    "diffHunk" : "@@ -217,7 +217,8 @@ final case class ScenarioRunner(\n             missingWith(SErrorCrash(s\"contract $acoid not effective, but we found its key!\"))\n           case LookupContractNotActive(_, _, _) =>\n             missingWith(SErrorCrash(s\"contract $acoid not active, but we found its key!\"))\n-          case LookupContractNotVisible(_, _, _) =>\n+          case x @ (LookupOk(_, _, _) | LookupContractNotVisible(_, _, _)) =>\n+            remy.log(x)"
  },
  {
    "id" : "c4eb6035-7645-43f5-a729-64f75dc6ee90",
    "prId" : 6123,
    "comments" : [
      {
        "id" : "7246aef2-17a4-41af-a023-f821a4abf746",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "I would suggest to either rename `stakeholders` to `isStakeholder` or to call `contains` on `stakeholders` explicitly, whatever you find more fitting.",
        "createdAt" : "2020-05-27T12:59:00Z",
        "updatedAt" : "2020-05-27T13:28:06Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1100327b1a3d0385f89c660ee2a6461cee831ae6",
    "line" : null,
    "diffHunk" : "@@ -208,7 +208,7 @@ final case class ScenarioRunner(\n           view = ParticipantView(committer),\n           effectiveAt = effectiveAt,\n           acoid) match {\n-          case LookupOk(_, _) =>\n+          case LookupOk(_, _, stakeholders) if stakeholders(committer) =>"
  },
  {
    "id" : "888ad22e-2ffc-4f76-bbf7-056ab992c59c",
    "prId" : 6123,
    "comments" : [
      {
        "id" : "e7b972d6-f413-4e7b-84cb-fc21de813abd",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "It's probably worth mentioning why a `LookupOk` ends up here.",
        "createdAt" : "2020-05-27T13:00:13Z",
        "updatedAt" : "2020-05-27T13:28:06Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1100327b1a3d0385f89c660ee2a6461cee831ae6",
    "line" : null,
    "diffHunk" : "@@ -217,7 +217,7 @@ final case class ScenarioRunner(\n             missingWith(SErrorCrash(s\"contract $acoid not effective, but we found its key!\"))\n           case LookupContractNotActive(_, _, _) =>\n             missingWith(SErrorCrash(s\"contract $acoid not active, but we found its key!\"))\n-          case LookupContractNotVisible(_, _, _) =>\n+          case LookupOk(_, _, _) | LookupContractNotVisible(_, _, _) =>"
  },
  {
    "id" : "e8ca5e65-26de-4a49-a00a-bc14c89120d8",
    "prId" : 6123,
    "comments" : [
      {
        "id" : "ce3c5b1f-b92f-49dd-a94f-c06ac57f75e3",
        "parentId" : null,
        "author" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "body" : "Is this code valid to handle the new case?",
        "createdAt" : "2020-05-27T13:00:34Z",
        "updatedAt" : "2020-05-27T13:28:06Z",
        "lastEditedBy" : {
          "login" : "stefanobaghino-da",
          "name" : "Stefano Baghino",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/43749967?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1100327b1a3d0385f89c660ee2a6461cee831ae6",
    "line" : null,
    "diffHunk" : "@@ -217,7 +217,7 @@ final case class ScenarioRunner(\n             missingWith(SErrorCrash(s\"contract $acoid not effective, but we found its key!\"))\n           case LookupContractNotActive(_, _, _) =>\n             missingWith(SErrorCrash(s\"contract $acoid not active, but we found its key!\"))\n-          case LookupContractNotVisible(_, _, _) =>\n+          case LookupOk(_, _, _) | LookupContractNotVisible(_, _, _) =>\n             if (!cb(SKeyLookupResult.NotVisible))\n               throw SErrorCrash(s\"contract $acoid not visible, but we found its key!\")"
  },
  {
    "id" : "4c074d46-573d-4182-bc43-d5a2d41a6b70",
    "prId" : 5814,
    "comments" : [
      {
        "id" : "decdd359-dfd9-4bf1-8bae-0cae75fd1538",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I don't see a consequence for this match branch.",
        "createdAt" : "2020-05-04T07:04:08Z",
        "updatedAt" : "2020-05-04T13:45:39Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a88fb397-ccb6-4091-90c6-cb92982ba4e9",
        "parentId" : "decdd359-dfd9-4bf1-8bae-0cae75fd1538",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "This is legal scala syntax. It means the same as having `()` on RHS of the `=>`\r\nIt's used all over the scala code base.\r\nBut I agree, I generally prefer when code is explicit with `()`, but I missed it here.",
        "createdAt" : "2020-05-04T10:02:59Z",
        "updatedAt" : "2020-05-04T13:45:39Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3bad037d-2a42-4b38-ae3d-dfe0c3499786",
        "parentId" : "decdd359-dfd9-4bf1-8bae-0cae75fd1538",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Since that code has changed anyway, can we please add the `()` here.",
        "createdAt" : "2020-05-04T12:38:36Z",
        "updatedAt" : "2020-05-04T13:45:39Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d60c5ee2-d23f-4028-92bb-23fc003b1ad0",
        "parentId" : "decdd359-dfd9-4bf1-8bae-0cae75fd1538",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "ok",
        "createdAt" : "2020-05-04T13:46:21Z",
        "updatedAt" : "2020-05-04T13:46:21Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8e68cc9359abaf460f448f09c616975c2935f54b",
    "line" : 10,
    "diffHunk" : "@@ -48,9 +48,10 @@ final case class ScenarioRunner(\n     var steps = 0\n     while (!machine.isFinal) {\n       //machine.print(steps)\n-      machine.step match {\n-        case SResultContinue =>\n-          steps += 1\n+      steps += 1 // this counts the number of external `Need` interactions\n+      val res: SResult = machine.run()\n+      res match {\n+        case SResultFinalValue(_) =>"
  },
  {
    "id" : "68d56353-bd33-476b-a0c5-869253bacce9",
    "prId" : 1414,
    "comments" : [
      {
        "id" : "3266d7fa-082c-42d0-9475-594a014599d3",
        "parentId" : null,
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "please factor out in a function, and make the error message better, e.g. `s\"Expecting one committer for scenario action, but got $committers\"`.",
        "createdAt" : "2019-06-07T15:35:04Z",
        "updatedAt" : "2019-06-28T13:00:45Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4eb3a49e-33bf-4ebb-bc16-6ac9267757ee",
        "parentId" : "3266d7fa-082c-42d0-9475-594a014599d3",
        "author" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "body" : "Changed now",
        "createdAt" : "2019-06-11T17:09:30Z",
        "updatedAt" : "2019-06-28T13:00:45Z",
        "lastEditedBy" : {
          "login" : "oggy-",
          "name" : "Ognjen Maric",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/325151?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ab0ead601a9595d13f63af85647223621775e3eb",
    "line" : null,
    "diffHunk" : "@@ -99,9 +102,11 @@ final case class ScenarioRunner(\n     }\n   }\n \n-  private def mustFail(tx: Transaction, committer: Party) = {\n+  private def mustFail(tx: Transaction, committers: Set[Party]) = {\n     // Update expression evaluated successfully,\n     // however we might still have an authorization failure.\n+    val committer = if(committers.size == 1) committers.head else crash(\"there must be exactly one committer\")"
  },
  {
    "id" : "71bb59c9-0fc8-4dd7-8597-7a8d14165e33",
    "prId" : 795,
    "comments" : [
      {
        "id" : "5bdd9d6f-5bcf-4cc3-94b7-4299b28f3089",
        "parentId" : null,
        "author" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "body" : "use `[[Speedy.Machine]]` to link in docs",
        "createdAt" : "2019-04-30T15:15:33Z",
        "updatedAt" : "2019-05-03T12:22:00Z",
        "lastEditedBy" : {
          "login" : "dajmaki",
          "name" : "Jussi Mäki",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/19684330?u=abb996187e6b472110abdd8dc3c27c4fc0140b92&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0f1d9e562b461776234e84d86bdd0731f4dc026b",
    "line" : null,
    "diffHunk" : "@@ -19,8 +19,19 @@ import com.digitalasset.daml.lf.transaction.Node.GlobalKey\n \n private case class SRunnerException(err: SError) extends RuntimeException(err.toString)\n \n-final case class ScenarioRunner(machine: Speedy.Machine) {\n+/** Speedy scenario runner that uses the reference ledger.\n+  *\n+  * @constructor Creates a runner using an instance of {@code Speedy.Machine}."
  },
  {
    "id" : "60736f9e-d371-4b1d-b66b-4b075814b894",
    "prId" : 753,
    "comments" : [
      {
        "id" : "98567ae9-943f-4125-b75c-42e3627b7f55",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "```suggestion\r\n```",
        "createdAt" : "2019-04-29T16:18:39Z",
        "updatedAt" : "2019-05-02T13:18:49Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "22e6b913-c199-40c1-a8be-cb580bb8569e",
        "parentId" : "98567ae9-943f-4125-b75c-42e3627b7f55",
        "author" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "body" : "done",
        "createdAt" : "2019-04-30T08:27:58Z",
        "updatedAt" : "2019-05-02T13:18:49Z",
        "lastEditedBy" : {
          "login" : "bitonic",
          "name" : "Francesco Mazzoli",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/556090?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d04d7e71d5ab5908c338ee16a2b3e4ed40b731cd",
    "line" : null,
    "diffHunk" : "@@ -167,15 +167,41 @@ final case class ScenarioRunner(machine: Speedy.Machine) {\n \n   private def lookupKey(\n       gk: GlobalKey,\n+      optCommitter: Option[Party],\n       cbMissing: Unit => Boolean,\n       cbPresent: AbsoluteContractId => Unit) = {\n+    val committer = optCommitter.getOrElse(crash(\"committer missing\"))\n+    val effectiveAt = ledger.currentTime\n+\n     def missingWith(err: SError) =\n       if (!cbMissing(())) {\n         throw SRunnerException(err)\n       }\n     ledger.ledgerData.activeKeys.get(gk) match {\n       case None => missingWith(SErrorCrash(s\"Key $gk not found\"))\n-      case Some(acoid) => cbPresent(acoid)\n+      case Some(acoid) =>\n+        // make sure that the contract is visible, see\n+        // <https://github.com/digital-asset/daml/issues/751>.\n+        ledger.lookupGlobalContract(\n+          view = ParticipantView(committer),\n+          effectiveAt = effectiveAt,\n+          acoid) match {\n+          case LookupOk(_, _) =>\n+            cbPresent(acoid)\n+\n+          case LookupContractNotFound(coid) =>\n+            missingWith(SErrorCrash(s\"contract $coid not found, but we found its key!\"))\n+\n+          case LookupContractNotEffective(_, _, _) =>\n+            missingWith(SErrorCrash(s\"contract $acoid not effective, but we found its key!\"))\n+\n+          case LookupContractNotActive(_, _, _) =>\n+            missingWith(SErrorCrash(s\"contract $acoid not active, but we found its key!\"))\n+\n+          case LookupContractNotVisible(_, _, _) =>\n+            missingWith(SErrorCrash(s\"Key $gk not found\"))\n+        }\n+        cbPresent(acoid)"
  }
]