[
  {
    "id" : "f99f2171-d3be-4db6-9263-f6d68babfd6e",
    "prId" : 7666,
    "comments" : [
      {
        "id" : "aa9428f7-d845-4c02-bf9e-2c993cb8f72d",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Should we attach a ticket to this so we don't forget it?",
        "createdAt" : "2020-10-14T10:45:03Z",
        "updatedAt" : "2020-10-14T10:45:27Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7819b05b-a116-47d9-b54f-4706fc4596fd",
        "parentId" : "aa9428f7-d845-4c02-bf9e-2c993cb8f72d",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "You canâ€™t implement multi-party submissions without this so I donâ€™t think there is any danger of forgetting this.",
        "createdAt" : "2020-10-14T10:47:45Z",
        "updatedAt" : "2020-10-14T10:47:45Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ff14695fd1fb3e46a09494fe7f0bdbb3256d4895",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +177,181 @@      cbPresent: ContractInst[Tx.Value[ContractId]] => Unit) = {\n\n    // Once we support multi-party reads, we can drop this restriction.\n    val committer =\n      if (committers.size == 1) committers.head else crashTooManyCommitters(committers)"
  },
  {
    "id" : "5451a11c-a0d6-4789-a3e6-426e298f8040",
    "prId" : 6433,
    "comments" : [
      {
        "id" : "2f967db8-be06-407d-b9a4-ef222e5bbac4",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Wasn't `cb` clear enough? ðŸ˜‰\r\nDid you figure out what it stands for?",
        "createdAt" : "2020-06-22T08:07:09Z",
        "updatedAt" : "2020-06-22T08:13:47Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "92796096-7e2c-4667-9e4f-67a5597c8dff",
        "parentId" : "2f967db8-be06-407d-b9a4-ef222e5bbac4",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "`callback` presumably but that isnâ€™t much more useful than `cb` so Iâ€™ve renamed it to what it actually does :slightly_smiling_face: ",
        "createdAt" : "2020-06-22T08:17:42Z",
        "updatedAt" : "2020-06-22T08:17:42Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "135acf30-2e90-447f-8d13-a7aa9daa10d1",
        "parentId" : "2f967db8-be06-407d-b9a4-ef222e5bbac4",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Yeah, `callback` sounds very reasonable. Thanks. I haven't done enough JS yet to make the word omnipresent in my head. And I agree that `callback` carries almost as little information as `cb`.",
        "createdAt" : "2020-06-22T08:54:23Z",
        "updatedAt" : "2020-06-22T08:54:23Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9dbb098cbf4f272279020897d81b39029f9b2d73",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +193,197 @@      gk: GlobalKey,\n      committers: Set[Party],\n      canContinue: SKeyLookupResult => Boolean,\n  ): Unit = {\n    val committer ="
  },
  {
    "id" : "b0a0e2a7-7bfe-40f2-9c0f-68e301642b3e",
    "prId" : 5814,
    "comments" : [
      {
        "id" : "1daf0b92-6d1d-469c-a8dd-4e15f3ad0a16",
        "parentId" : null,
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "I don't see a consequence for this match branch.",
        "createdAt" : "2020-05-04T07:04:08Z",
        "updatedAt" : "2020-05-04T13:45:39Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "77cb6ae5-e0d9-4d2a-a14b-c30a43699d71",
        "parentId" : "1daf0b92-6d1d-469c-a8dd-4e15f3ad0a16",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "This is legal scala syntax. It means the same as having `()` on RHS of the `=>`\r\nIt's used all over the scala code base.\r\nBut I agree, I generally prefer when code is explicit with `()`, but I missed it here.",
        "createdAt" : "2020-05-04T10:02:59Z",
        "updatedAt" : "2020-05-04T13:45:39Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9908665f-a4b6-49d0-9a2f-d7da258589b8",
        "parentId" : "1daf0b92-6d1d-469c-a8dd-4e15f3ad0a16",
        "author" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "body" : "Since that code has changed anyway, can we please add the `()` here.",
        "createdAt" : "2020-05-04T12:38:36Z",
        "updatedAt" : "2020-05-04T13:45:39Z",
        "lastEditedBy" : {
          "login" : "hurryabit",
          "name" : "Martin Huschenbett",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/11665611?u=7dbd00d5e7ea53919ed31dc4200f602ebca91c8f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9ac5a910-1511-4c3a-8bda-f596b14ca3d4",
        "parentId" : "1daf0b92-6d1d-469c-a8dd-4e15f3ad0a16",
        "author" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "body" : "ok",
        "createdAt" : "2020-05-04T13:46:21Z",
        "updatedAt" : "2020-05-04T13:46:21Z",
        "lastEditedBy" : {
          "login" : "nickchapman-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/49153372?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8e68cc9359abaf460f448f09c616975c2935f54b",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +52,56 @@      val res: SResult = machine.run()\n      res match {\n        case SResultFinalValue(_) =>\n          ()\n        case SResultError(err) =>"
  }
]