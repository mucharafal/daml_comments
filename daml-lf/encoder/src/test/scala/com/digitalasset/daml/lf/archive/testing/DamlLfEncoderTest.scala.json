[
  {
    "id" : "5357de02-4d54-4682-842a-8e92f42127ae",
    "prId" : 3748,
    "comments" : [
      {
        "id" : "771722d8-f0bf-4167-b118-a221f39d72ee",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Maybe just inline this destructuring.",
        "createdAt" : "2019-12-05T15:15:09Z",
        "updatedAt" : "2019-12-06T10:11:11Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "863b0aca-eb50-4198-b6b4-58651f48b00c",
        "parentId" : "771722d8-f0bf-4167-b118-a221f39d72ee",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "No, don't do that. Even exhaustive patterns on the LHS of `<-` entail a `withFilter` call. We separate destructuring pretty universally for this reason.",
        "createdAt" : "2019-12-05T16:32:28Z",
        "updatedAt" : "2019-12-06T10:11:11Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "419fa03602f3ab113c4b741ba8162fa0b45ec69d",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +75,79 @@    for {\n      pkgWithId <- dar.main +: dar.dependencies\n      (_, pkg) = pkgWithId\n      version = pkg.getMinor\n      internedStrings = pkg.getDamlLf1.getInternedStringsList.asScala.toArray"
  },
  {
    "id" : "0887f3dc-3bde-4972-a422-6a69eea46853",
    "prId" : 3748,
    "comments" : [
      {
        "id" : "4eca6107-3033-4821-9af8-78cdfea6399d",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "This is going to break once we reach 1.10, i.e., \"10\" < \"7\".",
        "createdAt" : "2019-12-05T16:55:00Z",
        "updatedAt" : "2019-12-06T10:11:11Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "623c2b0a-72f0-4471-987e-e96158d4483e",
        "parentId" : "4eca6107-3033-4821-9af8-78cdfea6399d",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Thanks. I will fix that. ",
        "createdAt" : "2019-12-05T19:09:50Z",
        "updatedAt" : "2019-12-06T10:11:11Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6b0be81b-b466-4b2c-ac52-3d4e21eb915a",
        "parentId" : "4eca6107-3033-4821-9af8-78cdfea6399d",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2019-12-06T09:57:13Z",
        "updatedAt" : "2019-12-06T10:11:11Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0ce2002e-d717-45fd-b4f8-535691cb2a6e",
        "parentId" : "4eca6107-3033-4821-9af8-78cdfea6399d",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Great!",
        "createdAt" : "2019-12-06T10:08:56Z",
        "updatedAt" : "2019-12-06T10:19:49Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "419fa03602f3ab113c4b741ba8162fa0b45ec69d",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +84,88 @@        mod =>\n          if (preInternalizationVersions(version))\n            mod.getNameDname.getSegmentsList.asScala\n          else\n            dottedNames(mod.getNameInternedDname)"
  },
  {
    "id" : "66861d29-870a-42f3-a49a-590c580ad16e",
    "prId" : 3748,
    "comments" : [
      {
        "id" : "5b827433-9905-48dd-9f0a-edd5b00b8045",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Would it make sense to check the major version as well here? I'm not familiar with the LF versioning scheme hence this may be an irrelevant question. If we indeed need to check the major version I'd suggest to change the naming to avoid confusion (e.g., `preInternalizationVersions` -> `preInternalizationMinorVersions`).",
        "createdAt" : "2019-12-06T10:14:02Z",
        "updatedAt" : "2019-12-06T10:19:49Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "419fa03602f3ab113c4b741ba8162fa0b45ec69d",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +83,87 @@      segments <- pkg.getDamlLf1.getModulesList.asScala.map(\n        mod =>\n          if (preInternalizationVersions(version))\n            mod.getNameDname.getSegmentsList.asScala\n          else"
  },
  {
    "id" : "3f1cd637-c58a-414e-8e43-a346b3a5900c",
    "prId" : 3748,
    "comments" : [
      {
        "id" : "8cc7c153-cc48-4517-9d7f-09c154a75a20",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "An alternative to this enumeration may be to `map` over the original module names and add the postfix (if it is a uniform one).",
        "createdAt" : "2019-12-06T10:18:08Z",
        "updatedAt" : "2019-12-06T10:19:49Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "419fa03602f3ab113c4b741ba8162fa0b45ec69d",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +27,31 @@\n      val modules_1_0 = Set[DottedName](\n        \"UnitMod\",\n        \"BoolMod\",\n        \"Int64Mod\","
  }
]