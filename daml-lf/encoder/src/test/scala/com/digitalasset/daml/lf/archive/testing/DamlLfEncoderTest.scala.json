[
  {
    "id" : "7b513687-4e5c-4dbe-8f06-96219fb52eca",
    "prId" : 3748,
    "comments" : [
      {
        "id" : "e2769938-c58d-47f4-9b65-b82d9ca27b3e",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "`\"modues\"`?",
        "createdAt" : "2019-12-05T15:13:27Z",
        "updatedAt" : "2019-12-06T10:11:11Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "704f52c3-ca9a-4109-86d3-cf0657e5bc84",
        "parentId" : "e2769938-c58d-47f4-9b65-b82d9ca27b3e",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2019-12-06T09:57:00Z",
        "updatedAt" : "2019-12-06T10:11:11Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "419fa03602f3ab113c4b741ba8162fa0b45ec69d",
    "line" : null,
    "diffHunk" : "@@ -26,29 +26,31 @@ class DamlLfEncoderTest\n     \"be readable\" in {\n \n       val modules_1_0 = Set[DottedName](\n-        \"Bool\",\n-        \"Date\",\n-        \"Decimal\",\n-        \"Int64\",\n-        \"List\",\n-        \"Party\",\n-        \"Record\",\n-        \"Text\",\n-        \"Timestamp\",\n-        \"Unit\",\n-        \"Variant\")\n-\n-      val modules_1_1 = modules_1_0 + \"Option\"\n-      val modules_1_3 = modules_1_1 + \"TextMap\"\n-      val module_1_7 = modules_1_3 + \"Enum\"\n-      val modules_1_dev = module_1_7\n+        \"UnitMod\",\n+        \"BoolMod\",\n+        \"Int64Mod\",\n+        \"TextMod\",\n+        \"DecimalMod\",\n+        \"DateMod\",\n+        \"TimestampMod\",\n+        \"ListMod\",\n+        \"PartyMod\",\n+        \"RecordMod\",\n+        \"VariantMod\")\n+\n+      val modules_1_1 = modules_1_0 + \"OptionMod\"\n+      val modules_1_3 = modules_1_1 + \"TextMapMod\"\n+      val modules_1_6 = modules_1_3 + \"EnumMod\"\n+      val modules_1_7 = modules_1_6 + \"NumericMod\"\n+      val modules_1_dev = modules_1_7 + \"GenMapMod\"\n \n       val versions = Table(\n         \"versions\" -> \"modues\","
  },
  {
    "id" : "851ce431-197c-49db-b991-5981dca0dc9f",
    "prId" : 3748,
    "comments" : [
      {
        "id" : "4fdc6c37-3dff-4bb6-aa57-22b99fbf5299",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "body" : "Maybe just inline this destructuring.",
        "createdAt" : "2019-12-05T15:15:09Z",
        "updatedAt" : "2019-12-06T10:11:11Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/47582?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bf35a70b-1fbc-43cd-81e9-28e7d03b96c6",
        "parentId" : "4fdc6c37-3dff-4bb6-aa57-22b99fbf5299",
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "No, don't do that. Even exhaustive patterns on the LHS of `<-` entail a `withFilter` call. We separate destructuring pretty universally for this reason.",
        "createdAt" : "2019-12-05T16:32:28Z",
        "updatedAt" : "2019-12-06T10:11:11Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "419fa03602f3ab113c4b741ba8162fa0b45ec69d",
    "line" : 60,
    "diffHunk" : "@@ -71,7 +73,18 @@ class DamlLfEncoderTest\n     for {\n       pkgWithId <- dar.main +: dar.dependencies\n       (_, pkg) = pkgWithId"
  },
  {
    "id" : "97aa0042-f022-465e-9a0c-80628cc7fad5",
    "prId" : 3748,
    "comments" : [
      {
        "id" : "9185c19e-7973-4740-ac43-424f1f35b3e2",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "This is going to break once we reach 1.10, i.e., \"10\" < \"7\".",
        "createdAt" : "2019-12-05T16:55:00Z",
        "updatedAt" : "2019-12-06T10:11:11Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d6dd9074-6dc6-48fe-803b-b9fb2c4ec517",
        "parentId" : "9185c19e-7973-4740-ac43-424f1f35b3e2",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "Thanks. I will fix that. ",
        "createdAt" : "2019-12-05T19:09:50Z",
        "updatedAt" : "2019-12-06T10:11:11Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "17cdaf4b-5b16-4350-b029-43c3d268ff32",
        "parentId" : "9185c19e-7973-4740-ac43-424f1f35b3e2",
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2019-12-06T09:57:13Z",
        "updatedAt" : "2019-12-06T10:11:11Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4ee65207-367d-492c-89d1-abe24aac8f5a",
        "parentId" : "9185c19e-7973-4740-ac43-424f1f35b3e2",
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Great!",
        "createdAt" : "2019-12-06T10:08:56Z",
        "updatedAt" : "2019-12-06T10:19:49Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "419fa03602f3ab113c4b741ba8162fa0b45ec69d",
    "line" : 70,
    "diffHunk" : "@@ -71,7 +73,18 @@ class DamlLfEncoderTest\n     for {\n       pkgWithId <- dar.main +: dar.dependencies\n       (_, pkg) = pkgWithId\n-      segments <- pkg.getDamlLf1.getModulesList.asScala.map(_.getName.getSegmentsList.asScala)\n+      version = pkg.getMinor\n+      internedStrings = pkg.getDamlLf1.getInternedStringsList.asScala.toArray\n+      dottedNames = pkg.getDamlLf1.getInternedDottedNamesList.asScala.map(\n+        _.getSegmentsInternedStrList.asScala.map(internedStrings(_))\n+      )\n+      segments <- pkg.getDamlLf1.getModulesList.asScala.map(\n+        mod =>\n+          if (version < \"7\")\n+            mod.getNameDname.getSegmentsList.asScala"
  },
  {
    "id" : "222cfed0-d2aa-42b9-abea-5091a3b6b784",
    "prId" : 3748,
    "comments" : [
      {
        "id" : "e0bd1834-d13c-49ce-84f5-9bce4f6b3f1b",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "Would it make sense to check the major version as well here? I'm not familiar with the LF versioning scheme hence this may be an irrelevant question. If we indeed need to check the major version I'd suggest to change the naming to avoid confusion (e.g., `preInternalizationVersions` -> `preInternalizationMinorVersions`).",
        "createdAt" : "2019-12-06T10:14:02Z",
        "updatedAt" : "2019-12-06T10:19:49Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "419fa03602f3ab113c4b741ba8162fa0b45ec69d",
    "line" : 69,
    "diffHunk" : "@@ -67,12 +69,26 @@ class DamlLfEncoderTest\n \n   }\n \n-  private def getModules(dar: Dar[(PackageId, DamlLf.ArchivePayload)]) =\n+  private val preInternalizationVersions = List.range(0, 7).map(_.toString).toSet\n+\n+  private def getModules(dar: Dar[(PackageId, DamlLf.ArchivePayload)]) = {\n     for {\n       pkgWithId <- dar.main +: dar.dependencies\n       (_, pkg) = pkgWithId\n-      segments <- pkg.getDamlLf1.getModulesList.asScala.map(_.getName.getSegmentsList.asScala)\n+      version = pkg.getMinor\n+      internedStrings = pkg.getDamlLf1.getInternedStringsList.asScala.toArray\n+      dottedNames = pkg.getDamlLf1.getInternedDottedNamesList.asScala.map(\n+        _.getSegmentsInternedStrList.asScala.map(internedStrings(_))\n+      )\n+      segments <- pkg.getDamlLf1.getModulesList.asScala.map(\n+        mod =>\n+          if (preInternalizationVersions(version))"
  },
  {
    "id" : "a23d6b47-a3ad-4972-b2bd-b94952147631",
    "prId" : 3748,
    "comments" : [
      {
        "id" : "2a703d45-1991-4698-8205-d1dd78810fb7",
        "parentId" : null,
        "author" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "body" : "An alternative to this enumeration may be to `map` over the original module names and add the postfix (if it is a uniform one).",
        "createdAt" : "2019-12-06T10:18:08Z",
        "updatedAt" : "2019-12-06T10:19:49Z",
        "lastEditedBy" : {
          "login" : "miklos-da",
          "name" : "Miklos",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/57664299?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "419fa03602f3ab113c4b741ba8162fa0b45ec69d",
    "line" : 20,
    "diffHunk" : "@@ -26,29 +26,31 @@ class DamlLfEncoderTest\n     \"be readable\" in {\n \n       val modules_1_0 = Set[DottedName](\n-        \"Bool\",\n-        \"Date\",\n-        \"Decimal\",\n-        \"Int64\",\n-        \"List\",\n-        \"Party\",\n-        \"Record\",\n-        \"Text\",\n-        \"Timestamp\",\n-        \"Unit\",\n-        \"Variant\")\n-\n-      val modules_1_1 = modules_1_0 + \"Option\"\n-      val modules_1_3 = modules_1_1 + \"TextMap\"\n-      val module_1_7 = modules_1_3 + \"Enum\"\n-      val modules_1_dev = module_1_7\n+        \"UnitMod\","
  }
]