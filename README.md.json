[
  {
    "id" : "79f3d1b5-37f7-4088-95b6-b8987c351aa7",
    "prId" : 6546,
    "comments" : [
      {
        "id" : "e28aa1c6-1cd5-4a9e-bfb5-2d7e06cce999",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "```suggestion\r\nOn macOS at least, it looks like our setup does not always properly close the\r\nresources PostgreSQL uses. After a number of test runs, you may encounter an\r\nerror message along the lines of:\r\n```",
        "createdAt" : "2020-06-30T14:49:29Z",
        "updatedAt" : "2020-06-30T14:54:14Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "3ec550b108a71c2656a3877a8ce58879aee10635",
    "line" : null,
    "diffHunk" : "@@ -112,6 +112,42 @@ If you work with multiple copies of this repository, you can point all of them t\n by overwriting these configs in either a `.bazelrc.local` file in each copy, or a `~/.bazelrc` file\n in your home directory.\n \n+### Shared memory segment issues\n+\n+On macOS at least, it looks like our setup is not always properly closing all\n+the resources PostgreSQL uses. After a number of test runs, you may encounter\n+an error message along the lines of:"
  },
  {
    "id" : "4b88b52b-c214-4cef-9614-111625d3acde",
    "prId" : 6400,
    "comments" : [
      {
        "id" : "eef67a9d-ffaf-4085-934c-33acc175a571",
        "parentId" : null,
        "author" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "body" : "How do you feel about adding `-S` to this so it shows an error on failure?",
        "createdAt" : "2020-06-18T08:24:25Z",
        "updatedAt" : "2020-06-18T08:25:19Z",
        "lastEditedBy" : {
          "login" : "SamirTalwar-DA",
          "name" : "Samir Talwar",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/60356447?u=f6cdfccc6ea4254bd7c212099bbac2c27a00a28c&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "89bd8449-435a-4eb8-888b-f929b22c6997",
        "parentId" : "eef67a9d-ffaf-4085-934c-33acc175a571",
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "changed.",
        "createdAt" : "2020-06-18T08:27:10Z",
        "updatedAt" : "2020-06-18T08:27:10Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "586b65b2789ede25e6a3c47d12ac6c853c3fe767",
    "line" : null,
    "diffHunk" : "@@ -40,7 +40,7 @@ Our builds require various development dependencies (e.g. Java, Bazel, Python),\n \n On Linux and Mac `dev-env` can be installed with:\n \n-1. Install Nix by running: `bash <(curl https://nixos.org/nix/install)`\n+1. Install Nix by running: `bash <(curl -sfL https://nixos.org/nix/install)`"
  },
  {
    "id" : "79757698-c27a-45ca-997c-f89be5cd7094",
    "prId" : 3939,
    "comments" : [
      {
        "id" : "3cdfe2b8-9a73-49d8-9268-c90533f08a9d",
        "parentId" : null,
        "author" : {
          "login" : "dasormeter",
          "name" : "Brian Healey",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25179017?u=80e3160e2447461bd5847fe928a3e6fa9f6793fc&v=4"
        },
        "body" : "whitespace change",
        "createdAt" : "2020-01-02T17:43:31Z",
        "updatedAt" : "2020-01-02T18:44:28Z",
        "lastEditedBy" : {
          "login" : "dasormeter",
          "name" : "Brian Healey",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25179017?u=80e3160e2447461bd5847fe928a3e6fa9f6793fc&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2475bfdb-4ef2-478f-b2cc-b2ca58b34309",
        "parentId" : "3cdfe2b8-9a73-49d8-9268-c90533f08a9d",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Reverted.",
        "createdAt" : "2020-01-02T17:52:30Z",
        "updatedAt" : "2020-01-02T18:44:28Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1b698a6a87b89d64b7cf6647158cba5f8779d7f6",
    "line" : null,
    "diffHunk" : "@@ -17,7 +17,7 @@ This repository hosts all code for the [DAML smart contract language and SDK](ht\n To download DAML, follow [the installation instructions](https://docs.daml.com/getting-started/installation.html).\n Once installed, to try it out, follow the [quickstart guide](https://docs.daml.com/getting-started/quickstart.html).\n \n-If you have questions about how to use DAML or how to build DAML-based solutions, please ask them \n+If you have questions about how to use DAML or how to build DAML-based solutions, please ask them"
  },
  {
    "id" : "a3284326-089b-4b23-8f00-5d63cc544f84",
    "prId" : 3939,
    "comments" : [
      {
        "id" : "9ea3a868-f9e2-4c1f-a058-bc92700de732",
        "parentId" : null,
        "author" : {
          "login" : "dasormeter",
          "name" : "Brian Healey",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25179017?u=80e3160e2447461bd5847fe928a3e6fa9f6793fc&v=4"
        },
        "body" : "whitespace change",
        "createdAt" : "2020-01-02T17:43:46Z",
        "updatedAt" : "2020-01-02T18:44:28Z",
        "lastEditedBy" : {
          "login" : "dasormeter",
          "name" : "Brian Healey",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/25179017?u=80e3160e2447461bd5847fe928a3e6fa9f6793fc&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b88bd322-282e-4ae4-b275-473a24a7d7eb",
        "parentId" : "9ea3a868-f9e2-4c1f-a058-bc92700de732",
        "author" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "body" : "Reverted.",
        "createdAt" : "2020-01-02T17:52:35Z",
        "updatedAt" : "2020-01-02T18:44:28Z",
        "lastEditedBy" : {
          "login" : "garyverhaegen-da",
          "name" : "Gary Verhaegen",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/45561385?u=eb17386ea66edbd0cd449e33b2d291bf5a1b51cb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1b698a6a87b89d64b7cf6647158cba5f8779d7f6",
    "line" : null,
    "diffHunk" : "@@ -71,7 +71,7 @@ We have a single script to build most targets and run the tests. On Linux and Ma\n \n To just build do `bazel build //...`, and to just test do `bazel test //...`. To read more about Bazel and how to use it, see [the Bazel site](https://bazel.build).\n \n-On Mac if building is causing trouble complaining about missing nix packages, you can try first running `nix-build -A tools -A cached nix` repeatedly until it completes without error. \n+On Mac if building is causing trouble complaining about missing nix packages, you can try first running `nix-build -A tools -A cached nix` repeatedly until it completes without error."
  },
  {
    "id" : "d60ba7e9-f1f5-46ae-9666-46796d9a5219",
    "prId" : 976,
    "comments" : [
      {
        "id" : "e5599c5b-34b5-4b8d-9988-3e45e18210dc",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "```suggestion\r\ntar xvf .\\bazel-genfiles\\release\\sdk-release-tarball.tar.gz\r\n```\r\n:trollface: ",
        "createdAt" : "2019-05-07T13:01:18Z",
        "updatedAt" : "2019-05-07T13:01:26Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "604e6e67-e418-493b-9ed3-648c7082e633",
        "parentId" : "e5599c5b-34b5-4b8d-9988-3e45e18210dc",
        "author" : {
          "login" : "DavidM-D",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/11191170?u=3edc6e08b7c7f0d980a6dc81e5a2ce49dd1ef0f0&v=4"
        },
        "body" : "Probably warrants it's own PR, this is big enough as it is",
        "createdAt" : "2019-05-07T13:02:26Z",
        "updatedAt" : "2019-05-07T13:02:38Z",
        "lastEditedBy" : {
          "login" : "DavidM-D",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/11191170?u=3edc6e08b7c7f0d980a6dc81e5a2ce49dd1ef0f0&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6596610bd9f49108d49adc040e873196142705c2",
    "line" : 5,
    "diffHunk" : "@@ -81,7 +81,7 @@ On Windows:\n \n ```\n bazel build //release:sdk-release-tarball\n-tar -vxf .\\bazel-genfiles\\release\\sdk-release-tarball.tar.z\n+tar -vxf .\\bazel-genfiles\\release\\sdk-release-tarball.tar.gz"
  },
  {
    "id" : "a058450f-f91b-4b84-9aa4-efdcd9b4115a",
    "prId" : 688,
    "comments" : [
      {
        "id" : "11528094-9185-4d43-bb71-1a2c8e23259b",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "We probably also want a note here.",
        "createdAt" : "2019-04-25T09:34:10Z",
        "updatedAt" : "2019-04-25T09:36:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3c16f2f2-a5ca-404d-93f1-f93bdf469670",
        "parentId" : "11528094-9185-4d43-bb71-1a2c8e23259b",
        "author" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "body" : "Done",
        "createdAt" : "2019-04-25T09:36:54Z",
        "updatedAt" : "2019-04-25T09:36:54Z",
        "lastEditedBy" : {
          "login" : "neil-da",
          "name" : "Neil Mitchell",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/35463327?u=0eb1719958bc6e449ec5e7df3a312fa566f5055d&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "780023be500cf072fdd8af3f7283882362231e2c",
    "line" : 66,
    "diffHunk" : "@@ -14,57 +12,80 @@ SPDX-License-Identifier: Apache-2.0\n This repository hosts all code for the [DAML smart contract language and SDK](https://daml.com/), originally created by\n [Digital Asset](https://www.digitalasset.com). DAML is an open-source smart contract language for building future-proof distributed applications on a safe, privacy-aware runtime. The DAML SDK is a set of tools to help you develop applications based on DAML.\n \n-## To start using DAML\n+## Using DAML\n \n-To download DAML, follow [the installation instructions on docs.daml.com](https://docs.daml.com/getting-started/installation.html).\n-To try out using it, follow the [quickstart guide](https://docs.daml.com/getting-started/quickstart.html).\n+To download DAML, follow [the installation instructions](https://docs.daml.com/getting-started/installation.html).\n+Once installed, to try it out, follow the [quickstart guide](https://docs.daml.com/getting-started/quickstart.html).\n \n If you have questions about how to use DAML or how to build DAML-based solutions, please ask\n them on [StackOverflow using the `daml` tag](https://stackoverflow.com/tags/daml).\n \n-## To start contributing to the DAML SDK\n+## Contribuing to DAML\n \n-We warmly welcome [contributions](./CONTRIBUTING.md). To get set up for contributing to the SDK, follow these instructions:\n+We warmly welcome [contributions](./CONTRIBUTING.md). If you are looking for ideas on how to contribute, please browse our\n+[issues](https://github.com/digital-asset/daml/issues). To build and test DAML:\n \n ### 1. Clone this repository\n \n-`git clone git@github.com:digital-asset/daml.git`.\n+```\n+git clone git@github.com:digital-asset/daml.git\n+cd daml\n+```\n+\n+### 2. Set up the development dependencies\n \n-### 2. Set up the DA Development Environment (\"`dev-env`\")\n+Our builds require various development dependencies (e.g. Java, Bazel, Python), provided by a tool called `dev-env`.\n \n-`dev-env` provides dependencies required during the build phase, like Java, Bazel, and Python\n-for some tooling scripts. The code itself is built using Bazel.\n+#### Linux and Mac\n \n-#### Set up `dev-env` on Linux or macOS\n+On Linux and Mac `dev-env` can be installed with:\n \n-1. Use `cd daml` to switch into the new `daml` repository you just cloned\n-2. Install Nix by running: `bash <(curl https://nixos.org/nix/install)`\n-3. Enter `dev-env` by running: `eval \"$(dev-env/bin/dade assist)\"`\n+1. Install Nix by running: `bash <(curl https://nixos.org/nix/install)`\n+2. Enter `dev-env` by running: `eval \"$(dev-env/bin/dade assist)\"`\n \n If you don't want to enter `dev-env` manually each time using `eval \"$(dev-env/bin/dade assist)\"`,\n you can also install [direnv](https://direnv.net). This repo already provides a `.envrc`\n file, with an option to add more in a `.envrc.private` file.\n \n-#### Set up `dev-env` on Windows\n+#### Windows"
  },
  {
    "id" : "2a1bd62a-e2f4-40b6-9746-f09ec4e06d6a",
    "prId" : 688,
    "comments" : [
      {
        "id" : "5a3a1248-ef99-45c6-9e22-2873774d0bd3",
        "parentId" : null,
        "author" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "body" : "Can we make this a bit more visible, e.g., by moving it at the beginning of the `On Windows` section? I’d rather spend our time on fixing issues than on explaining the same issues over and over because people expect it to be fully functional.",
        "createdAt" : "2019-04-25T09:34:15Z",
        "updatedAt" : "2019-04-25T09:36:39Z",
        "lastEditedBy" : {
          "login" : "cocreature",
          "name" : "Moritz Kiefer",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1313584?u=7864421488a876940b33e865c4b0091925617ca7&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "780023be500cf072fdd8af3f7283882362231e2c",
    "line" : 117,
    "diffHunk" : "@@ -14,57 +12,80 @@ SPDX-License-Identifier: Apache-2.0\n This repository hosts all code for the [DAML smart contract language and SDK](https://daml.com/), originally created by\n [Digital Asset](https://www.digitalasset.com). DAML is an open-source smart contract language for building future-proof distributed applications on a safe, privacy-aware runtime. The DAML SDK is a set of tools to help you develop applications based on DAML.\n \n-## To start using DAML\n+## Using DAML\n \n-To download DAML, follow [the installation instructions on docs.daml.com](https://docs.daml.com/getting-started/installation.html).\n-To try out using it, follow the [quickstart guide](https://docs.daml.com/getting-started/quickstart.html).\n+To download DAML, follow [the installation instructions](https://docs.daml.com/getting-started/installation.html).\n+Once installed, to try it out, follow the [quickstart guide](https://docs.daml.com/getting-started/quickstart.html).\n \n If you have questions about how to use DAML or how to build DAML-based solutions, please ask\n them on [StackOverflow using the `daml` tag](https://stackoverflow.com/tags/daml).\n \n-## To start contributing to the DAML SDK\n+## Contribuing to DAML\n \n-We warmly welcome [contributions](./CONTRIBUTING.md). To get set up for contributing to the SDK, follow these instructions:\n+We warmly welcome [contributions](./CONTRIBUTING.md). If you are looking for ideas on how to contribute, please browse our\n+[issues](https://github.com/digital-asset/daml/issues). To build and test DAML:\n \n ### 1. Clone this repository\n \n-`git clone git@github.com:digital-asset/daml.git`.\n+```\n+git clone git@github.com:digital-asset/daml.git\n+cd daml\n+```\n+\n+### 2. Set up the development dependencies\n \n-### 2. Set up the DA Development Environment (\"`dev-env`\")\n+Our builds require various development dependencies (e.g. Java, Bazel, Python), provided by a tool called `dev-env`.\n \n-`dev-env` provides dependencies required during the build phase, like Java, Bazel, and Python\n-for some tooling scripts. The code itself is built using Bazel.\n+#### Linux and Mac\n \n-#### Set up `dev-env` on Linux or macOS\n+On Linux and Mac `dev-env` can be installed with:\n \n-1. Use `cd daml` to switch into the new `daml` repository you just cloned\n-2. Install Nix by running: `bash <(curl https://nixos.org/nix/install)`\n-3. Enter `dev-env` by running: `eval \"$(dev-env/bin/dade assist)\"`\n+1. Install Nix by running: `bash <(curl https://nixos.org/nix/install)`\n+2. Enter `dev-env` by running: `eval \"$(dev-env/bin/dade assist)\"`\n \n If you don't want to enter `dev-env` manually each time using `eval \"$(dev-env/bin/dade assist)\"`,\n you can also install [direnv](https://direnv.net). This repo already provides a `.envrc`\n file, with an option to add more in a `.envrc.private` file.\n \n-#### Set up `dev-env` on Windows\n+#### Windows\n+\n+On Windows you need to enable long file paths by running the following command in an admin powershell:\n+\n+```\n+Set-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\FileSystem' -Name LongPathsEnabled -Type DWord -Value 1\n+```\n+\n+Then start `dev-env` from PowerShell with:\n+\n+```\n+.\\dev-env\\windows\\bin\\dadew.ps1 install\n+.\\dev-env\\windows\\bin\\dadew.ps1 sync\n+.\\dev-env\\windows\\bin\\dadew.ps1 enable\n+```\n+\n+In all new PowerShell processes started, you need to repeat the `enable` step.\n \n-We're working on Windows support (for both end users and developers), but it's not ready yet.\n-[Sign up](https://hub.daml.com/sdk/windows) to be notified when it is available.\n+### 3. First build and test\n \n-### 3. Build the source code\n+We have a single script to build most targets and run the tests. On Linux and Mac run `./build.sh`. On Windows run `.\\build.ps1`. Note that these scripts may take over an hour the first time.\n \n-Run `bazel build //...`\n+To just build do `bazel build //...`, and to just test do `bazel test //...`. To read more about Bazel and how to use it, see [the Bazel site](https://bazel.build).\n \n-This builds the code, and will likely take an hour or more.\n+### 4. Installing a local copy\n \n-Now you've built, rebuilding the code after a change will be much faster because Bazel caches\n-unchanged build artefacts. To read more about Bazel and how to use it, see [the Bazel site](https://bazel.build).\n+On Linux and Mac run `da-sdk-head` which installs a version of the SDK with version number `0.0.0`. Set the `version:` field in any DAML project to 0.0.0 and it will use the locally installed one.\n \n-To run the tests, run `bazel test //...`\n+On Windows:\n \n-### 4. Contribute!\n+```\n+bazel build //release:sdk-release-tarball\n+tar -vxf .\\bazel-genfiles\\release\\sdk-release-tarball.tar.z\n+cd sdk-*\n+daml\\daml.exe install . --activate\n+```\n \n-If you are looking for ideas on how to contribute, please browse our\n-[issues](https://github.com/digital-asset/daml/issues).\n+That should tell you what to put in the path, something along the lines of `C:\\Users\\admin\\AppData\\Roaming\\daml\\bin`.\n+Note that the Windows build is not yet fully functional."
  },
  {
    "id" : "75b4b755-daf9-4fab-91aa-d3246d4464a5",
    "prId" : 245,
    "comments" : [
      {
        "id" : "6bff41e7-2faf-4e43-90e1-626de977b989",
        "parentId" : null,
        "author" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "body" : "```suggestion\r\n1. Use `cd daml` to switch into the new `daml` repository you just cloned\r\n```\r\nMaybe even clearer on what specific command needs to be executed? Your choice :smile:",
        "createdAt" : "2019-04-05T08:43:00Z",
        "updatedAt" : "2019-04-05T11:03:00Z",
        "lastEditedBy" : {
          "login" : "moritzkiefer-da",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/45630097?u=88b1986f5b2d192d97f54101aaa165147493ebdc&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "06fc6d0e-0ea8-46bb-81c2-dfb623ca2f84",
        "parentId" : "6bff41e7-2faf-4e43-90e1-626de977b989",
        "author" : {
          "login" : "bethaitman-da",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/42940582?u=89cc5505d9086a7a0f27b1bd24b4ff45be679e07&v=4"
        },
        "body" : "Removing ambiguity is the name of the game here - good shout",
        "createdAt" : "2019-04-05T08:53:01Z",
        "updatedAt" : "2019-04-05T11:03:00Z",
        "lastEditedBy" : {
          "login" : "bethaitman-da",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/42940582?u=89cc5505d9086a7a0f27b1bd24b4ff45be679e07&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "17eed51f7f520c5b89e0c5b7ace01ea51c9d59a2",
    "line" : null,
    "diffHunk" : "@@ -31,8 +31,9 @@ for some tooling scripts. The code itself is built using Bazel.\n \n #### Set up `dev-env` on Linux or macOS\n \n-1. Install Nix: `bash <(curl https://nixos.org/nix/install)`\n-2. Enter `dev-env`: `eval \"$(dev-env/bin/dade assist)\"`\n+1. `cd` into the new `daml` repository you just cloned"
  },
  {
    "id" : "ed4e706c-4e97-4e4a-b2f2-360d238d1063",
    "prId" : 228,
    "comments" : [
      {
        "id" : "2da7b9f4-693f-4733-81ef-5c1b9a8457a5",
        "parentId" : null,
        "author" : {
          "login" : "bethaitman-da",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/42940582?u=89cc5505d9086a7a0f27b1bd24b4ff45be679e07&v=4"
        },
        "body" : "Missing a full stop\r\n```suggestion\r\n[Digital Asset](https://www.digitalasset.com). DAML is an open-source smart contract language for building future-proof distributed applications on a safe, privacy-aware runtime.\r\n```",
        "createdAt" : "2019-04-04T20:17:22Z",
        "updatedAt" : "2019-04-04T21:19:26Z",
        "lastEditedBy" : {
          "login" : "bethaitman-da",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/42940582?u=89cc5505d9086a7a0f27b1bd24b4ff45be679e07&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9aa43c1dc773a96a571b6ff021c89e9f25d04cdc",
    "line" : null,
    "diffHunk" : "@@ -5,8 +5,8 @@ SPDX-License-Identifier: Apache-2.0\n \n # Welcome to the DAML repository!\n \n-This repository hosts all code for the DAML smart contract language, originally created by\n-[Digital Asset](https://www.digitalasset.com).\n+This repository hosts all code for the [DAML smart contract language](https://daml.com/), originally created by\n+[Digital Asset](https://www.digitalasset.com). DAML is an open-source smart contract language for building future-proof distributed applications on a safe, privacy-aware runtime"
  },
  {
    "id" : "d794d9a4-e2d3-4a0c-8185-507084443571",
    "prId" : 196,
    "comments" : [
      {
        "id" : "2b845673-5f56-4eb4-87f1-32c0f100efbe",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "missing \"the\"?\r\n```suggestion\r\n`dev-env` provides dependencies required during the build phase, like Java, Bazel, and Python\r\n```",
        "createdAt" : "2019-04-04T11:41:09Z",
        "updatedAt" : "2019-04-04T12:58:50Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "940e5b216f3d1f13139153fce1c46b633cc4fd23",
    "line" : null,
    "diffHunk" : "@@ -5,57 +5,70 @@ SPDX-License-Identifier: Apache-2.0\n \n # Welcome to the DAML repository!\n \n-This repository hosts all code for the DAML smart contract language, originally created by [Digital Asset](https://www.digitalasset.com).\n+This repository hosts all code for the DAML smart contract language, originally created by\n+[Digital Asset](https://www.digitalasset.com).\n \n ## To start using DAML\n \n-See our documentation at [docs.daml.com](https://docs.daml.com).\n+To download DAML, follow [the installation instructions on docs.daml.com](https://docs.daml.com/getting-started/installation.html).\n+To try out using it, follow the [quickstart guide](https://docs.daml.com/getting-started/quickstart.html).\n \n-Download the DAML SDK Developer Preview at [https://www.daml.com](https://www.daml.com).\n-\n-If you have questions about how to use DAML or how to build DAML-based solutions, please ask them on [StackOverflow using the `daml` tag](https://stackoverflow.com/tags/daml).\n+If you have questions about how to use DAML or how to build DAML-based solutions, please ask\n+them on [StackOverflow using the `daml` tag](https://stackoverflow.com/tags/daml).\n \n ## To start contributing to DAML\n \n We warmly welcome [contributions](./CONTRIBUTING.md).\n \n-### Cloning this repository\n+### 1. Clone this repository\n `git clone git@github.com:DACH-NY/daml.git`.\n \n-### Setting up the DA Development Environment (also known as `dev-env`)\n-dev-env is used to provide dependencies required during build phase, like java,\n-bazel, and python for some tooling scripts, while the code itself is built through\n-bazel.\n+### 2. Set up the DA Development Environment (\"`dev-env`\")\n+\n+`dev-env` provides dependencies required during build phase, like Java, Bazel, and Python"
  },
  {
    "id" : "e9ffebf8-1b2e-42b1-85fb-a516269285fd",
    "prId" : 196,
    "comments" : [
      {
        "id" : "24698148-a591-4227-bbc9-314925a6fef8",
        "parentId" : null,
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "Is \"to dev-env\" a verb or is there an \"enter\" missing?",
        "createdAt" : "2019-04-04T11:42:03Z",
        "updatedAt" : "2019-04-04T12:58:50Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c67c3a36-3e50-413e-879e-2a146f5fc83f",
        "parentId" : "24698148-a591-4227-bbc9-314925a6fef8",
        "author" : {
          "login" : "bethaitman-da",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/42940582?u=89cc5505d9086a7a0f27b1bd24b4ff45be679e07&v=4"
        },
        "body" : "Good spot, fixed!",
        "createdAt" : "2019-04-04T12:01:50Z",
        "updatedAt" : "2019-04-04T12:58:50Z",
        "lastEditedBy" : {
          "login" : "bethaitman-da",
          "name" : "Beth Aitman",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/42940582?u=89cc5505d9086a7a0f27b1bd24b4ff45be679e07&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "74834510-4996-4009-839f-4e7d4ef6e76f",
        "parentId" : "24698148-a591-4227-bbc9-314925a6fef8",
        "author" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "body" : "👍 ",
        "createdAt" : "2019-04-04T12:26:43Z",
        "updatedAt" : "2019-04-04T12:58:50Z",
        "lastEditedBy" : {
          "login" : "gerolf-da",
          "name" : "Gerolf Seitz",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/29121423?u=f683aa614e742c653ae8c01b194905dcdef6e974&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "940e5b216f3d1f13139153fce1c46b633cc4fd23",
    "line" : null,
    "diffHunk" : "@@ -5,57 +5,70 @@ SPDX-License-Identifier: Apache-2.0\n \n # Welcome to the DAML repository!\n \n-This repository hosts all code for the DAML smart contract language, originally created by [Digital Asset](https://www.digitalasset.com).\n+This repository hosts all code for the DAML smart contract language, originally created by\n+[Digital Asset](https://www.digitalasset.com).\n \n ## To start using DAML\n \n-See our documentation at [docs.daml.com](https://docs.daml.com).\n+To download DAML, follow [the installation instructions on docs.daml.com](https://docs.daml.com/getting-started/installation.html).\n+To try out using it, follow the [quickstart guide](https://docs.daml.com/getting-started/quickstart.html).\n \n-Download the DAML SDK Developer Preview at [https://www.daml.com](https://www.daml.com).\n-\n-If you have questions about how to use DAML or how to build DAML-based solutions, please ask them on [StackOverflow using the `daml` tag](https://stackoverflow.com/tags/daml).\n+If you have questions about how to use DAML or how to build DAML-based solutions, please ask\n+them on [StackOverflow using the `daml` tag](https://stackoverflow.com/tags/daml).\n \n ## To start contributing to DAML\n \n We warmly welcome [contributions](./CONTRIBUTING.md).\n \n-### Cloning this repository\n+### 1. Clone this repository\n `git clone git@github.com:DACH-NY/daml.git`.\n \n-### Setting up the DA Development Environment (also known as `dev-env`)\n-dev-env is used to provide dependencies required during build phase, like java,\n-bazel, and python for some tooling scripts, while the code itself is built through\n-bazel.\n+### 2. Set up the DA Development Environment (\"`dev-env`\")\n+\n+`dev-env` provides dependencies required during build phase, like Java, Bazel, and Python\n+for some tooling scripts. The code itself is built using Bazel.\n+\n+#### Set up `dev-env` on Linux or macOS\n \n-#### Linux and macOS\n 1. Install Nix: `bash <(curl https://nixos.org/nix/install)`\n-2. Enter dev-env: `eval \"$(dev-env/bin/dade assist)\"`\n+2. Enter `dev-env`: `eval \"$(dev-env/bin/dade assist)\"`\n+\n+If you don't want to `dev-env` manually each time using `eval \"$(dev-env/bin/dade assist)\"`,"
  }
]