[
  {
    "id" : "b4f5f243-cdf0-492d-9eb3-c2a31dbf4f87",
    "prId" : 1361,
    "comments" : [
      {
        "id" : "33e5868c-4a6c-4a79-880d-8ba49d1bf99f",
        "parentId" : null,
        "author" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "body" : "```suggestion\r\nfinal case class TemplateConfig(moduleName: String, entityName: String) extends Ordered[TemplateConfig]\r\n```\r\n\r\nWhen possible I prefer to use `scala.math.Ordered` over `scala.math.Ordering`.\r\n\r\nSee  [`scala.math.Ordering`](https://www.scala-lang.org/api/2.12.3/scala/math/Ordering.html)\r\n> this trait and scala.math.Ordered both provide this same functionality, but in different ways. A type T can be given a single way to order itself by extending Ordered. Using Ordering, this same type may be sorted in many other ways. ",
        "createdAt" : "2019-05-31T07:24:38Z",
        "updatedAt" : "2019-05-31T07:24:39Z",
        "lastEditedBy" : {
          "login" : "remyhaemmerle-da",
          "name" : "Remy",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/45566104?u=10d0caf8150a686217852f90e91314a4de3239a9&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6fe34391457d4d74e585c4d58a1d06f858bdd053",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +40,44 @@}\n\nfinal case class TemplateConfig(moduleName: String, entityName: String)\n\nobject TemplateConfig {"
  }
]