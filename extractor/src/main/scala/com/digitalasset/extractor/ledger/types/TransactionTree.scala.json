[
  {
    "id" : "88230bf8-285d-44f7-a3f7-4d71287fc764",
    "prId" : 7210,
    "comments" : [
      {
        "id" : "a452b4be-30c8-4686-8780-77150efaeb91",
        "parentId" : null,
        "author" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "body" : "```suggestion\r\n    // Ordered in pre-order (the order in which the events happen on the ledger).\r\n```\r\n",
        "createdAt" : "2020-08-24T11:18:29Z",
        "updatedAt" : "2020-08-24T11:36:31Z",
        "lastEditedBy" : {
          "login" : "aherrmann-da",
          "name" : "Andreas Herrmann",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/42969706?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "41af2cec1c3a7672172b5470dad8265b8018e836",
    "line" : null,
    "diffHunk" : "@@ -12,14 +12,24 @@ import java.time.Instant\n import scalaz._\n import Scalaz._\n import api.transaction.TreeEvent.Kind\n+import com.daml.extractor.helpers.TransactionTreeTrimmer\n \n+import scala.annotation.tailrec\n+import scala.collection.mutable.ListBuffer\n+\n+// This is the state _after_ applying template and party filtering.\n+// This means that this is no longer a valid subtransaction or tree.\n+// In particular, there can be events that are not reachable from any\n+// root node (e.g. because the root nodes were all for different templates)\n+// and the child event ids can point to nodes that have been filtered out.\n final case class TransactionTree(\n     transactionId: String,\n     workflowId: String,\n     effectiveAt: Instant,\n     offset: String,\n-    events: Map[String, Event],\n-    rootEventIds: Set[String]\n+    // Ordered in pre-order (the order the events happen on the ledger)."
  }
]