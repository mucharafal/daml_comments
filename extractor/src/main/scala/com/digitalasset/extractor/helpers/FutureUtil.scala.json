[
  {
    "id" : "5bbd6a54-f830-49d4-9192-4bd6ba85efc2",
    "prId" : 1361,
    "comments" : [
      {
        "id" : "62eb86e9-9235-4382-ac3b-ce7cf9248997",
        "parentId" : null,
        "author" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "body" : "Use `e.shows` instead, comes with `scalaz.syntax.show._`.",
        "createdAt" : "2019-05-31T17:29:18Z",
        "updatedAt" : "2019-05-31T17:35:33Z",
        "lastEditedBy" : {
          "login" : "S11001001",
          "name" : "Stephen Compall",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/219186?u=7b27ed58a578fe7d4983d1bab28c2f5608ed8739&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "245d5b43-7589-4c7f-9166-4a27b518f39b",
        "parentId" : "62eb86e9-9235-4382-ac3b-ce7cf9248997",
        "author" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "body" : "why? it is just one extra indirect call :) it would deligate to the `E.shows`?",
        "createdAt" : "2019-05-31T17:45:23Z",
        "updatedAt" : "2019-05-31T17:45:23Z",
        "lastEditedBy" : {
          "login" : "leo-da",
          "name" : "Leonid Shlyapnikov",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/27688859?u=375a6e2bd1079fec6f7d6d582ac05b5628218384&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6fe34391457d4d74e585c4d58a1d06f858bdd053",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +11,15 @@    val E = implicitly[Show[E]]\n    a.fold(\n      e => Future.failed(new RuntimeException(E.shows(e))),\n      a => Future.successful(a)\n    )"
  }
]